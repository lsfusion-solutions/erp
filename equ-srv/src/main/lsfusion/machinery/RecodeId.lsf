MODULE RecodeId;

REQUIRE Equipment, ZReport, SQLUtils;

NAMESPACE ZReport;

eid = DATA STRING[100](ReceiptDetail);

migrateReceipDetail(DATE dt) {
    logToFile('migrateIds', 'detail  start ' + dt);
    FOR LONG(ReceiptDetail d) == LONG i AND date(d) == dt DO  
        encodingId(i) <-  id(d);
    logToFile('migrateIds', 'detail  count: ' + (GROUP SUM 1 IF encodingId(LONG i)));

    logToFile('migrateIds', 'detail  encode');
    timeInId() <- timeId(sidTo('1'));
    encodeIds();

    logToFile('migrateIds', 'detail  write');
    APPLY {
        eid(ReceiptDetail d ) <- encodingId(LONG(d)) WHERE encodingId(LONG(d));
    }
}

migrateIds(DATE dt) {

    logToFile('migrateIds', 'detail  move');
    runSQL('DROP INDEX zreport_id_receiptdetail_key0_idx_zreport_receiptdetail;');
    runSQL('ALTER TABLE zreport_receiptdetail DROP COLUMN zreport_id_receiptdetail;');

    runSQL('ALTER TABLE zreport_receiptdetail RENAME COLUMN zreport_eid_receiptdetail TO zreport_id_receiptdetail;');
    runSQL('CREATE INDEX zreport_id_receiptdetail_key0_idx_zreport_receiptdetail ' +
                'ON zreport_receiptdetail USING btree (zreport_id_receiptdetail)');

    logToFile('migrateIds', 'detail  create column');

    runSQL('ALTER TABLE public.zreport_receiptdetail ' +
              '  ADD COLUMN zreport_eid_receiptdetail character varying(100) ');     
//    runSQL('CREATE INDEX zreport_eid_receiptdetail_key0_idx_zreport_receiptdetail ' +
//                'ON zreport_receiptdetail USING btree (zreport_eid_receiptdetail, key0)');

    logToFile('migrateIds', 'detail end');

    FOR LONG(Receipt d) == LONG i AND date(d) >= dt DO  
        encodingId(i) <-  id(d);
    timeInId() <- timeId(sidTo('1'));
    encodeIds();
    FOR LONG(Receipt d) == LONG i AND encodingId(i) DO  
        id(d) <-  encodingId(i);
    APPLY ;
    logToFile('migrateIds', 'Receipt end');

    FOR LONG(ZReport d) == LONG i AND date(d) >= dt DO  
        encodingId(i) <-  id(d);
    timeInId() <- timeId(sidTo('1'));
    encodeIds();
    FOR LONG(ZReport d) == LONG i AND encodingId(i) DO  
        id(d) <-  encodingId(i);
    APPLY ;
    logToFile('migrateIds', 'ZReport end');

    id(Payment p) <- id(receipt(p)) + right(id(p),1) WHERE wordCount(id(p),'_') = 5 AND NOT wordCount(id(p),'/') = 2;
    id(Payment p) <- id(receipt(p)) + '_' + getWord(id(p),'_',6) WHERE wordCount(id(p),'_') = 6;
    id(Payment p) <- id(receipt(p)) + '/' + getWord(id(p),'/',2) WHERE wordCount(id(p),'_') = 5 AND wordCount(id(p),'/') = 2;
    APPLY;

    logToFile('migrateIds', 'Payment end');
    
	useNewIds(EquipmentServer e) <- TRUE;
	APPLY;
}
