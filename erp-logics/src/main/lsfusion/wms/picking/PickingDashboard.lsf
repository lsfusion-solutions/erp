MODULE PickingDashboard;

REQUIRE Dashboard, OrderPickingOrder, SaleLedger;

NAMESPACE Picking;

skip 'Пропустить печать' = ABSTRACT BOOLEAN (PickingOrder);
overPrint 'Печать'  ABSTRACT LIST ( PickingOrder);
beforeAccepted  ABSTRACT LIST ( PickingOrder);

acceptPrint 'Принять' (PickingOrder pickingOrder)  {
    NEWSESSION {
        lock(pickingOrder);
        IF lockResult() THEN {
            TRY {
                IF notAccepted(pickingOrder) THEN {
                    beforeAccepted(pickingOrder);
                    accept(pickingOrder);
                    overPrint(pickingOrder);
                    IF NOT skip(pickingOrder) THEN {
                        print(pickingOrder);
                    }
                }
            } CATCH {
                MESSAGE messageCaughtException() NOWAIT;    
            } FINALLY {
                unlock(pickingOrder);
            }
        } ELSE {
            MESSAGE 'Заказ уже взят в комплектацию' NOWAIT ;
        }          
    }
} TOOLBAR CHANGEKEY 'SPACE';

isParent(SkuGroup sk, PickingOrderDetail detail) = isParent(sk, sku(detail));

notShowUnaccept = ABSTRACT BOOLEAN(PickingOrder);
notShowEdit = ABSTRACT BOOLEAN(Picking);
notShowDelete = ABSTRACT BOOLEAN(Picking);

FORM pickingDashboard 'Комплектация'

    OBJECTS d = DATE PANEL
    PROPERTIES(d) date = VALUE

    OBJECTS po=PickingOrder GRID LAST
    PROPERTIES (po) READONLY BACKGROUND backgroundStatusPicking(po) nameStatusPicking, namePerformer,
                    startDateTime, numberOrder, seriesNumber, date, nameStock, nameTo, nameToStock, addressToStock,
                    countPickingOrderDetail, quantityPickingOrderDetail, grossWeightPickingOrderDetail, note

    PROPERTIES (po) acceptPrint SHOWIF notAccepted(po),
                    unaccept SHOWIF (accepted(po) AND NOT notShowUnaccept(po)), fully = fullyAssembled SHOWIF accepted(po),
                    partially = partiallyAssembled SHOWIF accepted(po)
                    
    FILTERS isPosted(po)
    FILTERGROUP pickingFilters
        FILTER 'Нескомплектованные' NOT (calcPart(po) OR calcFull(po)) 'F4' DEFAULT

    TREE skuTree sk = SkuGroup PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDERS order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F6' DEFAULT

    OBJECTS pd=PickingOrderDetail GRID
    PROPERTIES (pd) READONLY idBarcodeSku, nameSku, shortNameUOMSku,
                    quantity

    FILTERS pickingOrder(pd)==po,
            isParent(sk, pd)

    OBJECTS p = Picking GRID LAST
    PROPERTIES (p) READONLY BACKGROUND backgroundStatus(p) nameStatus, namePerformer, number, finishDateTime,
                   nameStock, nameTo, nameToStock, addressToStock, packQuantity, quantityPickingDetail, 
                   grossWeightPickingDetail, notePickingOrder

    PROPERTIES (p) NEWSESSION EDIT SHOWIF NOT notShowEdit(p), deleteo = DELETE SHOWIF (is[UserPicking](p) AND NOT notShowDelete(p))

    FILTERGROUP filters FILTER 'Текущие заказы' date(po)<=d 'F6' DEFAULT
                        FILTER 'Будущие заказы' date(po)>d 'F6'
                        
    FILTERGROUP filters1 FILTER 'Предыдущие комплектации' date(p)<d 'F7'
                         FILTER 'Комплектации на дату' date(p)==d 'F8' DEFAULT
                         FILTER 'Будущие комплектации' date(p)>d 'F9'

    EVENTS ON SCHEDULE PERIOD 60 formRefresh()
;

DESIGN pickingDashboard {
    BOX {

        NEW dash BEFORE TOOLBARBOX{
            fill = 1;
            NEW header {
                fill = 1;                         
                MOVE BOX(po);

            }
            NEW pickings {
                fill = 1;
                tabbed = TRUE;
                MOVE BOX(p){
                    PROPERTY(number(p)){
                        caption = 'Номер комплектации';
                    }
                };
                NEW detailContainer {
                    horizontal = TRUE;
                    caption = 'Детализация заказа';
                    MOVE BOX(TREE skuTree){
                        caption = 'Группы';
                    }
                    MOVE BOX(pd){
                        fill = 3;
                    }                   
                }
            }
        }          
        NEW secondContainer BEFORE dash {
            horizontal = TRUE;
            caption = 'Шапка';
            MOVE PROPERTY(date);
        }
    }
}

@extendFormFilterAccessStock(po, pickingDashboard, stock, company);

@extendFormFilterAccessStock(p, pickingDashboard, stock, company);

NAVIGATOR {
    saleDashboardNavigator {
        NEW pickingDashboard;
    }
}


