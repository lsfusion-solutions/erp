MODULE BatchBinLedger;

REQUIRE BinLedger;

NAMESPACE Bin;

batch = ABSTRACT Batch (BinLedger) MATERIALIZED INDEXED;
nameBatch 'Наименование' (BinLedger ledger) = name(batch(ledger)) IN id;
idBatch 'Код' (BinLedger ledger)= id(batch(ledger)) IN id;

EXTEND FORM binLedger
    PROPERTIES READONLY nameBatch(b), idBatch(b)
;

select 'Отм.' = DATA LOCAL NESTED BOOLEAN (Batch, Bin);

/////из модуля bin
TABLE batchBinGroup(Batch, BinGroup);
dataIn 'Отм.' = DATA BOOLEAN (Batch, BinGroup);

levelParentDataIn (Batch batch, BinGroup binGroup) =
    GROUP MIN level(binGroup, BinGroup parent) IF dataIn(batch, parent) MATERIALIZED;

nearestParentDataIn (Batch batch, BinGroup binGroup) = binGroup(binGroup, levelParentDataIn(batch, binGroup));
nearestDataIn (Batch batch, BinGroup binGroup) = dataIn(batch, nearestParentDataIn(batch, binGroup)) MATERIALIZED;

in 'Отм.' (Batch batch, BinGroup binGroup) = OVERRIDE dataIn(batch, binGroup), nearestDataIn(batch, binGroup) MATERIALIZED INDEXED;

TABLE batchBin(Batch, Bin);
dataIn 'Отм.' = DATA BOOLEAN (Batch, Bin);
in 'Отм.' (Batch batch, Bin bin) = OVERRIDE dataIn(batch, bin), in(batch, binGroup(bin)) MATERIALIZED INDEXED;

countInLedger 'Кол-во приходов' =
    GROUP SUM 1 IF active(BinLedger ledger) BY batch(ledger), inBin(ledger) MATERIALIZED;

countInLedger 'Кол-во приходов' =
    GROUP SUM 1 IF active(BinLedger ledger) BY batch(ledger), inBin(ledger), date(ledger);

countInLedgerA 'Кол-во приходов до' (Batch bt, Bin b, DATE d) =
    [GROUP SUM 1 IF active(BinLedger ledger) AND date(ledger) < DATE d1 BY batch(ledger), inBin(ledger), d1](bt, b, sum(d,1));

countInBinGroup2LedgerA 'Кол-во приходов до' (Batch bt, BinGroup g, DATE d) =
    [GROUP SUM 1 IF active(BinLedger ledger) AND date(ledger) < DATE d1 BY batch(ledger), binGroup2(inBin(ledger)), d1](bt, g, sum(d,1));

countOutLedger 'Кол-во расходов' =
    GROUP SUM 1 IF active(BinLedger ledger) BY batch(ledger), outBin(ledger) MATERIALIZED;

countLedger 'Кол-во движений' (Batch batch, Bin bin) =
    countInLedger(batch, bin) (+) countOutLedger(batch, bin) MATERIALIZED;

countBatchLedger 'Кол-во движений' = GROUP SUM countLedger(Batch batch, Bin bin) BY bin;

inBinTotal 'Приход в ячейку' =
    GROUP SUM quantity(BinLedger ledger) IF active(ledger) BY batch(ledger), inBin(ledger) MATERIALIZED;

outBinTotal 'Расход из ячейки' =
    GROUP SUM quantity(BinLedger ledger) IF active(ledger) BY batch(ledger), outBin(ledger) MATERIALIZED;

inBinTotalA 'Приход в ячейку' =
    GROUP SUM quantity(BinLedger ledger) IF date(ledger) > DATE date AND active(ledger) BY batch(ledger), inBin(ledger), date;

outBinTotalA 'Расход из ячейки' =
    GROUP SUM quantity(BinLedger ledger) IF date(ledger) > DATE date AND active(ledger) BY batch(ledger), outBin(ledger), date;

inBinTotalB 'Приход в ячейку' =
    GROUP SUM quantity(BinLedger ledger) IF date(ledger) >= DATE date AND active(ledger) BY batch(ledger), inBin(ledger), date;

outBinTotalB 'Расход из ячейки' =
    GROUP SUM quantity(BinLedger ledger) IF date(ledger) >= DATE date AND active(ledger) BY batch(ledger), outBin(ledger), date;

inBinTotalA 'Приход в ячейку' =
    GROUP SUM quantity(BinLedger ledger) IF dateTime(ledger) > DATETIME dateTime AND active(ledger) BY batch(ledger), inBin(ledger), dateTime;

outBinTotalA 'Расход из ячейки' =
    GROUP SUM quantity(BinLedger ledger) IF dateTime(ledger) > DATETIME dateTime AND active(ledger) BY batch(ledger), outBin(ledger), dateTime;

inBinTotalB 'Приход в ячейку' =
    GROUP SUM quantity(BinLedger ledger) IF dateTime(ledger) >= DATETIME dateTime AND active(ledger) BY batch(ledger), inBin(ledger), dateTime;

outBinTotalB 'Расход из ячейки' =
    GROUP SUM quantity(BinLedger ledger) IF dateTime(ledger) >= DATETIME dateTime AND active(ledger) BY batch(ledger), outBin(ledger), dateTime;

currentBalance 'Текущий остаток в ячейке' (Batch batch, Bin bin)=
    inBinTotal(batch, bin) (-) outBinTotal(batch, bin) MATERIALIZED;
prevCurrentBalance 'Текущий остаток в ячейке' (Batch batch, Bin bin) = PREV(currentBalance(batch, bin));

prevCurrentBalanceBatch 'Текущий остаток в ячейке' = GROUP SUM prevCurrentBalance(Batch batch, Bin bin) BY bin;

balanceA 'Остаток в ячейке на конец дня' (Batch batch, Bin bin, DATE date) = currentBalance(batch, bin) (-)
    inBinTotalA(batch, bin, date) (+) outBinTotalA(batch, bin, date);

// без учета текущей даты/времени
balanceB 'Остаток в ячейке (до)' (Batch batch, Bin bin, DATETIME dateTime) = currentBalance(batch, bin) (-)
    inBinTotalB(batch, bin, dateTime) (+) outBinTotalB(batch, bin, dateTime);
prevBalanceB 'Остаток (до)' (Batch batch, Bin bin, DATETIME dateTime) = PREV(balanceB(batch, bin, dateTime) IF dateTime IS DATETIME);

// с учетом текущей даты/времени
balanceA 'Остаток в ячейке (после)' (Batch batch, Bin bin, DATETIME dateTime) = currentBalance(batch, bin) (-)
    inBinTotalA(batch, bin, dateTime) (+) outBinTotalA(batch, bin, dateTime);
prevBalanceA 'Остаток в ячейке (после)'(Batch batch, Bin bin, DATETIME dateTime) = PREV(balanceA(batch, bin, dateTime) IF dateTime IS DATETIME);

currentBalance 'Текущий остаток в группе ячеек' (Batch batch, BinGroup bg)=
    [GROUP SUM currentBalance(Batch batch1, Bin b) IF isParent(BinGroup bg1, b) BY batch1, bg1](batch, bg);
prevCurrentBalance 'Текущий остаток в группе ячеек' (Batch batch, BinGroup bg)=
    [GROUP SUM prevCurrentBalance(Batch batch1, Bin b) IF isParent(BinGroup bg1, b) BY batch1, bg1](batch, bg);
balanceB 'Остаток в группе ячеек (до)' (Batch batch, BinGroup bg, DATETIME dateTime)=
    [GROUP SUM balanceB(Batch batch1, Bin b, DATETIME dateTime1) IF isParent(BinGroup bg1, b) BY batch1, bg1, dateTime1](batch, bg, dateTime);
prevBalanceB 'Остаток в группе ячеек (до)' (Batch batch, BinGroup bg, DATETIME dateTime)=
    [GROUP SUM prevBalanceB(Batch batch1, Bin b, DATETIME dateTime1) IF isParent(BinGroup bg1, b) BY batch1, bg1, dateTime1](batch, bg, dateTime);
balanceA 'Остаток в группе ячеек (после)' (Batch batch, BinGroup bg, DATETIME dateTime)=
    [GROUP SUM balanceB(Batch batch1, Bin b, DATETIME dateTime1) IF isParent(BinGroup bg1, b) BY batch1, bg1, dateTime1](batch, bg, dateTime);
prevBalanceA 'Остаток в группе ячеек (после)' (Batch batch, BinGroup bg, DATETIME dateTime)=
    [GROUP SUM prevBalanceA(Batch batch1, Bin b, DATETIME dateTime1) IF isParent(BinGroup bg1, b) BY batch1, bg1, dateTime1](batch, bg, dateTime);

bins 'Ячейки' = GROUP CONCAT canonicalId(Bin bin), ',' IF prevCurrentBalance(Batch batch, bin) ORDER canonicalId(bin), bin BY batch, stock(bin);

// статус ячейки

statusBatch 'Статус' (Bin bin) = IF prevCurrentBalanceBatch(bin) THEN 'Занята' ELSE 'Свободна';

META implementBatchBinLedger(class, object, batchProp, quantityProp, stockProp, inBinProp, outBinProp)
    batchProp[BinLedger] (###class ledger) += batchProp(object(ledger));
END

META implementBatchBinLedger(class, stockProp)
    batch[BinLedger] (###class ledger) += batch(ledger);
END

META implementAggregationBatchBinLedger(object, classPrefix, ClassPref, batchProp, quantityProp, stockProp)
    @implementBatchBinLedger(classPrefix##BinLedger, object, batchProp, quantityProp, stockProp, inBinProp, outBinProp);
END

FORM batchBinBalance 'Остатки по ячейкам по партиям'
    OBJECTS ts = Stock PANEL
    PROPERTIES(ts) SELECTOR name
    FILTERS isCompany(ts),
        useBins(ts)

    TREE binTree bg = BinGroup PARENT parent(bg)
    PROPERTIES READONLY name(bg)
    FILTERS ts==stock(bg)

    OBJECTS b = Bin
    PROPERTIES(b) READONLY order, canonicalId, name, id SHOWIF showIDs(), statusBatch
    FILTERS b IS Bin AND NOT bg IS BinGroup OR isParent(bg, b), ts==stock(b)
    ORDERS order(b), canonicalId(b), name(b)

    TREE treeGroup g=SkuGroup PARENT parent(g)
    PROPERTIES READONLY order(g), name(g)
    ORDERS order(g), name(g)
    FILTERGROUP inactive FILTER 'Активные' active(g) 'F6' DEFAULT

    OBJECTS bt = Batch
    PROPERTIES(bt) READONLY nameSku, idBarcodeSku, name, id
    PROPERTIES (bt, b) READONLY currentBalance
    ORDERS nameSku(bt), name(bt)
    FILTERS isParent(g, bt) OR bt IS Batch AND NOT g
    FILTERGROUP balance
        FILTER 'С остатком' currentBalance(bt, b) DEFAULT
        FILTER 'С движением' countLedger(bt, b)

    OBJECTS bl = BinLedger
    PROPERTIES (bl) READONLY dateTime, description, skip
    PROPERTIES(b, bl) READONLY balanceBin, balanceQuantity
    ORDERS dateTime(bl) DESC
    FILTERS isPosted(bl),
        inBin(bl)==b OR outBin(bl)==b,
        batch(bl)== bt
;

@extendFormFilterStockAccess(ts, batchBinBalance);

DESIGN batchBinBalance {
    BOX {
        size = (1024, 768);

        MOVE BOX(ts) {
            alignment = STRETCH;
            GROUP(,ts) {
                alignment = STRETCH;
                PROPERTY(name(ts)) {
                    alignment = STRETCH;
                }
            }
        }
        NEW topContainer {
            fill = 1;

            NEW binGroup {
                horizontal = TRUE;
                fill = 1;

                MOVE BOX(TREE binTree) {
                    caption = 'Группы ячеек';
                }

                MOVE BOX(b) {
                    fill = 2.5;
                    GRID(b) {
                        defaultComponent = TRUE;
                    }
                }
            }
            NEW batchSkuGroup {
                horizontal = TRUE;
                fill = 3;

                MOVE BOX(TREE treeGroup) {
                    caption = 'Группы Sku';
                }

                NEW batches {
                    fill = 2.5;
                    MOVE BOX(bt) {
                        fill = 2;
                        GRID(bt) {
                            defaultComponent = TRUE;
                        }
                    }
                    NEW batchesDetail {
                        tabbed = TRUE;
                        fill = 1;
                        MOVE BOX(bl);                        
                    }
                }
            }
        }

        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    WMSNavigator {
        WMSReports {
            NEW batchBinBalance AFTER binBalance;
        }
    }
}

CONSTRAINT DROPPED(Bin bin IS Bin) AND PREV(countBatchLedger(bin)) AND NOT allowDeleteBins()
    MESSAGE 'Запрещено удалять ячейку при наличии движения по ней';
