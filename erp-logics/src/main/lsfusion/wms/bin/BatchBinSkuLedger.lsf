MODULE BatchBinSkuLedger;

REQUIRE BinSkuLedger, BatchBinLedger;

NAMESPACE Bin;

currentBalanceBin 'Текущий остаток в ячейках' (Batch batch, Stock st)=
    [GROUP SUM currentBalance(Batch batch1, Bin b) BY batch1, stock(b)](batch, st);
prevCurrentBalanceBin 'Текущий остаток в ячейках' (Batch batch, Stock st)=
    [GROUP SUM prevCurrentBalance(Batch batch1, Bin b) BY batch1, stock(b)](batch, st);
balanceBinB 'Остаток в ячейках (до)' (Batch batch, Stock st, DATETIME dateTime)=
    [GROUP SUM balanceB(Batch batch1, Bin b, DATETIME dateTime1) BY batch1, stock(b), dateTime1](batch, st, dateTime);
prevBalanceBinB 'Остаток в ячейках (до)' (Batch batch, Stock st, DATETIME dateTime)=
    [GROUP SUM prevBalanceB(Batch batch1, Bin b, DATETIME dateTime1) BY batch1, stock(b), dateTime1](batch, st, dateTime);
balanceBinA 'Остаток в ячейках (после)' (Batch batch, Stock st, DATETIME dateTime)=
    [GROUP SUM balanceA(Batch batch1, Bin b, DATETIME dateTime1) BY batch1, stock(b), dateTime1](batch, st, dateTime);
prevBalanceBinA 'Остаток в ячейках (после)' (Batch batch, Stock st, DATETIME dateTime)=
    [GROUP SUM prevBalanceA(Batch batch1, Bin b, DATETIME dateTime1) BY batch1, stock(b), dateTime1](batch, st, dateTime);
diffBalanceBinA 'Расхождение по остаток в ячейках (до)' (Batch batch, Stock st, DATETIME dateTime)=
    balanceBinA(batch, st,dateTime) (-) balanceA(batch, st,dateTime);
prevDiffBalanceBinA 'Расхождение по остаткам в ячейках (после)' (Batch batch, Stock st, DATETIME dateTime)=
    prevBalanceBinA(batch, st,dateTime) (-) prevBalanceB(batch, st,dateTime);

currentDiffBalanceBin 'Текущий остаток в ячейках' (Batch batch, Stock st)=
    currentBalanceBin(batch, st) (-) currentBalance(batch, st);
prevCurrentDiffBalanceBin 'Текущий остаток в ячейках' (Batch batch, Stock st)=
    prevCurrentBalanceBin(batch, st) (-) prevCurrentBalance(batch, st);
diffBalanceBinB 'Расхождение по остаткам в ячейках (до)' (Batch batch, Stock st, DATETIME dateTime)=
    balanceBinB(batch, st,dateTime) (-) balanceB(batch, st,dateTime);
prevDiffBalanceBinB 'Остаток в ячейках (до)' (Batch batch, Stock st, DATETIME dateTime)=
    prevBalanceBinB(batch, st,dateTime) (-) prevBalanceB(batch, st,dateTime);

balanceBBatch 'Остаток в ячейке (до)' (Bin bin, DATETIME dateTime) = GROUP SUM balanceB(Batch batch, bin, dateTime);
balanceABatch 'Остаток в ячейке (после)' (Bin bin, DATETIME dateTime) = GROUP SUM balanceA(Batch batch, bin, dateTime);

FORM balanceBinBatchStock 'Сравнение остатков по ячейкам и складу по партиям'

    OBJECTS t=DATETIME PANEL
    PROPERTIES   valT = VALUE(t)
    
    OBJECTS ss = Stock PANEL
    PROPERTIES(ss) name SELECTOR
    FILTERS isCompany(ss)
    
    TREE skuTree sk = SkuGroup PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDERS order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F6' DEFAULT

    OBJECTS           stb=(st=Stock, bt=Batch)
    PROPERTIES        READONLY BACKGROUND backgroundBatch(st, bt) nameSku(bt)
    PROPERTIES        READONLY balanceB(bt, st, t), balanceBinB(bt, st, t), diffBalanceBinB(bt, st, t)
    PROPERTIES(bt)    READONLY BACKGROUND backgroundBatch(st, bt) number, series, dateTime, nameSupplier, name, id, shippedQuantity, cost, expiryDate
    FILTERS           isParent(sk, bt),
            st == ss
    ORDERS          dateTime(bt)

    FILTERGROUP filterExpiry
        FILTER 'Партии с истекшим сроком годности' expiryDate(bt) < toDate(t) 'F7'
        FILTER 'Партии со сроком годности, истекающим через 1 день' expires(bt, t, 1) 'F6'
        FILTER 'Партии со сроком годности, истекающим через 7 дней' expires(bt, t, 7) 'F6'
        FILTER 'Партии со сроком годности, истекающим через 30 дней' expires(bt, t, 30) 'F4'

    FILTERGROUP filterBalance
        FILTER 'Партии с остатком' balanceB(bt, st, t) 'F10'
        FILTER 'Партии с расхождением между по остаткам на складе и в ячейках ' (balanceB(bt, st, t) OR balanceBinB(bt, st, t)) AND NOT balanceB(bt, st, t) = balanceBinB(bt, st, t)  'F11' DEFAULT 
        FILTER 'Партии с движением по складу' countLedger(bt, st)
        FILTER 'Партии с остатком по ячейкам' balanceBinB(bt, st, t)        
        FILTER 'Партии пришедшие за последний 1 день' dateTime(bt) >= subtractSeconds(currentDateTime(), 1) 'F10'
        FILTER 'Партии пришедшие за последние 7 дней' dateTime(bt) >= subtractSeconds(currentDateTime(), 7) 'F9'
        FILTER 'Партии пришедшие за последние 30 дней' dateTime(bt) >= subtractSeconds(currentDateTime(), 30) 'F8'
    
    OBJECTS b = Bin
    PROPERTIES(b) READONLY order, canonicalId, name, id SHOWIF showIDs()
    PROPERTIES balanceB(bt, b, t)
    FILTERS stock(b) = ss, balanceB(bt, b, t)
    ORDERS order(b), canonicalId(b), name(b)

    OBJECTS bl = BinLedger
    PROPERTIES (bl) READONLY dateTime, description, skip, quantity, canonicalIdInBin, nameInBin, canonicalIdOutBin, nameOutBin
    ORDERS dateTime(bl) DESC
    FILTERS isPosted(bl), batch(bl)==bt
;

@extendFormFilterStockAccess(ss, balanceBinBatchStock);

DESIGN balanceBinBatchStock {
    BOX {
        size = (1024, 768);
        NEW filter {
            alignment = STRETCH;
            horizontal = TRUE;
            MOVE PROPERTY (valT);
            MOVE PROPERTY (name(ss));
        }
        NEW topContainer {
            fill = 1;
            horizontal = TRUE;

            NEW firstCaseTwo {
                fill = 1;
                MOVE BOX(TREE skuTree) { caption = 'Группы'; }
            }
            NEW secondCase {
                fill = 3;
                NEW skuBox {
                    fill = 2;
                    MOVE BOX(stb) {
                        caption = 'Партии';
                        fill = 2;
                    }
                }
                NEW ledgerBox {
                    fill = 1;
                    tabbed = TRUE;
                    MOVE BOX(b);
                    MOVE BOX(bl);
                }
            }


        }

        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    WMSDocument {
        NEW balanceBinBatchStock AFTER balanceBinSkuStock;
    }
}

dateTimeLastMoved 'Время последнего прихода' (batch, bin) =
    GROUP LAST dateTime(BinLedger ledger)
    ORDER dateTime(ledger), ledger
    WHERE active(ledger)
    BY batch(ledger), inBin(ledger);

dateTimeLastMoved 'Время последнего прихода' (batch, binGroup) =
    GROUP LAST dateTime(BinLedger ledger)
    ORDER dateTime(ledger), ledger
    WHERE active(ledger)
    BY batch(ledger), binGroup(inBin(ledger));

FORM dialogBinGroupBatch 'Партии'
    OBJECTS st = Stock PANEL
    OBJECTS binGr = BinGroup PANEL
    OBJECTS t = DATETIME PANEL
    OBJECTS sk = Sku PANEL

    OBJECTS bt = Batch
    PROPERTIES (bt) READONLY number, series, dateTime, nameSupplier, nameSku, id SHOWIF showIDs(), name, shippedQuantity, cost, expiryDate
    PROPERTIES  READONLY balanceB(bt, st, t)
    PROPERTIES  READONLY currentBalance(bt, st)
    FILTERS sku(bt) == sk
    ORDERS dateTime(bt)

    FILTERGROUP ledger
        FILTER 'С движением по зоне' dateTimeLastMoved(bt, binGr) 'F6' DEFAULT
        FILTER 'С движением по складу' skuLedger(bt, st) == sk 'F6'

    FILTERGROUP batch
        FILTER 'Партии с остатком до операции' balanceB(bt, binGr, t) 'F11'
        FILTER 'Партии с положительным остатком' currentBalance(bt, binGr) > 0 'F9'
        FILTER 'Партии с остатком' currentBalance(bt, binGr) 'F8' DEFAULT
;
DESIGN dialogBinGroupBatch {
    BOX {
        PROPERTY (balanceB(bt,st,t)) {
            caption = 'Остаток до операции';
        }
    }
}