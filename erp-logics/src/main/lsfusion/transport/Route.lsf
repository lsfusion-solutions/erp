MODULE Route;

REQUIRE Transport, Numerator, Geo;

// ------------------------------- Route ----------------------------------- //
CLASS Route 'Маршрут';
TABLE route(Route);

@defineNumbered(Route, BPSTRING[2]);
@defineNumeratedDefault(Route, 'Маршруты', 'МР');

note 'Примечание' = DATA ISTRING (Route) CHARWIDTH 30;

truck = DATA Truck(Route);
sidTruck 'Машина' (Route route) = sid(truck(route));

FORM route 'Маршрут'
    OBJECTS r=Route PANEL
    PROPERTIES(r) nameNumerator, number, series, sidTruck, note

    EDIT Route OBJECT r
;

DESIGN route {
    OBJECTS { 
        NEW header {
            NEW numerator {
                type = CONTAINERH;
                alignment = STRETCH;
                MOVE PROPERTY(nameNumerator(r));
                MOVE PROPERTY(number(r));
                MOVE PROPERTY(series(r));
            }
            NEW truck {
                type = CONTAINERH;
                alignment = STRETCH;
                MOVE PROPERTY(sidTruck(r));
            }
            MOVE PROPERTY(note(r)) { alignment = STRETCH; }
        }
        NEW tabbedPane {
            type = TABBED;
            fill = 1;
        }
    }
}

FORM routes 'Маршруты'
    OBJECTS r=Route
    PROPERTIES(r) READONLY nameNumerator, number, series, sidTruck, note
    PROPERTIES(r) NEWSESSION NEW, EDIT, DELETE 
;

// ------------------------------- Node ------------------------------------ //
CLASS ABSTRACT Node 'Пункт';

name 'Наименование' = ABSTRACT ISTRING[150](Node);
address 'Адрес' = ABSTRACT ISTRING[150](Node) CHARWIDTH 30;

longitude 'Координата Y' = ABSTRACT NUMERIC[11,6](Node);
latitude 'Координата X' = ABSTRACT NUMERIC[11,6](Node);

legalEntity = ABSTRACT LegalEntity(Node);
nameLegalEntity 'Организация' (Node node) = name(legalEntity(node));

TABLE nodeRoute(Node, Route);
in 'Включен' = DATA BOOLEAN(Node, Route);
number 'Порядковый номер' = DATA INTEGER(Node, Route);

changeIn (Node n, Route r) {
    INPUT b = in(n, r) CHANGE DO 
        IF b THEN number(n, r) <- [GROUP MAX number(Node nm, r) IF in(nm, r)]() (+) 1; 
}

EXTEND CLASS Stock : Node;
//EXTEND CLASS supplier : node;

name(Stock stock) += Stock.name(stock) IF stock IS Stock;
address(Stock stock) += Stock.address(stock) IF stock IS Stock;

longitude(Stock stock) += Geo.longitude(stock) IF stock IS Stock;
latitude(Stock stock) += Geo.latitude(stock) IF stock IS Stock;

legalEntity(Stock stock) += Stock.legalEntity(stock);

skipShowNode = ABSTRACT BOOLEAN (Route);
showNode (Route r) = r IS Route AND NOT skipShowNode(r);

//nameNode(supplier) += name(supplier) IF supplier IS Supplier;

EXTEND FORM route
    OBJECTS n = Node
    PROPERTIES (n) READONLY SHOWIF showNode(r) name, nameLegalEntity
    PROPERTIES (n) address ON CHANGE { INPUT sl = STRING[150] CUSTOM 'customGoogleAutocomplete' DO address(n) <- sl; }
    PROPERTIES (n) longitude, latitude 
    PROPERTIES (n, r) SHOWIF showNode(r) in ON CHANGE changeIn(n, r), number
    
    FILTERGROUP selected
        FILTER 'Отмеченные' in(n, r) DEFAULT
;

DESIGN route {
    tabbedPane {
        MOVE BOX(n) {
            caption = 'Склады';
        }
    }
}

EXTEND FORM routes
    OBJECTS n=Node
    PROPERTIES (n) READONLY SHOWIF showNode(r) name, address, longitude, latitude
    PROPERTIES(n, r) READONLY SHOWIF showNode(r) number 
    FILTERS in(n, r)
;

NAVIGATOR {
    transportDocuments {
        NEW routes;
    }
}