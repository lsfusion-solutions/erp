MODULE TripOrder;

REQUIRE Trip, Order;

NAMESPACE Trip;


trip = DATA Trip(Order) INDEXED;
in 'Включен' (Trip trip, Order order) = trip(order) == trip;
countOrder 'Кол-во заказов в рейсе' (Trip trip) = GROUP SUM 1 IF in(trip, Order order) MATERIALIZED; 

driverTrip = driver(trip(Order order));
nameDriverTrip 'Водитель' (Order order) = name[Contact](driverTrip(order));

dateTrip 'Дата вывоза' = date(trip(Order order));
numberTrip 'Номер рейса' = number(trip(Order order));

filter(Trip trip, Order order) = trip(order) = trip OR (trip IS Trip AND isOpened(order) AND NOT trip(order));

quantityFrom (trip, Stock stock) = GROUP SUM 1 IF quantityFrom(Order order, stock) BY trip(order);
quantityTo (trip, Stock stock) = GROUP SUM 1 IF quantityTo(Order order, stock) BY trip(order);
quantity(Trip trip, Stock stock) = quantityFrom(trip, stock) (+) quantityTo(trip, stock);

in 'Вкл' (Trip trip, Stock stock) = quantity(trip, stock) > 0;

TABLE tripStock(Trip, Stock);
number 'Порядковый номер' = DATA INTEGER(Stock, Trip);
number(Stock stock, Trip trip) => quantity(trip, stock)>0 RESOLVE RIGHT;

firstStock = DATA Stock(Trip);
isFirst 'Начальный пункт' (Stock stock, Trip trip) = firstStock(trip)==stock;
addressFirstStock 'Начальный пункт' (Trip trip) = address(firstStock(trip));

stockPrev (Trip trip, Stock stock) = PARTITION PREV stock IF quantity(trip, stock) ORDER number(stock, trip) BY trip;
addressStockPrev 'Адрес' (Trip trip, Stock stock) = address(stockPrev (trip, stock));

maxNumber(Trip trip) = GROUP MAX number(Stock stock, trip);
index 'Номер' (Trip trip, Order order) = maxNumber(trip) - number(toStock(order), trip) + 1 IF in(trip, order);

CONSTRAINT number(Stock stock1, trip(Order order)) >= number(Stock stock2, trip(order)) IF quantityFrom(order, stock1)>0 AND quantityTo(order, stock2)>0
    MESSAGE 'Номер не соответствует направлению заказа';

countOrdered 'Кол-во заказов' (trip) = GROUP SUM 1 BY trip(Order order);
grossWeightOrdered 'Суммарный вес заказов' (trip) = GROUP SUM grossWeightOrderDetail(Order order) BY trip(order);

grossWeightTo 'Вес' = GROUP SUM round3(grossWeightOrderDetail(Order order)/1000) BY trip(order), toStock(order);

quantityOrdered 'Кол-во в заказах' (trip, sku) = GROUP SUM quantity(OrderDetail orderDetail) BY trip(order(orderDetail)), sku(orderDetail);

FORM ordersTrip 'Печать заказов'
    OBJECTS t=Trip PANEL SUBREPORT
    PROPERTIES (t) nameNumerator, number, series, date, time, nameDriver, sidTruck, nameTruckModelTruck, trailerTruck

    OBJECTS o=Order GRID
    FILTERS isPosted(o), in(t, o)

    OBJECTS s=Sku
    PROPERTIES READONLY idBarcode(s), name(s), shortNameUOM(s)
    PROPERTIES READONLY quantityOrdered(t, s)
    PROPERTIES READONLY quantityOrderDetail(s, o) COLUMNS (o) HEADER seriesNumber(o)
    FILTERS quantityOrdered(t, s) > 0
;

printOrders 'Печать заказов' (Trip trip)  { 
    PRINT ordersTrip OBJECTS t = trip ;
} TOOLBAR;

backgroundTripOrder 'Цвет' = ABSTRACT CASE COLOR(Order);
backgroundTripStock 'Цвет' = ABSTRACT CASE COLOR(Trip,Stock);

EXTEND FORM trip
    PROPERTIES (t) READONLY countOrdered, grossWeightOrdered

    OBJECTS o=Order
    PROPERTIES(t, o) in
    PROPERTIES(o) READONLY BACKGROUND backgroundTripOrder(o) number, series, date, nameSupplier, nameFromStock, nameCustomer, nameToStock, grossWeightOrderDetail
    PROPERTIES(o) NEWSESSION EDIT
    PROPERTIES printOrders(t) DRAW o 

    FILTERS isPosted(o)

    FILTERS customer(o) == customer(t) OR (o IS Order AND NOT customer(t)),
            supplier(o) == supplier(t) OR (o IS Order AND NOT supplier(t))

    FILTERGROUP filterDateOrder
        FILTER 'Текущие' date(o) <= date(t) 'F9' DEFAULT
    FILTERGROUP filterOrder
        FILTER 'Не расписанные или в текущем рейсе' filter(t, o) 'F11'
        FILTER 'В текущем рейсе' in(t, o) 'F10' DEFAULT

    OBJECTS od=OrderDetail
    PROPERTIES(od) READONLY idBarcodeSku, nameSku, shortNameUOMSku, quantity, grossWeight, nameFromStock, nameToStock
    FILTERS order(od)==o

    OBJECTS st=Stock
    PROPERTIES(st) READONLY BACKGROUND backgroundTripStock(t,st) name, address, nameLegalEntity
    PROPERTIES(t, st) grossWeightTo
    PROPERTIES(st, t) number, isFirst

    FILTERS quantity (t, st) > 0
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    EDIT Trip OBJECT t
;

DESIGN trip {
    headerSum {
        MOVE PROPERTY(countOrdered(t));
        MOVE PROPERTY(grossWeightOrdered(t));
    }
    
    pane {
        NEW orders {
            fill = 1;
            caption = 'Заказы';
            MOVE BOX(o);
            MOVE BOX(od);
        }
        MOVE BOX(st) {
            caption = 'Путевой лист';
        }
    }
}

EXTEND FORM trips
    PROPERTIES(t) READONLY countOrdered, grossWeightOrdered
    
    OBJECTS o=Order
    PROPERTIES(o) READONLY BACKGROUND backgroundTripOrder(o) number, series, date, nameSupplier, nameFromStock, nameCustomer, nameToStock, grossWeightOrderDetail
    FILTERS in(t, o)
;

DESIGN trips {
    pane {
        MOVE BOX(o) {
            caption = 'Заказы';
        }
    }
}

// Показываем отмеченные заказы на карте
filteredFromTrip (stock) = GROUP SUM 1 IF [ FILTER trip.o](Order order) BY fromStock(order);
filteredToTrip (stock) = GROUP SUM 1 IF [ FILTER trip.o](Order order) BY toStock(order);
filteredTrip(Stock stock) = filteredFromTrip(stock) (+) filteredToTrip(stock);

showPointOrders 'Показать отобранные заказы' ()  { 
    numberPath(POI stock) <- 1 IF filteredTrip(stock);
    showOnPath(showMapProvider());
} TOOLBAR;

EXTEND FORM trip
    PROPERTIES showPointOrders() DRAW o
;
