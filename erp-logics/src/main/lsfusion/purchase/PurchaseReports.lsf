MODULE PurchaseReports;

REQUIRE PurchaseLedger, Item;

//отчет по поступлениям

inPurchaseReport 'Вкл.' = DATA LOCAL BOOLEAN (Stock);

inPurchaseReportStocks 'Склады' () =
    GROUP CONCAT name(Stock st) IF inPurchaseReport(st) ,', ' ORDER st CHARWIDTH 30;
defaultStockPurchaseReport = GROUP MIN Stock st IF inPurchaseReport(st);

dataInSession 'Отм.' = DATA LOCAL BOOLEAN (Group);

levelParent (Group group) = GROUP
    MIN level(group, Group parent) IF dataInSession(parent);

inParent (Group group) = TRUE IF levelParent(group);

inSession 'Отм.' (Group group) = OVERRIDE
    dataInSession(group),
    inParent(group);

sessionConcatGroups 'Группы' (groupType) =
    GROUP CONCAT name(Group group) IF inSession(group) AND NOT inSession(parent(group)),',' ORDER group
    BY groupType(group);
    
// --------------------------------- Оптимизация с хранимыми свойствами ------------------------------------- //

quantityStock 'Количество' = DATA LOCAL NUMERIC[16,5] (Sku); 
sumVATStock 'Сумма НДС' = DATA LOCAL NUMERIC[18,4] (Sku);
sumStock 'Сумма' = DATA LOCAL NUMERIC[18,4] (Sku);

overfillPurchaseReportFromTo  ABSTRACT ( GroupType, DATE, DATE);

fillPurchaseReportFromTo 'Сформировать'(GroupType gt, DATE df, DATE dt)  { 

    quantityStock(Sku sk) <- NULL;           
    sumStock(Sku sk) <- NULL;  
    sumVATStock(Sku sk) <- NULL;  
    
    quantityStock(Sku sk) <- NUMERIC[16,5]((GROUP SUM quantityPurchase(sk, Stock st, df, dt) IF inPurchaseReport(st)));           
    sumStock(Sku sk) <- NUMERIC[18,4]((GROUP SUM sumPurchase(sk, Stock st, df, dt) IF inPurchaseReport(st)));   
    sumVATStock(Sku sk) <- NUMERIC[18,4]((GROUP SUM sumVATPurchase(sk, Stock st, df, dt) IF inPurchaseReport(st)));   

    overfillPurchaseReportFromTo(gt, df, dt);
}
    

//суммы поступлений по группе
sumVATPurchasesStock 'Сумма НДС (по группе)'(Group group, DATE dateFrom, DATE dateTo) =
    GROUP 
    SUM sumVAT(PurchaseLedger l) IF isParent(group, sku(l)) AND active(l) AND inPurchaseReport(stock(l)) AND
                                         date(l) >= dateFrom AND date(l) <= dateTo;
sumPurchasesSkuStock 'Сумма поступлений (по группе)' (Group group, DATE dateFrom, DATE dateTo) =
    GROUP
    SUM sum(PurchaseLedger l) IF isParent(group, sku(l)) AND active(l) AND inPurchaseReport(stock(l)) AND
                                      date(l) >= dateFrom AND date(l) <= dateTo;
    
sumRecPurchasesSkuStock 'Сумма поступлений (всего)' (Group group, DATE dateFrom, DATE dateTo) =
    GROUP
    SUM sum(PurchaseLedger l) IF isParent(group, sku(l)) AND
                                      active(l) AND inPurchaseReport(stock(l)) AND
                                      date(l) >= dateFrom AND date(l) <= dateTo;

//суммы поступлений по поставщику

sumVATPurchasesStock 'Сумма НДС (по поставщику)'(GroupType groupType, supplier, DATE dateFrom, DATE dateTo) =
    GROUP SUM sumVAT(PurchaseLedger l) IF active(l) AND inPurchaseReport(stock(l)) AND
                                                      inSession(group(groupType, sku(l))) AND
                                                      date(l) >= dateFrom AND date(l) <= dateTo
    BY supplier(l);
sumPurchasesStock 'Сумма поступлений (по поставщику)' (GroupType groupType, supplier, DATE dateFrom, DATE dateTo) =
    GROUP SUM sum(PurchaseLedger l) IF active(l) AND inPurchaseReport(stock(l)) AND
                                                   inSession(group(groupType, sku(l))) AND
                                                   date(l) >= dateFrom AND date(l) <= dateTo
    BY supplier(l);

//итоговые суммы поступлений
sumVATPurchasesStock 'Итоговая сумма НДС поступлений' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    GROUP
    SUM sumVAT(PurchaseLedger l) IF inSession(group(groupType, sku(l))) AND
                                                       active(l) AND inPurchaseReport(stock(l)) AND
                                                       date(l) >= dateFrom AND date(l) <= dateTo CHARWIDTH 15;
sumPurchasesStock 'Итоговая сумма поступлений' (GroupType groupType, DATE dateFrom, DATE dateTo) =
    GROUP
    SUM sum(PurchaseLedger l) IF inSession(group(groupType, sku(l))) AND
                                                   active(l) AND inPurchaseReport(stock(l)) AND
                                                   date(l) >= dateFrom AND date(l) <= dateTo CHARWIDTH 15;

//формы

FORM printListPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    PROPERTIES() inPurchaseReportStocks

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS p = PurchaseLedger
    PROPERTIES(p) READONLY dateTime, nameSupplier, nameSku, description,
                           quantity, sumVAT, sum, averagePrice
    ORDERS nameSku(p)
    FILTERS active(p),
            inPurchaseReport(stock(p)),
            date(p) >= df,
            date(p) <= dt,
            inSession(group(gt, sku(p)))
;

printListPurchasesReport 'Списком' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printListPurchasesReport OBJECTS gt = gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;

quantityPurchasesStock 'Закуплено за интервал (кол-во)' (Sku sku, DATE dateFrom, DATE dateTo) = GROUP
        SUM
        quantityPurchase(sku, Stock stock, DATE date) IF date >= dateFrom AND date <= dateTo AND inPurchaseReport(stock);

sumVATPurchasesStock 'Сумма НДС закупленного за интервал' (Sku sku, DATE dateFrom, DATE dateTo) = GROUP
        SUM
        sumVATPurchase(sku, Stock stock, DATE date) IF date >= dateFrom AND date <= dateTo AND inPurchaseReport(stock);

sumPurchasesStock 'Закуплено за интервал (сумма)' (Sku sku, DATE dateFrom, DATE dateTo) = GROUP
        SUM
        sumPurchase(sku, Stock stock, DATE date) IF date >= dateFrom AND date <= dateTo AND inPurchaseReport(stock);

FORM printListSkuPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    PROPERTIES() inPurchaseReportStocks

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS s = Sku
    PROPERTIES(s) READONLY name
    PROPERTIES(s, df, dt) READONLY quantityPurchasesStock, sumVATPurchasesStock,
                                       sumPurchasesStock
    ORDERS name(s)
    FILTERS inSession(group(gt, s)),
            quantityPurchasesStock(s, df, dt) OR sumVATPurchasesStock(s, df, dt) OR
            sumPurchasesStock(s, df, dt)
;

printListSkuPurchasesReport 'Списком(по товарам)' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printListSkuPurchasesReport OBJECTS gt =gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;


FORM printPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)
    PROPERTIES() inPurchaseReportStocks
    
    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalName(sk)
    ORDERS canonicalName(sk)
    PROPERTIES(sk, df, dt) READONLY sumVATPurchasesStock, sumPurchasesSkuStock
    FILTERS inSession(sk) AND countSku(sk, gt),
            groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS p = PurchaseLedger
    PROPERTIES(p) READONLY dateTime, nameSupplier, nameSku, description,
                           quantity, sumVAT, sum, averagePrice
    ORDERS nameSku(p)
    FILTERS active(p),
            inPurchaseReport(stock(p)),
            date(p) >= df,
            date(p) <= dt,
            group(gt, sku(p)) == sk
;

printPurchasesReportDetail 'По группам' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printPurchasesReport OBJECTS gt = gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;

FORM printSkuPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    PROPERTIES() inPurchaseReportStocks
    
    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalName(sk)
    ORDERS canonicalName(sk)
    PROPERTIES(sk, df, dt) READONLY sumVATPurchasesStock, sumPurchasesSkuStock
    FILTERS inSession(sk) AND countSku(sk, gt),
            groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS s = Sku
    PROPERTIES(s) READONLY name
    PROPERTIES(s, df, dt) READONLY quantityPurchasesStock, sumVATPurchasesStock,
                                       sumPurchasesStock
    ORDERS name(s)
    FILTERS group(gt, s) == sk,
            quantityPurchasesStock(s, df, dt) OR sumVATPurchasesStock(s, df, dt) OR
            sumPurchasesStock(s, df, dt)
;

printSkuPurchasesReport 'По товарам(группы)' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printSkuPurchasesReport OBJECTS gt = gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;

FORM printGroupPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    PROPERTIES() inPurchaseReportStocks
    
    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS sk = Group
    PROPERTIES READONLY canonicalName(sk)
    ORDERS canonicalName(sk)
    PROPERTIES(sk, df, dt) READONLY sumVATPurchasesStock, sumPurchasesSkuStock
    FILTERS inSession(sk) AND countSku(sk, gt),
            groupType(sk) == gt,
            sumVATPurchasesStock(sk, df, dt) OR sumPurchasesSkuStock(sk, df, dt)
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT
;

printPurchasesReport 'По группам' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printGroupPurchasesReport OBJECTS gt = gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;

FORM printGroupSupplierPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)
    PROPERTIES() inPurchaseReportStocks
    
    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY name(l)
    ORDERS name(l)
    PROPERTIES(gt, l, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    FILTERS isSeller(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    
    OBJECTS p = PurchaseLedger
    PROPERTIES(p) READONLY dateTime, nameSupplier, nameSku, description,
                           quantity, sumVAT, sum, averagePrice
    ORDERS nameSku(p)
    FILTERS active(p),
            inSession(group(gt, sku(p))),
            inPurchaseReport(stock(p)),
            date(p) >= df,
            date(p) <= dt,
            supplier(p) == l
;

printGroupSupplierPurchasesReportDetail 'По поставщикам' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printGroupSupplierPurchasesReport OBJECTS gt = gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;

//по складу, поставщику и SKU
quantityPurchasesStock 'Закуплено за интервал (кол-во)' (Sku sku, LegalEntity supplier, DATE dateFrom, DATE dateTo) = GROUP
        SUM
        quantityPurchase(sku, Stock stock, supplier, DATE date) IF date >= dateFrom AND date <= dateTo AND inPurchaseReport(stock);

sumVATPurchasesStock 'Сумма НДС закупленного за интервал' (Sku sku, LegalEntity supplier, DATE dateFrom, DATE dateTo) = GROUP
        SUM
        sumVATPurchase(sku, Stock stock, supplier, DATE date) IF date >= dateFrom AND date <= dateTo AND inPurchaseReport(stock);

sumPurchasesStock 'Закуплено за интервал (сумма)' (Sku sku, LegalEntity supplier, DATE dateFrom, DATE dateTo) = GROUP
        SUM
        sumPurchase(sku, Stock stock, supplier, DATE date) IF date >= dateFrom AND date <= dateTo AND inPurchaseReport(stock);

FORM printGroupSupplierSkuPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    PROPERTIES() inPurchaseReportStocks

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY name(l)
    ORDERS name(l)
    PROPERTIES(gt, l, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    FILTERS isSeller(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    OBJECTS s = Sku
    PROPERTIES(s) READONLY name
    PROPERTIES(s, l, df, dt) READONLY quantityPurchasesStock, sumVATPurchasesStock,
                                          sumPurchasesStock
    ORDERS name(s)
    FILTERS inSession(group(gt, s)),
            quantityPurchasesStock(s, l, df, dt) OR sumVATPurchasesStock(s, l, df, dt) OR
            sumPurchasesStock(s, l, df, dt)
;

printGroupSupplierSkuPurchasesReport 'По товарам(поставщики)' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printGroupSupplierSkuPurchasesReport OBJECTS gt = gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;

FORM printSupplierPurchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL SUBREPORT
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)

    PROPERTIES() inPurchaseReportStocks

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    PROPERTIES(gt) READONLY sessionConcatGroups

    OBJECTS l = LegalEntity
    PROPERTIES READONLY name(l)
    ORDERS name(l)
    PROPERTIES(gt, l, df, dt) READONLY sumVATPurchasesStock, sumPurchasesStock
    FILTERS isSeller(l),
            sumVATPurchasesStock(gt, l, df, dt) OR sumPurchasesStock(gt, l, df, dt)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
;

printSupplierPurchasesReport 'По поставщикам' (GroupType gt, DATE dateFrom, DATE dateTo) 
    { PRINT printSupplierPurchasesReport OBJECTS gt = gt, df = dateFrom, dt = dateTo; }   IMAGE 'print.png' IN print;


FORM dialogStocksPurchaseReport 'Выбор складов'

    TREE stockTree a = BPSTRING[3], sg = StockGroup PARENT parent(sg)
    PROPERTIES READONLY VALUE(a), name(sg)
    ORDERS name(sg)
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY id, name
    PROPERTIES (s) inPurchaseReport
    ORDERS name(s)
    FILTERS isParent(sg, s) OR (s IS Stock AND NOT sg),
            isCompany(s),
            countCompanyStock(sg)

    FILTERGROUP inactiveStock FILTER 'Активный' active(s) 'ctrl F10' DEFAULT    
    FILTERGROUP select FILTER 'Отм.' inPurchaseReport(s) 'F9' 
;

DESIGN dialogStocksPurchaseReport {
    BOX {
        size = (1024, 768);

        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE BOX(TREE stockTree) {
                caption = 'Склады';
            }

            MOVE BOX(s) {
                fill = 3;
                GRID(s) {
                    defaultComponent = TRUE;
                }
                PROPERTY(name(s)){
                    charWidth = 35;
                }
            }
        }

        MOVE TOOLBARBOX;
    }
}
@extendFormFilterStockAccess(s, dialogStocksPurchaseReport, company);    
changeStocksPurchaseReport(GroupType gt, DATE df, DATE dt)  { 
    DIALOG dialogStocksPurchaseReport DO {
        fillPurchaseReportFromTo(gt, df, dt);
    }
}

showMovementSkuStocksPurchase 'Показать движение товара по складу' (Sku sku)  { NEWSESSION NESTED(inPurchaseReport) SHOW movementSkuStock OBJECTS s = sku, st = (GROUP MIN Stock st IF inPurchaseReport(st)) ; }
showMovementPriceSkuStocksPurchase 'Показать изменение цены товара по складу' (Sku sku)  { NEWSESSION NESTED(inPurchaseReport) SHOW movementPriceSkuStock OBJECTS s = sku, st = (GROUP MIN Stock st IF inPurchaseReport(st)) ; }

filterStock (Sku s) =   quantityStock(s) OR 
                                   sumVATStock(s) OR
                                   sumStock(s);

FORM purchasesReport 'Отчет по поступлениям'
    OBJECTS df=DATE PANEL
    PROPERTIES dateFrom = VALUE(df)

    OBJECTS dt=DATE PANEL
    PROPERTIES dateTo = VALUE(dt)        

    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name
    PROPERTIES(gt, df, dt) READONLY sumPurchasesStock
//    PROPERTIES(gt) READONLY sessionConcatGroups
    PROPERTIES inPurchaseReportStocks() ON CHANGE changeStocksPurchaseReport(gt, df, dt)

    TREE skuTree sk = Group PARENT parent(sk)
    PROPERTIES inSession(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    PROPERTIES(sk, df, dt) READONLY sumRecPurchasesSkuStock
    ORDERS order(sk), skuTreeName
    FILTERS groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT
    
    
    OBJECTS sku = Sku
    PROPERTIES(sku) in
    PROPERTIES(sku) READONLY name ON CONTEXTMENU showMovementSkuStocksPurchase[Sku](sku) ON CONTEXTMENU showMovementPriceSkuStocksPurchase[Sku](sku), id SHOWIF showIDs()
    PROPERTIES(sku) READONLY nameManufacturer, quantityStock, sumVATStock, sumStock
    FILTERS isParent(sk, sku),
            active(sku),
            filterStock(sku)        

    OBJECTS p = PurchaseLedger
    PROPERTIES(p) READONLY dateTime, nameSupplier, nameSku, description,
                           quantity, sumVAT, sum, averagePrice
    ORDERS nameSku(p)
    FILTERS isParent(sk, sku(p)),
            active(p),
            inPurchaseReport(stock(p)),
            date(p) >= df,
            date(p) <= dt
    PROPERTIES(gt, df, dt) printListPurchasesReport, printListSkuPurchasesReport, printPurchasesReportDetail, printSkuPurchasesReport, printPurchasesReport,
                           printGroupSupplierPurchasesReportDetail, printGroupSupplierSkuPurchasesReport, printSupplierPurchasesReport
    
    EVENTS ON INIT {
        SEEK purchasesReport.gt = defaultGroupType() IF defaultGroupType();
    },
    ON CHANGE df fillPurchaseReportFromTo(gt, df, dt),
    ON CHANGE dt fillPurchaseReportFromTo(gt, df, dt) 
;

DESIGN purchasesReport {
    NEW topContainer{
        type = CONTAINERH;
        NEW dateContainer{
            caption = 'Период';
            type = CONTAINERH;
            MOVE PROPERTY(dateFrom){caption = 'Дата (с)';}
            MOVE PROPERTY(dateTo){caption = 'Дата (по)';}
        }
        MOVE BOX(gt);        
        NEW stocks {
            caption = 'Склады';
            type = CONTAINERH;
            MOVE PROPERTY(inPurchaseReportStocks());        
        }
        NEW sumContainer{
            caption = 'Итоговые суммы';
            type = CONTAINERV;
            MOVE PROPERTY(sumPurchasesStock(gt,df,dt));
        }
    }
    NEW bottomContainer{
        type = CONTAINERH;
        type = SPLITH;
        fill = 1;
        MOVE BOX(TREE skuTree);
        NEW tabContainer{
            type = TABBED;
            fill = 2;
            MOVE BOX(sku) { caption = 'Товар';}
            MOVE BOX(p) {caption = 'Регистр';}
            NEW printPurchasesContainer{
                type = CONTAINERV;
                caption = 'Печать';
                fill = 1;
                NEW rowPurchasesContainer{
                    type = CONTAINERH;                    
                    NEW firstColumnPurchasesContainer{
                        caption = 'С детализацией';
                        type = COLUMNS;
                        columns = 2;
                        MOVE PROPERTY(printPurchasesReportDetail(gt,df,dt));
                        MOVE PROPERTY(printSkuPurchasesReport(gt,df,dt));
                        MOVE PROPERTY(printGroupSupplierPurchasesReportDetail(gt,df,dt));
                        MOVE PROPERTY(printGroupSupplierSkuPurchasesReport(gt,df,dt));
                    }
                    NEW secondColumnPurchasesContainer{
                        caption = 'Без детализации';
                        type = CONTAINERV;
                        MOVE PROPERTY(printPurchasesReport(gt,df,dt));
                        MOVE PROPERTY(printSupplierPurchasesReport(gt,df,dt));
                    }
                    NEW thirdColumnPurchasesContainer{
                        caption = 'Список';
                        type = CONTAINERV;
                        MOVE PROPERTY(printListPurchasesReport(gt,df,dt));
                        MOVE PROPERTY(printListSkuPurchasesReport(gt,df,dt));
                    }
                }
            }                           
        }
    }
    MOVE TOOLBARBOX;
}

NAVIGATOR {
    purchasesReports {
        NEW purchasesReport;
    }
}
