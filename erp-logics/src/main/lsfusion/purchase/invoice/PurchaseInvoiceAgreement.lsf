MODULE PurchaseInvoiceAgreement;

REQUIRE PurchaseShipment, PriceListLedger, PurchaseAgreement;

NAMESPACE Purchase;
 
// Ограничения на ввод приходной накладной в соответствии с условиями соглашения

//-- Ограничения 
GROUP agreementPercQuantity 'Ограничения (кол-во)': public;
GROUP agreementPercPrice 'Ограничения (цена)': public;
//--------------------------- Допустимый процент отклонения по количеству --------------------------------------//

percDeviationDownQuantity '% отклонения по количеству вниз' = DATA NUMERIC[8,2] (Agreement) IN agreementPercQuantity;
percDeviationUpQuantity '% отклонения по количеству вверх' = DATA NUMERIC[8,2] (Agreement) IN agreementPercQuantity;

EXTEND FORM agreement 
    PROPERTIES(a) percDeviationDownQuantity, percDeviationUpQuantity  
;
DESIGN agreement {
    orderContainer {
        NEW deviation BEFORE orderContainer1 {
            type = CONTAINERV;
            NEW deviation1 {
                horizontal = TRUE;
                MOVE GROUP(agreementPercQuantity,a);
            }
        }
    }
} 

percDeviationDownQuantityAgreement '% отклонения по количеству вниз' (OrderDetail d) = percDeviationDownQuantity(agreement(d));
percDeviationUpQuantityAgreement '% отклонения по количеству вверх' (OrderDetail d) = percDeviationUpQuantity(agreement(d));


maxDeviationQuantity 'Макс. кол-во' (OrderDetail d) = NUMERIC[29,11]((100.0 + percDeviationUpQuantityAgreement(d)) * 
                                                        quantity(d) /
                                                        100.0);
minDeviationQuantity 'Мин. кол-во' (OrderDetail d) = NUMERIC[29,11]((100.0 - percDeviationDownQuantityAgreement(d)) *
                                                        quantity(d) /
                                                        100.0);
   
CONSTRAINT SETCHANGED(shipped(OrderDetail d)) AND isPosted(d) AND shipped(d) > maxDeviationQuantity(d)    
  MESSAGE 'Для заказа превышен максимальный допустимый процент отклонения по количеству';    

CONSTRAINT SETCHANGED(shipped(OrderDetail d)) AND isPosted(d) AND shipped(d) < minDeviationQuantity(d)    
  MESSAGE 'Для заказа превышен минимальный допустимый процент отклонения по количеству';
  
percDeviationDownQuantityAgreement '% отклонения по количеству вниз' (Order order) = percDeviationDownQuantity(agreement(order));
percDeviationUpQuantityAgreement '% отклонения по количеству вверх' (Order order) = percDeviationUpQuantity(agreement(order));
    
EXTEND FORM orders
    PROPERTIES(d) READONLY  minDeviationQuantity SHOWIF percDeviationDownQuantityAgreement(o) BEFORE quantity(d), 
                  maxDeviationQuantity SHOWIF percDeviationUpQuantityAgreement(o) AFTER quantity(d)
                  
;
EXTEND FORM userOrder
    PROPERTIES(d) READONLY  minDeviationQuantity SHOWIF percDeviationDownQuantityAgreement(o) BEFORE quantity(d), 
                  maxDeviationQuantity SHOWIF percDeviationUpQuantityAgreement(o) AFTER quantity(d)
 
;    
  
//--------------------------- Допустимый процент отклонения по цене --------------------------------------//
percDeviationDownPrice '% отклонения по цене вниз' = DATA NUMERIC[8,2] (Agreement) IN agreementPercPrice;
percDeviationUpPrice '% отклонения по цене вверх' = DATA NUMERIC[8,2] (Agreement) IN agreementPercPrice;

// Уточнение по группам
//-- вниз
dataPercDeviationDownPrice '% отклонения по цене вниз' (agreement, group) = DATA NUMERIC[8,2] (Agreement, Group);
levelParentPercDeviationDownPrice (Agreement agreement, Group group) =
    GROUP
    MIN level(group, Group parent) IF dataPercDeviationDownPrice(agreement, parent) MATERIALIZED;
nearestParentPercDeviationDownPrice (Agreement agreement, Group group) = group(group, levelParentPercDeviationDownPrice (agreement, group));
nearestPercDeviationDownPrice (Agreement agreement, Group group) =
   dataPercDeviationDownPrice(agreement, nearestParentPercDeviationDownPrice(agreement, group)) MATERIALIZED;

percDeviationDownPrice '% отклонения по цене вниз (перегруженный)' (Agreement agreement, Group group) =  OVERRIDE  
    dataPercDeviationDownPrice(agreement, group), 
    nearestPercDeviationDownPrice(agreement, group),
    percDeviationDownPrice(agreement) IF group IS Group MATERIALIZED;
    
//-- вверх        
dataPercDeviationUpPrice '% отклонения по цене вверх' (agreement, group) = DATA NUMERIC[8,2] (Agreement, Group);

levelParentPercDeviationUpPrice (Agreement agreement, Group group) =
    GROUP
    MIN level(group, Group parent) IF dataPercDeviationUpPrice(agreement, parent) MATERIALIZED;
nearestParentPercDeviationUpPrice (Agreement agreement, Group group) = group(group, levelParentPercDeviationUpPrice (agreement, group));
nearestPercDeviationUpPrice (Agreement agreement, Group group) =
   dataPercDeviationUpPrice(agreement, nearestParentPercDeviationUpPrice(agreement, group)) MATERIALIZED;

percDeviationUpPrice '% отклонения по цене вверх (перегруженный)' (Agreement agreement, Group group) =  OVERRIDE  
    dataPercDeviationUpPrice(agreement, group), 
    nearestPercDeviationUpPrice(agreement, group),
    percDeviationUpPrice(agreement) IF group IS Group MATERIALIZED;    

// Уточнение по sku
//-- вниз
dataPercDeviationDownPrice '% отклонения по цене вниз' (agreement, sku) = DATA NUMERIC[8,2] (Agreement, Sku);

percDeviationDownPrice '% отклонения по цене вниз (перегруженный)' (Agreement agreement, Sku sku) = OVERRIDE     
    dataPercDeviationDownPrice(agreement, sku),
    percDeviationDownPrice(agreement, group(groupType(agreement),sku));
    
//-- вверх
dataPercDeviationUpPrice '% отклонения по цене вверх' (agreement, sku) = DATA NUMERIC[8,2] (Agreement, Sku);

percDeviationUpPrice '% отклонения по цене вверх (перегруженный)' (Agreement agreement, Sku sku) = OVERRIDE     
    dataPercDeviationUpPrice(agreement, sku),
    percDeviationUpPrice(agreement, group(groupType(agreement),sku));
    
    
showPercDeviationUpPrice (Agreement a) = (GROUP SUM 1 IF dataPercDeviationUpPrice(a, Sku sku)) (+) 
                                                    (GROUP SUM 1 IF dataPercDeviationUpPrice(a, Group g)) (+)
                                                    (1 IF percDeviationUpPrice(a)) MATERIALIZED;
showPercDeviationDownPrice (Agreement a) = (GROUP SUM 1 IF dataPercDeviationDownPrice(a, Sku sku)) (+) 
                                                      (GROUP SUM 1 IF dataPercDeviationDownPrice(a, Group g)) (+)
                                                      (1 IF percDeviationDownPrice(a)) MATERIALIZED;
EXTEND FORM agreement 
    PROPERTIES(a) percDeviationDownPrice, percDeviationUpPrice 
    PROPERTIES(a, g) dataPercDeviationDownPrice, percDeviationDownPrice,
                     dataPercDeviationUpPrice, percDeviationUpPrice
    PROPERTIES(a, s) dataPercDeviationDownPrice, percDeviationDownPrice,
                     dataPercDeviationUpPrice, percDeviationUpPrice        
                         
;
DESIGN agreement {
    deviation1{
        MOVE GROUP(agreementPercPrice,a);
    }
} 
//useAgreementsSupplierStock 'Использовать склад поставщика для проверки цены из соглашения ' = DATA BOOLEAN () PREREAD;

agreementsPrice 'Цена из соглашения' (OrderDetail d) =
        prevPriceA(priceListType(d), sku(d), customerStock(d), supplier(d), 
            IF usePriceShipmentDateTime() THEN shipmentDateTime(d) ELSE dateTime(d)) COMPLEX;
//
//    priceB(priceListType(d) AS DataPriceListType,
//                                              sku(d),
//                                              customerStock(d),
//                                              dateTime(d));
percDeviationUpPriceAgreement '% отклонения по цене вверх' (OrderDetail d) = percDeviationUpPrice(agreement(d), sku(d));
percDeviationDownPriceAgreement '% отклонения по цене вниз' (OrderDetail d) = percDeviationDownPrice(agreement(d), sku(d));

maxDeviationPrice 'Макс. цена' (OrderDetail d) = NUMERIC[28,9]((100.0 + percDeviationUpPriceAgreement(d)) * 
                                                        price(d) /
                                                        100.0);
minDeviationPrice 'Мин. цена' (OrderDetail d) = NUMERIC[28,9]((100.0 - percDeviationDownPriceAgreement(d)) *
                                                        price(d) /
                                                        100.0);      

//skipAgreementsPrice = ABSTRACT VALUE BOOLEAN (OrderDetail);
//
//CONSTRAINT (SET(isPosted(OrderDetail d)) OR SETCHANGED(price(d))) AND isPosted(d) AND (price(d) != agreementsPrice(d)) AND NOT skipAgreementsPrice(d)   
//    MESSAGE 'Для строки заказа цена не совпадает с ценой из соглашения';   
 
maxDeviationPriceAgreement 'Макс. цена из соглашения' (OrderDetail d) = NUMERIC[28,9]((100.0 + percDeviationUpPriceAgreement(d)) * 
                                                        agreementsPrice(d) /
                                                        100.0);   
minDeviationPriceAgreement 'Мин. цена из соглашения' (OrderDetail d) = NUMERIC[28,9]((100.0 - percDeviationDownPriceAgreement(d)) *
                                                        agreementsPrice(d) /
                                                        100.0);    

CONSTRAINT (SET(isPosted(OrderDetail d)) OR SETCHANGED(price(d)) OR SETCHANGED(agreement(d))) AND isPosted(d) AND (price(d) < minDeviationPriceAgreement(d)) 
    MESSAGE 'Для строки заказа превышен минимальный допустимый процент отклонения по цене';    
     
CONSTRAINT (SET(isPosted(OrderDetail d)) OR SETCHANGED(price(d)) OR SETCHANGED(agreement(d))) AND isPosted(d) AND (price(d) > maxDeviationPriceAgreement(d)) 
    MESSAGE 'Для строки заказа превышен максимальный допустимый процент отклонения по цене';    
   
EXTEND FORM userOrder
    PROPERTIES (d) READONLY agreementsPrice, minDeviationPriceAgreement, maxDeviationPriceAgreement 
;
    
percDeviationUpPriceAgreement '% отклонения по цене вверх' (Order order) = showPercDeviationUpPrice(agreement(order));
percDeviationDownPriceAgreement '% отклонения по цене вниз' (Order order) = showPercDeviationDownPrice(agreement(order));     

EXTEND FORM orders
    PROPERTIES(d) READONLY  minDeviationPrice SHOWIF percDeviationDownPriceAgreement(o) BEFORE price(d), 
                  maxDeviationPrice SHOWIF percDeviationUpPriceAgreement(o) AFTER price(d) 

;
EXTEND FORM userOrder
    PROPERTIES(d) READONLY  minDeviationPrice SHOWIF percDeviationDownPriceAgreement(o) BEFORE price(d), 
                  maxDeviationPrice SHOWIF percDeviationUpPriceAgreement(o) AFTER price(d)

;     

//
maxDeviationPriceOrder 'Макс. цена заказ' (InvoiceDetail d) = maxDeviationPrice(orderDetail(d));
minDeviationPriceOrder 'Мин. цена заказ' (InvoiceDetail d) = minDeviationPrice(orderDetail(d)); 

overAgreementsPrice = ABSTRACT NUMERIC[16,4] (InvoiceDetail);  

agreementsPrice 'Цена из соглашения' (InvoiceDetail d) = OVERRIDE overAgreementsPrice(d),  //вообще никак не был учтен перегруженный вид цены  
    prevPriceA(priceListType(d), sku(d), customerStock(d), supplier(d), dateTime(d)) COMPLEX;
    // todo : добавлен PREV для того, чтобы при изменении в прайсах (до) она не тормозила. Почему это работает при изменении цены в прайсе - вообще загадка.

percDeviationUpPriceAgreement '% отклонения по цене вверх' (InvoiceDetail d) = percDeviationUpPrice(agreement(d), sku(d));
percDeviationDownPriceAgreement '% отклонения по цене вниз' (InvoiceDetail d) = percDeviationDownPrice(agreement(d), sku(d));
maxDeviationPrice 'Макс. цена' (InvoiceDetail d) = (100.0 + percDeviationUpPriceAgreement(d)) * 
                                                        agreementsPrice(d) /
                                                        100.0 CHARWIDTH 7;
minDeviationPrice 'Мин. цена' (InvoiceDetail d) = (100.0 - percDeviationDownPriceAgreement(d)) *
                                                        agreementsPrice(d) /
                                                        100.0 CHARWIDTH 7; 

useAgreementsPrice 'При определении % отклонения в накладной закупка использовать цену из соглашения' = DATA BOOLEAN () PREREAD;
EXTEND FORM options
    PROPERTIES () useAgreementsPrice;
;
DESIGN options {
    purchase {
        MOVE PROPERTY (useAgreementsPrice());
    }
}

                                                         
overMaxDeviationPrice 'Макс. цена' (InvoiceDetail d) = IF orderDetail(d) AND NOT useAgreementsPrice() THEN maxDeviationPriceOrder(d) ELSE maxDeviationPrice(d);
overMinDeviationPrice 'Мин. цена' (InvoiceDetail d) = IF orderDetail(d) AND NOT useAgreementsPrice() THEN minDeviationPriceOrder(d) ELSE minDeviationPrice(d);
                                                                                                                      
skipMaxDeviationPrice = ABSTRACT BOOLEAN (InvoiceDetail);                                                                                                                     
           
banNotAgreementsPrice'Запретить оприходование накладных без прайса' = DATA BOOLEAN (Agreement);
EXTEND FORM agreement
    PROPERTIES (a) banNotAgreementsPrice
;
DESIGN agreement {
    propContainer {
        MOVE PROPERTY (banNotAgreementsPrice(a));
    }
}

EXTEND FORM agreements
    PROPERTIES (a) READONLY banNotAgreementsPrice AFTER toDateTime(a)
;

CONSTRAINT (SET(isPosted(InvoiceDetail d)) OR SETCHANGED(price(d)) OR SETCHANGED(sku(d)) OR SETCHANGED(dateTime(d)) OR SETCHANGED(agreement(d))) AND 
    isPosted(d) AND banNotAgreementsPrice(agreement(d)) AND NOT agreementsPrice(d) AND NOT skipMaxDeviationPrice(d)
        MESSAGE 'Запрещено оприходование накладных без прайса';
                   
CONSTRAINT (SET(isPosted(OrderDetail d)) OR SETCHANGED(price(d)) OR SETCHANGED(sku(d)) OR SETCHANGED(dateTime(d)) OR SETCHANGED(agreement(d))) AND 
    isPosted(d) AND banNotAgreementsPrice(agreement(d)) AND NOT agreementsPrice(d)
        MESSAGE 'Запрещен ввод заказа без прайса';                       

CONSTRAINT (SET(isPosted(InvoiceDetail d)) OR SETCHANGED(price(d)) OR SETCHANGED(sku(d)) OR SETCHANGED(dateTime(d)) OR SETCHANGED(agreement(d)) OR CHANGED(skipMaxDeviationPrice(d))) AND 
    isPosted(d) AND price(d) > overMaxDeviationPrice(d) AND NOT skipMaxDeviationPrice(d)   
        MESSAGE 'Для строки накладной превышен максимальный допустимый процент отклонения по цене';    

CONSTRAINT (SET(isPosted(InvoiceDetail d)) OR SETCHANGED(price(d)) OR SETCHANGED(sku(d)) OR SETCHANGED(dateTime(d)) OR SETCHANGED(agreement(d)) OR CHANGED(skipMaxDeviationPrice(d))) AND 
    isPosted(d) AND price(d) < overMinDeviationPrice(d) AND NOT skipMaxDeviationPrice(d)      
        MESSAGE 'Для строки накладной превышен минимальный допустимый процент отклонения по цене';    
                           
//--------------------------- Запрет на оприходование без заявки --------------------------------------//

deviationNotOrderInvoice 'Запретить оприходование накладных без заказа'  = DATA BOOLEAN (Agreement);
EXTEND FORM agreement 
    PROPERTIES(a) deviationNotOrderInvoice 
;

CONSTRAINT (SET(isPosted(InvoiceDetail d)) OR CHANGED(agreement(invoice(d)))) AND isPosted(d) AND deviationNotOrderInvoice(agreement(invoice(d))) AND NOT isPosted(orderDetail(d))    
    MESSAGE 'Накладную запрещено оприходовать без заказа';   


//--------------------------- Минимальная сумма заказа для поставщика --------------------------------------//

minSupplierSumOrder 'Минимальная сумма заказа' = DATA NUMERIC[18,4] (Agreement) CHARWIDTH 13;
EXTEND FORM agreement 
    PROPERTIES(a) minSupplierSumOrder 
;
DESIGN agreement {
    orderContainer1 {       
        MOVE PROPERTY (deviationNotOrderInvoice(a));
        MOVE PROPERTY (minSupplierSumOrder(a));
    }
}

minSumSupplier 'Минимальная сумма заказа' (UserOrder o) = minSupplierSumOrder(agreement(o)) IN documentSum CHARWIDTH 13;
backgroundMinSumSupplier (UserOrder o) = RGB (255,100,100) IF minSumSupplier(o) > sumUserOrderDetail(o);

EXTEND FORM userOrder 
    PROPERTIES(o) READONLY minSumSupplier BACKGROUND backgroundMinSumSupplier(o) 
;

//--

maxDeviationQuantityOrder 'Макс. к-во' (InvoiceDetail d) = maxDeviationQuantity(orderDetail(d));
minDeviationQuantityOrder 'Мин. к-во' (InvoiceDetail d) = minDeviationQuantity(orderDetail(d)); 

percDeviationUpPriceOrders (UserInvoice i) = GROUP SUM 1 IF include(Order o,i) AND showPercDeviationUpPrice(agreement(o));  
percDeviationDownPriceOrders (UserInvoice i) = GROUP SUM 1 IF include(Order o,i) AND showPercDeviationDownPrice(agreement(o));  

percDeviationUpQuantityOrders (UserInvoice i) = GROUP SUM 1 IF include(Order o,i) AND percDeviationUpQuantity(agreement(o));  
percDeviationDownQuantityOrders (UserInvoice i) = GROUP SUM 1 IF include(Order o,i) AND percDeviationDownQuantity(agreement(o)); 
  
    
backgroundMaxPrice (InvoiceDetail d) = IF price(d) > overMaxDeviationPrice(d) 
    THEN  RGB(0,255,119) 
    ELSE RGB(249,255,212);

backgroundMinPrice (InvoiceDetail d) = IF price(d) < overMinDeviationPrice(d) 
    THEN  RGB(0,255,119) 
    ELSE RGB(249,255,212);

//overShipmentQuantityInvoiceDetail (d) = OVERRIDE shipmentQuantityInvoiceDetail(d), shippedInvoiceDetail(d);    
    
backgroundMaxQuantity (InvoiceDetail d) = IF shipmentQuantity(d) > maxDeviationQuantityOrder(d) 
    THEN  RGB(0,255,119) 
    ELSE RGB(249,255,212);

backgroundMinQuantity (InvoiceDetail d) = IF shipmentQuantity(d) < minDeviationQuantityOrder(d) 
    THEN  RGB(0,255,119) 
    ELSE RGB(249,255,212);  
      
  
    
EXTEND FORM userInvoice
    PROPERTIES (d) READONLY BEFORE price(d) 
                   minDeviationPriceOrder SHOWIF percDeviationDownPriceOrders(i) BACKGROUND backgroundMinPrice(d), 
                   priceOrder SHOWIF countIncludeOrders(i), 
                   maxDeviationPriceOrder SHOWIF percDeviationUpPriceOrders(i) BACKGROUND backgroundMaxPrice(d)
     
    PROPERTIES (d) READONLY BEFORE quantity(d) 
                   minDeviationQuantityOrder SHOWIF percDeviationDownQuantityOrders(i) BACKGROUND backgroundMinQuantity(d), 
                   quantityOrder SHOWIF countIncludeOrders(i), 
                   maxDeviationQuantityOrder SHOWIF percDeviationUpQuantityOrders(i) BACKGROUND backgroundMaxQuantity(d) 

    FILTERGROUP    deviation
        FILTER  'Есть отклонения' (price[InvoiceDetail](d) > overMaxDeviationPrice(d)) OR 
                                       (price[InvoiceDetail](d) < overMinDeviationPrice(d)) OR 
                                       (shipmentQuantity[InvoiceDetail](d) > maxDeviationQuantityOrder(d)) OR 
                                       (shipmentQuantity[InvoiceDetail](d) < minDeviationQuantityOrder(d)) 'F6' 
        FILTER  'По цене' (price[InvoiceDetail](d) > overMaxDeviationPrice(d)) OR 
                                    (price[InvoiceDetail](d) < overMinDeviationPrice(d)) 'ctrl F6'        
        FILTER  'По количеству' (shipmentQuantity[InvoiceDetail](d) > maxDeviationQuantityOrder(d)) OR 
                                           (shipmentQuantity[InvoiceDetail](d) < minDeviationQuantityOrder(d)) 'shift F6'         
        

;

DESIGN userInvoice {
    PROPERTY(priceOrder(d)) { background = #F9FFD4; }
    PROPERTY(quantityOrder(d)) { background = #F9FFD4; }
}

overCopy(Agreement s, Agreement d) + { 
    banNotAgreementsPrice(d) <- banNotAgreementsPrice(s);
    deviationNotOrderInvoice(d) <- deviationNotOrderInvoice(s);
    minSupplierSumOrder(d) <- minSupplierSumOrder(s);
    
    percDeviationDownQuantity(d) <- percDeviationDownQuantity(s);
    percDeviationUpQuantity(d) <- percDeviationUpQuantity(s);
    
    percDeviationDownPrice(d) <- percDeviationDownPrice(s);
    percDeviationUpPrice(d) <- percDeviationUpPrice(s);
}

// Автоматическое проставление соглашения при вводе накладной на основе выбранных sku 
WHEN LOCAL FORMS userInvoice (CHANGED(dateTime(UserInvoice i)) OR CHANGED(supplier(i)) OR CHANGED(customer(i)) OR 
                                        [ GROUP SUM 1 IF CHANGED(sku(UserInvoiceDetail d)) BY userInvoice(d)](i)) NOINLINE DO {
    IF NOT skipSetAgreement(i) THEN {
        LOCAL matches = BOOLEAN (Agreement);
        matches(Agreement a) <- matches(i, a);
        IF GROUP SUM 1 IF matches(Agreement a) THEN {
            matches(Agreement a) <- NULL WHERE matches(a) AND NOT (GROUP SUM 1 IF in(a, sku(UserInvoiceDetail d)) AND userInvoice(d) = i);
            IF GROUP MAX Agreement a IF matches(a) THEN
                agreement(i) <- GROUP MAX Agreement a IF matches(a);  
        }
    }            
}