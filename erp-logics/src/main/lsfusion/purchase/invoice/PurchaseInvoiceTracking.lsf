MODULE PurchaseInvoiceTracking;

REQUIRE PurchaseInvoice, ItemTracking, PurchaseShipment;

NAMESPACE Purchase;

isTrackingData 'Подлежит прослеживанию' = DATA BOOLEAN (Purchase.InvoiceDetail);
dateStartSPT 'Дата начала прослеживания' (InvoiceDetail d)=dateStartSPT(sku(d));
isTracking (InvoiceDetail d) = (OVERRIDE isTrackingData(d), isTrackingOver(sku(d))) IF date(d) >= dateStartSPT(d);

isTracking(Invoice i) = GROUP SUM 1 IF isTracking(InvoiceDetail d) AND invoice(d)==i;

itemCustomCode'Код ТНВЭД' = ABSTRACT VALUE STRING[10] (InvoiceDetail);
itemCustomCodeOther 'Дополнительный таможенный код' = ABSTRACT VALUE STRING[4] (InvoiceDetail);
deliveryTypePrev 'Тип приходного документа' = ABSTRACT VALUE INTEGER (InvoiceDetail);
deliveryNotePrev 'Номер приходного документа' = ABSTRACT VALUE STRING[70] (InvoiceDetail);
deliveryNoteDate 'Дата создания приходного документа' = ABSTRACT VALUE DATE (InvoiceDetail);
deliveryNotePrevLineID 'Номер строки в приходном документе' = ABSTRACT VALUE INTEGER (InvoiceDetail);
lineItemQuantitySPT 'Единица измерения прослеживаемости' = ABSTRACT VALUE STRING[3](InvoiceDetail);
quantityDespatchedSPT 'Количество в единицах прослеживаемости' = ABSTRACT VALUE NUMERIC[12,5] (InvoiceDetail);
lineItemPriceSPT 'Цена за единицу товара для прослеживаемости' = ABSTRACT VALUE NUMERIC[12,2] (InvoiceDetail);
idShippingDocument 'Код сопроводительного документа' = DATA STRING[20](Invoice);
nameShippingDocument 'Наименование сопроводительного документа' = DATA STRING[40](Invoice);
dateShippingDocument 'Дата сопроводительного документа' = DATA DATE (Invoice);
numberShippingDocument 'Регистрационный номер сопроводительного документа' = DATA STRING[40](Invoice);

@defineOperationProperty(importEAEU, 'Импорт из ЕАЭС', showContainer);

showImportEAEU (Invoice i) = TRUE  IF importEAEU(operation(i));
countrySupplier 'Страна грузоотправителя' (Invoice i) = name(country(supplier(i)));
idCountrySupplier 'Код страны' (Invoice i) = sidOrigin2(country(supplier(i)));
isImportEAEU 'Импорт из ЕАЭС' (Invoice i) = TRUE IF (importEAEU(operation(i)) AND (idCountrySupplier(i) == 'RU' OR idCountrySupplier(i) == 'KG'
    OR idCountrySupplier(i) == 'AM' OR idCountrySupplier(i) == 'KZ') );
notImportEAEU (Invoice i) = TRUE IF i IS Invoice AND NOT isImportEAEU(i);

EXTEND FORM userInvoice
    OBJECTS d6 = UserInvoiceDetail GRID
    PROPERTIES (d6) SHOWIF isTracking(i) READONLY index, idBarcodeSku, nameSku, isTracking BACKGROUND backgroundEC(extraCode(sku(d6))), itemCustomCode, itemCustomCodeOther, dateStartSPT,
        deliveryTypePrev, deliveryNotePrev, deliveryNoteDate, deliveryNotePrevLineID, lineItemQuantitySPT, quantityDespatchedSPT, lineItemPriceSPT
    PROPERTIES (i) SHOWIF (isTracking(i) AND showImportEAEU(i)) idShippingDocument, nameShippingDocument, numberShippingDocument, dateShippingDocument, isImportEAEU
    PROPERTIES (i) SHOWIF isTracking(i) READONLY countrySupplier, idCountrySupplier 
    FILTERS userInvoice(d6) == i, isTracking(d6)

;

DESIGN userInvoice{
    specificationBox {
        NEW sptContainer {
            caption = 'Прослеживание';
            NEW trackingParam {
                horizontal = TRUE;
                NEW supplierParam {
                    horizontal = TRUE;
                    caption = 'Страна поставщика';
                    MOVE PROPERTY(countrySupplier(i)) ;
                    MOVE PROPERTY(idCountrySupplier(i)) ;
                }
                NEW importEAEU {
                    caption = 'Импорт из ЕАЭС';
                    // showIf = isImportEAEU(i);
                    NEW headerAccompanyingContainer {
                        horizontal = TRUE;
                        MOVE PROPERTY(idShippingDocument(i)) { caption = 'Код';}
                        MOVE PROPERTY(nameShippingDocument(i)) { caption = 'Наименование';}
                        MOVE PROPERTY(numberShippingDocument(i)) { caption = 'Рег.№';}
                        MOVE PROPERTY(dateShippingDocument(i)) { caption = 'Дата';}
                        MOVE PROPERTY(isImportEAEU(i)) ;
                    }
                }
            }
            MOVE BOX(d6);
        }
    }
}

deliveryTypePrev(ShipmentBatch batch) += deliveryTypePrev(prevInvoiceDetail(batch));
deliveryNotePrev(ShipmentBatch batch) += deliveryNotePrev(prevInvoiceDetail(batch));
deliveryNoteDate(ShipmentBatch batch) += deliveryNoteDate(prevInvoiceDetail(batch));
deliveryNotePrevLineID(ShipmentBatch batch) += deliveryNotePrevLineID(prevInvoiceDetail(batch));

EXTEND FORM userInvoice
    PROPERTIES (d) isTracking
;
EXTEND FORM invoices
    PROPERTIES (d) READONLYIF  isReadonly() isTracking
;