MODULE PurchaseShipmentOrderLedger;

REQUIRE OrderLedger, PurchaseShipment;

NAMESPACE Purchase;


@defineDocumentInterfaceProperty (invoice, createOrderLedger, 'Создать резерв');

EXTEND FORM userInvoice 
    PROPERTIES(i) BACKGROUND backgroundShipped(i) SHOWIF createShipment(i) createOrderLedger
;

DESIGN userInvoice {
    headerCreateShipment {
        MOVE PROPERTY(createOrderLedger(i));
    }
}

// -- Операция
@defineOperationProperty(createOrderLedger, 'Создать резерв', showContainer);
@deriveDocumentOperationProperty(UserInvoice, createOrderLedger);

@defineDocumentInterfaceProperty (shipment, createOrderLedger, 'Создать резерв');

EXTEND FORM userShipment 
    PROPERTIES(s)  createOrderLedger
;

DESIGN userShipment {
    headerCreateDocuments {
        NEW headerCreateOrderLedger {
            caption = 'Резерв';
            MOVE PROPERTY(createOrderLedger(s));
        }            
    }          
}
@deriveDocumentOperationProperty(UserShipment, createOrderLedger);

createOrderLedger(InvoiceShipment s) += createOrderLedger(invoice(s));

excludeOrderLedger 'Исключить' (d) = ABSTRACT CASE BOOLEAN (ShipmentDetail) MATERIALIZED; 

dataCreateOrderLedger 'Создать резерв' = DATA BOOLEAN (ShipmentDetail);
toCreateOrderLedger(ShipmentDetail d) = (OVERRIDE dataCreateOrderLedger(d), createOrderLedger(d)) AND NOT excludeOrderLedger(d);

//--Резерв

CLASS ShipmentOrderLedger 'Резерв на основе поставки (закупка)' : OrderLedger;
TABLE shipmentOrderLedger (ShipmentOrderLedger);

shipmentOrderLedger = AGGR ShipmentOrderLedger WHERE toCreateOrderLedger(ShipmentDetail shipmentDetail) MATERIALIZED INDEXED;

quantityOrderLedger = ABSTRACT NUMERIC[16,5] (ShipmentDetail);

dataQuantityOrderLedger = DATA NUMERIC[16,5] (ShipmentDetail);

quantity (ShipmentOrderLedger l) = OVERRIDE dataQuantityOrderLedger(shipmentDetail(l)), quantityOrderLedger(shipmentDetail(l)), quantity(shipmentDetail(l)) MATERIALIZED;

managementReserve (ShipmentOrderLedger l) = quantity(invoiceDetail(shipmentDetail(l))) (-) quantity(shipmentDetail(l)) (+) quantity(l);

//--------------------- Проводим по регистру резерва ------------------//

dateTime (ShipmentOrderLedger ledger) += dateTime(shipmentDetail(ledger));
isPosted (ShipmentOrderLedger ledger) += isPosted(shipmentDetail(ledger));
isClosed (ShipmentOrderLedger ledger) += isClosed(shipmentDetail(ledger));
sku (ShipmentOrderLedger ledger) += sku(shipmentDetail(ledger));
batch (ShipmentOrderLedger ledger) += ledgerBatch(shipmentDetail(ledger));
stock (ShipmentOrderLedger ledger) += customerStock(shipmentDetail(ledger));
description (ShipmentOrderLedger ledger) += description(shipmentDetail(ledger));
note (ShipmentOrderLedger ledger) += note(shipment(shipmentDetail(ledger)));
quantity (ShipmentOrderLedger ledger) += quantity(ledger);
contact (ShipmentOrderLedger ledger) += customer(shipmentDetail(ledger));
contactStock (ShipmentOrderLedger ledger) += customerStock(shipmentDetail(ledger));
toShipQuantity (ShipmentOrderLedger ledger) += quantity(ledger);
edit (ShipmentOrderLedger ledger) + {  edit(shipmentDetail(ledger)); }    
operation[OrderLedger](ShipmentOrderLedger ledger) += operation(shipmentDetail(ledger));
show[OrderLedger](ShipmentOrderLedger ledger) + { show(shipmentDetail(ledger));};
//WHEN SET(isClosed(UserInvoice i)) AND createOrderLedger(i) DO createOrderLedger( i) <- NULL ;
//WHEN SET(isClosed(UserShipment s)) AND createOrderLedger(s) DO createOrderLedger( s) <- NULL ;
