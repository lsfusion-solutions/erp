MODULE PurchaseShipmentBatch;

REQUIRE PurchaseShipment;

NAMESPACE Purchase;

@defineOperationProperty(showOriginalSupplier, 'Показывать внешнего поставщика', showContainer);

@defineOperationProperty(skipOriginalSupplier, 'Не проставлять внешнего поставщика', showContainer);

originalSupplier = ABSTRACT LegalEntity (InvoiceDetail);
nameOriginalSupplier 'Поставщик (внешний)' = name(originalSupplier(InvoiceDetail d));
originalSupplier = DATA LegalEntity (UserInvoiceDetail);
nameOriginalSupplier 'Поставщик (внешний)' = name(originalSupplier(UserInvoiceDetail d));
originalSupplier(UserInvoiceDetail d) += originalSupplier(d);


showOriginalSupplier (Invoice i) = showOriginalSupplier(operation(i));

EXTEND FORM userInvoice
   PROPERTIES (d) nameOriginalSupplier SHOWIF showOriginalSupplier(i)
;
EXTEND FORM invoices
    PROPERTIES (d) READONLY nameOriginalSupplier SHOWIF showOriginalSupplier(i)
;

overSupplier(ShipmentBatch ledger) += originalSupplier(invoiceDetail(shipmentDetail(ledger)));// IF showOriginalSupplier(invoice(invoiceDetail(shipmentDetail(ledger))));

WHEN LOCAL (SETCHANGED(sku(UserInvoiceDetail d)) OR SETCHANGED(supplierStock(d))) AND NOT CHANGED(originalSupplier(d)) AND NOT skipUpdatePriceAccount() AND NOT skipOriginalSupplier(operation(d)) DO {
    originalSupplier(d) <- prevSupplierLastOrderBatch(sku(d),supplierStock(d));
}