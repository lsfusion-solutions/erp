MODULE PurchaseLedgerWeek;

REQUIRE PurchaseLedger;

NAMESPACE PurchaseLedger;

quantityPurchase 'Закуплено за неделю (кол-во)' (Sku sku, Stock stock, week, DATE dateFrom, DATE dateTo) = GROUP SUM
        quantityPurchase(sku, stock, DATE date) IF date >= dateFrom AND date <= dateTo
        BY extractWeek(date);

sumPurchase 'Закуплено за неделю (сумма)' (Sku sku, Stock stock, week, DATE dateFrom, DATE dateTo) = GROUP SUM
        sumPurchase(sku, stock, DATE date) IF date >= dateFrom AND date <= dateTo
        BY extractWeek(date);

averagePricePurchase 'Средняя цена за неделю' (Sku sku, Stock stock, INTEGER week, DATE dateFrom, DATE dateTo)=  round2(sumPurchase(sku, stock, week, dateFrom, dateTo) /
        quantityPurchase(sku, stock, week, dateFrom, dateTo));

averagePurchase 'Закуплено за неделю кол-во/цена' (Sku sku, Stock stock, INTEGER week, DATE dateFrom, DATE dateTo)= 
        quantityPurchase(sku, stock, week, dateFrom, dateTo) + '(' + averagePricePurchase(sku, stock, week, dateFrom, dateTo) + ')' CHARWIDTH 10;

quantitySkuPurchase 'Закуплено за неделю (кол-во)' (INTEGER week, DATE dateFrom, DATE dateTo) = GROUP SUM
        quantityPurchase(Sku sku, Stock stock, week, dateFrom, dateTo);

sumPurchase 'Закуплено за неделю (сумма)' (INTEGER week, DATE dateFrom, DATE dateTo) = GROUP SUM
        sumPurchase(Sku sku, Stock stock, week, dateFrom, dateTo);

toString4 = FORMULA BPSTRING[4] 'CAST($1 AS character(4))' CHARWIDTH 4 NOFLEX;

dataQuantityPurchaseName = ABSTRACT STRING (INTEGER);
overQuantityPurchaseName (INTEGER w) = OVERRIDE dataQuantityPurchaseName(w), toString4(w);

FORM purchaseSkuStock 'Поступления по неделям'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)

    OBJECTS te = TypeExchange PANEL
    PROPERTIES nameType = name(te) SELECTOR, nameCurrency(te) READONLY

    OBJECTS w = INTEGER
    FILTERS quantitySkuPurchase(w, dFrom, dTo)

    TREE stockTree sg = StockGroup PARENT parent(sg), ts = Stock
    PROPERTIES READONLY sgTreeName = name(sg), tsTreeName = name(ts)
    FILTERS stockGroup(ts) == sg
    FILTERGROUP inactiveStock FILTER 'Активный' active(ts) 'ctrl F10' DEFAULT
    TREE skuTree sk = SkuGroup PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDERS order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F6' DEFAULT

    OBJECTS           sts=(st=Stock, s=Sku)
    PROPERTIES        READONLY name(s), stockName = name(st)

    FILTERS           isParent(sk, s),
                      (st == ts AND sg IS StockGroup) OR (isParent(sg, st) AND NOT ts)
    FILTERGROUP inactiveStock2 FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    ORDERS          name(s)

    PROPERTIES        balanceB(s, st, dFrom), quantityPurchase(s, st, w, dFrom, dTo)  COLUMNS (w) HEADER overQuantityPurchaseName(w),
                      quantityPurchase(s, st, dFrom, dTo),
                      balanceA(s, st, dTo), sumPurchase (s, st, dFrom, dTo),  sumPurchase(te,s, st, dFrom, dTo)

    FILTERGROUP filtersPurchase
        FILTER 'Показывать поступившие за интервал' quantityPurchase(s, st, dFrom, dTo) 'F11'

    FILTERGROUP filtersPurchase2
        FILTER 'Показывать с остатками' balanceA(s, st, dTo) 'F10'

;
@extendFormFilterStockAccess(st, purchaseSkuStock);
@extendFormFilterStockAccess(ts, purchaseSkuStock);
@extendFormFilterStockGroupAccess(sg, purchaseSkuStock);

DESIGN purchaseSkuStock {

    BOX {
        NEW topContainer {
            horizontal = TRUE;
            fill = 1;

            NEW firstCase {
                fill = 1;

                MOVE BOX(TREE stockTree) {caption = 'Магазины'; }
                MOVE BOX(TREE skuTree) { caption = 'Товарные группы'; }
            }

            NEW secondCase {
                fill = 2;
                horizontal = FALSE;

                MOVE BOX(dates) { horizontal = TRUE; }
                MOVE BOX(te) {
                    horizontal = TRUE;
                    PROPERTY(nameCurrency(te)) { caption = 'Валюта'; charWidth = 20;}
                    PROPERTY(nameType) { caption = 'Тип обмена'; charWidth = 20;}
                }
                MOVE BOX(sts) { fill = 2; }
                REMOVE BOX(w);
            }
        }
        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    purchasesReports {
       NEW purchaseSkuStock;
    }
}