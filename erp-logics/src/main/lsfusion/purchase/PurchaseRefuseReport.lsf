MODULE PurchaseRefuseReport;

REQUIRE PurchaseReports, PurchaseDeclarationDetail, LegalEntityBy;

NAMESPACE Purchase;


@defineCustomsRate(RefuseCustomsRate, refuseCustomsRate, 'Ставка тарифа для экологического налога (отчёта по ввозу упаковки)');

percentRefuseRate 'Тариф, %' = DATA NUMERIC[14,3](RefuseCustomsRate) IN base;
weightRefuseRate 'Тариф, руб./тонна' = DATA NUMERIC[14,3](RefuseCustomsRate) IN base;

percentRefuseRate 'Тариф, %' (CustomsGroup customsGroup, DATE date) = percentRefuseRate(refuseCustomsRate(customsGroup, date));
weightRefuseRate 'Тариф, руб./тонна' (CustomsGroup customsGroup, DATE date) = weightRefuseRate(refuseCustomsRate(customsGroup, date));

percentRefuseRate 'Тариф, %' (CustomsGroup customsGroup) = percentRefuseRate(customsGroup, currentDate());
weightRefuseRate 'Тариф, руб./тонна' (CustomsGroup customsGroup) = weightRefuseRate(customsGroup, currentDate());

CONSTRAINT percentRefuseRate(RefuseCustomsRate r) AND weightRefuseRate(r) 
    MESSAGE 'У строки ставки тарифа для экологического налога не может быть 2 параметра одновременно';
    
EXTEND FORM customsGroup
    OBJECTS rfcr = RefuseCustomsRate
    PROPERTIES(rfcr) dateFrom, dateTo, percentRefuseRate, weightRefuseRate
    PROPERTIES(rfcr) NEW, DELETE 
    FILTERS customsGroup(rfcr) == cg
;    

DESIGN customsGroup {
    BOX {
        NEW lastContainer BEFORE TOOLBARBOX {
            fill = 1;
            horizontal = TRUE;
            MOVE BOX(rcr);
            MOVE BOX(rfcr);
        }
    }
}

EXTEND FORM customsGroups
    PROPERTIES(cg, dt) READONLY percentRefuseRate, weightRefuseRate
;


CLASS RefusePackageType 'Вид упаковки для отчёта по ввозу упаковки';
TABLE refusePackageType (RefusePackageType);

name '{master.data.name}' = DATA STRING[500] (RefusePackageType) CHARWIDTH 30 IN id;
refusePackageTypeName = GROUP AGGR RefusePackageType refusePackageType BY name(refusePackageType);
rate 'Тариф, руб./тонна' = DATA NUMERIC[14,3](RefusePackageType) IN base;

FORM refusePackageType 'Вид упаковки для отчёта по ввозу упаковки'
    OBJECTS g = RefusePackageType PANEL
    PROPERTIES(g) name, rate
    
    EDIT RefusePackageType OBJECT g
;

FORM refusePackageTypes 'Виды упаковки для отчёта по ввозу упаковки'
    OBJECTS g = RefusePackageType
    PROPERTIES(g) READONLY name, rate
    PROPERTIES(g) NEWSESSION NEW, EDIT, DELETE
    
    LIST RefusePackageType OBJECT g
;

NAVIGATOR {
    skuNavigator {
        NEW refusePackageTypes;
    }
}

TABLE userInvoiceRefusePackageType(UserInvoice, RefusePackageType);
weight 'Масса, кг' = DATA NUMERIC[14,3](UserInvoice, RefusePackageType);
sum 'Сумма оплаты, руб.' = DATA NUMERIC[18,4](UserInvoice, RefusePackageType);

WHEN LOCAL FORMS userInvoice SETCHANGED (weight(UserInvoice i, RefusePackageType r)) DO {   
    sum(i, r) <- round2(NUMERIC[18,4](weight(i, r) / 1000 * rate(r)));    
}

TABLE refuseUserInvoiceDetail(UserInvoiceDetail);
refuseWeight 'Масса (отчёт по ввозу упаковки), кг' = DATA NUMERIC[14,3](UserInvoiceDetail) TABLE refuseUserInvoiceDetail;
refuseSum 'Сумма оплаты (отчёт по ввозу упаковки), руб.' = DATA NUMERIC[18,4](UserInvoiceDetail) TABLE refuseUserInvoiceDetail;

WHEN LOCAL FORMS userInvoice CHANGED(sum(UserInvoiceDetail d)) OR CHANGED(customsGroup(d)) DO
    refuseSum(d) <- round2(NUMERIC[18,4](homeSum(d) * percentRefuseRate(customsGroup(d)) / 100));
    
WHEN LOCAL FORMS userInvoice SETCHANGED (refuseWeight(UserInvoiceDetail d)) DO {   
    refuseSum(d) <- round2(NUMERIC[18,4](refuseWeight(d) / 1000 * weightRefuseRate(customsGroup(d))));    
}

EXTEND FORM userInvoice 
    OBJECTS rp = RefusePackageType
    PROPERTIES(rp) READONLY name, rate
    PROPERTIES(i, rp) weight, sum
    
    PROPERTIES (d) SHOWIF showDeclaration(i) refuseWeight READONLYIF percentRefuseRate(customsGroup(d)), refuseSum  
;

DESIGN userInvoice {
    headerTabbedPane {
        NEW refuse {
            caption = 'Упаковка для отчёта';
            showIf = showDeclaration(i);
            flex = 1;
            MOVE BOX(rp);
        }
    }
}

//////////////////////////////////////////// Отчет по ввозу тары ///////////////////////////////////////////////////////
refuseQuantityForeign = DATA LOCAL NUMERIC[16,5] (CustomsGroup);
refuseSum = DATA LOCAL NUMERIC[18,4] (CustomsGroup);
refuseSumForeign = DATA LOCAL NUMERIC[18,4] (CustomsGroup);
refuseSumYearForeign = DATA LOCAL NUMERIC[18,4] (CustomsGroup);

refuseQuantityForeign = DATA LOCAL NUMERIC[16,5] (RefusePackageType);
refuseSumForeign = DATA LOCAL NUMERIC[18,4] (RefusePackageType);
refuseSumYearForeign = DATA LOCAL NUMERIC[18,4] (RefusePackageType);

companyRefuse = DATA LOCAL LegalEntity ();

fillRefuseReport (DATE df, DATE dt) {
    refuseQuantityForeign (CustomsGroup c) <- NULL;
    refuseSum (CustomsGroup c)  <- NULL;
    refuseSumForeign (CustomsGroup c)  <- NULL;
    refuseSumYearForeign (CustomsGroup c) <- NULL; 
    
    companyRefuse() <- GROUP MAX legalEntity(Stock st) IF inPurchaseReport(st) AND isCompany(legalEntity(st));
    
    refuseQuantityForeign (CustomsGroup c) <- round3((GROUP SUM refuseWeight(UserInvoiceDetail d) IF date(d) >= df AND 
        date(d) <= dt AND isPosted(d) AND c == customsGroup(defaultCountry(), sku(d)) AND showDeclaration(userInvoice(d)) AND weightRefuseRate(c)
        AND inPurchaseReport(customerStock(d))) / 1000);
    refuseSum (CustomsGroup c) <- GROUP SUM homeSum(UserInvoiceDetail d) IF date(d) >= df AND 
        date(d) <= dt AND isPosted(d) AND c == customsGroup(defaultCountry(), sku(d)) AND showDeclaration(userInvoice(d)) AND percentRefuseRate(c)
        AND inPurchaseReport(customerStock(d));

    refuseSumForeign (CustomsGroup c) <- GROUP SUM refuseSum(UserInvoiceDetail d) IF date(d) >= df AND 
        date(d) <= dt AND isPosted(d) AND c == customsGroup(defaultCountry(), sku(d)) AND showDeclaration(userInvoice(d))
        AND inPurchaseReport(customerStock(d));
    refuseSumYearForeign (CustomsGroup c) <- GROUP SUM refuseSum(UserInvoiceDetail d) IF date(d) >= firstDayOfMonth(sumMonth(currentDate(), -1 * extractMonthNumber(currentDate()))) AND 
        date(d) <= dt AND isPosted(d) AND c == customsGroup(defaultCountry(), sku(d)) AND showDeclaration(userInvoice(d))
        AND inPurchaseReport(customerStock(d));
    
    refuseQuantityForeign (RefusePackageType c) <- NULL;
    refuseSumForeign (RefusePackageType c)  <- NULL;
    refuseSumYearForeign (RefusePackageType c) <- NULL; 
    
    refuseQuantityForeign (RefusePackageType c) <- round3((GROUP SUM weight(UserInvoice d, c) IF date(d) >= df AND 
        date(d) <= dt AND isPosted(d) AND showDeclaration(d) AND inPurchaseReport(customerStock(d))) / 1000);
    refuseSumForeign (RefusePackageType c) <- GROUP SUM sum(UserInvoice d, c) IF date(d) >= df AND 
        date(d) <= dt AND isPosted(d) AND showDeclaration(d) AND inPurchaseReport(customerStock(d));
    refuseSumYearForeign (RefusePackageType c) <- GROUP SUM sum(UserInvoice d, c) IF date(d) >= firstDayOfMonth(sumMonth(currentDate(), -1 * extractMonthNumber(currentDate()))) AND 
        date(d) <= dt AND isPosted(d) AND showDeclaration(d) AND inPurchaseReport(customerStock(d));
}

totalRefuseSumSku () = GROUP SUM refuseSumForeign (CustomsGroup c);
totalRefuseSumYearSku () = GROUP SUM refuseSumYearForeign (CustomsGroup c);

totalRefuseSumPackage () = GROUP SUM refuseSumForeign (RefusePackageType c);
totalRefuseSumYearPackage () = GROUP SUM refuseSumYearForeign (RefusePackageType c);

totalRefuseSum() = totalRefuseSumSku() (+) totalRefuseSumPackage();
totalRefuseSumYear() = totalRefuseSumYearSku() (+) totalRefuseSumYearPackage();

FORM refuseReport 'Отчет по ввозу упаковки' 
    OBJECTS c = CustomsGroup
    PROPERTIES(c) code, refuseQuantityForeign, refuseSum, percentRefuseRate, weightRefuseRate, refuseSumForeign, refuseSumYearForeign
    PROPERTIES() totalRefuseSumSku, totalRefuseSumYearSku
    FILTERS refuseSumForeign(c)
    
    OBJECTS r = RefusePackageType
    PROPERTIES(r) name, refuseQuantityForeign, rate, refuseSumForeign, refuseSumYearForeign
    PROPERTIES() totalRefuseSumPackage, totalRefuseSumYearPackage
    FILTERS refuseSumForeign(r)
    
    PROPERTIES() totalRefuseSum, totalRefuseSumYear
    PROPERTIES nameCompany = fullName(companyRefuse()), addressCompany = address(companyRefuse()), unp = UNP(companyRefuse())
;

printRefuseReport 'Отчет по ввозу упаковки' (DATE df, DATE dt) {
    fillRefuseReport(df, dt);
    PRINT refuseReport;
}

EXTEND FORM purchasesReport
    PROPERTIES printRefuseReport(df, dt)
;

DESIGN purchasesReport {
    printPurchasesContainer{
        NEW refuseReport {
            caption = 'Обязанности по обеспечению сбора, обезвреживания и (или) использования отходов товаров и отходов упаковки (экологический налог)';
            MOVE PROPERTY(printRefuseReport(df, dt));
        }
    }
}