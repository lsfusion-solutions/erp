MODULE LegalEntityRu;

REQUIRE LegalEntity;

NAMESPACE LegalEntity;

META uniqueProp(name, capt, type)
    name capt = DATA type (LegalEntity) IN doc;
    legalEntity###name (type name) = GROUP LAST LegalEntity legalEntity ORDER legalEntity BY name(legalEntity);
    
    skipUnique###name = ABSTRACT BOOLEAN (LegalEntity);
    changeUnique###name = ABSTRACT BOOLEAN (LegalEntity);
    
    unique###name##Supplier 'Запретить повтор '##capt##' для поставщиков' = DATA BOOLEAN ();
    CONSTRAINT unique###name##Supplier() AND (CHANGED (name(LegalEntity l)) OR changeUnique###name(l)) AND [ GROUP SUM 1 IF isSupplier(LegalEntity ll) AND NOT skipUnique###name(ll) BY name(ll)](name(l)) > 1 MESSAGE 'Запрещен повтор ' + capt + ' для поставщиков';
    
    unique###name##Customer 'Запретить повтор '##capt##' для покупателей' = DATA BOOLEAN ();
    CONSTRAINT unique###name##Customer() AND (CHANGED (name(LegalEntity l)) OR changeUnique###name(l)) AND [ GROUP SUM 1 IF isCustomer(LegalEntity ll) AND NOT skipUnique###name(ll) BY name(ll)](name(l)) > 1 MESSAGE 'Запрещен повтор ' + capt + ' для покупателей';
    
    unique###name 'Запретить повтор '##capt##'' = DATA BOOLEAN ();
    CONSTRAINT unique###name() AND (CHANGED (name(LegalEntity l)) OR changeUnique###name(l)) AND [ GROUP SUM 1 IF LegalEntity ll IS LegalEntity AND NOT skipUnique###name(ll) BY name(ll)](name(l)) > 1 MESSAGE 'Запрещен повтор ' + capt;
    
    EXTEND FORM options
        PROPERTIES() unique###name##Supplier, unique###name##Customer, unique###name
    ;
    DESIGN options {
        legalEntity {
            NEW name##Box {
                caption = 'Код '##capt##'';
                MOVE PROPERTY(unique###name##Supplier());
                MOVE PROPERTY(unique###name##Customer());
                MOVE PROPERTY(unique###name());
            }
        }
    }
    EXTEND FORM legalEntity PROPERTIES (l) name;
    EXTEND FORM legalEntities PROPERTIES (l) name READONLYIF isReadonly();
END

@uniqueProp(inn, 'ИНН', STRING[12]);
@uniqueProp(okpo, 'ОКПО', STRING[10]);
@uniqueProp(ogrn, 'ОГРН', STRING[13]);

@uniqueProp(okulp, 'ОКЮЛП', STRING[13]);

//kpp 'КПП' = DATA STRING[9] (LegalEntity) IN doc;

@defineHistorizable(kpp, , 'КПП', STRING[9], legalEntity, nameLegalEntity, doc);

legalEntity = GROUP LAST LegalEntity l ORDER l BY inn(l), kpp(l, DATE dt), dt;

okdp 'ОКДП' = DATA STRING[7] (LegalEntity) IN doc;

corrAccount 'Корр. счет' = DATA STRING[20](LegalEntity) IN law;

isNotVATPayer 'Неплательщик НДС' = DATA BOOLEAN (LegalEntity);
isVATPayer (LegalEntity l) = l IS LegalEntity AND NOT isNotVATPayer(l) MATERIALIZED;

EXTEND FORM legalEntity PROPERTIES (l) kpp, okdp, corrAccount, isNotVATPayer;
EXTEND FORM legalEntities PROPERTIES (l) READONLYIF isReadonly() kpp, okdp, corrAccount, isNotVATPayer;

DESIGN legalEntity {
    column2 {
        MOVE GROUP(doc,l) {
            lines = 3;
        }
        row11 {
            MOVE PROPERTY (isNotVATPayer(l));
        }    
    }
}

//for migration kpp
kppOld 'КПП (старый)' = DATA STRING[9] (LegalEntity);

onStarted() + {
    dataKpp(LegalEntity le, DATE dt) <- kppOld(le) WHERE le IS LegalEntity AND dt = DATE('2021_01_01');
}

isIE 'ИП' = DATA BOOLEAN (Ownership);

EXTEND FORM ownership
    PROPERTIES (o) isIE
;

EXTEND FORM ownerships
    PROPERTIES (o) READONLY isIE
;

isIE 'ИП' (LegalEntity l) = isIE(ownership(l)) MATERIALIZED;

GROUP independentDepartment 'Обособленное подразделение' : public;
isIndependenDepartment 'Явл. обособленным подразделением' = DATA BOOLEAN (LegalEntity) IN independentDepartment;
mainLegalEntity 'Головная организация' = DATA LegalEntity(LegalEntity) IN independentDepartment;

EXTEND FORM legalEntity
    PROPERTIES isIndependenDepartment(l), nameMainLegalEntity 'Головная организация' = name(mainLegalEntity(l)) SHOWIF isIndependenDepartment(l)
;

DESIGN legalEntity{
    column2 {
        NEW independentDepartment {
            caption = 'Обособленное подразделение';
            MOVE PROPERTY (isIndependenDepartment(l));
            MOVE PROPERTY (nameMainLegalEntity);
        }
    }
}

skipKpp = DATA BOOLEAN (LegalEntity);

isFillKpp 'Должен быть заполнен КПП у организации' = DATA BOOLEAN (Country) PREREAD;
withoutFillKpp 'Не проверять КПП' = DATA BOOLEAN (Ownership) PREREAD;

EXTEND FORM country
    PROPERTIES (c) isFillKpp
;
EXTEND FORM countries
    PROPERTIES (c) READONLY isFillKpp
;

EXTEND FORM ownership
    PROPERTIES (o) withoutFillKpp
;
EXTEND FORM ownerships
    PROPERTIES (o) READONLY withoutFillKpp
;

CONSTRAINT (SETCHANGED (country(LegalEntity l)) OR SETCHANGED (ownership(l)) OR CHANGED (kpp(l))) AND isFillKpp(country(l)) AND NOT withoutFillKpp(ownership(l)) AND NOT kpp(l) AND NOT skipKpp(l)
    MESSAGE 'Должен быть заполнен КПП у организации';