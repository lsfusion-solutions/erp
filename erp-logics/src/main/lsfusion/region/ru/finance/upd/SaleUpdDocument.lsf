MODULE SaleUpdDocument;

REQUIRE SaleInvoiceConsignmentRu, ConsignmentUpdDocument;

NAMESPACE Sale;

//задание статуса УПД
updDocumentStatus 'Статус УПД (электронный)' = DATA UpdDocumentStatus (Operation);
nameUpdDocumentStatus 'Статус УПД (электронный)' (Operation operation) = name(updDocumentStatus(operation)) CHARWIDTH 10;

EXTEND FORM operation
    PROPERTIES (o) nameUpdDocumentStatus
;

DESIGN operation {
    tabContainer {
        NEW updDocument {
            caption = 'УПД';
            MOVE PROPERTY(nameUpdDocumentStatus(o));
        }
    }
}

updStatus (Operation operation) += updDocumentStatus(operation);

updInvoiceNumber 'Номер СЧФ' (Invoice i) = numberInvoice(updDocument(i));

showUpd 'Просмотреть УПД' (Invoice i) {
    show(updDocument(i));
}

createUpdDocuments 'Создать УПД (отм.)' () {
    NEWSESSION NESTED(incl[Invoice]) {
        FOR incl(Invoice i) DO {
            IF updDocument(i) THEN {
                recreateUpdDocument(i);
            } ELSE {
                NEW ei = UpdDocument {
                    fill(i, ei);
                }
            }
        }
        APPLY;
    }
}

createUpdDocuments (Consignment invoice) {
     IF countIncl() THEN {
        createUpdDocuments();   
     } ELSE {
        recreateUpd(invoice);
     }
}

EXTEND FORM invoices
    PROPERTIES (i) READONLY updInvoiceNumber AFTER series(i)
    PROPERTIES //createUpd(i) SHOWIF NOT updDocument(i),
               createUpdDocuments(i) HEADER captionCreateUpd(i),
               updNumber = updInvoiceNumber(i) SHOWIF updDocument(i) PANEL READONLY,
               showUpd(i) SHOWIF updDocument(i)
;

DESIGN invoices {
    documentDetail {
        NEW updDocument {
            type = CONTAINERV;
            caption = 'УПД';
            //MOVE PROPERTY(createUpd(i));
            MOVE PROPERTY(createUpdDocuments(i));
            MOVE PROPERTY(updNumber);
            MOVE PROPERTY(showUpd(i));            
        }
    }
}