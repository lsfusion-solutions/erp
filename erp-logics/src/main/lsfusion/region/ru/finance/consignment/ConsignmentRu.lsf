MODULE ConsignmentRu;

REQUIRE System,
        Consignment,
        LegalEntityRu,
        Stock,
        Store,
        SkuRu,
        Barcode,
        Employee,
        Utils,
        Numerator,
        StockContract,
        SkuLedger,
        ItemPack,
        Barcode,
        StatusUpd,
        BankRu,
        UpdPrintParams;

NAMESPACE Consignment;


overINNSupplier 'ИНН отправителя' = ABSTRACT STRING[50] (Consignment);
extraINNSupplier 'ИНН отправителя' = ABSTRACT STRING[50] (Consignment);
INNSupplier 'ИНН отправителя' (Consignment consignment) = OVERRIDE overINNSupplier(consignment), extraINNSupplier(consignment), inn(supplier(consignment));

overKPPSupplier 'КПП отправителя' = ABSTRACT STRING[50] (Consignment);
extraKPPSupplier 'КПП отправителя' = ABSTRACT STRING[50] (Consignment);
KPPSupplier 'КПП отправителя' (Consignment consignment) = OVERRIDE overKPPSupplier(consignment), extraKPPSupplier(consignment), kpp(supplier(consignment), date(consignment));

overOKPOSupplier 'ОКПО отправителя' = ABSTRACT STRING[50] (Consignment);
extraOKPOSupplier 'ОКПО отправителя' = ABSTRACT STRING[50] (Consignment);
OKPOSupplier 'ОКПО отправителя' (Consignment consignment) = OVERRIDE overOKPOSupplier(consignment), extraOKPOSupplier(consignment), okpo(supplier(consignment));

overOKDPSupplier 'ОКДП отправителя' = ABSTRACT STRING[50] (Consignment);
extraOKDPSupplier 'ОКДП отправителя' = ABSTRACT STRING[50] (Consignment);
OKDPSupplier 'ОКДП отправителя' (Consignment consignment) = OVERRIDE overOKDPSupplier(consignment), extraOKDPSupplier(consignment), okdp(supplier(consignment));

overEmailSupplier = ABSTRACT STRING[400] (Consignment);    
emailSupplier 'E-mail' (Consignment consignment) = 
    OVERRIDE overEmailSupplier(consignment), email(supplier(consignment)) CHARWIDTH 30;
    
overSiteSupplier = ABSTRACT STRING[100] (Consignment);    
siteSupplier 'Сайт'  (Consignment consignment) = 
    OVERRIDE overSiteSupplier(consignment), site(supplier(consignment)) CHARWIDTH 30;    

overPhoneSupplier = ABSTRACT STRING[100] (Consignment);    
phoneSupplier 'Телефон/факс'  (Consignment consignment) = 
    OVERRIDE overPhoneSupplier(consignment), phone(supplier(consignment)) CHARWIDTH 30;    

currency = ABSTRACT Currency (Consignment);
nameCurrency 'Валюта' (Consignment consignment)= name(currency(consignment)) CHARWIDTH 10;
documentNameCurrency 'Валюта' (Consignment consignment)= documentName(currency(consignment)) CHARWIDTH 10;
sidCurrency 'Код валюты' (Consignment consignment) = sid(currency(consignment)) CHARWIDTH 10;

managerSupplier 'Руководитель, ФИО' = ABSTRACT Employee (Consignment);
accountantSupplier 'Главный бухгалтер, ФИО' = ABSTRACT Employee (Consignment);

// ------------------------------------- Отпуск товара --------------------------------- //
    
overINNCustomer 'ИНН получателя' = ABSTRACT STRING[50] (Consignment);
extraINNCustomer 'ИНН получателя' = ABSTRACT STRING[50] (Consignment);
INNCustomer 'ИНН получателя' (Consignment consignment) = OVERRIDE overINNCustomer(consignment), extraINNCustomer(consignment), inn(customer(consignment));

overKPPCustomer 'КПП получателя' = ABSTRACT STRING[50] (Consignment);
extraKPPCustomer 'КПП получателя' = ABSTRACT STRING[50] (Consignment);
KPPCustomer 'КПП получателя' (Consignment consignment) = OVERRIDE overKPPCustomer(consignment), extraKPPCustomer(consignment), kpp(customer(consignment), date(consignment));

overOKPOCustomer 'ОКПО получателя' = ABSTRACT STRING[50] (Consignment);
extraOKPOCustomer 'ОКПО получателя' = ABSTRACT STRING[50] (Consignment);
OKPOCustomer 'ОКПО получателя' (Consignment consignment) = OVERRIDE overOKPOCustomer(consignment), extraOKPOCustomer(consignment), okpo(customer(consignment));

overOKULPCustomer 'ОКЮЛП получателя' = ABSTRACT STRING[50] (Consignment);
extraOKULPCustomer 'ОКЮЛП получателя' = ABSTRACT STRING[50] (Consignment);
OKULPCustomer 'ОКЮЛП получателя' (Consignment consignment) = OVERRIDE overOKULPCustomer(consignment), extraOKULPCustomer(consignment), okulp(customer(consignment));
    
overNameCustomerStore (Consignment consignment) = ABSTRACT ISTRING[350] (Consignment);
nameCustomerStore (Consignment consignment) =
     OVERRIDE overNameCustomerStore(consignment), nameStore(customerStock(consignment)) CHARWIDTH 20;
      
overEmailCustomer = ABSTRACT STRING[400] (Consignment);    
emailCustomer 'E-mail получателя' (Consignment consignment) = 
    OVERRIDE overEmailCustomer(consignment), email(customer(consignment)) CHARWIDTH 30;
    
overSiteCustomer = ABSTRACT STRING[100] (Consignment);    
siteCustomer 'Сайт получателя' (Consignment consignment) = 
    OVERRIDE overSiteCustomer(consignment), site(customer(consignment)) CHARWIDTH 30;    

overPhoneCustomer = ABSTRACT STRING[100] (Consignment);    
phoneCustomer 'Телефон/факс получателя'  (Consignment consignment) = 
    OVERRIDE overPhoneCustomer(consignment), phone(customer(consignment)) CHARWIDTH 30;

// ------------------------------------- Отпуск товара --------------------------------- //
    
    
dataIssuanceExecuted = DATA Employee(Consignment);
overIssuanceExecuted = DATA Employee(Consignment);
issuanceExecuted = ABSTRACT Employee(Consignment);
positionIssuanceExecuted 'Отпуск произвел, должность' (Consignment consignment) = 
    OVERRIDE namePosition(dataIssuanceExecuted(consignment)),
             namePosition(issuanceExecuted(consignment)),
             namePosition(overIssuanceExecuted(consignment)) IN issuanceConsignment CHARWIDTH 20;             
nameIssuanceExecuted 'Отпуск произвел, ФИО' (Consignment consignment) = 
    OVERRIDE firstShortName(dataIssuanceExecuted(consignment)),
             firstShortName(issuanceExecuted(consignment)),
             firstShortName(overIssuanceExecuted(consignment)) IN issuanceConsignment CHARWIDTH 20; 
overChangeIssuanceExecuted ABSTRACT (Consignment);

notUseDialogForwarder 'Не использовать справочник для принимающих сотрудников' = DATA BOOLEAN(Consignment) IN issuanceConsignment;

dataForwarder = DATA Employee (Consignment);
overForwarder = ABSTRACT Employee(Consignment);

dataNameForwarder = DATA STRING[100](Consignment);
overNameForwarder = ABSTRACT STRING[100](Consignment);
dataPositionForwarder = DATA STRING[100](Consignment);
overPositionForwarder = ABSTRACT STRING[100](Consignment);

forwarder 'Товар к перевозке принял (экспедитор)' (Consignment consignment) = 
    OVERRIDE  
        overForwarder(consignment), 
        dataForwarder(consignment) IN issuanceConsignment CHARWIDTH 30;

nameForwarder 'Товар к перевозке принял, ФИО' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogForwarder(consignment) THEN firstShortName(forwarder(consignment)),
        overNameForwarder(consignment),
        dataNameForwarder(consignment) IN issuanceConsignment CHARWIDTH 30;
    
positionForwarder 'Товар к перевозке принял, должность' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogForwarder(consignment) THEN namePosition(dataForwarder(consignment)),
        overPositionForwarder(consignment),
        dataPositionForwarder(consignment) IN issuanceConsignment CHARWIDTH 30;
    
//грузополучатель
notUseDialogGoodsConsignment 'Не использовать справочник для грузополучателя' = DATA BOOLEAN(Consignment) IN issuanceConsignment;

dataGoodsConsignment  = DATA Employee (Consignment);
overGoodsConsignment (acceptance) = ABSTRACT Employee(Consignment);

dataNameGoodsConsignment = DATA STRING[100](Consignment);
overNameGoodsConsignment = ABSTRACT STRING[100](Consignment);
dataPositionGoodsConsignment = DATA STRING[100](Consignment);
overPositionGoodsConsignment = ABSTRACT STRING[100](Consignment);

goodsConsignment 'Принял грузополучатель' (Consignment consignment) = 
    OVERRIDE  
        overGoodsConsignment(consignment), 
        dataGoodsConsignment(consignment) IN issuanceConsignment CHARWIDTH 30;

nameGoodsConsignment 'Принял грузополучатель, ФИО' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogGoodsConsignment(consignment) THEN firstShortName(goodsConsignment(consignment)),
        overNameGoodsConsignment(consignment),
        dataNameGoodsConsignment(consignment) IN issuanceConsignment CHARWIDTH 30;
    
positionGoodsConsignment 'Принял грузополучатель, должность' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogGoodsConsignment(consignment) THEN namePosition(goodsConsignment(consignment)),
        overPositionGoodsConsignment(consignment),
        dataPositionGoodsConsignment(consignment) IN issuanceConsignment CHARWIDTH 30;
        
    
dataAmountPack 'Кол-во в упаковке' = ABSTRACT NUMERIC[21,6] (ConsignmentDetail);
overAmountPack 'Кол-во в упаковке' = ABSTRACT CASE NUMERIC[21,6] (ConsignmentDetail);
amountPack 'Кол-во в упаковке' (ConsignmentDetail d) = OVERRIDE overAmountPack(d), dataAmountPack(d);

nameTransportPack 'Вид упаковки' (ConsignmentDetail d) = name(transportPack(barcode(sku(d))));

dataGrossWeight 'Масса брутто, кг.' = ABSTRACT NUMERIC[16,5] (ConsignmentDetail);
overGrossWeight 'Масса брутто, кг.' = ABSTRACT NUMERIC[16,5] (ConsignmentDetail);
grossWeight 'Масса брутто, кг.' (ConsignmentDetail d) = OVERRIDE overGrossWeight(d), dataGrossWeight(d);

dataNetWeight 'Масса нетто, кг.' = ABSTRACT NUMERIC[16,5] (ConsignmentDetail);
overNetWeight 'Масса нетто, кг.' = ABSTRACT NUMERIC[16,5] (ConsignmentDetail);
netWeight 'Масса нетто, кг.' (ConsignmentDetail d) = OVERRIDE overNetWeight(d), dataNetWeight(d);

barCode 'Код товара' (ConsignmentDetail d) = OVERRIDE idBarcode(sku(d)), id(sku(d));
sidCountry 'Код страны' (ConsignmentDetail d) = sid(country(sku(d)));
shortNameCountry 'Краткое наименование страны' (ConsignmentDetail d) = name(country(sku(d)));

idUOMSku (ConsignmentDetail d) = codeOKEI(UOM(sku(d)));
overIdUOM = ABSTRACT STRING[100] (ConsignmentDetail) CHARWIDTH 10;
idUOM 'Код ед. изм.' (ConsignmentDetail d) = OVERRIDE overIdUOM(d), idUOMSku(d) CHARWIDTH 10;

dataPrice 'Цена' = ABSTRACT CASE NUMERIC[16,4] (ConsignmentDetail);
overPrice 'Цена' = ABSTRACT CASE NUMERIC[16,4] (ConsignmentDetail);
priceRu 'Цена' (ConsignmentDetail d) = OVERRIDE overPrice(d), dataPrice(d);
price(ConsignmentDetail d) += priceRu(d);

dataSum 'Сумма без НДС' (d) = ABSTRACT CASE NUMERIC[18,4] (ConsignmentDetail);
overSum 'Сумма без НДС' (d) = ABSTRACT CASE NUMERIC[18,4] (ConsignmentDetail);
sumRu 'Сумма без НДС' (ConsignmentDetail d) = OVERRIDE overSum(d), dataSum(d);
sum(ConsignmentDetail d) += sumRu(d);

dataShipmentPrice 'Учетная цена' (d) = ABSTRACT CASE NUMERIC[16,4] (ConsignmentDetail);
overShipmentPrice 'Учетная цена' (d) = ABSTRACT CASE NUMERIC[16,4] (ConsignmentDetail);
shipmentPrice 'Учетная цена' (ConsignmentDetail d) = OVERRIDE overShipmentPrice(d), dataShipmentPrice(d);

dataShipmentSum 'Учетная сумма' (d) = ABSTRACT CASE NUMERIC[18,4] (ConsignmentDetail);
overShipmentSum 'Учетная сумма' (d) = ABSTRACT CASE NUMERIC[18,4] (ConsignmentDetail);
shipmentSum 'Учетная сумма' (ConsignmentDetail d)= OVERRIDE overShipmentSum(d), dataShipmentSum(d);

dataSumConsignment 'Сумма с НДС' (d) = ABSTRACT CASE NUMERIC[18,4] (ConsignmentDetail);
sumConsignment 'Сумма с НДС' (ConsignmentDetail d) = dataSumConsignment(d);

dataSumConsignmentDetail 'Сумма с НДС' = ABSTRACT NUMERIC[18,4] (Consignment);
sumConsignmentDetail 'Сумма с НДС' (Consignment consignment) = dataSumConsignmentDetail(consignment);

dataVATSumConsignmentDetail 'Сумма НДС' = ABSTRACT NUMERIC[18,4] (Consignment);
VATSumConsignmentDetail 'Сумма НДС' (Consignment consignment) = dataVATSumConsignmentDetail(consignment);

includeOrders 'Заказы в накладной' = ABSTRACT STRING (Consignment);

shipmentSumTotal 'Учетная сумма по документу' (Consignment consignment) = GROUP SUM shipmentSum(ConsignmentDetail d) BY consignment(d);
sumVATTotal 'Учетная сумма по документу' (Consignment consignment) = GROUP SUM sumVAT(ConsignmentDetail d) BY consignment(d);
countSku(Consignment consignment)= GROUP SUM 1 IF consignment(ConsignmentDetail d) = consignment;

changeIssuanceExecuted(Consignment consignment)  {    
    DIALOG dialogEmployeesConsignment OBJECTS e = issuanceExecuted(consignment) INPUT NULL DO {
        issuanceExecuted(consignment) <- e;
        IF NOT issuanceExecuted(consignment) THEN {
            overIssuanceExecuted(consignment) <- e;
        }
    }               
    overChangeIssuanceExecuted(consignment);
}

changeNameForwarder(Consignment consignment)  {     
    IF notUseDialogForwarder(consignment) THEN {
        INPUT s = dataNameForwarder(consignment) DO {
            dataNameForwarder(consignment) <- s;
        }
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataForwarder(consignment) INPUT NULL DO {
            dataForwarder(consignment) <- e;
        }
    }
}   

changePositionForwarder(Consignment consignment)  {     
    IF notUseDialogForwarder(consignment) THEN {
        INPUT s = dataPositionForwarder(consignment) DO {
            dataPositionForwarder(consignment) <- s;
        }         
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataForwarder(consignment) INPUT NULL DO {
            dataForwarder(consignment) <- e;
        }
    }        
} 

changeNameGoodsConsignment(Consignment consignment) {     
    IF notUseDialogGoodsConsignment(consignment) THEN {
        INPUT s = dataNameGoodsConsignment(consignment) DO {
            dataNameGoodsConsignment(consignment) <- s;
        }
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataGoodsConsignment(consignment) INPUT NULL DO {
            dataGoodsConsignment(consignment) <- e;
        }
    }
}   

changePositionGoodsConsignment(Consignment consignment) {     
    IF notUseDialogGoodsConsignment(consignment) THEN {
        INPUT s = dataPositionGoodsConsignment(consignment) DO {
            dataPositionGoodsConsignment(consignment) <- s;
        }         
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataGoodsConsignment(consignment) INPUT NULL DO {
            dataGoodsConsignment(consignment) <- e;
        }
    }        
}   

FORM consignmentCustomerRu 'Счет покупателю'
    OBJECTS c = Consignment PANEL SUBREPORT 
    PROPERTIES fullNameCustomer(c), fullNameSupplier(c), number(c), date(c), sumConsignmentDetail(c), VATSumConsignmentDetail(c),
               nameCustomUserChief = nameCustomUserChief(customer(c)), nameCustomUserBooker = nameCustomUserBooker(customer(c)),
               addressCustomer(c), phoneCustomer(c)
    
    OBJECTS d = ConsignmentDetail
    PROPERTIES(d) index, nameSku, price, vat, quantity, shortNameUOMSku, sumConsignment
    FILTERS consignment(d) == c
;

printConsignmentCustomerRu 'Счет покупателю (xls)' (Consignment c)  { 
    PRINT consignmentCustomerRu OBJECTS c = c XLS;
} IMAGE 'print.png' IN print;

   
FORM consignmentTTNARu 'Транспортная накладная (сторона А)'
     OBJECTS c = Consignment PANEL SUBREPORT
     PROPERTIES(c) includeOrders, fullNameSupplier, addressSupplier, fullNameCustomer, addressCustomer, number, date
;   
 
printConsignmentTTNARu 'Транспортная накладная (сторона А) (xls)' (Consignment c)  { 
    PRINT consignmentTTNARu OBJECTS c = c XLS;
} IMAGE 'print.png' IN print;
   
FORM consignmentTTNBRu 'Транспортная накладная (сторона Б)'
    OBJECTS c = Consignment PANEL SUBREPORT
    PROPERTIES(c) includeOrders
;   

printConsignmentTTNBRu 'Транспортная накладная (сторона Б) (xls)' (Consignment c)  { 
    PRINT consignmentTTNBRu OBJECTS c = c XLS;
} IMAGE 'print.png' IN print;  

printConsignmentTTNABRu 'Транспортная накладная (сторона А/Б) (xls)' (Consignment c)  { 
    PRINT consignmentTTNARu OBJECTS c = c XLS;
    PRINT consignmentTTNBRu OBJECTS c = c XLS;
} IMAGE 'print.png' IN print;
   
FORM consignmentTorg13 'ТОРГ-13'
    OBJECTS c=Consignment PANEL

    PROPERTIES (c) date, number, 
                   fullNameSupplier, addressSupplier, emailSupplier, siteSupplier, phoneSupplier, 
                   OKPOSupplier, OKDPSupplier,
                   nameSupplierStock, nameCustomerStock, 
                   nameIssuanceExecuted, positionIssuanceExecuted, 
                   nameForwarder, positionForwarder,
                   nameGoodsConsignment, positionGoodsConsignment,
                   shipmentSumTotal                  
                   
    OBJECTS d=ConsignmentDetail SUBREPORT   
    PROPERTIES(d) shortNameUOMSku, nameSku, 
                  quantity, barCode, shortNameUOM, idUOM, 
                  grossWeight, netWeight, 
                  shipmentPrice, shipmentSum
        
    FILTERS consignment(d) == c,
            quantity(d),
            NOT skip(d)
;

printConsignmentTorg13 'ТОРГ-13' (Consignment consignment) { PRINT consignmentTorg13 OBJECTS c = consignment;} IMAGE 'print.png' IN print;

FORM consignmentTorg12 'ТОРГ-12'
    OBJECTS c=Consignment PANEL

    PROPERTIES (c) fullNameSupplier, addressSupplier, emailSupplier, siteSupplier, phoneSupplier, OKPOSupplier, INNSupplier,
                   OKDPSupplier,
                   fullNameCustomer, addressCustomer, emailCustomer, siteCustomer, phoneCustomer, OKPOCustomer, INNCustomer,
                   nameSupplierStock,
                   date, number,
                   nameCustomerStock, 
                   descriptionContract,
                   nameIssuanceExecuted, positionIssuanceExecuted, 
                   nameForwarder, positionForwarder,
                   nameGoodsConsignment, positionGoodsConsignment,
                   sumConsignmentDetail
    OBJECTS d=ConsignmentDetail SUBREPORT
    
    PROPERTIES(d) nameSku, barCode, shortNameUOM, idUOM,  
                  quantity, 
                  nameTransportPack, amountPack, packQuantity, grossWeight, 
                  price, sum, vat, sumVAT, sumConsignment, useEmptyVAT
        
    FILTERS consignment(d) == c,
            quantity(d),
            NOT skip(d)
;
 
printConsignmentTorg12 'ТОРГ-12' (Consignment consignment) { PRINT consignmentTorg12 OBJECTS c = consignment;} IMAGE 'print.png' IN print;    

FORM consignmentM15 'М-15'
    OBJECTS c=Consignment PANEL   

    PROPERTIES (c) date, number,    
                   fullNameSupplier, OKPOSupplier,
                   fullNameCustomer, OKPOCustomer,
                   nameSupplierStock,                   
                   nameCustomerStock,
                    
                   nameIssuanceExecuted, positionIssuanceExecuted, 
                   nameForwarder, positionForwarder,
                   nameGoodsConsignment, positionGoodsConsignment,
                   sumConsignmentDetail,
                   descriptionContract,
                   shipmentSumTotal, sumVATTotal, countSku
                                   
    OBJECTS d=ConsignmentDetail  SUBREPORT    
    PROPERTIES(d) nameSku, idSku, barCode, shortNameUOM, idUOM,  
                  quantity, 
                  grossWeight, 
                  price, sum, vat, sumVAT, sumConsignment
        
    FILTERS consignment(d) == c,
            quantity(d),
            NOT skip(d)
;

printConsignmentM15 'М-15' (Consignment consignment) { PRINT consignmentM15 OBJECTS c = consignment;} IMAGE 'print.png' IN print;   

EXTEND FORM consignment
    PROPERTIES(c)  notUseDialogForwarder,
                   notUseDialogGoodsConsignment,
                   nameIssuanceExecuted ON CHANGE changeIssuanceExecuted(c),
                   positionIssuanceExecuted ON CHANGE changeIssuanceExecuted(c),
                   nameForwarder ON CHANGE changeNameForwarder(c),
                   positionForwarder ON CHANGE changePositionForwarder(c),
                   nameGoodsConsignment ON CHANGE changeNameGoodsConsignment(c),
                   positionGoodsConsignment ON CHANGE changePositionGoodsConsignment(c)
;

DESIGN consignment {
    pane {
        mainTab {
            MOVE GROUP(issuanceConsignment,c) {                       
                columns = 1;    
                type = CONTAINERV;
                NEW issuance { 
                    alignment = STRETCH;
                    type = CONTAINERH;
                    MOVE PROPERTY(nameIssuanceExecuted(c)) { charWidth = 30; };
                    MOVE PROPERTY(positionIssuanceExecuted(c)) { charWidth = 20; };
                }
                    
                MOVE PROPERTY(notUseDialogForwarder(c));    
                
                NEW forwarder { 
                    alignment = STRETCH;
                    type = CONTAINERH;
                    MOVE PROPERTY(nameForwarder(c)) { charWidth = 30; };
                    MOVE PROPERTY(positionForwarder(c)) { charWidth = 20; };  
                } 
                
                MOVE PROPERTY(notUseDialogGoodsConsignment(c)); 
                                        
                NEW goodsAccepted { 
                    alignment = STRETCH;
                    type = CONTAINERH;
                    MOVE PROPERTY(nameGoodsConsignment(c)) { charWidth = 30; };
                    MOVE PROPERTY(positionGoodsConsignment(c)) { charWidth = 20; };                              
                }                
            }                        
        }
    }
    MOVE TOOLBARBOX;
}

// атрибуты УПД
statusUpd 'Статус УПД' = ABSTRACT StatusUpd (Consignment);
overStatusUpd 'Статус УПД' = ABSTRACT StatusUpd (Consignment);
dataStatusAttrUpd = DATA StatusUpd (Consignment);
statusAttrUpd (Consignment c) = OVERRIDE statusUpd(c), overStatusUpd(c), dataStatusAttrUpd(c);
nameStatusAttrUpd 'Статус УПД' (Consignment c) = name(statusAttrUpd(c));

dataNumberAttrUpd 'Номер' = DATA STRING[48] (Consignment) CHARWIDTH 7;
overNumberAttrUpd 'Номер' = ABSTRACT STRING[1000] (Consignment) CHARWIDTH 7;
numberAttrUpd 'Номер' (Consignment c) = OVERRIDE overNumberAttrUpd(c), dataNumberAttrUpd(c), number(c);

dataDateAttrUpd 'Дата' (Consignment consignment) = DATA DATE (Consignment);
overDateAttrUpd 'Дата' (Consignment consignment) = ABSTRACT DATE (Consignment);
dateAttrUpd 'Дата' (Consignment c) = OVERRIDE overDateAttrUpd(c), dataDateAttrUpd(c), date(c);

overNumberCorrectionUpd 'Номер исправления' = ABSTRACT INTEGER (Consignment) CHARWIDTH 7;
overDateCorrectionUpd 'Дата исправления' (Consignment consignment) = ABSTRACT DATE (Consignment);

dataDescriptionContractAttrUpd 'Описание договора' = DATA STRING[50](Consignment) CHARWIDTH 30;
descriptionContractAttrUpd 'Описание договора' (Consignment c) = OVERRIDE dataDescriptionContractAttrUpd(c), descriptionContract(c);

dataManagerSupplierAttrUpd 'Руководитель, ФИО' = DATA STRING[48] (Consignment);
managerSupplierAttrUpd 'Руководитель, ФИО' (Consignment c) = OVERRIDE dataManagerSupplierAttrUpd(c), shortName(managerSupplier(c));

dataAccountantSupplierAttrUpd 'Главный бухгалтер, ФИО' = DATA STRING[48] (Consignment);
accountantSupplierAttrUpd 'Главный бухгалтер, ФИО' (Consignment c) = OVERRIDE dataAccountantSupplierAttrUpd(c), shortName(accountantSupplier(c));

// Товар передал
notUseIssuanceExecutedAttrUpd 'Не использовать справочник для передающих сотрудников' = DATA BOOLEAN (Consignment);

dataIssuanceExecutedAttrUpd = DATA Employee (Consignment);
overIssuanceExecutedAttrUpd = ABSTRACT Employee(Consignment);

dataNameIssuanceExecutedAttrUpd = DATA STRING[100](Consignment);
overNameIssuanceExecutedAttrUpd = ABSTRACT STRING[100](Consignment);
dataPositionIssuanceExecutedAttrUpd = DATA STRING[100](Consignment);
overPositionIssuanceExecutedAttrUpd = ABSTRACT STRING[100](Consignment);

issuanceExecutedAttrUpd 'Товар передал' (Consignment consignment) = 
    OVERRIDE  
        overIssuanceExecutedAttrUpd(consignment), 
        dataIssuanceExecutedAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;

nameIssuanceExecutedAttrUpd 'Товар передал, ФИО' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseIssuanceExecutedAttrUpd(consignment) THEN shortName(issuanceExecutedAttrUpd(consignment)),
        overNameIssuanceExecutedAttrUpd(consignment),
        dataNameIssuanceExecutedAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;
    
positionIssuanceExecutedAttrUpd 'Товар передал, должность' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseIssuanceExecutedAttrUpd(consignment) THEN namePosition(dataIssuanceExecutedAttrUpd(consignment)),
        overPositionIssuanceExecutedAttrUpd(consignment),
        dataPositionIssuanceExecutedAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;

// Ответственный (передача)
notUseIssuanceResponsibleAttrUpd 'Не использовать справочник для ответственных (передача)' = DATA BOOLEAN (Consignment);

dataIssuanceResponsibleAttrUpd = DATA Employee (Consignment);
overIssuanceResponsibleAttrUpd = ABSTRACT Employee(Consignment);

dataNameIssuanceResponsibleAttrUpd = DATA STRING[100](Consignment);
overNameIssuanceResponsibleAttrUpd = ABSTRACT STRING[100](Consignment);
dataPositionIssuanceResponsibleAttrUpd = DATA STRING[100](Consignment);
overPositionIssuanceResponsibleAttrUpd = ABSTRACT STRING[100](Consignment);

issuanceResponsibleAttrUpd 'Ответственный (передача)' (Consignment consignment) = 
    OVERRIDE  
        overIssuanceResponsibleAttrUpd(consignment), 
        dataIssuanceResponsibleAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;

nameIssuanceResponsibleAttrUpd 'Ответственный (передача), ФИО' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseIssuanceResponsibleAttrUpd(consignment) THEN shortName(issuanceResponsibleAttrUpd(consignment)),
        overNameIssuanceResponsibleAttrUpd(consignment),
        dataNameIssuanceResponsibleAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;
        
positionIssuanceResponsibleAttrUpd 'Ответственный (передача), должность' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseIssuanceResponsibleAttrUpd(consignment) THEN namePosition(dataIssuanceResponsibleAttrUpd(consignment)),
        overPositionIssuanceResponsibleAttrUpd(consignment),
        dataPositionIssuanceResponsibleAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;
    
// Товар принял
notUseDialogForwarderAttrUpd 'Не использовать справочник для принимающих сотрудников' = DATA BOOLEAN(Consignment) IN issuanceConsignment;

dataForwarderAttrUpd = DATA Employee (Consignment);
overForwarderAttrUpd = ABSTRACT Employee(Consignment);

dataNameForwarderAttrUpd = DATA STRING[100](Consignment);
overNameForwarderAttrUpd = ABSTRACT STRING[100](Consignment);
dataPositionForwarderAttrUpd = DATA STRING[100](Consignment);
overPositionForwarderAttrUpd = ABSTRACT STRING[100](Consignment);

forwarderAttrUpd 'Товар принял' (Consignment consignment) = 
    OVERRIDE  
        overForwarderAttrUpd(consignment), 
        dataForwarderAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;

nameForwarderAttrUpd 'Товар принял, ФИО' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogForwarderAttrUpd(consignment) THEN shortName(forwarderAttrUpd(consignment)),
        overNameForwarderAttrUpd(consignment),
        dataNameForwarderAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;
    
positionForwarderAttrUpd 'Товар принял, должность' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogForwarderAttrUpd(consignment) THEN namePosition(dataForwarderAttrUpd(consignment)),
        overPositionForwarderAttrUpd(consignment),
        dataPositionForwarderAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;
    
// Ответственный (прием)
notUseDialogGoodsConsignmentAttrUpd 'Не использовать справочник для ответственных (прием)' = DATA BOOLEAN(Consignment) IN issuanceConsignment;

dataGoodsConsignmentAttrUpd  = DATA Employee (Consignment);
overGoodsConsignmentAttrUpd (acceptance) = ABSTRACT Employee(Consignment);

dataNameGoodsConsignmentAttrUpd = DATA STRING[100](Consignment);
overNameGoodsConsignmentAttrUpd = ABSTRACT STRING[100](Consignment);
dataPositionGoodsConsignmentAttrUpd = DATA STRING[100](Consignment);
overPositionGoodsConsignmentAttrUpd = ABSTRACT STRING[100](Consignment);

goodsConsignmentAttrUpd 'Ответственный (прием)' (Consignment consignment) = 
    OVERRIDE  
        overGoodsConsignmentAttrUpd(consignment), 
        dataGoodsConsignmentAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;

nameGoodsConsignmentAttrUpd 'Ответственный (прием), ФИО' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogGoodsConsignmentAttrUpd(consignment) THEN shortName(goodsConsignmentAttrUpd(consignment)),
        overNameGoodsConsignmentAttrUpd(consignment),
        dataNameGoodsConsignmentAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;
    
positionGoodsConsignmentAttrUpd 'Ответственный (прием), должность' (Consignment consignment) = 
    OVERRIDE  
        IF NOT notUseDialogGoodsConsignmentAttrUpd(consignment) THEN namePosition(goodsConsignmentAttrUpd(consignment)),
        overPositionGoodsConsignmentAttrUpd(consignment),
        dataPositionGoodsConsignmentAttrUpd(consignment) IN issuanceConsignment CHARWIDTH 30;

transportationInfoAttrUpd 'Данные о транспортировке' = DATA STRING[255] (Consignment) CHARWIDTH 30;
otherInfoIssuanceAttrUpd 'Иные сведения (передача)' = DATA STRING[255] (Consignment) CHARWIDTH 30;
otherAcceptanceAttrUpd 'Иные сведения (приемка)' = DATA STRING[255] (Consignment) CHARWIDTH 30;

// атрибуты УПД, действия
changeNumberAttrUpd(Consignment consignment)  {    
    INPUT name = ISTRING[150] DO {
        dataNumberAttrUpd(consignment) <- name;
    }  
}

changeDateAttrUpd(Consignment consignment) {    
    INPUT dateAttrUpd = DATE DO {
        dateAttrUpd(consignment) <- dateAttrUpd;
    }  
}

changeManagerSupplierAttrUpd(Consignment consignment)  {    
    INPUT name = ISTRING[28] DO {
        dataManagerSupplierAttrUpd(consignment) <- name;
    }  
}

changeAccountantSupplierAttrUpd(Consignment consignment)  {    
    INPUT name = ISTRING[28] DO {
        dataAccountantSupplierAttrUpd(consignment) <- name;
    }  
}

changeDescriptionContractAttrUpd(Consignment consignment)  {    
    INPUT description = STRING[50] DO {
        dataDescriptionContractAttrUpd(consignment) <- description;
    }  
}

changeNameIssuanceExecutedAttrUpd(Consignment consignment)  {    
    IF notUseIssuanceExecutedAttrUpd(consignment) THEN {
        INPUT s = dataNameIssuanceExecutedAttrUpd(consignment) DO {
            dataNameIssuanceExecutedAttrUpd(consignment) <- s;
        }
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataIssuanceExecutedAttrUpd(consignment) INPUT NULL DO {
            dataIssuanceExecutedAttrUpd(consignment) <- e;
        }
    }
}

changePositionIssuanceExecutedAttrUpd(Consignment consignment)  {    
    IF notUseIssuanceExecutedAttrUpd(consignment) THEN {
        INPUT s = dataPositionIssuanceExecutedAttrUpd(consignment) DO {
            dataPositionIssuanceExecutedAttrUpd(consignment) <- s;
        }         
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataIssuanceExecutedAttrUpd(consignment) INPUT NULL DO {
            dataIssuanceExecutedAttrUpd(consignment) <- e;
        }
    }
}

changeNameIssuanceResponsibleAttrUpd(Consignment consignment)  {    
    IF notUseIssuanceResponsibleAttrUpd(consignment) THEN {
        INPUT s = dataNameIssuanceResponsibleAttrUpd(consignment) DO {
            dataNameIssuanceResponsibleAttrUpd(consignment) <- s;
        }
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataIssuanceResponsibleAttrUpd(consignment) INPUT NULL DO {
            dataIssuanceResponsibleAttrUpd(consignment) <- e;
        }
    }
}

changePositionIssuanceResponsibleAttrUpd(Consignment consignment)  {    
    IF notUseIssuanceResponsibleAttrUpd(consignment) THEN {
        INPUT s = dataPositionIssuanceResponsibleAttrUpd(consignment) DO {
            dataPositionIssuanceResponsibleAttrUpd(consignment) <- s;
        }         
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataIssuanceResponsibleAttrUpd(consignment) INPUT NULL DO {
            dataIssuanceResponsibleAttrUpd(consignment) <- e;
        }
    }
}

changeNameForwarderAttrUpd(Consignment consignment)  {     
    IF notUseDialogForwarderAttrUpd(consignment) THEN {
        INPUT s = dataNameForwarderAttrUpd(consignment) DO {
            dataNameForwarderAttrUpd(consignment) <- s;
        }
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataForwarderAttrUpd(consignment) INPUT NULL DO {
            dataForwarderAttrUpd(consignment) <- e;
        }
    }
}   

changePositionForwarderAttrUpd(Consignment consignment)  {     
    IF notUseDialogForwarderAttrUpd(consignment) THEN {
        INPUT s = dataPositionForwarderAttrUpd(consignment) DO {
            dataPositionForwarderAttrUpd(consignment) <- s;
        }         
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataForwarderAttrUpd(consignment) INPUT NULL DO {
            dataForwarderAttrUpd(consignment) <- e;
        }
    }        
} 

changeNameGoodsConsignmentAttrUpd(Consignment consignment) {     
    IF notUseDialogGoodsConsignmentAttrUpd(consignment) THEN {
        INPUT s = dataNameGoodsConsignmentAttrUpd(consignment) DO {
            dataNameGoodsConsignmentAttrUpd(consignment) <- s;
        }
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataGoodsConsignmentAttrUpd(consignment) INPUT NULL DO {
            dataGoodsConsignmentAttrUpd(consignment) <- e;
        }
    }
}   

changePositionGoodsConsignmentAttrUpd(Consignment consignment) {     
    IF notUseDialogGoodsConsignmentAttrUpd(consignment) THEN {
        INPUT s = dataPositionGoodsConsignmentAttrUpd(consignment) DO {
            dataPositionGoodsConsignmentAttrUpd(consignment) <- s;
        }         
    } ELSE {
        DIALOG dialogEmployeesConsignment OBJECTS e = dataGoodsConsignmentAttrUpd(consignment) INPUT NULL DO {
            dataGoodsConsignmentAttrUpd(consignment) <- e;
        }
    }        
}   
incl 'Отм.' = DATA LOCAL BOOLEAN (Consignment);
countIncl = GROUP SUM 1 IF incl(Consignment c);

countDetail 'Кол-во позиций' (Consignment c) = GROUP SUM 1 IF consignment(ConsignmentDetail d) == c;

numberAttrUpd (ConsignmentDetail d) = numberAttrUpd(consignment(d));
dateAttrUpd (ConsignmentDetail d) = dateAttrUpd(consignment(d));

numberCopiesConsignmentData = DATA INTEGER (Consignment);
countCopies 'Кол-во экз. УПД' (Consignment c) = OVERRIDE numberCopiesConsignmentData(c), numberCopiesConsignment(), 1;

doubleSided 'Двухсторонний' = DATA LOCAL BOOLEAN ();

FORM consignmentUpd 'Универсальный передаточный документ'
    OBJECTS dd = (c=Consignment,i=INTEGER ) 

    PROPERTIES (c) fullNameSupplier, addressSupplier, INNSupplier, KPPSupplier,
                   fullNameCustomer, addressCustomer, INNCustomer, KPPCustomer, nameCustomerStock, nameCustomerStore,
                   date, numberAttrUpd, dateAttrUpd, overNumberCorrectionUpd, overDateCorrectionUpd, 
                   descriptionContractAttrUpd,
                   transportationInfoAttrUpd,
                   addressCustomerStock,
                   
                   //передача
                   nameIssuanceExecutedAttrUpd, positionIssuanceExecutedAttrUpd, 
                   nameIssuanceResponsibleAttrUpd, positionIssuanceResponsibleAttrUpd, 
                   otherInfoIssuanceAttrUpd,  
                   //прием                 
                   nameForwarderAttrUpd, positionForwarderAttrUpd,
                   nameGoodsConsignmentAttrUpd, positionGoodsConsignmentAttrUpd, 
                   otherAcceptanceAttrUpd,
                   
                   nameCurrency, sidCurrency, nameStatusAttrUpd,
                   managerSupplierAttrUpd, accountantSupplierAttrUpd, 
                   
                   countDetail,
                   countCopies
    PROPERTIES doubleSided() DRAW dd       
          
    OBJECTS d=ConsignmentDetail  SUBREPORT    
    PROPERTIES(d) nameSku, barCode, shortNameUOM, idUOM,  
                  quantity, 
                  grossWeight, 
                  price, sum, vat, sumVAT, sumConsignment,
                  sidCountry, shortNameCountry,
                  numberAttrUpd, dateAttrUpd, useEmptyVAT
        
    FILTERS incl(c),
            consignment(d) == c,
            count(i,countCopies(c)),
            quantity(d),
            NOT skip(d)
;
 
printConsignmentUpd 'УПД' (Consignment consignment) { 
    doubleSided()<- NULL;
    IF NOT countIncl() THEN {
        incl(Consignment c) <- TRUE  IF c==consignment;     
    }       
    PRINT consignmentUpd;
    incl(Consignment c) <- NULL; 
} IMAGE 'print.png' IN print;
printConsignmentUpdBreake 'УПД (двухсторонний)' (Consignment consignment) { 
    doubleSided()<- TRUE ;
    IF NOT countIncl() THEN {
        incl(Consignment c) <- TRUE  IF c==consignment;     
    }       
    PRINT consignmentUpd;
    incl(Consignment c) <- NULL; 
    doubleSided()<- NULL ;
} IMAGE 'print.png' IN print;

printConsignmentUpdBreakeAuto 'УПД (двухсторонний) АВТО' (Consignment consignment) { 
    doubleSided()<- TRUE ;
    IF NOT countIncl() THEN {
        incl(Consignment c) <- TRUE  IF c==consignment;     
    }       
    PRINT consignmentUpd NOPREVIEW;
    incl(Consignment c) <- NULL; 
    doubleSided()<- NULL ;
} IMAGE 'print.png' IN print;

FORM attributesUpd 'Атрибуты УПД'
    OBJECTS c=Consignment PANEL

    PROPERTIES(c)  numberAttrUpd ON CHANGE changeNumberAttrUpd(c), dateAttrUpd ON CHANGE changeDateAttrUpd(c), nameStatusAttrUpd, 
                   descriptionContractAttrUpd ON CHANGE changeDescriptionContractAttrUpd(c),
                   managerSupplierAttrUpd, accountantSupplierAttrUpd, 
                   transportationInfoAttrUpd, otherInfoIssuanceAttrUpd, otherAcceptanceAttrUpd,
                   notUseIssuanceExecutedAttrUpd,
                   notUseIssuanceResponsibleAttrUpd,                
                   notUseDialogForwarderAttrUpd,
                   notUseDialogGoodsConsignmentAttrUpd,
                   nameIssuanceExecutedAttrUpd ON CHANGE changeNameIssuanceExecutedAttrUpd(c),
                   positionIssuanceExecutedAttrUpd ON CHANGE changePositionIssuanceExecutedAttrUpd(c),
                   nameIssuanceResponsibleAttrUpd ON CHANGE changeNameIssuanceResponsibleAttrUpd(c),
                   positionIssuanceResponsibleAttrUpd ON CHANGE changePositionIssuanceResponsibleAttrUpd(c),
                   nameForwarderAttrUpd ON CHANGE changeNameForwarderAttrUpd(c),
                   positionForwarderAttrUpd ON CHANGE changePositionForwarderAttrUpd(c),
                   nameGoodsConsignmentAttrUpd ON CHANGE changeNameGoodsConsignmentAttrUpd(c),
                   positionGoodsConsignmentAttrUpd ON CHANGE changePositionGoodsConsignmentAttrUpd(c),
                   countCopies
;

DESIGN attributesUpd {
    size = (1024, 768);
    NEW pane {
        fill = 1;
        type = TABBED;
        NEW mainContainer {
            caption = 'Основная информация';
            NEW mainScroll {
                fill = 1;
                height = 1;
                type = SCROLL;
                NEW mainTab {
                    alignment = STRETCH;
                    NEW header {
                        alignment = STRETCH;
                        caption = 'Шапка документа';
                        type = CONTAINERV;
                        NEW row1 {
                            type = CONTAINERH;
                            MOVE PROPERTY(numberAttrUpd(c));
                            MOVE PROPERTY(dateAttrUpd(c));
                            MOVE PROPERTY(nameStatusAttrUpd(c));
                            MOVE PROPERTY(descriptionContractAttrUpd(c));                            
                        }
                        
                        MOVE PROPERTY(transportationInfoAttrUpd(c));
                        MOVE PROPERTY(otherInfoIssuanceAttrUpd(c));
                        MOVE PROPERTY(otherAcceptanceAttrUpd(c));
                    }
                                        
                    NEW employees {                       
                        type = CONTAINERV;
                        caption = 'Сотрудники';                        
                        
                        MOVE PROPERTY(managerSupplierAttrUpd(c));
                        MOVE PROPERTY(accountantSupplierAttrUpd(c));
                        
                        MOVE PROPERTY(notUseIssuanceExecutedAttrUpd(c));
                                           
                        NEW issuance { 
                            alignment = STRETCH;
                            type = CONTAINERH;
                            MOVE PROPERTY(nameIssuanceExecutedAttrUpd(c)) { charWidth = 30; };
                            MOVE PROPERTY(positionIssuanceExecutedAttrUpd(c)) { charWidth = 20; };
                        }
                        
                        MOVE PROPERTY(notUseIssuanceResponsibleAttrUpd(c));
                        
                        NEW issuanceResponsible { 
                            alignment = STRETCH;
                            type = CONTAINERH;
                            MOVE PROPERTY(nameIssuanceResponsibleAttrUpd(c)) { charWidth = 30; };
                            MOVE PROPERTY(positionIssuanceResponsibleAttrUpd(c)) { charWidth = 20; };
                        }
                            
                        MOVE PROPERTY(notUseDialogForwarderAttrUpd(c));    
                        
                        NEW forwarder { 
                            alignment = STRETCH;
                            type = CONTAINERH;
                            MOVE PROPERTY(nameForwarderAttrUpd(c)) { charWidth = 30; };
                            MOVE PROPERTY(positionForwarderAttrUpd(c)) { charWidth = 20; };  
                        } 
                        
                        MOVE PROPERTY(notUseDialogGoodsConsignmentAttrUpd(c)); 
                                                
                        NEW goodsAccepted { 
                            alignment = STRETCH;
                            type = CONTAINERH;
                            MOVE PROPERTY(nameGoodsConsignmentAttrUpd(c)) { charWidth = 30; };
                            MOVE PROPERTY(positionGoodsConsignmentAttrUpd(c)) { charWidth = 20; };                              
                        }                
                    } 
                    NEW Consignment {
                        alignment = STRETCH;
                        type = CONTAINERH;
                        caption = 'Печать';
                        MOVE PROPERTY(countCopies(c)) { charWidth = 30; };                                         
                    }                       
                }
            }
        }
    }
    MOVE TOOLBARBOX;
}

editAttributesUpd 'Заполнить атрибуты УПД' (Consignment consignment)  { 
	NEWSESSION {	       
	    SHOW attributesUpd OBJECTS c = consignment DOCKED; 
	}
} IMAGE 'edit.png';

showAttributesUpd 'Просмотреть атрибуты УПД' (Consignment consignment) { 
    NEWSESSION {
        SHOW attributesUpd OBJECTS c = consignment DOCKED READONLY;
    }
}

 
nameSupplier 'Наим-ие отправителя' (Consignment consignment) = name(supplier(consignment)) CHARWIDTH 30;
numberAccountSupplier 'Основной р/сч.' (Consignment consignment) = numberAccount(supplier(consignment));

nameBankSupplier(Consignment consignment) = nameBank(account(supplier(consignment)));
addressBankSupplier(Consignment consignment) = addressBank(account(supplier(consignment)));
MFOBankSupplier 'Код BIC банка'  (Consignment consignment)=MFOBank(account(supplier(consignment)));
corrAccountBankSupplier(Consignment consignment) = corrAccount(bank(account(supplier(consignment))));

numberAccountCustomer 'Основной р/сч.' (Consignment consignment) = numberAccount(customer(consignment));
numberNewAccountCustomer 'IBAN' (Consignment consignment) = numberNew(account(customer(consignment)));
nameBankCustomer(Consignment consignment) = nameBank(account(customer(consignment)));
addressBankCustomer(Consignment consignment) = addressBank(account(customer(consignment)));
MFOBankCustomer 'Код BIC банка'  (Consignment consignment)=MFOBank(account(customer(consignment)));
corrAccountBankCustomer(Consignment consignment) = corrAccount(bank(account(customer(consignment))));

quantityTotal (Consignment consignment) = GROUP SUM quantity(ConsignmentDetail d) IF consignment(d) == consignment AND quantity(d) AND NOT skip(d);
sumConsignmentTotal (Consignment consignment) = GROUP SUM sumConsignment(ConsignmentDetail d) IF consignment(d) == consignment AND sumConsignment(d) AND NOT skip(d);
countPositions(Consignment consignment) = GROUP SUM 1 IF consignment(d) == consignment AND quantity(d) AND NOT skip(d);

sumVAT(Consignment consignment, NUMERIC[10,5] vat) = GROUP SUM sumVAT(ConsignmentDetail d) IF consignment(d) == consignment AND sumVAT(d) AND vat(d) == vat AND NOT skip(d);

shortNameManagerSupplier(Consignment consignment) = shortName(managerSupplier(consignment));
shortNameAccountantSupplier(Consignment consignment) = shortName(accountantSupplier(consignment));

descriptionBaseDocPayment = ABSTRACT STRING[100](Consignment);

FORM consignmentPayment 'Счет на оплату'
    OBJECTS c=Consignment PANEL   

    PROPERTIES (c) nameSupplier, fullNameSupplier, INNSupplier, KPPSupplier, addressSupplier, numberAccountSupplier, 
                   MFOBankSupplier, corrAccountBankSupplier, nameBankSupplier, addressBankSupplier,
                   fullNameCustomer, INNCustomer, KPPCustomer, addressCustomer,
                   date, number, sidCurrency, nameCurrency, documentNameCurrency,
                   quantityTotal, sumConsignmentTotal, sumVATTotal, countPositions,
                   shortNameManagerSupplier, shortNameAccountantSupplier,
                   descriptionBaseDocPayment
                   
    OBJECTS d=ConsignmentDetail  SUBREPORT    
    PROPERTIES(d) nameSku, idSku, shortNameUOM,  
                  quantity,  
                  price, sum, vat, sumVAT, sumConsignment  
        
    FILTERS consignment(d) == c,
            quantity(d),
            NOT skip(d)
            
    OBJECTS v = NUMERIC[10,5] SUBREPORT  
    PROPERTIES sumVAT(c, v), valVAT = VALUE(v)
    FILTERS sumVAT(c, v)        
;

consignmentPayment 'Счет на оплату' (Consignment consignment) { PRINT consignmentPayment OBJECTS c = consignment;} IMAGE 'print.png' IN print;

hideCreateUpdDocument = ABSTRACT BOOLEAN (Consignment);

innCustomer 'ИНН покупателя' (Consignment c) = inn(customer(c));
innSupplier 'ИНН поставщика' (Consignment c) = inn(supplier(c));
kppCustomer 'КПП покупателя' (Consignment c) = kpp(customer(c));
kppSupplier 'КПП поставщика' (Consignment c) = kpp(supplier(c));

nameChief 'Директор' (Consignment c) = nameChief(supplier(c));
nameBooker 'Главный бухгалтер' (Consignment c) = nameBooker(supplier(c));

paymentDocument 'Платежно-расчетный документ' = DATA STRING (Consignment) CHARWIDTH 40;

EXTEND FORM consignment PROPERTIES(c) paymentDocument;

DESIGN consignment {
    mainTab {
        MOVE PROPERTY(paymentDocument(c));
    }
}

FORM consignmentInvoiceRu 'Счет-фактура'
    OBJECTS c = Consignment PANEL
    PROPERTIES(c) nameSupplier, addressSupplier, addressCustomer, nameCustomer,
        innSupplier, kppSupplier, innCustomer, kppCustomer, paymentDocument, nameChief, nameBooker,
        nameCurrency, sidCurrency, number, date, shipmentBase, addressSupplierStock, addressCustomerStock,
        quantityConsignmentDetail, sumConsignmentDetail, VATSumConsignmentDetail, countConsignmentDetail

    OBJECTS d = ConsignmentDetail
    PROPERTIES(d) index, nameSku, idUOM, shortNameUOM, quantity, price, sum, vat, sumVAT, sumConsignment
    FILTERS consignment(d) == c,
        quantity(d),
        NOT skip(d)
;

printInvoiceRu 'Счет-фактура' (Consignment c)  {
    PRINT consignmentInvoiceRu OBJECTS c = c;
} IMAGE 'print.png' IN print;

numberWarrant 'Номер' = DATA STRING[50] (Consignment) IN issuanceConsignment CHARWIDTH 12;
dateWarrant 'Дата' = DATA DATE (Consignment) IN issuanceConsignment;
warrantHolder 'Выданная органзацией' = DATA STRING[200] (Consignment) IN issuanceConsignment CHARWIDTH 30;
deliveryTerm 'Срок доставки груза' = DATA DATE (Consignment) IN issuanceConsignment;
carModel 'Автомобиль(марка)' = DATA STRING[70](Consignment) IN carConsignment CHARWIDTH 30;
vehicleNumber 'Гос.номер' = DATA STRING[70](Consignment) IN carConsignment CHARWIDTH 30;
carWaybill 'Путевой лист'  = DATA STRING[20] (Consignment) IN carConsignment;
licenseDriver 'Удостоверение №'  = DATA STRING[20] (Consignment) IN carConsignment;
numberRegistration 'Регистрационный № лицензионной картчоки'  = DATA STRING[20] (Consignment) IN carConsignment;
seriesLicenseCard 'Серия лицензионной карточки'  = DATA STRING[20] (Consignment) IN carConsignment;
numberLicenseCard 'Номер лицензионной карточки'  = DATA STRING[20] (Consignment) IN carConsignment;
typeTransportation 'Вид перевозки'  = DATA STRING[20] (Consignment) IN carConsignment;
readdressing 'Переадресовка'  = DATA STRING[50] (Consignment) IN carConsignment;
modelHindcarriage 'Прицеп(марка)'= DATA STRING[100] (Consignment) IN carConsignment;
numberHindcarriage 'Прицеп(гос.номер)'= DATA STRING[100] (Consignment) IN carConsignment;
numberGarage  'Гаражный номер'= DATA STRING[100] (Consignment) IN carConsignment;

EXTEND FORM consignment
    PROPERTIES(c) numberWarrant, dateWarrant , warrantHolder, deliveryTerm, carModel, vehicleNumber,
        carWaybill, nameDriverCar=nameForwarder ON CHANGE changeNameForwarder(c), licenseDriver, numberRegistration, seriesLicenseCard,
        numberLicenseCard, typeTransportation, readdressing, modelHindcarriage, numberHindcarriage, numberGarage
;

DESIGN consignment {
    GROUP(issuanceConsignment, c) {
        NEW warrant {
            alignment = STRETCH;
            type = CONTAINERV ;
            caption = 'По доверенности:';
            MOVE PROPERTY (numberWarrant(c));
            MOVE PROPERTY (dateWarrant(c));
            MOVE PROPERTY (warrantHolder(c));
        }
        NEW vv{
            type = CONTAINERV ;
            caption = 'Транспортный раздел';
            NEW delivery {
                columns = 2;
                type = CONTAINERV ;
                caption = 'Данные по транспорту';
                MOVE PROPERTY (deliveryTerm(c)) {charWidth = 25;};
                MOVE PROPERTY (carModel(c)) {charWidth = 25;};
                MOVE PROPERTY (vehicleNumber(c)){charWidth = 25;};
                MOVE PROPERTY (carWaybill(c)){charWidth = 25;};
          }
            NEW truck{
                columns = 3;
                type = CONTAINERV ;
                caption = 'Прицеп';
                MOVE PROPERTY (modelHindcarriage(c)){charWidth = 25;};
                MOVE PROPERTY (numberHindcarriage(c)){charWidth = 25;};
                MOVE PROPERTY (numberGarage(c)){charWidth = 25;};
            }
            NEW driver{
                caption = 'Данные водителя';
                columns = 2;
                type = CONTAINERV ;
                MOVE PROPERTY (nameDriverCar){charWidth = 25; caption='Водитель';};
                MOVE PROPERTY (licenseDriver(c)){charWidth = 25;};
                MOVE PROPERTY (numberRegistration(c)){charWidth = 25; caption='Регистрационный №';};
                MOVE PROPERTY (seriesLicenseCard(c)){charWidth = 25;};
                MOVE PROPERTY (numberLicenseCard(c)){charWidth = 25;};
                MOVE PROPERTY (typeTransportation(c)){charWidth = 25;};
            }
            MOVE PROPERTY (readdressing(c));
        }
    }
}

grossWeightTotal 'Масса брутто, кг.'(Consignment c)= GROUP SUM grossWeight(ConsignmentDetail cd) IF consignment(cd) == c;
shortNameCustomer 'Cокращенное название'(Consignment c) = shortNameOwnership(customer(c));

FORM consignment1T '1-Т Товарно-транспортная накладная'
    OBJECTS c=Consignment PANEL

    PROPERTIES (c) date, number, series, numberWarrant, dateWarrant , warrantHolder, fullNameSupplier,  addressSupplier,  phoneSupplier,
        OKPOSupplier, phoneCustomer, OKPOCustomer, INNCustomer,  fullNameCustomer, addressCustomer,
        nameIssuanceExecuted, positionIssuanceExecuted, shortNameAccountantSupplier, nameForwarder, positionForwarder, nameGoodsConsignment,
        positionGoodsConsignment, sumConsignmentDetail

    OBJECTS d=ConsignmentDetail SUBREPORT
    PROPERTIES(d) nameSku, quantity, barCode, shortNameUOM, shipmentPrice, shipmentSum, grossWeight, netWeight, nameTransportPack, packQuantity

    FILTERS consignment(d) == c,
        quantity(d),
        NOT skip(d)
;

FORM consignment1TVerso '1-Т оборотная сторона'
    OBJECTS c=Consignment PANEL

    PROPERTIES (c) number, date, numberRegistration, seriesLicenseCard, numberLicenseCard, deliveryTerm, shortNameCustomer, addressCustomer, fullNameCustomer,
        phoneCustomer, OKPOCustomer, INNCustomer, nameForwarder,licenseDriver, typeTransportation, addressSupplier, phoneSupplier,readdressing,
        numberGarage, carWaybill, carModel, vehicleNumber, grossWeightTotal, positionIssuanceExecuted, nameIssuanceExecuted,
        positionGoodsConsignment, nameGoodsConsignment,modelHindcarriage, numberHindcarriage
;

printConsignment1TAll '1-Т ' (Consignment consignment) {
    PRINT consignment1T OBJECTS c = consignment;
    PRINT consignment1TVerso OBJECTS c = consignment ;
} IMAGE 'print.png' IN print;

printConsignment1TAllXls '1-Т (xls)' (Consignment consignment) {
    PRINT consignment1T OBJECTS c = consignment XLSX;
    PRINT consignment1TVerso OBJECTS c = consignment XLSX;
} IMAGE 'print.png' IN print;