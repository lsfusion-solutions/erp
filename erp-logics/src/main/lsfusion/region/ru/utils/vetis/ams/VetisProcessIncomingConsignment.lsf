MODULE VetisProcessIncomingConsignment;

REQUIRE VetisAMSReceiveResponse, VetisIncomingConsignment, VetisStockEntryImport, VetisDocumentImport;

NAMESPACE Vetis;

CLASS ProcessIncomingConsignmentRequest 'Оформление входящей партии' : ApplicationRequest;

incomingConsignment = DATA IncomingConsignment (ProcessIncomingConsignmentRequest) INDEXED NONULL;

localTransactionId (ProcessIncomingConsignmentRequest r) = LONG(r AS ProcessIncomingConsignmentRequest);

GROUP delivery EXTID 'merc:delivery';

GROUP deliveryConsignor EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:consignor' : delivery;
GROUP deliveryConsignorBusinessEntity EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:businessEntity' : deliveryConsignor;
GROUP deliveryConsignorEnterprise EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:enterprise' : deliveryConsignor;
GROUP deliveryConsignee EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:consignee' : delivery;
GROUP deliveryConsigneeBusinessEntity EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:businessEntity' : deliveryConsignee;
GROUP deliveryConsigneeEnterprise EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:enterprise' : deliveryConsignee;

GROUP deliveryConsignment EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:consignment' : delivery;
GROUP deliveryConsignmentProduct EXTID 'vd:product' : deliveryConsignment;
GROUP deliveryConsignmentSubProduct EXTID 'vd:subProduct' : deliveryConsignment;
GROUP deliveryConsignmentUnit EXTID 'vd:unit' : deliveryConsignment;

GROUP deliveryBroker EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:broker' : delivery;

GROUP deliveryAccompanyingForms EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:accompanyingForms' : delivery;
GROUP deliveryVetCertificate EXTID 'vd:vetCertificate' : deliveryAccompanyingForms;

GROUP deliveryFacts EXTID 'merc:deliveryFacts';
GROUP docInspection EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:docInspection' : deliveryFacts;
GROUP docInspectionResponsible EXTID 'vd:responsible' : docInspection;
GROUP vetInspection EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:vetInspection' : deliveryFacts;
GROUP vetInspectionResponsible EXTID 'vd:responsible' : vetInspection;

result (IncomingConsignment c) = CASE WHEN volumeVetDocument(c) = volume(c) THEN 'ACCEPT_ALL'
                                                    WHEN volume(c) > 0 THEN 'PARTIALLY'
                                                    ELSE 'RETURN_ALL'; 

// returned delivery
returnedDelivery (IncomingConsignment c) = c IS IncomingConsignment AND NOT volumeVetDocument(c) = volume(c); 
returnedDelivery = DATA LOCAL TEXT ();

FORM processIncomingConsignmentRequest FORMEXTID 'merc=http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2:processIncomingConsignmentRequest'
    OBJECTS r = ProcessIncomingConsignmentRequest PANEL

    PROPERTIES(r) localTransactionId EXTID 'merc:localTransactionId'
    PROPERTIES IN initiator =loginMercury(businessEntity(r)) EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:login'

    PROPERTIES =formatT(deliveryDate(incomingConsignment(r))) IN delivery EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:deliveryDate'
    
    PROPERTIES =guid(consignorBusinessEntityVetDocument(incomingConsignment(r))) IN deliveryConsignorBusinessEntity EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =guid(consignorEnterpriseVetDocument(incomingConsignment(r))) IN deliveryConsignorEnterprise EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =guid(consigneeBusinessEntityVetDocument(incomingConsignment(r))) IN deliveryConsigneeBusinessEntity EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =guid(consigneeEnterpriseVetDocument(incomingConsignment(r))) IN deliveryConsigneeEnterprise EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid'
    
    PROPERTIES = id(productType(vetDocument(incomingConsignment(r)))) EXTID 'vd:productType' IN deliveryConsignment,
               = guid(product(vetDocument(incomingConsignment(r)))) EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid' IN deliveryConsignmentProduct,
               = guid(subProduct(vetDocument(incomingConsignment(r)))) EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid' IN deliveryConsignmentSubProduct,
               = productItemXml(vetDocument(incomingConsignment(r))) EXTID 'vd:productItem' IN deliveryConsignment,
               = volume(incomingConsignment(r)) EXTID 'vd:volume' IN deliveryConsignment,
               = guid(unit(vetDocument(incomingConsignment(r)))) EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid' IN deliveryConsignmentUnit,
               = dateOfProductionXml(vetDocument(incomingConsignment(r))) EXTID 'vd:dateOfProduction' IN deliveryConsignment,
               = expiryDateXml(vetDocument(incomingConsignment(r))) EXTID 'vd:expiryDate' IN deliveryConsignment,
               = batchID(vetDocument(incomingConsignment(r))) EXTID 'vd:batchID' IN deliveryConsignment,
               = IF perishable(vetDocument(incomingConsignment(r))) THEN 'true' ELSE 'false' EXTID 'vd:perishable' IN deliveryConsignment,
               = origin(vetDocument(incomingConsignment(r))) EXTID 'vd:origin' IN deliveryConsignment,
               = IF lowGradeCargo(vetDocument(incomingConsignment(r))) THEN 'true' ELSE 'false' EXTID 'vd:lowGradeCargo' IN deliveryConsignment,
               = packageList(vetDocument(incomingConsignment(r))) EXTID 'vd:packageList' IN deliveryConsignment

//=batch(vetDocument(incomingConsignment(r))) IN delivery EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:consignment',
    PROPERTIES =guid(broker(vetDocument(incomingConsignment(r)))) IN deliveryBroker EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =transportInfo(vetDocument(incomingConsignment(r))) IN delivery EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:transportInfo',
               =transportStorageType(vetDocument(incomingConsignment(r))) IN delivery EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:transportStorageType'

    OBJECTS rd = VetReferenceDocument IN deliveryAccompanyingForms EXTID 'vd:waybill' 
    PROPERTIES issueSeries(rd) EXTID 'vd:issueSeries', issueNumber(rd) EXTID 'vd:issueNumber', =toDateISO(issueDate(rd)) EXTID 'vd:issueDate', 
               type(rd) EXTID 'vd:type'
    FILTERS vetDocument(rd) = vetDocument(incomingConsignment(r)),
            relationshipType(rd) = 1 AND type(rd) = 1
    
    PROPERTIES IN deliveryVetCertificate =uuid(vetDocument(incomingConsignment(r))) EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:uuid'

    PROPERTIES   IN deliveryFacts ='ELECTRONIC' EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:vetCertificatePresence'
    
    PROPERTIES(r) IN docInspectionResponsible docInspectionResponsible = loginMercury EXTID 'vd:login'
    PROPERTIES   IN docInspection ='CORRESPONDS' EXTID 'vd:result'
    
    PROPERTIES(r) IN vetInspectionResponsible vetInspectionResponsible = loginMercury EXTID 'vd:login'
    PROPERTIES   IN vetInspection ='CORRESPONDS' EXTID 'vd:result'

    PROPERTIES   IN deliveryFacts =result(incomingConsignment(r)) EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:decision'

    PROPERTIES returnedDelivery() EXTID 'merc:returnedDelivery'
;

// return 
GROUP consignor EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:consignor';
GROUP consignorBusinessEntity EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:businessEntity' : consignor;
GROUP consignorEnterprise EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:enterprise' : consignor;
GROUP consignee EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:consignee';
GROUP consigneeBusinessEntity EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:businessEntity' : consignee;
GROUP consigneeEnterprise EXTID 'dt=http://api.vetrf.ru/schema/cdm/dictionary/v2:enterprise' : consignee;

GROUP consignment EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:consignment';
GROUP consignmentProduct EXTID 'vd:product' : consignment;
GROUP consignmentSubProduct EXTID 'vd:subProduct' : consignment;
GROUP consignmentUnit EXTID 'vd:unit' : consignment;

GROUP broker EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:broker';

FORM processIncomingConsignmentRequestReturnedDelivery
    OBJECTS c = IncomingConsignment PANEL
    
    PROPERTIES =formatT(deliveryDate(c)) EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:deliveryDate'

    PROPERTIES =guid(consigneeBusinessEntityVetDocument(c)) IN consignorBusinessEntity EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =guid(consigneeEnterpriseVetDocument(c)) IN consignorEnterprise EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =guid(consignorBusinessEntityVetDocument(c)) IN consigneeBusinessEntity EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =guid(consignorEnterpriseVetDocument(c)) IN consigneeEnterprise EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid'

    PROPERTIES = id(productType(vetDocument(c))) EXTID 'vd:productType' IN consignment,
               = guid(product(vetDocument(c))) EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid' IN consignmentProduct,
               = guid(subProduct(vetDocument(c))) EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid' IN consignmentSubProduct,
               = productItemXml(vetDocument(c)) EXTID 'vd:productItem' IN consignment,
               = volume(vetDocument(c)) (-) volume(c) EXTID 'vd:volume' IN consignment,
               = guid(unit(vetDocument(c))) EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid' IN consignmentUnit,
               = dateOfProductionXml(vetDocument(c)) EXTID 'vd:dateOfProduction' IN consignment,
               = expiryDateXml(vetDocument(c)) EXTID 'vd:expiryDate' IN consignment,
               = batchID(vetDocument(c)) EXTID 'vd:batchID' IN consignment,
               = IF perishable(vetDocument(c)) THEN 'true' ELSE 'false' EXTID 'vd:perishable' IN consignment,
               = origin(vetDocument(c)) EXTID 'vd:origin' IN consignment,
               = IF lowGradeCargo(vetDocument(c)) THEN 'true' ELSE 'false' EXTID 'vd:lowGradeCargo' IN consignment,
               = packageList(vetDocument(c)) EXTID 'vd:packageList' IN consignment

    PROPERTIES =guid(broker(vetDocument(c))) IN broker EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
               =transportInfo(vetDocument(c)) EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:transportInfo',
               =transportStorageType(vetDocument(c)) EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:transportStorageType'

    OBJECTS rd = VetReferenceDocument IN accompanyingForms EXTID 'vd:waybill' 
    PROPERTIES issueSeries(rd) EXTID 'vd:issueSeries', issueNumber(rd) EXTID 'vd:issueNumber', =toDateISO(issueDate(rd)) EXTID 'vd:issueDate', 
               type(rd) EXTID 'vd:type'
    FILTERS vetDocument(rd) = vetDocument(c),
            relationshipType(rd) = 1

    PROPERTIES = authentication(vetDocument(c)) EXTID 'vd:authentication' IN vetCertificate

; 

process 'Отправить в Ветис' (IncomingConsignment c) {
    NEWSESSION {
        NEW r = ProcessIncomingConsignmentRequest {
            businessEntity(r) <- consigneeBusinessEntityVetDocument(c);

            incomingConsignment(r) <- c;

            IF returnedDelivery(c) THEN {
                EXPORT processIncomingConsignmentRequestReturnedDelivery OBJECTS c = c XML;
                fileToString(exportFile());
                returnedDelivery() <- replace(replace(replace(resultString(), 
                                                      '<?xml version="1.0" encoding="UTF-8"?>', ''),
                                                      '<processIncomingConsignmentRequestReturnedDelivery>', ''),
                                                      '</processIncomingConsignmentRequestReturnedDelivery>', '');
            }         

            EXPORT processIncomingConsignmentRequest OBJECTS r = r XML;
            
            submit(r, exportFile());
            
            APPLY;
        }
    }
}

lastRequest (IncomingConsignment o) = GROUP LAST ProcessIncomingConsignmentRequest r ORDER r WHERE incomingConsignment(r) = o MATERIALIZED;
issueDateLastRequest 'Время заявки' (IncomingConsignment o) = issueDate(lastRequest(o));
nameStatusLastRequest 'Статус заявки' (IncomingConsignment o) = nameStatus(lastRequest(o));
errorLastRequest 'Ошибка заявки' (IncomingConsignment o) = error(lastRequest(o));

toProcess 'К отправке' (IncomingConsignment o) = o IS IncomingConsignment AND NOT notCompleted(lastRequest(o)) AND NOT succeeded(lastRequest(o)) MATERIALIZED INDEXED;  

EXTEND FORM incomingConsignments
    PROPERTIES(c) READONLY issueDateLastRequest, nameStatusLastRequest 

    PROPERTIES(c) process READONLYIF NOT toProcess(c) GRID

    EXTEND FILTERGROUP status
        FILTER 'К отправке' toProcess(c) DEFAULT
; 

// process
//GROUP stockEntry EXTID 'merc:stockEntry';
//GROUP stockEntryBatch EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:batch' : stockEntry;
//
//stockEntryGuid = DATA LOCAL STRING();
//stockEntryNumber = DATA LOCAL STRING();
//stockEntryActive = DATA LOCAL BOOLEAN();
//
//stockEntryVolume = DATA NUMERIC[16,5]();


FORM processIncomingConsignmentResponse FORMEXTID 'merc=http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2:processIncomingConsignmentResponse'
    PROPERTIES() stockEntry EXTID 'merc:stockEntry'
//    PROPERTIES() IN stockEntry
//                    stockEntryGuid EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:guid',
//                    stockEntryActive EXTID 'bs=http://api.vetrf.ru/schema/cdm/base:active',
//                    stockEntryNumber EXTID 'vd=http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2:entryNumber'
//    PROPERTIES() IN stockEntryBatch
//                    stockEntryVolume EXTID 'vd:volume'
    
    OBJECTS vetDocument = INTEGER EXTID 'merc:vetDocument'
    PROPERTIES(vetDocument) vetDocument EXTID 'value:full'
;

process (ProcessIncomingConsignmentRequest r) + {
    NEWSESSION {
        stringToFile(response(r));
        IMPORT processIncomingConsignmentResponse XML FROM resultFile();
        
        importStockEntry(stockEntry(), consigneeEnterprise(vetDocument(incomingConsignment(r))));
//        IF NOT stockEntry(stockEntryGuid()) THEN NEW s = StockEntry {
//            guid(s) <- stockEntryGuid();            
//        }
//        
//        FOR guid(StockEntry s) = stockEntryGuid() DO {
//            incomingConsignment(s) <- incomingConsignment(r);
//            
//            number(s) <- stockEntryNumber();
//            
//            active(s) <- stockEntryActive();
//            
//            enterprise(s) <- consigneeEnterprise(vetDocument(incomingConsignment(r)));
//            
//            in(s, VetDocument d) <- TRUE WHERE d = vetDocument(incomingConsignment(r));
//            in(s, ProductItem i) <- TRUE WHERE i = productItem(vetDocument(incomingConsignment(r)));
//            
//            volume(s) <- stockEntryVolume();
//            unit(s) <- unit(vetDocument(incomingConsignment(r)));
//
//            dateOfProduction(s) <- dateOfProduction(vetDocument(incomingConsignment(r)));
//            dateOfProductionHour(s) <- dateOfProductionHour(vetDocument(incomingConsignment(r)));
//
//            expiryDate(s) <- expiryDate(vetDocument(incomingConsignment(r)));
//            expiryDateHour(s) <- expiryDateHour(vetDocument(incomingConsignment(r)));
//        }
        
        FOR vetDocument(INTEGER i) DO 
            importVetDocument(vetDocument(i));
        
        processed(r) <- TRUE;
        APPLY;
    }
}

META defineDocumentIncomingProcess (doc, obj)
    issueDateLastRequest 'Время заявки' (###doc##Detail vd, VetDocument vtd) = issueDateLastRequest(incomingConsignment(vd, vtd));
    nameStatusLastRequest 'Статус заявки' (###doc##Detail vd, VetDocument vtd) = nameStatusLastRequest(incomingConsignment(vd, vtd));
    errorLastRequest 'Ошибка заявки' (###doc##Detail vd, VetDocument vtd) = errorLastRequest(incomingConsignment(vd, vtd));
    
    toProcess (###doc##Detail vd, VetDocument vtd) = toProcess(incomingConsignment(vd, vtd));
    toProcess (###doc i) = GROUP SUM 1 IF toProcess(###doc##Detail vd, VetDocument vtd) AND doc(vd) = i; 
    process 'Отправить в Ветис' (###doc##Detail vd, VetDocument vtd) { process(incomingConsignment(vd, vtd)); }
    
    process 'Отправить в Ветис' (###doc i) {
        FOR doc(###doc##Detail d) = i AND toProcess(d, VetDocument vd) DO
            process(d, vd);
    }
    
    EXTEND FORM doc##s
        OBJECTS vse = (vd = ###doc##Detail, vtd = VetDocument)
        PROPERTIES(vd) READONLY index, idBarcodeSku, idSku, nameSku, shortNameUOMSku 
        PROPERTIES(vtd) READONLY nameStatus, uuid, issueDate, nameProductItem, volume
        PROPERTIES(vd, vtd) READONLY volume
        ORDERS index(vd)
        
        FILTERS doc(vd) = obj, volume(vd, vtd)
    
        PROPERTIES(obj) processVetis = process DRAW vse TOOLBAR SHOWIF toProcess(obj)
         
        PROPERTIES(vd, vtd) issueDateLastRequest, nameStatusLastRequest, errorLastRequest PANEL,
                           process READONLYIF NOT toProcess(incomingConsignment(vd, vtd)) GRID
    ;
    
    DESIGN doc##s {
        documentDetail {
            NEW vetis {
                caption = 'Ветис';
                MOVE BOX(vse);
                MOVE PROPERTY(errorLastRequest(vd, vtd)) {
                    alignment = STRETCH;
                    panelCaptionVertical = TRUE;
                }
            }
        }
    }
END