MODULE VetisDocument;

REQUIRE VetisBusinessEntity, VetisEnterprise, VetisProductItem, VetisUnit, VetisPurpose, 
        MasterData, Utils;

NAMESPACE Vetis;

@defineStaticObject(vetDocumentType, 'Тип ВСД');
EXTEND CLASS VetDocumentType {
    INCOMING 'Входящий',
    OUTGOING 'Исходящий',
    PRODUCTIVE 'Производственный',
    TRANSPORT 'Транспортный',
    RETURNABLE 'Возвратный'
}

id 'Код' (VetDocumentType o) = STRING[100](rtrim(getWord(staticName(o),'.',2),'_')) IF o IS VetDocumentType CHARWIDTH 10;
vetDocumentType = GROUP MAX VetDocumentType o BY id(o);

@defineStaticObject(vetDocumentStatus, 'Статус ВСД');
EXTEND CLASS VetDocumentStatus {
    CONFIRMED 'Подтверждён',
    WITHDRAWN 'Аннулирован',
    UTILIZED 'Погашен'
}

id 'Код' (VetDocumentStatus o) = STRING[100](rtrim(getWord(staticName(o),'.',2),'_')) IF o IS VetDocumentStatus CHARWIDTH 10;
vetDocumentStatus = GROUP MAX VetDocumentStatus o BY id(o);

// document
CLASS VetDocument 'ВСД';
TABLE vetDocument (VetDocument);

uuid 'Код' = DATA STRING (VetDocument) CHARWIDTH 36 INDEXED;
vetDocument 'ВСД' = GROUP AGGR VetDocument d BY uuid(d);

issueDate 'Дата оформления ВСД' = DATA DATE (VetDocument);

type = DATA VetDocumentType (VetDocument);
nameType 'Тип' (VetDocument d) = name(type(d));

status = DATA VetDocumentStatus (VetDocument) INDEXED;
nameStatus 'Статус' (VetDocument d) = name(status(d));

// consignor
consignorBusinessEntity = DATA BusinessEntity (VetDocument); 
nameConsignorBusinessEntity 'Отправитель-хозяйствующий субъект' (VetDocument d) = name(consignorBusinessEntity(d));

consignorEnterprise = DATA Enterprise (VetDocument); 
nameConsignorEnterprise 'Отправитель-площадка' (VetDocument d) = name(consignorEnterprise(d));

// consignee
consigneeBusinessEntity = DATA BusinessEntity (VetDocument); 
nameConsigneeBusinessEntity 'Получатель-хозяйствующий субъект' (VetDocument d) = name(consigneeBusinessEntity(d));

consigneeEnterprise = DATA Enterprise (VetDocument); 
nameConsigneeEnterprise 'Получатель-площадка' (VetDocument d) = name(consigneeEnterprise(d));

// broker
broker = DATA BusinessEntity (VetDocument); 
nameBroker 'Фирма-посредник' (VetDocument d) = name(broker(d));

// transport
transportInfo 'Информация о транспорте' = DATA TEXT (VetDocument);
transportStorageType 'Способ хранения продукции при перевозке' = DATA STRING (VetDocument); 

// batch
//batch 'Сведения о партии продукции' = DATA TEXT (VetDocument);

productType = DATA ProductType (VetDocument);
nameProductType 'Тип продукции' (VetDocument d) = name(productType(d));

product = DATA Product (VetDocument);
guidProduct 'Код продукция' (VetDocument d) = guid(product(d));
nameProduct 'Продукция' (VetDocument d) = name(product(d));

subProduct = DATA SubProduct (VetDocument);
guidSubProduct 'Код вида продукции' (VetDocument d) = guid(subProduct(d));
nameSubProduct 'Вид продукции' (VetDocument d) = name(subProduct(d));

productItem = DATA ProductItem (VetDocument);
guidProductItem 'Код продукции' (VetDocument d) = guid(productItem(d));
nameProductItem 'Наименование продукции' (VetDocument d) = name(productItem(d));
productItemXml 'Номенклатура' = DATA TEXT (VetDocument);

volume 'Объем продукции' = DATA NUMERIC[16,5] (VetDocument);

unit = DATA Unit (VetDocument);
nameUnit 'Единица измерения' (VetDocument d) = name(unit(d));

dateOfProductionXml 'Дата выработки продукции' = DATA TEXT (VetDocument);
dateOfProduction 'Дата выработки продукции' = DATA DATE (VetDocument);
dateOfProductionHour 'Час выработки продукции' = DATA INTEGER (VetDocument);

expiryDateXml 'Дата окончания срока годности продукции' = DATA TEXT (VetDocument);
expiryDate 'Дата окончания срока годности продукции' = DATA DATE (VetDocument);
expiryDateHour 'Час окончания срока годности продукции' = DATA INTEGER (VetDocument);

batchID 'Идентификатор производственной партии продукции' = DATA STRING (VetDocument);
perishable 'Скоропортящаяся' = DATA BOOLEAN (VetDocument);
origin 'Сведения о происхождении продукции' = DATA TEXT (VetDocument);
lowGradeCargo 'Некачественный' = DATA BOOLEAN (VetDocument);
packageList 'Список физической упаковки' = DATA TEXT (VetDocument);

authentication 'Результаты осмотра/исследований партии' = DATA TEXT (VetDocument);

purpose = DATA Purpose (VetDocument);
namePurpose 'Назначение груза' (VetDocument d) = name(purpose(d));

// referenced document
CLASS VetReferenceDocument 'Связанный документ ВСД';

vetDocument = DATA VetDocument (VetReferenceDocument) NONULL DELETE INDEXED;

issueSeries 'Серия документа' = DATA STRING (VetReferenceDocument); 
issueNumber 'Номер документа' = DATA STRING (VetReferenceDocument);
issueSeriesNumber (VetReferenceDocument r) = CONCAT '', issueSeries(r), issueNumber(r) CHARWIDTH 10; 

issueDate 'Дата оформления документа' = DATA DATE (VetReferenceDocument);

type 'Тип документа' = DATA INTEGER (VetReferenceDocument);
relationshipType 'Тип отношения между документами' = DATA INTEGER (VetReferenceDocument);

issueKey (VetReferenceDocument rd) = CONCAT ';', issueSeries(rd), issueNumber(rd), issueDate(rd), type(rd), relationshipType(rd);
vetReferenceDocument = GROUP MAX VetReferenceDocument rd BY vetDocument(rd), issueKey(rd);

waybill (VetDocument d) = GROUP LAST VetReferenceDocument r ORDER r WHERE vetDocument(r) = d AND relationshipType(r) = 1;
issueSeriesNumberWaybill 'Накладная' (VetDocument d) = issueSeriesNumber(waybill(d)); 

FORM vetDocument 'ВСД'
    OBJECTS o = VetDocument PANEL
    PROPERTIES(o) uuid, issueDate, nameType, nameStatus, 
                  nameConsignorBusinessEntity, nameConsignorEnterprise,
                  nameConsigneeBusinessEntity, nameConsigneeEnterprise,
                  nameBroker,

                  nameProductType, guidProduct, nameProduct,
                  guidSubProduct, nameSubProduct, 
                  guidProductItem, nameProductItem, 
                  volume, nameUnit,
                  dateOfProduction, dateOfProductionHour,
                  expiryDate, expiryDateHour,
                  dateOfProductionXml, expiryDateXml, 
                  batchID, perishable, lowGradeCargo, 
                  productItemXml, origin, packageList, 
                  
                  transportStorageType, transportInfo,

                  authentication, namePurpose

    OBJECTS rd = VetReferenceDocument
    PROPERTIES(rd) READONLY issueSeries, issueNumber, issueDate, type, relationshipType
    FILTERS vetDocument(rd) = o
        
    EDIT VetDocument OBJECT o
;

DESIGN vetDocument {
    caption = CONCAT ' ', 'ВСД', uuid(o);
    OBJECTS {
        NEW header {
            NEW commons {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(uuid(o));
                MOVE PROPERTY(issueDate(o));
                MOVE PROPERTY(nameType(o));
                MOVE PROPERTY(nameStatus(o));
            }
            NEW consignor {
                alignment = STRETCH;
                MOVE PROPERTY(nameConsignorBusinessEntity(o));
                MOVE PROPERTY(nameConsignorEnterprise(o));
            }
            NEW consignee {
                alignment = STRETCH;
                MOVE PROPERTY(nameConsigneeBusinessEntity(o));
                MOVE PROPERTY(nameConsigneeEnterprise(o));
            }
            NEW broker {
                alignment = STRETCH;
                MOVE PROPERTY(nameBroker(o));
            }
        }
        NEW details {
            tabbed = TRUE;
            fill = 1;
            NEW transport {
                caption = 'Транспорт';
                MOVE PROPERTY(transportStorageType(o));
                MOVE PROPERTY(transportInfo(o)) {
                    panelCaptionVertical = TRUE;
                    fill = 1;
                }
            }
            NEW batch {
                caption = 'Сведения о партии продукции';
                NEW productType {
                    horizontal = TRUE;
                    alignment = STRETCH;
                    MOVE PROPERTY(nameProductType(o));
                    MOVE PROPERTY(guidProduct(o));
                    MOVE PROPERTY(nameProduct(o));
                }
                NEW productItem {
                    horizontal = TRUE;
                    alignment = STRETCH;
                    type = COLUMNS;
                    lines = 2;
                    
                    MOVE PROPERTY(guidSubProduct(o));
                    MOVE PROPERTY(nameSubProduct(o));
                    MOVE PROPERTY(guidProductItem(o));
                    MOVE PROPERTY(nameProductItem(o));
                }
                NEW volume {
                    horizontal = TRUE;
                    MOVE PROPERTY(volume(o));                    
                    MOVE PROPERTY(nameUnit(o));                    
                }
                NEW dates {
                    horizontal = TRUE;
                    MOVE PROPERTY(dateOfProduction(o));
                    MOVE PROPERTY(dateOfProductionHour(o));
                    MOVE PROPERTY(expiryDate(o));
                    MOVE PROPERTY(expiryDateHour(o));
                }
                NEW datesXml {
                    horizontal = TRUE;
                    alignment = STRETCH;
                    MOVE PROPERTY(dateOfProductionXml(o)) { fill = 1; panelCaptionVertical = TRUE; }
                    MOVE PROPERTY(expiryDateXml(o)) { fill = 1; panelCaptionVertical = TRUE; }
                }
                NEW batchExtra {
                    horizontal = TRUE;
                    alignment = STRETCH;
                    MOVE PROPERTY(batchID(o));
                    MOVE PROPERTY(perishable(o));
                    MOVE PROPERTY(lowGradeCargo(o));
                    MOVE PROPERTY(namePurpose(o));
                }
                NEW batchXml {
                    horizontal = TRUE;
                    alignment = STRETCH;
                    MOVE PROPERTY(productItemXml(o)) { fill = 1; panelCaptionVertical = TRUE; }
                    MOVE PROPERTY(origin(o)) { fill = 1; panelCaptionVertical = TRUE; }
                    MOVE PROPERTY(packageList(o)) { fill = 1; panelCaptionVertical = TRUE; }
                }
            }
            NEW authentication {
                caption = 'Ветеринарно-санитарная экспертиза';
                MOVE PROPERTY(namePurpose(o));
                MOVE PROPERTY(authentication(o)) { fill = 1; panelCaptionVertical = TRUE; }
            }

            NEW referenceDocument {
                caption = 'Связанные документы';
                MOVE BOX(rd);
            }
        }
    }
}

FORM vetDocuments 'ВСД'
    OBJECTS o = VetDocument
    PROPERTIES(o) READONLY uuid, issueDate, issueSeriesNumberWaybill, nameType, nameStatus,
                           nameConsignorBusinessEntity, nameConsignorEnterprise,
                           nameConsigneeBusinessEntity, nameConsigneeEnterprise,
                           guidProductItem, nameProductItem, 
                           volume, nameUnit, 
                           dateOfProduction, dateOfProductionHour,
                           expiryDate, expiryDateHour,
                           namePurpose
                
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
    
    FILTERGROUP status
        FILTER 'Подтверждён' status(o) = VetDocumentStatus.CONFIRMED DEFAULT
        FILTER 'Погашен' status(o) = VetDocumentStatus.UTILIZED
        FILTER 'Аннулирован' status(o) = VetDocumentStatus.WITHDRAWN
;

FORM dialogVetDocuments 'ВСД'
    OBJECTS o = VetDocument
    PROPERTIES(o) READONLY uuid, issueDate, issueSeriesNumberWaybill, nameType, nameStatus,
                           nameConsignorBusinessEntity, nameConsignorEnterprise,
                           nameConsigneeBusinessEntity, nameConsigneeEnterprise,
                           guidProductItem, nameProductItem,
                           volume, nameUnit,
                           dateOfProduction, dateOfProductionHour,
                           expiryDate, expiryDateHour
    
    LIST VetDocument OBJECT o
;

NAVIGATOR {
    vetisDocuments {
        NEW vetDocuments;
    }
}

show 'Просмотреть' (VetDocument d)   { 
    NEWSESSION{
        SHOW vetDocument OBJECTS o = d DOCKED READONLY;
    }
} TOOLBAR;

EXTEND FORM vetDocuments
    PROPERTIES(o) show
;
    