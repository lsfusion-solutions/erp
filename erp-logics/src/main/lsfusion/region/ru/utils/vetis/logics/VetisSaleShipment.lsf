MODULE VetisSaleShipment;

REQUIRE VetisOutgoingConsignment, VetisLegalEntity, VetisSaleInvoice, 
        SaleShipment, TripSaleShipment,
        VetisCheckShipmentRegionalization, VetisWithdrawVetDocument;

PRIORITY Sale;

NAMESPACE VetisSale;

transportStorageType = DATA TransportStorageType (Trip);
nameTransportStorageType 'Способ хранения при перевозке' (Trip trip) = staticCaption(transportStorageType(trip));

EXTEND FORM trip
    PROPERTIES (t) nameTransportStorageType
;

DESIGN trip {
    truckContainer {
        MOVE PROPERTY(nameTransportStorageType(t));
    }
}

nameTransportStorageType 'Способ хранения при перевозке' (InvoiceShipment is) = nameTransportStorageType(trip(is));

EXTEND FORM invoices
    PROPERTIES (tis) READONLY nameTransportStorageType AFTER nameTruckModelTrip(tis)
;

DESIGN invoices {
    transport {
        MOVE PROPERTY(nameTransportStorageType(tis)) AFTER PROPERTY(nameTruckModelTrip(tis));
    }
}

@defineDocumentStockEntry(userShipment, supplierStock, quantity, s, specificationBox);

// shipment detail
volume 'Объем в документе' = ABSTRACT NUMERIC[16,5] (ShipmentDetail, StockEntry);

// invoice detail
volume(UserShipmentDetail d, StockEntry s) += volume(d, s);
volume(InvoiceShipmentDetail d, StockEntry s) += volume(invoiceDetail(d), s);

// consignment
@defineDocumentOutgoingConsignment(shipment, supplier, customer, ' (продажа)');

dataTransportStorageType (ShipmentOutgoingConsignment c) += transportStorageType(trip(shipment(shipmentDetail(c))));

@defineOperationProperty(purposeVetis, 'Назначение груза (Ветис)', Purpose, paramsContainer);

dataPurpose (ShipmentOutgoingConsignment c) += purposeVetis(operation(shipmentDetail(c)));

// shipment
volume (ShipmentDetail d, VetDocument vd) = GROUP SUM volume(d, StockEntry s) IF vetDocument(outgoingConsignment(d, s)) = vd;
@defineDocumentOutgoingProcess(shipment, s);

@defineDocumentOutgoingWithdraw(shipment);

// invoice
outgoingConsignment (InvoiceDetail vd, StockEntry se) = outgoingConsignment(invoiceShipmentDetail(vd), se);
@defineDocumentOutgoingProcess(invoice, i);

@defineChangeOutgoingConsignmentDialog(invoice);

@defineDocumentOutgoingWithdraw(invoice);

FORM dialogPrepareOutgoingConsignmentRequest 'История заявок Ветис'
    OBJECTS o = OutgoingConsignment   

    OBJECTS r = PrepareOutgoingConsignmentRequest
    PROPERTIES (r) READONLY id, issueDate, nameBusinessEntity, error, nameStatus
    ORDERS issueDate(r) DESC
    FILTERS in(r, o)   
;

showDialogPrepareOutgoingConsignmentRequest 'Показать историю заявок Ветис' (OutgoingConsignment o) {
    NEWSESSION SHOW dialogPrepareOutgoingConsignmentRequest OBJECTS o = o;
}

showDialogPrepareOutgoingConsignmentRequest 'Показать историю заявок Ветис' (InvoiceDetail d, StockEntry e) {
    FOR OutgoingConsignment o = outgoingConsignment(d, e) DO {
        showDialogPrepareOutgoingConsignmentRequest(o);
    }
} ASON CONTEXTMENU nameStatusLastRequest[InvoiceDetail, StockEntry];

toProcessCheck (ShipmentDetail vd, StockEntry se) = toProcessCheck(outgoingConsignment(vd, se));
toProcessCheck (Shipment i) = GROUP SUM 1 IF toProcessCheck(ShipmentDetail vd, StockEntry se) AND shipment(vd) = i;
toProcessCheck 'Получить условия регионализации' (ShipmentDetail vd, StockEntry se) { processCheck(outgoingConsignment(vd, se)); }

processCheck 'Получить условия регионализации' (Shipment i) {
    in(OutgoingConsignment c) <- toProcessCheck(c) IF
        GROUP SUM 1 IF outgoingConsignment(ShipmentDetail d, StockEntry se) = c AND
            shipment(d) = i;
    IF GROUP SUM 1 IF in(OutgoingConsignment c) THEN
        processCheckOutgoingConsignment();
}

showRegionalizationConditions 'Показать условия регионализации' (ShipmentDetail vd, StockEntry se) {
    showRegionalizationConditions(outgoingConsignment(vd, se));
}

hasRegionalization(ShipmentDetail vd, StockEntry se) = hasRegionalization(outgoingConsignment(vd, se));

issueDateLastCheckRequest 'Время получения данных об условиях регионализации' (ShipmentDetail vd, StockEntry se) = 
    issueDateLastCheckRequest(outgoingConsignment(vd, se));
nameStatusLastCheckRequest 'Статус получения данных об условиях регионализации' (ShipmentDetail vd, StockEntry se) =
    nameStatusLastCheckRequest(outgoingConsignment(vd, se));

EXTEND FORM shipments
    PROPERTIES(s) processCheck DRAW vse TOOLBAR SHOWIF toProcessCheck(s)
    PROPERTIES(vd, se) issueDateLastCheckRequest, nameStatusLastCheckRequest,
        showRegionalizationConditions DRAW vse TOOLBAR SHOWIF hasRegionalization(vd, se)
;