MODULE VetisOutgoingConsignment;

REQUIRE VetisStockEntry, VetisUnit,
        Transport;

NAMESPACE Vetis;

CLASS ABSTRACT OutgoingConsignment 'Исходящая партия (ветис)';
TABLE outgoingConsignment(OutgoingConsignment);

deliveryDate 'Дата оформления' = ABSTRACT DATETIME (OutgoingConsignment) MATERIALIZED;

// consignor
consignorBusinessEntity = ABSTRACT BusinessEntity (OutgoingConsignment) MATERIALIZED; 
nameConsignorBusinessEntity 'Отправитель-хозяйствующий субъект' (OutgoingConsignment d) = name(consignorBusinessEntity(d));

consignorEnterprise = ABSTRACT Enterprise (OutgoingConsignment) MATERIALIZED; 
nameConsignorEnterprise 'Отправитель-площадка' (OutgoingConsignment d) = name(consignorEnterprise(d));

// consignee
consigneeBusinessEntity = ABSTRACT BusinessEntity (OutgoingConsignment) MATERIALIZED; 
nameConsigneeBusinessEntity 'Получатель-хозяйствующий субъект' (OutgoingConsignment d) = name(consigneeBusinessEntity(d));

consigneeEnterprise = ABSTRACT Enterprise (OutgoingConsignment) MATERIALIZED; 
nameConsigneeEnterprise 'Получатель-площадка' (OutgoingConsignment d) = name(consigneeEnterprise(d));

// stock entry
stockEntry = ABSTRACT StockEntry (OutgoingConsignment) MATERIALIZED INDEXED;
guidStockEntry 'Код складского журнала' (OutgoingConsignment c) = guid(stockEntry(c));

numberStockEntry 'Номер складского журнала' (OutgoingConsignment c) = number(stockEntry(c));

CLASS TransportStorageType 'Способ хранения при перевозке' {
    FROZEN 'Замороженный',
    CHILLED 'Охлажденный',
    COOLED 'Охлаждаемый',
    VENTILATED 'Вентилируемый'
}

sid (TransportStorageType type) = staticName(type) IF type IS TransportStorageType;

dataTransportStorageType 'Способ хранения продукции при перевозке' = ABSTRACT TransportStorageType (OutgoingConsignment);

transportStorageType 'Способ хранения продукции при перевозке' (OutgoingConsignment c) = 
    OVERRIDE getWord(staticName(dataTransportStorageType(c)),'.',2), lastTransportStorageType(stockEntry(c));

volume 'Объем продукции' = ABSTRACT NUMERIC[16,5] (OutgoingConsignment) MATERIALIZED; 

dataPurpose 'Назначение груза' = ABSTRACT Purpose (OutgoingConsignment);

// transport
truck = ABSTRACT Truck (OutgoingConsignment) MATERIALIZED;
nameTruck 'Автомобиль' (OutgoingConsignment c) = name(truck(c));

// waybill
waybillSeries 'Серия документа' = ABSTRACT STRING (OutgoingConsignment); 
waybillNumber 'Номер документа' = ABSTRACT STRING (OutgoingConsignment); 
waybillDate 'Дата документа' = ABSTRACT DATE (OutgoingConsignment);
waybillType 'Тип документа' = ABSTRACT INTEGER (OutgoingConsignment);
nameWaybillType 'Тип документа' = ABSTRACT STRING (OutgoingConsignment) CHARWIDTH 10;

FORM outgoingConsignments 'Исходящие партии'
    OBJECTS c = OutgoingConsignment
    PROPERTIES(c) READONLY 
                  objectClassName, guidStockEntry, numberStockEntry,
                  nameConsignorBusinessEntity, nameConsignorEnterprise,
                  nameConsigneeBusinessEntity, nameConsigneeEnterprise,
                  volume, nameTruck,
                  nameWaybillType, waybillSeries, waybillNumber, waybillDate
                  
    PROPERTIES(c) NEWSESSION EDIT
;

NAVIGATOR {
    vetisDocuments {
        NEW outgoingConsignments;
    }
}

// result vet document
vetDocument = DATA VetDocument (OutgoingConsignment);
uuidVetDocument 'Код ВСД' (OutgoingConsignment c) = uuid(vetDocument(c));
nameStatusVetDocument 'Статус ВСД' (OutgoingConsignment c) = nameStatus(vetDocument(c));

EXTEND FORM outgoingConsignments
    PROPERTIES(c) READONLY uuidVetDocument, nameStatusVetDocument

    FILTERGROUP status
        FILTER 'Подтверждён' status(vetDocument(c)) = VetDocumentStatus.CONFIRMED
        FILTER 'Погашен' status(vetDocument(c)) = VetDocumentStatus.UTILIZED
;

META defineDocumentOutgoingConsignment (doc, consignor, consignee, caption)
    CLASS ###doc##OutgoingConsignment 'Исходящая партия (ветис) на основе поставки'##caption : OutgoingConsignment;
    
    outgoingConsignment = AGGR ###doc##OutgoingConsignment WHERE volume(###doc##Detail doc##Detail, StockEntry stockEntry) AND isPosted(doc##Detail) MATERIALIZED INDEXED;
    
    deliveryDate(###doc##OutgoingConsignment c) += dateTime(doc##Detail(c));
    
    consignorBusinessEntity(###doc##OutgoingConsignment c) += businessEntity(consignor(doc##Detail(c)));
    consignorEnterprise(###doc##OutgoingConsignment c) += enterprise(consignor##Stock(doc##Detail(c)));
    
    consigneeBusinessEntity(###doc##OutgoingConsignment c) += businessEntity(consignee(doc##Detail(c)));
    consigneeEnterprise(###doc##OutgoingConsignment c) += enterprise(consignee##Stock(doc##Detail(c)));
    
    stockEntry(###doc##OutgoingConsignment c) += stockEntry(c);
    
    volume(###doc##OutgoingConsignment c) += volume(doc##Detail(c), stockEntry(c));
    
    truck(###doc##OutgoingConsignment c) += truck(trip(doc(doc##Detail(c))));

    overWaybillType = ABSTRACT INTEGER (###doc##OutgoingConsignment);
    waybillType(###doc##OutgoingConsignment c) += OVERRIDE overWaybillType(c), 1 IF c IS ###doc##OutgoingConsignment;
            
    waybillSeries(###doc##OutgoingConsignment c) += STRING(series(doc##Detail(c))) IF NOT overWaybillType(c);
    
    overWaybillNumber = ABSTRACT STRING (###doc##OutgoingConsignment);
    waybillNumber(###doc##OutgoingConsignment c) += OVERRIDE overWaybillNumber(c), number(doc##Detail(c));
    
    overWaybillDate = ABSTRACT DATE (###doc##OutgoingConsignment);
    waybillDate(###doc##OutgoingConsignment c) += OVERRIDE overWaybillDate(c), date(doc##Detail(c));
       
    overWaybillName = ABSTRACT STRING (###doc##OutgoingConsignment);
    nameWaybillType(###doc##OutgoingConsignment c) += OVERRIDE overWaybillName(c), 'ТТН' IF c IS ###doc##OutgoingConsignment;
    
    edit(###doc##OutgoingConsignment c) + { edit(doc##Detail(c)); }
END