MODULE VetisStock;

REQUIRE Stock, VetisEnterprise, VetisDocument,
        Warehouse, Store,
        VetisLegalEntity;

NAMESPACE Vetis;

enterprise = DATA Enterprise (Stock) INDEXED;
guidEnterprise 'Код площадки' (Stock st) = guid(enterprise(st));
nameEnterprise 'Наименование площадки' (Stock st) = name(enterprise(st));

useAllEnterprises 'Использовать все площадки владельца' = DATA BOOLEAN (Stock);

TABLE stockEnterprise (Stock, Enterprise);
in (Stock s, Enterprise e) = enterprise(s) = e OR (useAllEnterprises(s) AND owner(e) = owner(enterprise(s))) MATERIALIZED;

CONSTRAINT enterprise(Stock st) AND NOT owner(enterprise(st)) = businessEntity(legalEntity(st))
    CHECKED BY enterprise[Stock]
    MESSAGE 'ХС организации склада должен совпадать с владельцем площадки склада'; 

stocks 'Склады' (Enterprise e) = GROUP CONCAT name(Stock s) IF enterprise(s) = e, ', ' ORDER s;

// warehouse
EXTEND FORM warehouse
    PROPERTIES(w) 'Код' = guidEnterprise, 'Имя' = nameEnterprise, useAllEnterprises
;

DESIGN warehouse {
    headerLeft {
        NEW vetis {
            caption = 'Ветис';
            horizontal = TRUE;
            MOVE PROPERTY(guidEnterprise(w));
            MOVE PROPERTY(nameEnterprise(w));
            MOVE PROPERTY(useAllEnterprises(w));
        }
    }
}

// store
EXTEND FORM departmentStore
    PROPERTIES(d) 'Код' = guidEnterprise, 'Имя' = nameEnterprise, useAllEnterprises
;

DESIGN departmentStore {
    headerLeft {
        NEW vetis {
            caption = 'Ветис';
            lines = 3;
            MOVE PROPERTY(guidEnterprise(d));
            MOVE PROPERTY(nameEnterprise(d));
            MOVE PROPERTY(useAllEnterprises(d));
        }
    }
}

FORM requestWayBillNumber 'Запрос номера накладной в Меркурий'
    OBJECTS s = STRING PANEL
    PROPERTIES(s) number '' = VALUE
;
DESIGN requestWayBillNumber {
    OBJECTS {
        MOVE PROPERTY(number);
    }
}

stocksConsignorEnterprise 'Склады отправителя' (VetDocument d) = stocks(consignorEnterprise(d));
stocksConsigneeEnterprise 'Склады получателя' (VetDocument d) = stocks(consigneeEnterprise(d));
EXTEND FORM vetDocuments
    PROPERTIES(o) READONLY stocksConsignorEnterprise AFTER guidConsignorEnterprise(o),
                           stocksConsigneeEnterprise AFTER guidConsigneeEnterprise(o)
;

// META 
META defineDocumentVetDocument (doc, consignor, consignee, quantity, obj, container)
    volume 'Объем в документе' = DATA NUMERIC[16,5] (###doc##Detail, VetDocument);
    
    volumeDetail 'Объем в документе' (###doc##Detail vd, VetDocument vtd) = NUMERIC[16,5](MIN (quantity(vd) * OVERRIDE factor(sku(vd), unit(vtd)), 1.0), volume(vtd)); 
    fillVolume 'Выбрать' (###doc##Detail vd, VetDocument vtd) { volume(vd, vtd) <- volumeDetail(vd, vtd); }
    
    matches (###doc##Detail vd, VetDocument vtd) = 
        consignorBusinessEntity(vtd) = businessEntity(consignor(vd)) AND
        in(consignor##Stock(vd), consignorEnterprise(vtd)) AND
        in(consignee##Stock(vd), consigneeEnterprise(vtd)) AND
        productItem(vtd) = productItem(sku(vd));
    
    fillExpiryDate 'Заполнить сроки годности' (###doc d) {
        ASK 'Заполнить сроки годности из ВСД ?' DO
            expiryDate(###doc##Detail vd) <- (GROUP MAX expiryDate(VetDocument vtd) IF volume(vd, vtd)) 
                                             WHERE doc(vd) = d AND (GROUP MAX expiryDate(VetDocument vtd) IF volume(vd, vtd)); 
    }

    fillVolumeDate 'Заполнить по дате' (###doc d) {
        volume(###doc##Detail vd, VetDocument vtd) <- volumeDetail(vd, vtd)
            IF date(vd) = issueDate(vtd) AND matches(vd, vtd) AND status(vtd) = VetDocumentStatus.CONFIRMED
            WHERE doc(vd) = d;
        fillExpiryDate(d);
    } CONFIRM;
    
    fillVolume 'Заполнить по номеру' (###doc d) {
        DIALOG requestWayBillNumber OBJECTS s = seriesNumber(d) INPUT DO {
            volume(###doc##Detail vd, VetDocument vtd) <- volumeDetail(vd, vtd)
                IF s = issueSeriesNumberWaybill(vtd) AND matches(vd, vtd) AND status(vtd) = VetDocumentStatus.CONFIRMED
                WHERE doc(vd) = d;
            fillExpiryDate(d);
        }
    }
    
    uuidVetDocument 'Коды ВСД' (###doc##Detail d) =
        GROUP CONCAT uuid(VetDocument s) IF volume(d, s), ',' ORDER s;
    
    volumeVetDocument 'Объем в документе' (###doc##Detail d) = GROUP SUM volume(d, VetDocument s) MATERIALIZED;
    
    EXTEND FORM doc
        OBJECTS vd = ###doc##Detail
        PROPERTIES(vd) READONLY index, idBarcodeSku, idSku, nameSku, shortNameUOMSku, quantity,
                                uuidVetDocument, volumeVetDocument
        ORDERS index(vd)
        FILTERS doc(vd) = obj,
                productItem(sku(vd)) OR volumeVetDocument(vd)

        PROPERTIES(obj) DRAW vd TOOLBAR fillVolume, fillVolumeDate
        
        OBJECTS vtd = VetDocument
        PROPERTIES(vtd) READONLY nameStatus, uuid, issueDate, issueSeriesNumberWaybill, nameProductItem, volume, expiryDate
        PROPERTIES(vd, vtd)      volume, fillVolume GRID
        FILTERS matches(vd, vtd)
    
        FILTERGROUP active
            FILTER 'Подтвержденные' status(vtd) = VetDocumentStatus.CONFIRMED OR volume(vd, vtd) DEFAULT 
    ;
    
    DESIGN doc {
        container {
            NEW vetis {
                caption = 'ВСД';
                NEW vetisHeader {
                    horizontal = TRUE;
                }
                NEW vetisDetail {
                    fill = 1;
                    horizontal = TRUE;
                    MOVE BOX(vd);
                    MOVE BOX(vtd);
                }
            }
        }
    }
END

META defineDocumentStockEntry (doc, stock, quantity, obj, container)

    volume 'Объем в документе' = DATA NUMERIC[16,5] (###doc##Detail, StockEntry);

    volumeDetail 'Объем в документе' (###doc##Detail vd, StockEntry s) = NUMERIC[16,5](quantity(vd) * OVERRIDE factor(sku(vd), unit(s)), 1.0); 
    fillVolume 'Выбрать' (###doc##Detail d, StockEntry s) { volume(d, s) <- volumeDetail(d, s); }

    quantity (###doc##Detail vd, StockEntry s) = volume(s) / OVERRIDE factor(sku(vd), unit(s)), 1.0;
    
    matches (###doc##Detail vd, StockEntry s) = in(stock(vd), enterprise(s)) AND in(s, productItem(sku(vd))) AND active(s);
    
    calcQuantity(###doc##Detail vd, StockEntry s) = 
        PARTITION UNGROUP quantity LIMIT quantity(vd, s) IF matches(vd, s) ORDER expiryDate(s), s BY vd;

    fillVolume 'Заполнить' (###doc d) {
        volume(###doc##Detail vd, StockEntry s) <- NUMERIC[16,5](calcQuantity(vd, s) * OVERRIDE factor(sku(vd), unit(s)), 1.0) WHERE doc(vd) = d;
    }
    
    numberStockEntry 'Номер складского журнала' (###doc##Detail d) =
        GROUP CONCAT number(StockEntry s) IF volume(d, s), ',' ORDER s;
    
    volumeStockEntry 'Объем в документе' (###doc##Detail d) = GROUP SUM volume(d, StockEntry s) MATERIALIZED;
    
    EXTEND FORM doc
        OBJECTS vd = ###doc##Detail
        PROPERTIES(vd) READONLY index, idBarcodeSku, idSku, nameSku, shortNameUOMSku, quantity,
                                numberStockEntry, volumeStockEntry
        ORDERS index(vd)
        FILTERS doc(vd) = obj,
                productItem(sku(vd)) OR volumeStockEntry(vd)
        
        PROPERTIES(obj) fillVolume DRAW vd TOOLBAR
        
        OBJECTS se = StockEntry
        PROPERTIES(se) READONLY guid, number, nameProductItem, volume, expiryDate
        PROPERTIES(vd, se)      volume, fillVolume GRID
        FILTERS matches(vd, se)
    
        FILTERGROUP active
            FILTER 'Активные' active(se) OR volume(vd, se) DEFAULT 
    ;
    
    DESIGN doc {
        specificationBox {
            NEW vetis {
                caption = 'ВСД';
                NEW vetisHeader {
                    horizontal = TRUE;
                }
                NEW vetisDetail {
                    fill = 1;
                    horizontal = TRUE;
                    MOVE BOX(vd);
                    MOVE BOX(se);
                }
            }
        }
    }

END

META defineChangeOutgoingConsignmentDialog (doc)
    FORM dialog###doc##OutgoingConsignment 'ВСД'
        OBJECTS i = ###doc
        OBJECTS vd = User###doc##Detail
        PROPERTIES(vd) READONLY index, idBarcodeSku, idSku, nameSku, shortNameUOMSku, shipmentQuantity,
        numberStockEntry, volumeStockEntry
        ORDERS index(vd)
        FILTERS user###doc(vd) = i,
        productItem(sku(vd)) OR volumeStockEntry(vd)
    
        PROPERTIES(i) fillVolume DRAW vd TOOLBAR
    
        OBJECTS se = StockEntry
        PROPERTIES(se) READONLY guid, number, nameProductItem, volume, expiryDate
        PROPERTIES(vd, se)      volume, fillVolume GRID
        FILTERS matches(vd, se)
    
        FILTERGROUP active
            FILTER 'Активные' active(se) OR volume(vd, se) DEFAULT
    ;
    
    DESIGN dialog###doc##OutgoingConsignment {
        BOX {
            size = (1024, 768);
            NEW vetis {
                fill = 1;
                caption = 'ВСД';
                NEW vetisHeader {
                    horizontal = TRUE;
                }
                NEW vetisDetail {
                    fill = 1;
                    horizontal = TRUE;
                    MOVE BOX(vd);
                    MOVE BOX(se);
                }
            }
            MOVE TOOLBARBOX;
        }
    }
    
    change###doc##OutgoingConsignment 'Изменить ВСД' (###doc i) {
        NEWSESSION {
            SHOW dialog###doc##OutgoingConsignment OBJECTS i=i DOCKED;
        }
    } TOOLBAR;
    
    EXTEND FORM ##doc##s
        PROPERTIES (i) change###doc##OutgoingConsignment DRAW vse SHOWIF hasProductItem###doc(i)
    ;

END

nameEnterprises 'Склады' (Enterprise e) = GROUP CONCAT name(Stock st) IF enterprise(st) == e, ', ' ORDER name(st), st CHARWIDTH 20;

EXTEND FORM enterprises 
    PROPERTIES(o) READONLY nameEnterprises AFTER nameOwner(o)
;