MODULE EGAISPurchaseInvoiceImport;

REQUIRE EGAISPurchaseInvoice, PurchaseDeclaration, EGAISRepImportedProductExchange;

PRIORITY Purchase;

NAMESPACE EGAISPurchase;

repImportedProduct 'ТТН ЕГАИС Импорт' = DATA RepImportedProduct (UserInvoice) INDEXED;
numberDateRepImportedProduct 'ТТН ЕГАИС Импорт' (UserInvoice i) = numberDate(repImportedProduct(i));
seriesNumberUserInvoice 'Накладные (закупка)' (RepImportedProduct w) = GROUP CONCAT seriesNumber(UserInvoice d), ', ' ORDER d BY repImportedProduct(d);

repImportedProduct = ABSTRACT RepImportedProduct (Invoice);
repImportedProduct (UserInvoice i) += repImportedProduct(i);

invoiceDetail = DATA InvoiceDetail (RepImportedProductPosition) INDEXED;

minProduct (Item i, Client c) = GROUP MIN Product p IF in(i, p) AND type(p) AND startsWith(id(p), id(c));
overMinProduct(Item i, Client c) = OVERRIDE minProduct(i, c), minProduct(i);

processImport 'Отправить в ЕГАИС (Импорт)' (Invoice i) {
    NEWSESSION {
        NEW r = RepImportedProduct {
            repImportedProduct(i) <- r;
            id(r) <- STRING(r);
            number(r) <- seriesNumber(i);

            date(r) <- date(i);
            importedDate(r) <- date(i);

            supplier(r) <- client(supplierStock(i));
            importer(r) <- client(customerStock(i));

            contractNumber(r) <- seriesNumberContractSku(i);
            contractDate(r) <- dateFromContractSku(i);

            declarationNumber(r) <- STRING[50](seriesNumber(declaration(i)));
            declarationDate(r) <- date(declaration(i));

            FOR quantity(ShipmentDetail d, Lot l) IF invoice(invoiceDetail(d)) == i AND NOT markCode(id(l)) DO NEW m = MarkCode {
                id(m) <- id(l);
            }
            
            FOR quantity(ShipmentDetail d) > 0 AND invoice(invoiceDetail(d)) == i AND overMinProduct(sku(d), client(customerStock(d))) DO NEW p = RepImportedProductPosition {
                repImportedProduct(p) <- r;
                invoiceDetail(p) <- invoiceDetail(d);

                product(p) <- overMinProduct(sku(d), client(customerStock(d)));
                identity(p) <- STRING(p);

                quantity(p) <- quantity(d);
                nameBatch(p) <- (CONCAT '/ ', BPSTRING[10](date(d)), seriesNumber(d), fullNameSupplier(d));

                FOR quantity(d, Lot l) IF MarkCode mc = markCode(id(l)) INLINE NEW m = RepImportedProductMark DO {
                    repImportedProductPosition(m) <- p;
                    markCode(m) <- mc;
                }
            }
        }

        check();

        IF NOT canceled() THEN {
            submitRepImportedProduct(repImportedProduct(i));
            APPLY;
        }
    }
}

overProcessImport 'Отправить в ЕГАИС (Импорт)' (Invoice i) {
    IF (GROUP SUM 1 IF invoice(InvoiceDetail d) == i AND NOT overMinProduct(sku(d), client(customerStock(d)))) THEN {
        ASK 'Для следующих товаров отсутствует аналог в справочнике ЕГАИС Алкогольная продукция: \n' +
            (GROUP CONCAT name(sku(InvoiceDetail d)) IF invoice(d) == i AND NOT overMinProduct(sku(d), client(customerStock(d))), '\n' ORDER d) + '\nПродолжить?' DO {
            processImport(i);
        }
    } ELSE {
        processImport(i);
    }
}

EXTEND FORM userInvoice
    OBJECTS rp = RepImportedProductPosition
    PROPERTIES(rp) READONLY idProduct PANEL, fullNameProduct, quantity, idF1Reg PANEL, idF2Reg PANEL
    FILTERS repImportedProduct(rp) = repImportedProduct(i)
;

DESIGN userInvoice {
    EGAIS {
        NEW EGAISRepImport {
            fill = 1;
            showIf = isExport(i);
            MOVE BOX(rp);
        }
    }
}

EXTEND FORM invoices
    OBJECTS r = RepImportedProduct PANEL
    PROPERTIES(r) READONLY accepted, canceled, number, date, importedDate//, nameStatus
    FILTERS r = repImportedProduct(i)

    OBJECTS rp = RepImportedProductPosition
    PROPERTIES(rp) READONLY idProduct, fullNameProduct, quantity, idF1Reg, idF2Reg
    FILTERS repImportedProduct(rp) = r

    PROPERTIES READONLY commentsRepImportedProduct 'Комментарий' = comments(repImportedProductOutDoc(r)) PANEL
    PROPERTIES(i) DRAW rp TOOLBAR
                    processEGAISImport = overProcessImport SHOWIF isPosted(i) AND NOT activeRepImportedProductOutDoc(r) AND isExport(i)
;

DESIGN invoices {
    EGAIS {
        NEW EGAISRepImport {
            fill = 1;
            showIf = isExport(i);
            MOVE BOX(r);
            MOVE BOX(rp);
            MOVE PROPERTY(commentsRepImportedProduct) { panelCaptionVertical = TRUE; fill = 0.2; }
        }
    }
}