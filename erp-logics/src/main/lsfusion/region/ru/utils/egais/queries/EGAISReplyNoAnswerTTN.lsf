MODULE EGAISReplyNoAnswerTTN;

REQUIRE EGAISClient, EGAISOutDoc, EGAISInDoc, EGAISTicket, EGAISQueryResendDoc, EGAISWayBill, EGAISStock, EGAISQueryNATTN;

NAMESPACE EGAIS;

// response
EXTEND CLASS DocType { ReplyNATTN 'Ответ на запрос необработанных ТТН' }

GROUP replyNoAnswerTTN EXTID 'ns:ReplyNoAnswerTTN' : document;
GROUP ttnlist EXTID 'ttn=http://fsrar.ru/WEGAIS/ReplyNoAnswerTTN:ttnlist' : replyNoAnswerTTN;

//FSRAR_ID = DATA LOCAL STRING();
consignee123 = DATA LOCAL STRING();
replyDate = DATA LOCAL DATETIME();
wbRegID = DATA LOCAL STRING(INTEGER);
ttnNumber = DATA LOCAL STRING(INTEGER);
ttnDate = DATA LOCAL DATE(INTEGER);
shipper = DATA LOCAL STRING(INTEGER);

FORM documents FORMEXTID 'ns=http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01:Documents'
    PROPERTIES() IN owner FSRAR_ID EXTID 'ns:FSRAR_ID'
    PROPERTIES ATTR IN replyNoAnswerTTN ='http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:xsi'
    PROPERTIES() IN replyNoAnswerTTN consignee123 EXTID 'ttn:Consignee', replyDate EXTID 'ttn:ReplyDate'

    OBJECTS noAnswer = INTEGER EXTID 'ttn:NoAnswer' IN ttnlist
    PROPERTIES(noAnswer) wbRegID EXTID 'ttn:WbRegID', ttnNumber EXTID 'ttn:ttnNumber', ttnDate EXTID 'ttn:ttnDate', shipper EXTID 'ttn:Shipper'
    FILTERS imported(noAnswer)
;

countDaysReplyNoAnswerTTNData = DATA INTEGER ();
countDaysReplyNoAnswerTTN() = OVERRIDE countDaysReplyNoAnswerTTNData(), 7;

CLASS ReplyNATTN 'Необработанные ТТН';

dateTime 'Дата/время' = DATA DATETIME (ReplyNATTN) IN id;
wbRegID 'WbRegID' = DATA  STRING(ReplyNATTN) INDEXED;
ttnNumber 'ttnNumber' = DATA  STRING(ReplyNATTN) IN id;
ttnDate 'ttnDate' = DATA  DATE(ReplyNATTN);
utm = DATA UTM (ReplyNATTN);
nameUtm ''(ReplyNATTN r) = name(utm(r)) IN id;

closed 'Закрыт' = DATA DATETIME (ReplyNATTN);
processed 'Обработан' = DATA DATETIME (ReplyNATTN);
toProcess 'Требуется обработка' (ReplyNATTN d) = d IS ReplyNATTN AND NOT (processed(d) OR closed(d))  MATERIALIZED INDEXED;
replyNATTN = GROUP MAX ReplyNATTN r IF toProcess(r) BY wbRegID(r);

processReplyNoAnswerTTN (InDoc d)  {
    NEWSESSION {
        stringToFile(document(d));
        IMPORT documents XML FROM resultFile();

        FOR wbRegID(INTEGER  i) AND imported(i) AND NOT wayBill(wbRegID(i)) AND NOT replyNATTN(wbRegID(i)) AND ttnDate(i) >= sum(currentDate(),-countDaysReplyNoAnswerTTN()) DO NEWSESSION  NESTED LOCAL {
            NEW r = ReplyNATTN {
                dateTime(r) <- currentDateTime();
                utm(r) <- utm(d);
                wbRegID(r) <-  wbRegID(i);
                ttnNumber(r) <- ttnNumber(i);
                ttnDate(r) <- ttnDate(i);
                APPLY NESTED LOCAL;
            }
        }
        processed(d) <- TRUE;
        APPLY;
    }
}


process (InDoc d) + {
    IF docType(d) = DocType.ReplyNATTN THEN {
        processReplyNoAnswerTTN(d);
    }
}

// ticket
process (Ticket t) + {
    IF (docType(t) =='ReplyNoAnswerTTN' OR  docType(t) =='ReplyNATTN') THEN {
        processed() <- TRUE;
    }
}

queryNATTN 'Запросить необработанные ТТН' (Stock st) {
    IF utm(client(st)) THEN NEWSESSION {
        NEW r = QueryNATTN {
            client(r) <- client(st);
            utm(r) <- utm(client(st));
            queryNATTN(r);
            APPLY;
        }
    } ELSE {
        MESSAGE 'Не задана "Организация ЕГАИС" для склада';
    }
}
queryNATTNStocks 'Запросить необработанные ТТН' () {
    FOR utm(client(Stock st)) DO {
        queryNATTN(st);
    }
}

processReplyNoAnswerTTN (ReplyNATTN d) {
    NEWSESSION {
        NEW r = QueryResendDoc {
            utm(r) <- utm(d);
            client(r) <- firstClient(utm(d));
            WBRegID(r) <-  wbRegID(d);
            queryResendDoc(r);
        }
        processed(d) <- currentDateTime();
        APPLY;
    }
}
replyNoAnswerTTN 'Повторный запрос ТТН' (UTM u) {
    LOCAL NESTED reply = ReplyNATTN ();
    reply() <- [GROUP LAST ReplyNATTN r
    ORDER DESC ttnDate(r), r
    WHERE toProcess(r) AND ttnDate(r) >= sum(currentDate(),-countDaysReplyNoAnswerTTN()) AND NOT wayBill(wbRegID(r))
    BY utm(r)](u);
    IF reply() THEN {
        processReplyNoAnswerTTN(reply());
        MESSAGE (CONCAT ' ', 'Запрос отправлен для УТМ: ', name(u), 'wbRegID '+wbRegID(reply())) NOWAIT;
    }
}

toProcessReplyNATTN 'Закрыть' () {
    NEWSESSION {
        // Закрываем по времени или если уже создана ТТН
        closed(ReplyNATTN r) <- currentDateTime() WHERE toProcess(r) AND (wayBill(wbRegID(r)) OR ttnDate(r) < sum(currentDate(),-countDaysReplyNoAnswerTTN()));
        APPLY;
    }
}
replyNoAnswerTTN 'Повторный запрос ТТН' () {
    toProcessReplyNATTN();
    FOR utm(client(Stock st))== UTM u DO {
        replyNoAnswerTTN(u);
    }
}

FORM replyNATTNs 'Необработанные ТТН'
    OBJECTS r = ReplyNATTN
    PROPERTIES (r) READONLY dateTime, wbRegID, ttnNumber, ttnDate, nameUtm, processed, closed
    FILTERGROUP base
        FILTER 'Необработанные' toProcess(r) 'F9' DEFAULT
;
NAVIGATOR {
    EGAISDocuments {
        NEW replyNATTNs;
    }
}