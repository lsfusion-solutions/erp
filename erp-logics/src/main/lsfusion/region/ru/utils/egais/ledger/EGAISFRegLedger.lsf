MODULE EGAISFRegLedger;

REQUIRE EGAISFReg, EGAISItem, EGAISStock;

NAMESPACE EGAIS;

CLASS ABSTRACT FRegLedger 'Регистр 1 ЕГАИС';
TABLE fRegLedger(FRegLedger);

posted 'Проведен' = ABSTRACT BOOLEAN (FRegLedger) MATERIALIZED;

date 'Дата' = ABSTRACT DATE (FRegLedger) MATERIALIZED;

number 'Номер' = ABSTRACT STRING (FRegLedger) MATERIALIZED;

f2Reg = ABSTRACT F2Reg (FRegLedger) MATERIALIZED;

quantity 'Кол-во' = ABSTRACT NUMERIC[16,5] (FRegLedger) MATERIALIZED;

INDEX f2Reg(FRegLedger l), date(l), l;

TABLE balanceF2Reg(F2Reg);
currentBalance 'Текущий остаток' (F2Reg r) = GROUP SUM quantity(FRegLedger l) IF posted(l) BY f2Reg(l) MATERIALIZED TABLE balanceF2Reg;
prevCurrentBalance (F2Reg r) = PREV(currentBalance(r));

balanceB 'Остаток на начало дня' (F2Reg r, DATE date) = currentBalance(r)
    (-) [GROUP SUM quantity(FRegLedger l) IF posted(l) AND date(l) >= date BY f2Reg(l)](r);

balanceA 'Остаток на конец дня' (F2Reg r, DATE date) = currentBalance(r)
    (-) [GROUP SUM quantity(FRegLedger l) IF posted(l) AND date(l) > date BY f2Reg(l)](r);

CONSTRAINT currentBalance(F2Reg r) < 0 MESSAGE 'Остаток по справке Б не может быть отрицательным'; 

EXTEND FORM f2Regs
    PROPERTIES(r) READONLY currentBalance

    FILTERGROUP balance
        FILTER 'С остатком' currentBalance(r) > 0 DEFAULT
;

FORM balanceReg 'Остатки на регистре 1'
    OBJECTS r = F2Reg
    PROPERTIES(r) READONLY id, idF1Reg, idProduct, fullNameProduct, shortNameClient, descriptionClient, currentBalance

    FILTERGROUP balance
        FILTER 'С остатком' currentBalance(r) > 0 DEFAULT

    OBJECTS l = FRegLedger
    PROPERTIES(l) READONLY objectClassName, date, number, quantity
    FILTERS posted(l), f2Reg(l) = r
;

DESIGN balanceReg {
    OBJECTS {
        NEW tabPane {
            type = TABBED;
            fill = 1;
            MOVE BOX(l) { caption = 'Движение'; }
        }
    }
}

NAVIGATOR {
    EGAISReg {
        NEW balanceReg;
    }
}

META defineDocumentOutBalance (doc, obj, supplierStock, quantityProp)

    quantity 'Кол-во (ЕГАИС)' = DATA NUMERIC[16,5] (###doc##Detail, F2Reg);
    fillQuantity 'Выбрать' (###doc##Detail d, F2Reg s) { quantity(d, s) <- quantityProp(d); }
    
    quantityF2Reg 'Кол-во (ЕГАИС)' (###doc##Detail d) = GROUP SUM quantity(d, F2Reg s) MATERIALIZED;
    incorrectQuantityF2Reg (###doc##Detail d) = quantityProp(d) AND NOT quantityProp(d) = quantityF2Reg(d);
    backgroundQuantityF2Reg(###doc##Detail d) = RGB(255,212,212) IF incorrectQuantityF2Reg(d);

    matches (###doc##Detail d, F2Reg r) = client(r) = client(supplierStock(d)) AND in(sku(d), product(r));
    
    calcQuantity(###doc##Detail d, F2Reg r) = 
        PARTITION UNGROUP quantityProp LIMIT prevCurrentBalance(r) IF matches(d, r) ORDER r BY d;
    
    fillQuantity 'Заполнить' (###doc s) {
        quantity(###doc##Detail d, F2Reg r) <- NULL WHERE doc(d) = s;
        quantity(###doc##Detail d, F2Reg r) <- (GROUP SUM quantity(d, Lot l) IF f2Reg(markCode(id(l))) = r) WHERE doc(d) = s;
        quantity(###doc##Detail d, F2Reg r) <- calcQuantity(d, r) WHERE doc(d) = s AND NOT quantityF2Reg(d);
    }
    
    showLots 'Марки' (###doc##Detail d) {
        quantity(Lot l) <- quantity(d, l);
        SHOW dialogInLots;
    }
    
    numberF2Reg 'Справка Б' (###doc##Detail d) =
        GROUP CONCAT id(F2Reg r) IF quantity(d, r), ',' ORDER r;
    
    EXTEND FORM doc
        OBJECTS ed = ###doc##Detail
        PROPERTIES(ed) READONLY index, idBarcodeSku, idSku, nameSku, shortNameUOMSku, quantityProp,
                                numberF2Reg, quantityF2Reg BACKGROUND backgroundQuantityF2Reg(ed)
        ORDERS index(ed)
        FILTERS doc(ed) = obj
        
        PROPERTIES(obj) fillQuantity DRAW ed TOOLBAR
        PROPERTIES (ed) showLots TOOLBAR
        
        OBJECTS re = F2Reg
        PROPERTIES(re) READONLY id, idF1Reg PANEL, fullNameProduct, currentBalance
        PROPERTIES(ed, re)      quantity, fillQuantity GRID
        FILTERS matches(ed, re)
    
        FILTERGROUP active
            FILTER 'С остатком' currentBalance(re) > 0 OR quantity(ed, re) DEFAULT 
    ;
    
    DESIGN doc {
        specificationBox {
            NEW EGAIS {
                caption = 'ЕГАИС';
                NEW EGAISHeader {
                    type = CONTAINERH;
                }
                NEW EGAISDetail {
                    fill = 1;
                    type = SPLITH;
                    MOVE BOX(ed);
                    MOVE BOX(re);
                }
            }
        }
    }

END

// import
restsDate = DATA LOCAL DATETIME();

isAlcohol (Item i) = GROUP SUM 1 IF in(i, Product p);
stock (Client c) = GROUP MIN Stock s IF client(s) = c;          // весь остаток ЕГАИС будем вешать только на один склад
item (Product p) = GROUP MIN Item i IF in(i, p);                // и только на одну номенклатуру

ballanceBEGAIS 'Остаток ЕГАИС' (Item i, Stock st, DATE d) = GROUP SUM balanceB(F2Reg r, d) IF item(product(r)) = i AND stock(client(r)) = st;
differenceEGAIS 'Разница с данными ЕГАИС' (Item i, Stock st, DATE d) = balanceB(i, st, d) (-) ballanceBEGAIS(i, st, d);

FORM balanceSkuAlcoholStock 'Остатки алкоголя на дату'

    OBJECTS t=DATE PANEL
    PROPERTIES valT = VALUE(t)

    PROPERTIES() multipleStores

    OBJECTS ss = Stock PANEL
    PROPERTIES(ss) name SELECTOR SHOWIF singleStore()
    FILTERS isCompany(ss)

    TREE stockTree a = BPSTRING[3], sg = StockGroup PARENT parent(sg), ts = Stock
    PROPERTIES READONLY SHOWIF multipleStores() VALUE(a), sgTreeName = name(sg), tsTreeName = name(ts)
    ORDERS sgTreeName
    FILTERS stringEqualsAll(a),
        stockGroup(ts) == sg,
        isCompany(ts)
    FILTERGROUP sginactiveStock FILTER 'Активный' active(ts) 'ctrl F10' DEFAULT
    TREE skuTree sk = SkuGroup PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDERS order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT

    OBJECTS           sts=(st=Stock, s=Item)
    PROPERTIES        select(s,st)
    PROPERTIES        READONLY BACKGROUND backgroundBalance(s,st,toDateTime(t)) name(s) ON CONTEXTMENU showBalanceMovementSku(s, st) ON CONTEXTMENU showBalancePriceSku(s, st) ON CONTEXTMENU showBalanceReserveSku(s,st), id(s) SHOWIF showIDs(), nameCountry(s), stockName = name(st) SHOWIF multipleStores(), nameUOM(s)  //  idBarcodeSku
    FILTERS           isParent(sk, s),
            IF multipleStores() THEN
            st == ts AND sg IS StockGroup OR isParent(sg, st) AND NOT ts OR st IS Stock AND NOT sg AND NOT ts
            ELSE
            st == ss,
        isAlcohol(s),
        isCompany(st) OR NOT multipleStores()

    FILTERGROUP inactiveStock
        FILTER 'Активный' (active(st) OR NOT multipleStores()) AND active(s) 'ctrl F10' DEFAULT
        FILTER 'Неактивный' inactive(s) 'shift F10'

    PROPERTIES(s, st, t) READONLY balanceB, sumB, ballanceBEGAIS, differenceEGAIS
    PROPERTIES READONLY averagePriceB 'Цена (средневзв.)' = averagePriceB(s, st, toDateTime(t))
    PROPERTIES(s, st) READONLY dateTimeLastMoved, nameSupplierLastOrderBatch
    PROPERTIES(s)     READONLY idSkuGroup, canonicalNameSkuGroup

    FILTERGROUP container
        FILTER 'Товар' isItem(s)
        FILTER 'Тара' isContainer(s)

    FILTERGROUP filters
        FILTER 'Товары с остатком' balanceB(s, st, t) OR sumB(s, st, t) OR ballanceBEGAIS(s, st, t) 'F10' DEFAULT
        FILTER 'Товары с отклонением к ЕГАИС' differenceEGAIS(s, st, t) 'F9'
    //        FILTER 'Товары с движением не позднее 1 дня' balance(s, st, t, 1) 'F9'
    //        FILTER 'Товары с движением не позднее 7 дней' balance(s, st, t, 7) 'F8'
    //        FILTER 'Товары с движением не позднее 30 дней' balance(s, st, t, 30) 'F7'

    OBJECTS bil=SkuLedger
    PROPERTIES(bil) READONLY dateTime, description, nameBatch,
        signedQuantity, signedPrice, signedSum, skip
    FILTERS isPosted(bil) AND sku(bil)==s AND stock(bil)==st
    ORDERS dateTime(bil) DESC

    OBJECTS bt=Batch
    PROPERTIES(bt) READONLY      number, series, dateTime, nameSupplier, name, id, shippedQuantity, cost
    PROPERTIES(bt, st, t) READONLY  balanceB
    FILTERS isPosted(bt),
        sku(bt) == s,
        countLedger(bt, st)
    ORDERS dateTime(bt) DESC
;

DESIGN balanceSkuAlcoholStock {
    BOX {
        size = (1024, 768);
        NEW filter {
            alignment = STRETCH;
            type = CONTAINERH;
            MOVE PROPERTY (valT);
            MOVE PROPERTY (multipleStores());
            MOVE PROPERTY (name(ss));
        }
        NEW topContainer {
            fill = 1;
            type = SPLITH;

            NEW firstCaseTwo {
                fill = 1;
                type = SPLITV;
                MOVE BOX(TREE stockTree) { caption = 'Склады'; }
                MOVE BOX(TREE skuTree) { caption = 'Группы'; }
            }

            NEW secondCase {
                fill = 3;
                type = SPLITV;
                NEW skuBox {
                    fill = 2;
                    MOVE BOX(sts) {
                        fill = 2;
                    }
                }
                NEW ledgerBox {
                    fill = 1;
                    type = TABBED;
                    MOVE BOX(bil);
                    MOVE BOX(bt);
                }
            }
        }
        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    balanceSku {
        NEW balanceSkuAlcoholStock;
    }
}