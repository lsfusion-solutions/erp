MODULE EGAISPurchaseShipment;

REQUIRE EGAISPurchaseInvoice, EGAISLot, 
        PurchaseShipmentLot;

PRIORITY Purchase;

NAMESPACE EGAISPurchase;

@defineDocumentInWayBillLot(userInvoice, i);

// process
wayBill = ABSTRACT WayBill (Shipment);
wayBill (InvoiceShipment s) += wayBill(invoice(s));

quantity = ABSTRACT NUMERIC[16,5] (ShipmentDetail, WayBillPosition);
quantity(InvoiceShipmentDetail d, WayBillPosition p) += quantity(invoiceDetail(d), p);

@defineDocumentInWayBillActProcess(shipment, quantity);  

@defineDocumentInWayBillActForm(shipment, s);

stock (Client c) = GROUP MIN Stock s IF client(s) = c;

createPurchaseInvoice 'Накладная (закупка)' (WayBill w) {
    IF (GROUP LAST UserInvoice i IF wayBill(i) = w ORDER i) THEN {
        MESSAGE 'По ТТН уже существует накладная (закупка)!';
        RETURN;
    }
    IF (own(shipper(w))) THEN {
        MESSAGE 'Запрещен ввод накладных на основании ТТН ЕГАИС для собственных организаций!';
        RETURN;
    }
    IF (canceled(w)) THEN {
        MESSAGE 'Нельзя создавать накладные на основании отмененных ТТН ЕГАИС!';
        RETURN;
    }
    NEWSESSION NEW i = UserInvoice {
        wayBill(i) <- w;
        date(i) <- shippingDate(w);
        number(i) <- number(w);
        operation(i) <- Purchase.operation('purchaseStoreSupplier');
        supplierStock(i) <- stock(shipper(w));
        supplier(i) <- legalEntity(supplierStock(i));
        customerStock(i) <- stock(consignee(w));
        customer(i) <- legalEntity(customerStock(i));
        currency(i) <- currency(supplier(i));
        
        // createDetail(i)
        FOR wayBill(WayBillPosition p) = wayBill(i) ORDER p DO NEW d = UserInvoiceDetail {
            userInvoice(d) <- i;
            sku(d) <- minItem(product(p));
            quantity(d) <- quantity(p);
            quantity(d, p) <- quantity(p);
            invoicePrice(d) <- price(p);
            price(d) <- round2(price(p) * 100 / (100 + valueVAT(minItem(product(p)))));
        }

        // fillQuantity(i)
        quantity(UserInvoiceDetail d, WayBillPosition p) <- shipmentQuantity(d)
            IF in(sku(d), product(p))
            WHERE userInvoice(d) = i AND wayBill(p) = wayBill(i);
        
        // createLots(i)
        LOCAL detail = UserInvoiceDetail (WayBillMark);
        detail (WayBillMark m) <- (GROUP MAX UserInvoiceDetail d IF quantity(d, wayBillPosition(m))) WHERE wayBill(wayBillPosition(m)) = wayBill(i);
        FOR Sku sku = sku(detail(WayBillMark m)) AND NOT lot(idMarkCode(m)) NEW l = Lot DO {
            id(l) <- idMarkCode(m);
            sku(l) <- sku;
        }
        FOR UserInvoiceDetail d = detail(WayBillMark m) AND idMarkCode(m) = id(Lot l) DO
            quantity(d, l) <- 1;
        
        APPLY;
    }
}

EXTEND FORM wayBills PROPERTIES (w) createPurchaseInvoice;

DESIGN wayBills {
    tabbedPane {
        NEW actionContainer {
            caption = 'Действия';
            type = CONTAINERH;
            
            NEW createdContainer {
                caption = 'Создание на основе';
                type = CONTAINERV;
                MOVE PROPERTY (createPurchaseInvoice(w));
            }
        }
    }
}