MODULE EGAISWayBillActExchange;

REQUIRE EGAISOutDoc, EGAISTicket, EGAISWayBillDoc, EGAISWayBillAct;

NAMESPACE EGAIS;

EXTEND CLASS DocType { WayBillAct_v3 'Акт разногласий (версия 3)' }
EXTEND CLASS DocType { WayBillAct_v4 'Акт разногласий (версия 4)' }

// out
CLASS WayBillActOutDoc 'Акт разногласий' : OutDoc;
docType (WayBillActOutDoc r) += DocType.WayBillAct_v4 IF r IS WayBillActOutDoc; 

wayBillAct = DATA WayBillAct (WayBillActOutDoc) INDEXED;
wayBillActOutDoc = GROUP LAST WayBillActOutDoc a ORDER a BY wayBillAct(a);
activeWayBillAct (WayBill w) = notRejected(wayBillActOutDoc(wayBillAct(w)));

// export
GROUP header EXTID 'wa:Header';
GROUP content EXTID 'wa:Content';
GROUP contentMarkInfo EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:MarkInfo';

FORM wayBillAct_v4 FORMEXTID 'ns=http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01:WayBillAct_v4'
    PROPERTIES ATTR ='http://fsrar.ru/WEGAIS/CommonV3' EXTID 'xmlns:ce', ='http://fsrar.ru/WEGAIS/ActTTNSingle_v4' EXTID 'xmlns:wa'
    
    OBJECTS a = WayBillActOutDoc PANEL
    
    PROPERTIES IN header =isAccept(wayBill(a)) EXTID 'wa:IsAccept', 
                         =number(wayBillAct(a)) EXTID 'wa:ACTNUMBER', 
                         =toDateISO(date(wayBillAct(a))) EXTID 'wa:ActDate', 
                         =regId(wayBill(a)) EXTID 'wa:WBRegId', 
                         =OVERRIDE note(wayBillAct(a)), '' EXTID 'wa:Note'
    
    OBJECTS p = WayBillPosition EXTID 'wa:Position' IN content
    PROPERTIES identity(p) EXTID 'wa:Identity', 
               idConsigneeF2Reg(p) EXTID 'wa:InformF2RegId', 
               = OVERRIDE realQuantity(p), 0.0 EXTID 'wa:RealQuantity'
    FILTERS wayBill(p) = wayBill(a) AND isAccept(wayBill(a)) = 'Differences' 

    OBJECTS amc = WayBillMark EXTID 'ce:amc' IN contentMarkInfo
    PROPERTIES(amc) idMarkCode EXTID 'value'
    FILTERS wayBillPosition(amc) = p AND NOT accepted(amc)
;

submitAct (WayBillActOutDoc a) {
    EXPORT wayBillAct_v4 OBJECTS a = a XML;
    submit(a, exportFile());
}

submitAct (WayBillAct wa, BOOLEAN shipper) {
    NEW a = WayBillActOutDoc {
        client(a) <- IF shipper THEN shipper(wayBill(wa)) ELSE consignee(wayBill(wa));
        wayBillAct(a) <- wa;
        wayBill(a) <- wayBill(wa);
        submitAct(a);
    }
}

createAct 'Отправить акт приемки' (WayBill w, BOOLEAN shipper) {
    NEWSESSION {
        IF shipper THEN {
            realQuantity(WayBillPosition p) <- NULL WHERE wayBill(p) = w;
            accepted(WayBillMark a) <- NULL WHERE wayBill(wayBillPosition(a)) = w;
        }
        IF NOT rejected(wayBillActOutDoc(wayBillAct(w))) THEN {
            NEW wa = WayBillAct {
                wayBill(wa) <- w;
                number(wa) <- STRING(wa);
                date(wa) <- currentDate();
            }
        }
        submitAct(wayBillAct(w), shipper);
        APPLY;
    }
}

createAct 'Отправить акт приемки' (WayBill w) {
    createAct(w, NULL);
}

//EXTEND FORM wayBills
//    PROPERTIES createAct(w) SHOWIF (own(consignee(w)) OR own(shipper(w))) AND toAccept(w) AND NOT notRejected(wayBillActOutDoc(wayBillAct(w))) TOOLBAR
//;

// in
GROUP wayBillAct EXTID 'ns=http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01:WayBillAct_v4' : document;
GROUP wayBillActHeader EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:Header' : wayBillAct;
GROUP wayBillContent EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:Content' : wayBillAct; 

isAccept = DATA LOCAL STRING ();
actNumber = DATA LOCAL STRING ();
actDate = DATA LOCAL DATE ();

actNote = DATA LOCAL STRING ();

identity = DATA STRING (INTEGER);
realQuantity = DATA NUMERIC[16,5] (INTEGER);

positionAmc = DATA INTEGER (INTEGER);

FORM inWayBillAct_v4 FORMEXTID 'ns=http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01:Documents'
    
    PROPERTIES IN wayBillActHeader 
                         isAccept() EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:IsAccept', 
                         actNumber() EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:ACTNUMBER', 
                         actDate() EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:ActDate', 
                         WBRegId() EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:WBRegId', 
                         actNote() EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:Note'
    
    OBJECTS p = INTEGER EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:Position' IN wayBillContent
    PROPERTIES(p) identity EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:Identity', 
                  realQuantity EXTID 'wa=http://fsrar.ru/WEGAIS/ActTTNSingle_v4:RealQuantity'

    OBJECTS amc = INTEGER EXTID 'ce=http://fsrar.ru/WEGAIS/CommonV3:amc' IN contentMarkInfo
    PROPERTIES(amc) amc EXTID 'value'
    FILTERS positionAmc(amc) = p
;

process (InDoc d) + {
    IF docType(d) = DocType.WayBillAct_v3 OR docType(d) = DocType.WayBillAct_v4 THEN {
        NEWSESSION {
            stringToFile(replace(document(d), 'WayBillAct_v3', 'WayBillAct_v4'));
            IMPORT inWayBillAct_v4 XML FROM resultFile();
            
            FOR WayBill b = wayBill(WBRegId()) DO {
                wayBill(d) <- b;
                
                IF isAccept() = 'Rejected' THEN {
                    canceled(b) <- TRUE;
//                    realQuantity(WayBillPosition p) <- 0.0 WHERE wayBill(p) = b;
                }
                IF isAccept() = 'Accepted' THEN {
                    accepted(b) <- TRUE;
                    realQuantity(WayBillPosition p) <- quantity(p) WHERE wayBill(p) = b;
                }
            
                IF NOT (number(wayBillAct(b)) = actNumber() AND date(wayBillAct(b)) = actDate()) THEN NEW a = WayBillAct {
                    wayBill(a) <- b;
                    
                    IF isAccept() = 'Differences' THEN differences(a) <- TRUE;
                    
                    number(a) <- actNumber();
                    date(a) <- actDate();
                    note(a) <- actNote();

                    IF isAccept() = 'Differences' THEN {
                        FOR WayBillPosition p = wayBillPosition(b, identity(INTEGER i)) DO {
                            realQuantity(p) <- realQuantity(i);
                        }
                        accepted(WayBillMark m) <- TRUE WHERE wayBill(wayBillPosition(m)) = b;
                        FOR WayBillPosition p = wayBillPosition(b, identity(INTEGER i)) AND wayBillPosition(WayBillMark m) = p
                            AND positionAmc(INTEGER im) = i AND idMarkCode(m) = amc(im) DO {
                                accepted(m) <- NULL;
                            } 
                    }
                }
    
                processed(d) <- TRUE;
                APPLY;
            }                
        }
    }
}