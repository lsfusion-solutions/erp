MODULE EGAISWayBillProcess;

REQUIRE EGAISWayBillActExchange, EGAISRequestRepealWB, EGAISWayBillConfirmTicket, EGAISLot;

NAMESPACE EGAIS;

forbidEditWayBillAct 'Запретить изменять документы после отправки' = DATA BOOLEAN () PREREAD;
EXTEND FORM integrationData
    PROPERTIES() forbidEditWayBillAct
;

DESIGN integrationData {
    EGAISParams {
        MOVE PROPERTY(forbidEditWayBillAct());
    }
}

// in
META defineDocumentInWayBillActProcess (doc, quantityProp)
    quantity###doc 'Кол-во (в документе)' (WayBillPosition p) = GROUP SUM quantity(###doc##Detail d, p);
    quantityWayBill 'Кол-во (ЕГАИС)' (###doc###Detail d) = GROUP SUM quantity(d, WayBillPosition p) IF NOT canceled(p);

    process 'Отправить в ЕГАИС' (###doc d) {
        IF (GROUP SUM 1 IF doc(###doc##Detail dd) = d AND minProduct(sku(dd)) AND quantityProp(dd) > 0 AND NOT quantityProp(dd) = quantityWayBill(dd)) THEN {
            MESSAGE 'Не для всех строк документа выбраны строки ТТН ЕГАИС. Отправка невозможна.';
            RETURN;
        }

        IF (GROUP SUM 1 IF doc(###doc##Detail dd) == d AND NOT minProduct(sku(dd))) THEN {
            ASK 'Для следующих товаров отсутствует аналог в справочнике ЕГАИС Алкогольная продукция: \n' +
                (GROUP CONCAT name(sku(###doc##Detail dd)) IF doc(dd) == d AND NOT minProduct(sku(dd)), '\n' ORDER dd) + '\nПродолжить?' DO { } 
                ELSE RETURN;
        }

        FOR WayBill w = wayBill(d) DO {
            NEWSESSION {
                realQuantity(WayBillPosition p) <- quantity###doc(p) WHERE wayBill(p) = w;
                accepted(WayBillMark m) <- TRUE IF quantity(d, lot(markCode(m))) WHERE wayBill(wayBillPosition(m)) = w;
                APPLY;
                IF canceled() THEN RETURN;
            }
            
            createAct(w);
        }
    }
    
    cancel 'Отменить' (###doc d) {
        cancel(wayBillAct(wayBill(d)));
    } CONFIRM;

    skipShowEdit(###doc d) += forbidEditWayBillAct() AND activeWayBillAct(wayBill(d));
    skipShowDelete(###doc d) += forbidEditWayBillAct() AND activeWayBillAct(wayBill(d));
END

META defineDocumentInWayBillActForm (doc, obj)
    EXTEND FORM doc##s
        OBJECTS w = WayBill PANEL
        PROPERTIES(w) READONLY accepted, canceled, number, date, shippingDate, nameStatus
        FILTERS w = wayBill(obj)
    
        OBJECTS wp = WayBillPosition
        PROPERTIES(wp) READONLY idProduct, fullNameProduct, quantity, price, idF1Reg, idF2Reg, 
                                idConsigneeF2Reg, realQuantity BACKGROUND backgroundRealQuantity(wp), bottlingDate
        FILTERS wayBill(wp) = w
    
        PROPERTIES READONLY commentsWayBillAct 'Комментарий' = comments(wayBillActOutDoc(wayBillAct(w))) PANEL     
        PROPERTIES(obj) DRAW wp TOOLBAR 
                        processEGAIS = process SHOWIF isPosted(obj) AND NOT activeWayBillAct(w),
                        cancelEGAIS = cancel SHOWIF accepted(w) AND NOT canceled(w) AND
                                                    activeWayBillAct(w) AND
                                                    NOT (notRejected(requestRepealWBOutDoc(wayBillAct(w))) AND hasRRWB(wayBillAct(w)))
    ;
    
    DESIGN doc##s {
        documentDetail {
            NEW EGAIS {
                caption = 'ЕГАИС';
                NEW EGAISWayBill {
                    fill = 1;
                    showIf = NOT isExport(obj);
                    MOVE BOX(w);
                    MOVE BOX(wp);
                    MOVE PROPERTY(commentsWayBillAct) { panelCaptionVertical = TRUE; fill = 0.2; }
                }
            }
        }
    }
END

// out
META defineDocumentOutWayBillProcess (doc, supplier, customer, prefix, captionDocs)
    wayBill = DATA WayBill (###doc) INDEXED;
    seriesNumber###doc captionDocs (WayBill w) = GROUP CONCAT seriesNumber(###doc d), ', ' ORDER d BY wayBill(d);
    
    EXTEND FORM wayBills
        PROPERTIES(w) READONLY prefix##SeriesNumber###doc = seriesNumber###doc
    ;

    quantity = GROUP SUM quantity(###doc##Detail detail, F2Reg r) BY ##doc(detail), r;
    
    quantity = DATA NUMERIC[16,5] (###doc##Detail, WayBillPosition);
    doc##Detail = DATA ###doc##Detail (WayBillPosition) INDEXED;

    migratedWayBillPositionQuantity = DATA BOOLEAN ();
    
    onStarted() +{
        IF NOT migratedWayBillPositionQuantity() THEN {
            quantity(###doc##Detail d, WayBillPosition p) <- quantity(p) WHERE d = doc##Detail(p);
            migratedWayBillPositionQuantity() <- TRUE;
        }
    }
    
    price = GROUP MAX price(###doc##Detail detail) IF quantity(detail, F2Reg reg) BY ##doc(detail), reg; 
    
    process 'Отправить в ЕГАИС' (###doc i) {
        IF GROUP SUM 1 IF doc(###doc##Detail d) = i AND minProduct(sku(d)) AND NOT quantity(d) = quantityF2Reg(d) THEN {
            MESSAGE 'Не по всем строкам накладной выбраны справки Б в ЕГАИС. Отправка в ЕГАИС невозможна';
            RETURN;
        }

        IF (GROUP SUM 1 IF doc(###doc##Detail dd) == i AND NOT minProduct(sku(dd))) THEN {
            ASK 'Для следующих товаров отсутствует аналог в справочнике ЕГАИС Алкогольная продукция: \n' +
                (GROUP CONCAT name(sku(###doc##Detail dd)) IF doc(dd) == i AND NOT minProduct(sku(dd)), '\n' ORDER dd) + '\nПродолжить?' DO { }
            ELSE RETURN;
        }

        NEWSESSION {
            NEW w = WayBill {
                wayBill(i) <- w;
                
                id(w) <- STRING(w);
                number(w) <- seriesNumber(i);
                
                date(w) <- date(i);
                shippingDate(w) <- date(i);
                
                shipper(w) <- client(supplier##Stock(i));
                consignee(w) <- client(customer##Stock(i));
                
                tranType(w) <- 'Автомобиль';
                changeOwnership(w) <- shipper(w) = consignee(w);
                transportType(w) <- 'car';
                
                tranCompany(w) <- OVERRIDE nameOwner(truck(trip(i))), name(supplier(i));

                transportRegNumber(w) <- sid(truck(trip(i)));
                tranTrailer(w) <- trailer(truck(trip(i)));

                tranCustomer(w) <- name(customer(i));
                tranDriver(w) <- nameDriver(trip(i));

                tranLoadPoint(w) <- address(supplier##Stock(i));
                tranUnloadPoint(w) <- address(customer##Stock(i));

                tranRedirect(w) <- redirect(trip(i));
                tranForwarder(w) <- forwarder(trip(i));

                LOCAL boxId = STRING(); 
                boxId() <- lpad(STRING(w), 18, '0');
                IF NOT box(boxId()) THEN NEW b = Box {
                    id(b) <- boxId();
                }
                
                FOR quantity(###doc##Detail d, Lot l) IF doc(d) = i AND NOT markCode(id(l)) DO NEW m = MarkCode {
                    id(m) <- id(l);
                    dataF2Reg(m) <- GROUP MAX F2Reg r IF quantity(d, r); 
                }
                
                FOR quantity(i, F2Reg r) INLINE NEW p = WayBillPosition DO {
                    wayBill(p) <- w;

                    product(p) <- product(r);
                    
                    identity(p) <- STRING(p);
                    
                    quantity(p) <- quantity(i, r);
                    price(p) <- OVERRIDE egaisPrice(i, r), price(i, r);

                    quantity(###doc##Detail d, p) <- quantity(d, r) WHERE ##doc(d)=i;
                    
                    f1Reg(p) <- f1Reg(r);
                    f2Reg(p) <- r;

                    FOR quantity(###doc##Detail d, Lot l) IF MarkCode mc = markCode(id(l)) AND ##doc(d)=i AND (OVERRIDE prevF2Reg(mc), dataF2Reg(mc)) = r INLINE NEW m = WayBillMark DO {
                        wayBillPosition(m) <- p;
                        markCode(m) <- mc;
                        box(m) <- OVERRIDE prevBox(mc), box(boxId());
                    }
                }
                
                check();
                
                IF NOT canceled() THEN {
                    submitWayBill(wayBill(i));
                    APPLY;
                }
            }
        }
    }

    cancel 'Отменить' (###doc i) {
        createAct(wayBill(i), TRUE);
    } CONFIRM;
    
    confirm 'Ответить на акт разногласий' (###doc i) {
        confirm(wayBillAct(wayBill(i)));
    }

    skipShowEdit(###doc d) += forbidEditWayBillAct() AND activeWayBillAct(wayBill(d));
    skipShowDelete(###doc d) += forbidEditWayBillAct() AND activeWayBillAct(wayBill(d));
END

META defineDocumentOutWayBillForm (doc, obj)
    EXTEND FORM doc##s
        OBJECTS w = WayBill PANEL
        PROPERTIES(w) READONLY accepted, canceled, id, number, date, shippingDate, nameStatus
        FILTERS w = wayBill(obj)
    
        OBJECTS wp = WayBillPosition
        PROPERTIES(wp) READONLY idProduct, fullNameProduct, quantity, price, idF1Reg, idF2Reg, 
                                idConsigneeF2Reg, realQuantity BACKGROUND backgroundRealQuantity(wp), bottlingDate
        FILTERS wayBill(wp) = w
    
        PROPERTIES READONLY PANEL
                        commentsWayBillAct 'Комментарий' = comments(wayBillOutDoc(w)),
                        commentsWayBillTicket 'Комментарий запроса на подтверждение акта разногласий' = commentsWayBillTicketOutDoc(wayBillAct(w))
                                 
        PROPERTIES(obj) DRAW wp TOOLBAR 
                        processEGAIS = process SHOWIF isPosted(obj) AND NOT activeWayBillOutDoc(w),
                        cancelEGAIS = cancel SHOWIF activeWayBillOutDoc(w) AND NOT activeWayBillAct(w)
                                                    AND NOT accepted(w),
                        confirmEGAIS = confirm SHOWIF differences(wayBillAct(w)) AND NOT accepted(w) AND NOT canceled(w) AND 
                                                      NOT notRejected(wayBillTicketOutDoc(wayBillAct(w)))  
    ;
    
    DESIGN doc##s {
        documentDetail {
            NEW EGAIS {
                caption = 'ЕГАИС';
                MOVE BOX(w);
                MOVE BOX(wp);
                NEW comments {
                    fill = 0.2;
                    horizontal = TRUE;
                    MOVE PROPERTY(commentsWayBillAct) { panelCaptionVertical = TRUE; fill = 1; }
                    MOVE PROPERTY(commentsWayBillTicket) { panelCaptionVertical = TRUE; fill = 1; }
                }
            }
        }
    }

    skipShowEdit(###doc d) += forbidEditWayBillAct() AND activeWayBillOutDoc(wayBill(d));
    skipShowDelete(###doc d) += forbidEditWayBillAct() AND activeWayBillOutDoc(wayBill(d));
END