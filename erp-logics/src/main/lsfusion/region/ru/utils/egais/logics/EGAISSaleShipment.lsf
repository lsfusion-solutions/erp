MODULE EGAISSaleShipment;

REQUIRE EGAISFRegLedger, EGAISItem, EGAISStock,
        EGAISWayBillProcess, EGAISSaleInvoice,
        SaleShipmentLot, TripShipment;

PRIORITY Sale;

NAMESPACE EGAISSale;

@defineDocumentOutBalance(userShipment, s, supplierStock, quantity);

quantity = ABSTRACT NUMERIC[16,5] (ShipmentDetail, F2Reg);
quantity(UserShipmentDetail d, F2Reg r) += quantity(d, r);

quantityF2Reg = ABSTRACT NUMERIC[16,5] (ShipmentDetail);
quantityF2Reg(UserShipmentDetail d) += quantityF2Reg(d);

egaisPrice (ShipmentDetail d) = invoicePrice(invoiceDetail(d));

@defineDocumentOutWayBillProcess(shipment, supplier, customer, sale, 'Поставки (продажа)');

@defineDocumentOutWayBillForm(shipment, s);

beforeInputLotBarcode (UserShipmentDetail d, STRING[200] s) +{
    IF markCode(s) AND NOT lot(s) AND in(sku(d), product(markCode(s))) THEN NEW l = Lot {
        id(l) <- s;
        sku(l) <- sku(d);
    }
}
// invoice

quantity (InvoiceShipmentDetail d, F2Reg r) += quantity(invoiceDetail(d), r);

quantityF2Reg 'Кол-во (ЕГАИС)' (InvoiceShipmentDetail d) = GROUP SUM quantity(invoiceDetail(d), F2Reg s) MATERIALIZED;
quantityF2Reg(InvoiceShipmentDetail d) += quantityF2Reg(d);

process 'Отправить в ЕГАИС' (Invoice i) { process(invoiceShipment(i)); }
cancel 'Отменить' (Invoice i) { cancel(invoiceShipment(i)); }
confirm 'Ответить на акт разногласий' (Invoice i) { confirm(invoiceShipment(i)); }
wayBill (Invoice i) = wayBill(invoiceShipment(i));

@defineDocumentOutWayBillForm(invoice, i);

DESIGN invoices { documentDetail { showIf = invoiceShipment(i); }}