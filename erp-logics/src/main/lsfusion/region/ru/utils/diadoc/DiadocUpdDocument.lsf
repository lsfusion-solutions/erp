MODULE DiadocUpdDocument;

REQUIRE UpdDocument, DiadocMessage, CryptoPro, ConsignmentUpdDocument, DiadocDocument;

NAMESPACE Diadoc;

GROUP sellersUTD EXTID 'Sellers';
GROUP sellerUTD EXTID 'Seller': sellersUTD;
GROUP organizationReferenceSellerUTD EXTID 'OrganizationReference': sellerUTD;
GROUP buyersUTD EXTID 'Buyers';
GROUP buyerUTD EXTID 'Buyer': buyersUTD;
GROUP organizationReferenceBuyerUTD EXTID 'OrganizationReference': buyerUTD;
GROUP signersUTD EXTID 'Signers';GROUP signerDetailsUTD EXTID 'SignerDetails': signersUTD;

GROUP additionalInfoIdUTD EXTID 'AdditionalInfoId';
GROUP additionalInfoUTD EXTID 'AdditionalInfo': additionalInfoIdUTD;
GROUP tableUTD EXTID 'Table';
GROUP customsDeclarationsUTD EXTID 'CustomsDeclarations';
GROUP customsDeclarationUTD EXTID 'CustomsDeclaration': customsDeclarationsUTD;
GROUP itemIdentificationNumbersUTD EXTID 'ItemIdentificationNumbers';
GROUP transferInfoUTD EXTID 'TransferInfo';
GROUP transferBasesUTD EXTID 'TransferBases': transferInfoUTD;
GROUP transferBaseUTD EXTID 'TransferBase': transferBasesUTD;
GROUP employeeUTD EXTID 'Employee': transferInfoUTD;
GROUP otherIssuerUTD EXTID 'OtherIssuer': transferInfoUTD;

exportUpdDocument = DATA LOCAL UpdDocument ();

FORM universalTransferDocument FORMEXTID 'UniversalTransferDocument'
    PROPERTIES ATTR function = (OVERRIDE nameStatus(exportUpdDocument()),'') EXTID 'Function',//Функция - Функция документа
                    documentDate = toDateDDMMYYYY(OVERRIDE dateInvoice(exportUpdDocument()), currentDate()) EXTID 'DocumentDate',//ДатаСчФ - дата УПД
                    documentNumber = (OVERRIDE numberInvoice(exportUpdDocument()),'') EXTID 'DocumentNumber',//НомерСчФ - номер УПД
                    currency = (OVERRIDE codeCurrency(exportUpdDocument()),'') EXTID 'Currency',//КодОКВ - валюта (код)
                    documentCreator = (OVERRIDE nameOriginatorSupplier(exportUpdDocument()),'') EXTID 'DocumentCreator'//НаимЭконСубСост - Составитель файла обмена счета-фактуры (информации продавца)
    
    PROPERTIES ATTR IN organizationReferenceSellerUTD
                    orgTypeS = id(organizationType(organization(fromBox()))) EXTID 'OrgType',//СвИП - СвЮЛУч - СвИнНеУч
                    boxIdS = fromBoxId() EXTID 'BoxId'
    
    PROPERTIES ATTR IN organizationReferenceBuyerUTD
                    orgTypeB = id(organizationType(organization(toBox()))) EXTID 'OrgType',//СвИП - СвЮЛУч - СвИнНеУч
                    boxIdB = toBoxId() EXTID 'BoxId'
    
    PROPERTIES ATTR IN signerDetailsUTD
                    innSG = supplierSignerInn(exportUpdDocument()) EXTID 'Inn',//ИННЮЛ
                    lastNameSG = (OVERRIDE supplierSignerLastName(exportUpdDocument()), supplierSignerAgentLastName(exportUpdDocument())) EXTID 'LastName',//Фамилия
                    firstNameSG = (OVERRIDE supplierSignerFirstName(exportUpdDocument()), supplierSignerAgentFirstName(exportUpdDocument())) EXTID 'FirstName',//Имя
                    middleNameSG = (OVERRIDE supplierSignerMiddleName(exportUpdDocument()), supplierSignerAgentMiddleName(exportUpdDocument())) EXTID 'MiddleName',//Отчество
                    positionSG = supplierSignerPosition(exportUpdDocument()) EXTID 'Position',//Должн
                    signerPowersSG = nameSupplierSignerCredentials(exportUpdDocument()) EXTID 'SignerPowers',//ОблПолн - Область полномочий
                    signerTypeSG = (IF isSupplierSigner(exportUpdDocument()) THEN '3' ELSE '1') EXTID 'SignerType',
                    signerStatusSG = nameSupplierSignerStatus(exportUpdDocument()) EXTID 'SignerStatus',//Статус
                    signerPowersBaseSG = supplierSignerCredentialsBase(exportUpdDocument()) EXTID 'SignerPowersBase'//ОснПолн - Основание полномочий (доверия)
    
    PROPERTIES ATTR IN additionalInfoUTD
                    idAI = codeBusinessEvent(exportUpdDocument()) EXTID 'Id',//Идентиф - идентификатор (наименование)
                    valueAI = descriptionBusinessEvent(exportUpdDocument()) EXTID 'Value'//Значен - значение
    
    PROPERTIES ATTR IN tableUTD
                    totalWithVatExcludedT = sum(exportUpdDocument()) EXTID 'TotalWithVatExcluded',//СтТовБезНДСВсего - Сумма без учета налога
                    vatT = VATSum(exportUpdDocument()) EXTID 'Vat',//СумНалВсего - Сумма налога всего
                    withoutVatT = withoutVAT(exportUpdDocument()) EXTID 'WithoutVat',//БезНДС - Указывается, если для суммы налога всего не требуется НДС
                    totalT = invoiceSum(exportUpdDocument()) EXTID 'Total'//СтТовУчНалВсего - Сумма всего
    
    OBJECTS i = UpdDocumentDetail EXTID 'Item' IN tableUTD
    FILTERS updDocument(i) == exportUpdDocument()
    PROPERTIES ATTR productI = nameSku(i) EXTID 'Product',//НаимТов - наименование товара
                    unitI = idUOM(i) EXTID 'Unit',//ОКЕИ_Тов - единицы измерения товара (код)
                    unitNameI = nameUOM(i) EXTID 'UnitName',//НаимЕдИзм - наименование единицы измерения товара
                    quantityI = quantity(i) EXTID 'Quantity',//КолТов - количество единиц товара
                    priceI = price(i) EXTID 'Price',//ЦенаТов - цена за единицу товара
                    exciseI = dutySum(i) EXTID 'Excise',//СумАкциз - акциз
                    taxRateI = nameVATStatus(i) EXTID 'TaxRate',//НалСт - ставка налога
                    subtotalWithVatExcludedI = sum(i) EXTID 'SubtotalWithVatExcluded',//СтТовБезНДС - сумма без учета налога
                    vatI = VATSum(i) EXTID 'Vat',//СумНал - сумма налога
                    withoutVatI = TRUE IF NOT VATSum(i) EXTID 'WithoutVat',//БезНДС - Указывается, если для товара не требуется НДС
                    subtotalI = invoiceSum(i) EXTID 'Subtotal',//СтТовУчНал - сумма всего
                    itemVendorCodeI = idSku(i) EXTID 'ItemVendorCode'//КодТов - Характеристика/код/артикул/сорт товара
    PROPERTIES ATTR IN customsDeclarationUTD
                    countryI = idCountry(i) EXTID 'Country',//КодПроисх - Код страны происхождения товара по Общероссийскому классификатору стран мира (ОКСМ) или 980 - Евросоюз, 981 - ЕАЭС
                    declarationNumberI = numberDeclaration(i) EXTID 'DeclarationNumber'//НомерТД - Номер таможенной декларации
    
    OBJECTS utd = UpdTransportPackDetail EXTID 'ItemIdentificationNumber' IN itemIdentificationNumbersUTD
    PROPERTIES ATTR transPackageIdIIN = (OVERRIDE id(utd),'') EXTID 'TransPackageId'//ИдентТрансУпак - Уникальный идентификатор транспортной упаковки
    FILTERS updDocumentDetail(utd) == i
    
    OBJECTS uld = UpdLotDetail EXTID 'ItemIdentificationNumber' IN itemIdentificationNumbersUTD
    PROPERTIES unitIIN = (OVERRIDE id(uld),'') EXTID 'Unit'//КИЗ - Контрольный идентификационный знак
    FILTERS updDocumentDetail(uld) == i
        
    OBJECTS upd = UpdPackDetail EXTID 'ItemIdentificationNumber' IN itemIdentificationNumbersUTD
    PROPERTIES packageIdIIN = (OVERRIDE id(upd),'') EXTID 'PackageId'//НомУпак - Уникальный идентификатор вторичной (потребительской)/третичной (заводской, транспортной) упаковки
    FILTERS updDocumentDetail(upd) == i
    
    PROPERTIES ATTR IN transferInfoUTD
                    operationInfoTI = (OVERRIDE description(exportUpdDocument()),'') EXTID 'OperationInfo'//СодОпер - Содержание операции
    PROPERTIES ATTR IN transferBaseUTD
                    baseDocumentNameTB = (OVERRIDE descriptionContract(exportUpdDocument()),'') EXTID 'BaseDocumentName',//НаимОсн - Наименование документа-основания отгрузки
                    baseDocumentNumberTB = numberContract(exportUpdDocument()) EXTID 'BaseDocumentNumber',//НомОсн - Номер документа-основания отгрузки
                    baseDocumentDateTB = toDateDDMMYYYY(dateContract(exportUpdDocument())) EXTID 'BaseDocumentDate'//ДатаОсн - Дата документа-основания отгрузки
    PROPERTIES ATTR IN employeeUTD
                    positionE = ((OVERRIDE positionAgentSupplier(exportUpdDocument()),' ') IF isAgentSupplier(exportUpdDocument())) EXTID 'Position',//Должность
                    lastNameE = ((OVERRIDE lastNameAgentSupplier(exportUpdDocument()),' ') IF isAgentSupplier(exportUpdDocument())) EXTID 'LastName',//Фамилия
                    firstNameE = ((OVERRIDE firstNameAgentSupplier(exportUpdDocument()),' ') IF isAgentSupplier(exportUpdDocument())) EXTID 'FirstName',//Имя
                    middleNameE = (middleNameAgentSupplier(exportUpdDocument()) IF isAgentSupplier(exportUpdDocument())) EXTID 'MiddleName'//Отчество
    PROPERTIES ATTR IN otherIssuerUTD
                    positionOI = ((OVERRIDE positionAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'Position',//Должность - Должность представителя организации
                    organizationNameOI = ((OVERRIDE nameCompanyAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'OrganizationName',//НаимОргПер - Наименование организации, которой доверена передача
                    lastNameOI = ((OVERRIDE lastNameAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'LastName',//Фамилия
                    firstNameOI = ((OVERRIDE firstNameAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'FirstName',//Имя
                    middleNameOI = (middleNameAgentExecuter(exportUpdDocument()) IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'MiddleName'//Отчество
;

document = DATA Document (UpdDocument);
updDocument = GROUP LAST UpdDocument d ORDER d BY document(d) MATERIALIZED INDEXED;
titleDocument 'Документ Диадока' (UpdDocument d) = title(document(d)) CHARWIDTH 20;
primaryStatusTextDocument 'Статус' (UpdDocument d) = (GROUP CONCAT primaryStatusText(Box b, document(d)), ', ' ORDER b) CHARWIDTH 20;

overMessageUniversalTransferDocument ABSTRACT (UpdDocument);
    
messageUniversalTransferDocument 'Подписать и отправить через Диадок' (UpdDocument d) {
    FOR User u == userDiadoc(currentUser()) DO NEWSESSION {
        fromBox() <- GROUP LAST Box b IF legalEntity(organization(b)) == supplier(invoice(d)) ORDER b;
        toBox() <- GROUP LAST Box b IF legalEntity(organization(b)) == customer(invoice(d)) ORDER b;
        overMessageUniversalTransferDocument(d);
        DIALOG dialogMessageToPost NOMANAGESESSION DO {
            getToken(u);
            exportUpdDocument() <- d;
            EXPORT universalTransferDocument XML;
            
            LOCAL result = FILE ();
            TRY {
                EXTERNAL HTTP POST url() + '/GenerateTitleXml?boxId=' + fromBoxId() + '&documentTypeNamedId=UniversalTransferDocument&documentFunction=' + nameStatus(d) + '&documentVersion=utd820_05_01_01&titleIndex=0' HEADERS httpHeadersToken PARAMS exportFile() TO result;
                typeNamedIdDocument(0) <- 'UniversalTransferDocument';
                functionDocument(0) <- nameStatus(d);
                versionDocument(0) <- 'utd820_05_01_01';
                contentDocument(0) <- encode(RAWFILE(result()), 'base64');
                
                IF useTestSignature() THEN {
                    signWithTestSignature(0) <- TRUE;
                } ELSE {
                    sign(FILE(result()), TRUE, legalEntity(organization(fromBox())));
                    signatureDocument(0) <- encodedSignature();
                }
                
                postMessage(u);
                document(d) <- createdDocument();
                dateTimeTransfer(d) <- currentDateTime();
            } CATCH {
                fileToString(result(), 'UTF-8');
                MESSAGE 'Ошибка отправки УПД ' + (OVERRIDE statusHttp() + ' ' + resultString(), messageCaughtException());
            }
            APPLY;
        }
    }
}

FORM universalTransferDocumentBuyerTitle FORMEXTID 'UniversalTransferDocumentBuyerTitle'
    PROPERTIES ATTR documentCreator = documentCreator() EXTID 'DocumentCreator',//НаимЭконСубСост - Составитель файла обмена счета-фактуры (информации продавца)
                    operationContent = operationContent() EXTID 'OperationContent'//СодОпер - Содержание операции
    
    PROPERTIES ATTR IN signerDetailsUTD
                    innSG = inn() EXTID 'Inn',//ИННЮЛ
                    lastNameSG = surname() EXTID 'LastName',//Фамилия
                    firstNameSG = firstName() EXTID 'FirstName',//Имя
                    middleNameSG = patronymic() EXTID 'MiddleName',//Отчество
                    positionSG = jobTitle() EXTID 'Position',//Должн
                    signerPowersSG = idSingerPowers() EXTID 'SignerPowers',//ОблПолн - Область полномочий
                    signerTypeSG = idSignerType() EXTID 'SignerType',
                    signerStatusSG = idSignerStatus() EXTID 'SignerStatus',//Статус
                    signerPowersBaseSG = signerPowersBase() EXTID 'SignerPowersBase'//ОснПолн - Основание полномочий (доверия)
;

GROUP contentOperCode1 EXTID 'ContentOperCode';
GROUP employee1 EXTID 'Employee';
GROUP signers EXTID 'Signers';
GROUP signerUPD EXTID 'Signer' : signers;
GROUP fio1 EXTID 'Fio' : signerUPD;
GROUP position2 EXTID 'Position' : signerUPD;

contentOperCode = DATA LOCAL STRING();
employee = DATA LOCAL STRING();
fio = DATA LOCAL STRING();

FORM universalTransferDocumentBuyerTitle970 FORMEXTID 'UniversalTransferDocumentBuyerTitle'
    PROPERTIES contentOperCode() EXTID 'ContentOperCode', employee() EXTID 'Employee', = toChar(acceptanceDate(),'DD.MM.YYYY') EXTID 'AcceptanceDate' ATTR, documentCreator() EXTID 'DocumentCreator' ATTR
    PROPERTIES() IN contentOperCode1 idTotalCode EXTID 'TotalCode' ATTR
    PROPERTIES() IN employee1  jobTitleEmployee EXTID 'Position' ATTR, surnameEmployee EXTID 'LastName' ATTR, firstNameEmployee EXTID 'FirstName' ATTR, patronymicEmployee EXTID 'MiddleName' ATTR
    PROPERTIES() IN signerUPD fio EXTID 'Fio', idSignerPowersConfirmationMethod EXTID 'SignerPowersConfirmationMethod' ATTR
    PROPERTIES() IN fio1 firstName EXTID 'FirstName' ATTR, surname EXTID 'LastName' ATTR, patronymic EXTID 'MiddleName' ATTR
    PROPERTIES() IN  position2 value = jobTitle , idPositionSource EXTID 'PositionSource' ATTR;


FORM dialogUpdBuyerTitle 'Титул покупателя'
    PROPERTIES() documentCreator, operationContent, nameSingerPowers, nameSignerStatus, nameSignerType, signerPowersBase
    PROPERTIES() surname, firstName, patronymic, jobTitle, inn
    
    EVENTS ON OK BEFORE {
        IF NOT documentCreator() THEN {
            MESSAGE 'Не задано наименование экономического субъекта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT operationContent() THEN {
            MESSAGE 'Не задано содержание операции' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT signerPowers() THEN {
            MESSAGE 'Не задана область полномочий подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT signerStatus() THEN {
            MESSAGE 'Не задан статус подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT signerType() THEN {
            MESSAGE 'Не задан тип подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT surname() THEN {
            MESSAGE 'Не задана фамилия подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT firstName() THEN {
            MESSAGE 'Не задано имя подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT jobTitle() THEN {
            MESSAGE 'Не задана должность подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT inn() THEN {
            MESSAGE 'Не задан ИНН юридического лица подписанта или индивидуального предпринимателя' NOWAIT;
            beforeCanceled() <- TRUE;
        }
    }
;

DESIGN dialogUpdBuyerTitle {
    GROUP() {
        lines = 1;
        MOVE PROPERTY(documentCreator());
        MOVE PROPERTY(operationContent());
        MOVE PROPERTY(nameSingerPowers());
        MOVE PROPERTY(nameSignerStatus());
        MOVE PROPERTY(nameSignerType());
        MOVE PROPERTY(signerPowersBase());
        MOVE PROPERTY(surname());
        MOVE PROPERTY(firstName());
        MOVE PROPERTY(patronymic());
        MOVE PROPERTY(jobTitle());
        MOVE PROPERTY(inn());
    }
}

FORM dialogUpdBuyerTitle970 'Титул покупателя'
    PROPERTIES() documentCreator, acceptanceDate, nameTotalCode, nameSignerPowersConfirmationMethod, namePositionSource
    PROPERTIES() surname, firstName, patronymic, jobTitle
    PROPERTIES() surnameEmployee, firstNameEmployee, patronymicEmployee, jobTitleEmployee

    EVENTS ON OK BEFORE {
        IF NOT documentCreator() THEN {
            MESSAGE 'Не задано наименование экономического субъекта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT acceptanceDate() THEN {
            MESSAGE 'Не задано дата принятия товаров' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT totalCode() THEN {
            MESSAGE 'Не задан код итога - Код, обозначающий итог приемки товара' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT signerPowersConfirmationMethod() THEN {
            MESSAGE 'Не задан способ подтверждения полномочий представителя на подписание документа' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT positionSource() THEN {
            MESSAGE 'Не задан способ заполнения должности сотрудника' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT surname() THEN {
            MESSAGE 'Не задана фамилия подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT firstName() THEN {
            MESSAGE 'Не задано имя подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT jobTitle() THEN {
            MESSAGE 'Не задана должность подписанта' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT surnameEmployee() THEN {
            MESSAGE 'Не задана фамилия сотрудника' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT firstNameEmployee() THEN {
            MESSAGE 'Не задано имя сотрудника' NOWAIT;
            beforeCanceled() <- TRUE;
        }
        IF NOT jobTitleEmployee() THEN {
            MESSAGE 'Не задана должность сотрудника' NOWAIT;
            beforeCanceled() <- TRUE;
        }    
    }
;

DESIGN dialogUpdBuyerTitle970 {
    GROUP() {
        lines = 1;
        MOVE PROPERTY(documentCreator());
        MOVE PROPERTY(acceptanceDate());
        MOVE PROPERTY(nameTotalCode());
        MOVE PROPERTY(nameSignerPowersConfirmationMethod());
        MOVE PROPERTY(namePositionSource());
        MOVE PROPERTY(surname());
        MOVE PROPERTY(firstName());
        MOVE PROPERTY(patronymic());
        MOVE PROPERTY(jobTitle());
        MOVE PROPERTY(surnameEmployee());
        MOVE PROPERTY(firstNameEmployee());
        MOVE PROPERTY(patronymicEmployee());
        MOVE PROPERTY(jobTitleEmployee());
    }
}

overMessageSignatureUpd ABSTRACT (Box, Document);
overMessageSignature (User u, Box b, Document d) + {
    IF (typeNamedId(d) == 'UniversalTransferDocument' OR typeNamedId(d) == 'UniversalTransferDocumentRevision') THEN NEWSESSION {
        box() <- b;
        message() <- message(d);
        parentEntity(0) <- entity(d);
        isRecipientTitles(0) <- TRUE;
        surname() <- STRING[60](lastName(currentUser()));
        firstName() <- STRING[60](firstName(currentUser()));
        //patronymic() <- STRING[60](middleName(currentUser())); подключить модуль EmployeeRu
        jobTitle() <- STRING[128](namePosition(currentUser()));
        surnameEmployee() <- STRING[60](lastName(currentUser()));
        firstNameEmployee() <- STRING[60](firstName(currentUser()));
        jobTitleEmployee() <- STRING[128](namePosition(currentUser()));
        inn() <- STRING[10](inn(organization(b)));
        overMessageSignatureUpd(b, d);
        IF left(version(d),6) = 'utd820' THEN {
            DIALOG dialogUpdBuyerTitle NOMANAGESESSION DO {
                getToken(u);
                EXPORT universalTransferDocumentBuyerTitle XML;

                LOCAL result = FILE ();
                TRY {
                    EXTERNAL HTTP POST url() + '/GenerateTitleXml?boxId=' + boxId() + '&documentTypeNamedId=' + typeNamedId(d) +'&documentFunction=' + function(d) + '&documentVersion=' + version(d) + '&titleIndex=1&letterId=' + messageId() + '&documentId=' + parentEntityId(0) HEADERS httpHeadersToken PARAMS exportFile() TO result;
                    contentDocument(0) <- encode(RAWFILE(result()), 'base64');

                    IF useTestSignature() THEN {
                        signWithTestSignature(0) <- TRUE;
                    } ELSE {
                        sign(FILE(result()), TRUE, legalEntity(organization(b)));
                        signatureDocument(0) <- encodedSignature();
                    }

                    postMessagePatch(u);
                } CATCH {
                    fileToString(result(), 'UTF-8');
                    MESSAGE 'Ошибка подписи ' + (OVERRIDE statusHttp() + ' ' + resultString(), messageCaughtException());
                }
                APPLY;
                getDocument(u,b,d);
            }
       } ELSE {
            DIALOG dialogUpdBuyerTitle970 NOMANAGESESSION DO {
                getToken(u);
                EXPORT universalTransferDocumentBuyerTitle970 XML;

                LOCAL result = FILE ();
                TRY {
                    EXTERNAL HTTP POST url() + '/GenerateTitleXml?boxId=' + boxId() + '&documentTypeNamedId=' + typeNamedId(d) +'&documentFunction=' + function(d) + '&documentVersion=' + version(d) + '&titleIndex=1&letterId=' + messageId() + '&documentId=' + parentEntityId(0) HEADERS httpHeadersToken PARAMS exportFile() TO result;
                    contentDocument(0) <- encode(RAWFILE(result()), 'base64');

                    IF useTestSignature() THEN {
                        signWithTestSignature(0) <- TRUE;
                    } ELSE {
                        sign(FILE(result()), TRUE, legalEntity(organization(b)));
                        signatureDocument(0) <- encodedSignature();
                    }

                    postMessagePatch(u);
                } CATCH {
                    fileToString(result(), 'UTF-8');
                    MESSAGE 'Ошибка подписи ' + (OVERRIDE statusHttp() + ' ' + resultString(), messageCaughtException());
                }
                APPLY;
                getDocument(u,b,d);
            }
        }
    }
}

EXTEND FORM updDocument
    PROPERTIES(u) SHOWIF document(u) READONLY titleDocument, primaryStatusTextDocument
    PROPERTIES(u) SHOWIF NOT document(u) messageUniversalTransferDocument
;
DESIGN updDocument {
    transfer {
        NEW diadoc {
            caption = 'Диадок API';
            MOVE PROPERTY (titleDocument(u));
            MOVE PROPERTY (primaryStatusTextDocument(u));
            MOVE PROPERTY (messageUniversalTransferDocument(u));
        }
    }
}

EXTEND FORM updDocuments
    PROPERTIES(u) READONLY titleDocument = titleDocument //AFTER isTransferred(u)
    PROPERTIES(u) PANEL SHOWIF document(u) READONLY titleDocument, primaryStatusTextDocument 
    PROPERTIES(u) PANEL SHOWIF NOT document(u) messageUniversalTransferDocument
;

DESIGN updDocuments {
    export {
        NEW diadocAPI {
            caption = 'Диадок API';
            MOVE PROPERTY (titleDocument(u));
            MOVE PROPERTY (primaryStatusTextDocument(u));
            MOVE PROPERTY (messageUniversalTransferDocument(u));
        }
    }
}

//создание документа на основе
GROUP vsvUchDokObor EXTID 'СвУчДокОбор';
GROUP vsvOEDOtpr EXTID 'СвОЭДОтпр' : vsvUchDokObor;
//GROUP vdokumient EXTID 'Документ';
GROUP vsvSchFakt EXTID 'СвСчФакт' : vdokumient;
GROUP visprSchF EXTID 'ИспрСчФ' : vsvSchFakt;
GROUP vsvProd EXTID 'СвПрод' : vsvSchFakt;
GROUP vidSv EXTID 'ИдСв' : vsvProd;
GROUP vsvIP EXTID 'СвИП' : vidSv;
GROUP vFIO EXTID 'ФИО' : vsvIP;
GROUP vsvIuLUch1 EXTID 'СвЮЛУч' : vidSv;
GROUP vadries EXTID 'Адрес' : vsvProd;
GROUP vadrRF1 EXTID 'АдрРФ' : vadries;
GROUP vadrInf1 EXTID 'АдрИнф' : vadries;
GROUP vbankRiekv EXTID 'БанкРекв' : vsvProd;
GROUP vsvBank1 EXTID 'СвБанк' : vbankRiekv;
GROUP vghruzOt EXTID 'ГрузОт' : vsvSchFakt;
GROUP vghruzOtpr EXTID 'ГрузОтпр' : vghruzOt;
GROUP vidSv1 EXTID 'ИдСв' : vghruzOtpr;
GROUP vsvIP1 EXTID 'СвИП' : vidSv1;
GROUP vFIO1 EXTID 'ФИО' : vsvIP1;
GROUP vsvIuLUch2 EXTID 'СвЮЛУч' : vidSv1;
GROUP vadries1 EXTID 'Адрес' : vghruzOtpr;
GROUP vadrRF2 EXTID 'АдрРФ' : vadries1;
GROUP vadrInf2 EXTID 'АдрИнф' : vadries1;
GROUP vbankRiekv1 EXTID 'БанкРекв' : vghruzOtpr;
GROUP vsvBank2 EXTID 'СвБанк' : vbankRiekv1;
GROUP vghruzPoluch EXTID 'ГрузПолуч' : vsvSchFakt;
GROUP vidSv2 EXTID 'ИдСв' : vghruzPoluch;
GROUP vsvIP2 EXTID 'СвИП' : vidSv2;
GROUP vFIO2 EXTID 'ФИО' : vsvIP2;
GROUP vsvIuLUch3 EXTID 'СвЮЛУч' : vidSv2;
GROUP vadries2 EXTID 'Адрес' : vghruzPoluch;
GROUP vadrRF3 EXTID 'АдрРФ' : vadries2;
GROUP vadrInf3 EXTID 'АдрИнф' : vadries2;
GROUP vsvPokup EXTID 'СвПокуп' : vsvSchFakt;
GROUP vDenIzm EXTID 'ДенИзм' : vsvSchFakt;
GROUP vidSv3 EXTID 'ИдСв' : vsvPokup;
GROUP vsvIP3 EXTID 'СвИП' : vidSv3;
GROUP vFIO3 EXTID 'ФИО' : vsvIP3;
GROUP vsvIuLUch7 EXTID 'СвЮЛУч' : vidSv3;
GROUP vadries3 EXTID 'Адрес' : vsvPokup;
GROUP vadrRF4 EXTID 'АдрРФ' : vadries3;
GROUP vadrInf4 EXTID 'АдрИнф' : vadries3;
GROUP vbankRiekv2 EXTID 'БанкРекв' : vsvPokup;
GROUP vsvBank3 EXTID 'СвБанк' : vbankRiekv2;
GROUP vinfPolFKhZh1 EXTID 'ИнфПолФХЖ1' : vsvSchFakt;
GROUP vtablSchFakt EXTID 'ТаблСчФакт' : vdokumient;

GROUP vaktsiz EXTID 'Акциз';
GROUP vsumNal EXTID 'СумНал';
GROUP vsviedTov EXTID 'СведТов';
GROUP vsvTD EXTID 'СвТД';
GROUP vsvTD503 EXTID 'СвДТ';
GROUP vdopSviedTov EXTID 'ДопСведТов';
//GROUP vnomSriedIdientTov EXTID 'НомСредИдентТов' : vdopSviedTov;
GROUP vvsieghoOpl EXTID 'ВсегоОпл' : vtablSchFakt;
GROUP vsumNalVsiegho EXTID 'СумНалВсего' : vvsieghoOpl;
GROUP vsvProdPier EXTID 'СвПродПер' : vdokumient;
GROUP vsvPier EXTID 'СвПер' : vsvProdPier;
GROUP vosnPier1 EXTID 'ОснПер' : vsvPier;
GROUP vsvLicPier EXTID 'СвЛицПер' : vsvPier;
GROUP vrabOrgProd EXTID 'РабОргПрод' : vsvLicPier;
GROUP vFIO4 EXTID 'ФИО' : vrabOrgProd;
GROUP vinLic EXTID 'ИнЛицо' : vsvLicPier;
GROUP vFIO5 EXTID 'ФИО' : vinLic;
GROUP vFLPer EXTID 'ФЛПер' : vsvLicPier;
GROUP vFIO6 EXTID 'ФИО' : vFLPer;
GROUP vpodpisant EXTID 'Подписант' : vdokumient;
GROUP vFL EXTID 'ФЛ' : vpodpisant;
GROUP vFIO7 EXTID 'ФИО' : vFL;
GROUP vIP EXTID 'ИП' : vpodpisant;
GROUP vFIO8 EXTID 'ФИО' : vIP;
GROUP vIuL EXTID 'ЮЛ' : vpodpisant;
GROUP vFIO9 EXTID 'ФИО' : vIuL;

vnaimOrgh = DATA LOCAL STRING();
vINNIuL = DATA LOCAL STRING();
vidEDO = DATA LOCAL STRING();
vidOtpr = DATA LOCAL STRING();
vidPol = DATA LOCAL STRING();
vdiefNomIsprSchF = DATA LOCAL STRING();
vdiefDataIsprSchF = DATA LOCAL STRING();
vINNFL = DATA LOCAL STRING();
vfamiliia = DATA LOCAL STRING();
vimia = DATA LOCAL STRING();
votchiestvo = DATA LOCAL STRING();
vnaimOrgh1 = DATA LOCAL STRING();
vINNIuL1 = DATA LOCAL STRING();
vKPP1 = DATA LOCAL STRING();
vkodGAR = DATA LOCAL STRING();
vindieks = DATA LOCAL STRING();
vkodRieghion = DATA LOCAL STRING();
vraion = DATA LOCAL STRING();
vghorod = DATA LOCAL STRING();
vulitsa = DATA LOCAL STRING();
vdom = DATA LOCAL STRING();
vkorpus = DATA LOCAL STRING();
vkodStr1 = DATA LOCAL STRING();
vadrTiekst1 = DATA LOCAL STRING();
vnaimBank = DATA LOCAL STRING();
vBIK = DATA LOCAL STRING();
vkorSchiet = DATA LOCAL STRING();
vnomierSchieta = DATA LOCAL STRING();
vOKPO = DATA LOCAL STRING();
vINNFL1 = DATA LOCAL STRING();
vfamiliia1 = DATA LOCAL STRING();
vimia1 = DATA LOCAL STRING();
votchiestvo1 = DATA LOCAL STRING();
vnaimOrgh2 = DATA LOCAL STRING();
vINNIuL2 = DATA LOCAL STRING();
vKPP2 = DATA LOCAL STRING();
vindieks1 = DATA LOCAL STRING();
vkodRieghion1 = DATA LOCAL STRING();
vghorod1 = DATA LOCAL STRING();
vulitsa1 = DATA LOCAL STRING();
vdom1 = DATA LOCAL STRING();
vkodStr2 = DATA LOCAL STRING();
vadrTiekst2 = DATA LOCAL STRING();
vnaimBank1 = DATA LOCAL STRING();
vBIK1 = DATA LOCAL STRING();
vnomierSchieta1 = DATA LOCAL STRING();
vOKPO1 = DATA LOCAL STRING();
vINNFL2 = DATA LOCAL STRING();
vfamiliia2 = DATA LOCAL STRING();
vimia2 = DATA LOCAL STRING();
votchiestvo2 = DATA LOCAL STRING();
vnaimOrgh3 = DATA LOCAL STRING();
vINNIuL3 = DATA LOCAL STRING();
vKPP3 = DATA LOCAL STRING();
vindieks2 = DATA LOCAL STRING();
vkodRieghion2 = DATA LOCAL STRING();
vraion1 = DATA LOCAL STRING();
vghorod2 = DATA LOCAL STRING();
vulitsa2 = DATA LOCAL STRING();
vdom2 = DATA LOCAL STRING();
vkodStr3 = DATA LOCAL STRING();
vadrTiekst3 = DATA LOCAL STRING();
vonZhe = DATA LOCAL STRING();
vOKPO2 = DATA LOCAL STRING();
vCodeOKVD = DATA LOCAL STRING();
vINNFL3 = DATA LOCAL STRING();
vfamiliia3 = DATA LOCAL STRING();
vimia3 = DATA LOCAL STRING();
votchiestvo3 = DATA LOCAL STRING();
vnaimOrgh4 = DATA LOCAL STRING();
vINNIuL4 = DATA LOCAL STRING();
vKPP4 = DATA LOCAL STRING();
vkodGAR1 = DATA LOCAL STRING();
vindieks3 = DATA LOCAL STRING();
vkodRieghion3 = DATA LOCAL STRING();
vghorod3 = DATA LOCAL STRING();
vulitsa3 = DATA LOCAL STRING();
vdom3 = DATA LOCAL STRING();
vkodStr4 = DATA LOCAL STRING();
vadrTiekst4 = DATA LOCAL STRING();
vnaimBank2 = DATA LOCAL STRING();
vBIK2 = DATA LOCAL STRING();
vnomierSchieta2 = DATA LOCAL STRING();
vtiekstInf = DATA LOCAL STRING(INTEGER);
vnomierSchF = DATA LOCAL STRING();
vdataSchF = DATA LOCAL STRING();
vkodOKV = DATA LOCAL STRING();
vnomierDoc = DATA LOCAL STRING();
vdataDoc = DATA LOCAL STRING();
vsumAktsiz = DATA LOCAL STRING(INTEGER);
vbiezAktsiz = DATA LOCAL STRING(INTEGER);
vsumNal1 = DATA LOCAL STRING(INTEGER);
videntTransUpak = DATA LOCAL STRING(INTEGER);
vnomSriedIdientTovVsviedTov = DATA LOCAL INTEGER(INTEGER);
vKIZ = DATA LOCAL STRING(INTEGER);
vnomUpak = DATA LOCAL STRING(INTEGER);
vkodProish = DATA LOCAL STRING(INTEGER);
vnomerTD = DATA LOCAL STRING(INTEGER);
vkodProish503 = DATA LOCAL STRING(INTEGER);
vnomerTD503 = DATA LOCAL STRING(INTEGER);
vnaimIedIzm = DATA LOCAL STRING(INTEGER);
vnaimIedIzm503 = DATA LOCAL STRING(INTEGER);
vkrNaimStrPr = DATA LOCAL STRING(INTEGER);
vkodTov = DATA LOCAL STRING(INTEGER);
vsviedTovVinfPolFKhZh2 = DATA LOCAL INTEGER(INTEGER);
vinfPolFKhZh2 = DATA LOCAL STRING(INTEGER);
vnomStr = DATA LOCAL STRING(INTEGER);
vnaimTov = DATA LOCAL STRING(INTEGER);
vOKIeI_Tov = DATA LOCAL STRING(INTEGER);
vkolTov = DATA LOCAL STRING(INTEGER);
vtsienaTov = DATA LOCAL STRING(INTEGER);
vstTovBiezNDS = DATA LOCAL STRING(INTEGER);
vnalSt = DATA LOCAL STRING(INTEGER);
vstTovUchNal = DATA LOCAL STRING(INTEGER);
vsumNal2 = DATA LOCAL STRING();
vbiezNDS = DATA LOCAL STRING();
vkolNiettoVs = DATA LOCAL STRING();
identif = DATA LOCAL STRING(INTEGER);
vinfPolFKhZh3 = DATA LOCAL STRING(INTEGER);
vstTovBiezNDSVsiegho = DATA LOCAL STRING();
vstTovUchNalVsiegho = DATA LOCAL STRING();
vosnPier = DATA LOCAL STRING();
vnaimOsn = DATA LOCAL STRING();
vnomOsn = DATA LOCAL STRING();
vdataOsn = DATA LOCAL STRING();
vsodOpier = DATA LOCAL STRING();
vdataPier = DATA LOCAL STRING();
vdolzhnost = DATA LOCAL STRING();
vfamiliia4 = DATA LOCAL STRING();
vimia4 = DATA LOCAL STRING();
votchiestvo4 = DATA LOCAL STRING();
vdolzhnost1 = DATA LOCAL STRING();
vnaimOrgPer = DATA LOCAL STRING();
vfamiliia5 = DATA LOCAL STRING();
vimia5 = DATA LOCAL STRING();
votchiestvo5 = DATA LOCAL STRING();
vfamiliia6 = DATA LOCAL STRING();
vimia6 = DATA LOCAL STRING();
votchiestvo6 = DATA LOCAL STRING();
voblPoln = DATA LOCAL STRING();
vstatus = DATA LOCAL STRING();
vosnPoln = DATA LOCAL STRING();
vfamiliia7 = DATA LOCAL STRING();
vimia7 = DATA LOCAL STRING();
votchiestvo7 = DATA LOCAL STRING();
vINNFL4 = DATA LOCAL STRING();
vfamiliia8 = DATA LOCAL STRING();
vimia8 = DATA LOCAL STRING();
votchiestvo8 = DATA LOCAL STRING();
vINNIuL5 = DATA LOCAL STRING();
vnaimOrgh5 = DATA LOCAL STRING();
vdolzhn = DATA LOCAL STRING();
vfamiliia9 = DATA LOCAL STRING();
vimia9 = DATA LOCAL STRING();
votchiestvo9 = DATA LOCAL STRING();
vKND = DATA LOCAL STRING();
vfunktsiia = DATA LOCAL STRING();
vpoFaktKhZh = DATA LOCAL STRING();
vnaimDokOpr = DATA LOCAL STRING();
vdataInfPr = DATA LOCAL STRING();
vvriemInfPr = DATA LOCAL STRING();
vnaimEkonSubSost = DATA LOCAL STRING();
vidFail = DATA LOCAL STRING();
vviersForm = DATA LOCAL STRING();
vviersProgh = DATA LOCAL STRING();

FORM importUPD FORMEXTID 'Файл'
    PROPERTIES() vidFail EXTID 'ИдФайл' ATTR, vviersForm EXTID 'ВерсФорм' ATTR, vviersProgh EXTID 'ВерсПрог' ATTR
    PROPERTIES() IN vsvUchDokObor vidOtpr EXTID 'ИдОтпр' ATTR, vidPol EXTID 'ИдПол' ATTR
    PROPERTIES() IN vsvOEDOtpr vnaimOrgh EXTID 'НаимОрг' ATTR, vINNIuL EXTID 'ИННЮЛ' ATTR, vidEDO EXTID 'ИдЭДО' ATTR
    PROPERTIES() IN vdokumient vKND EXTID 'КНД' ATTR, vfunktsiia EXTID 'Функция' ATTR, vpoFaktKhZh EXTID 'ПоФактХЖ' ATTR, vnaimDokOpr EXTID 'НаимДокОпр' ATTR, vdataInfPr EXTID 'ДатаИнфПр' ATTR, vvriemInfPr EXTID 'ВремИнфПр' ATTR, vnaimEkonSubSost EXTID 'НаимЭконСубСост' ATTR
    PROPERTIES() IN vsvSchFakt vnomierSchF EXTID 'НомерСчФ' ATTR, vdataSchF EXTID 'ДатаСчФ' ATTR, vkodOKV EXTID 'КодОКВ' ATTR
    PROPERTIES() IN vsvSchFakt vnomierDoc EXTID 'НомерДок' ATTR, vdataDoc EXTID 'ДатаДок' ATTR
    PROPERTIES() IN visprSchF vdiefNomIsprSchF EXTID 'ДефНомИспрСчФ' ATTR, vdiefDataIsprSchF EXTID 'ДефДатаИспрСчФ' ATTR
    PROPERTIES() IN vsvProd vOKPO EXTID 'ОКПО' ATTR
    PROPERTIES() IN vsvIP vINNFL EXTID 'ИННФЛ' ATTR
    PROPERTIES() IN vFIO vfamiliia EXTID 'Фамилия' ATTR, vimia EXTID 'Имя' ATTR, votchiestvo EXTID 'Отчество' ATTR
    PROPERTIES() IN vsvIuLUch1 vnaimOrgh1 EXTID 'НаимОрг' ATTR, vINNIuL1 EXTID 'ИННЮЛ' ATTR, vKPP1 EXTID 'КПП' ATTR
    PROPERTIES() IN vadries vkodGAR EXTID 'КодГАР' ATTR
    PROPERTIES() IN vadrRF1 vindieks EXTID 'Индекс' ATTR, vkodRieghion EXTID 'КодРегион' ATTR, vraion EXTID 'Район' ATTR, vghorod EXTID 'Город' ATTR, vulitsa EXTID 'Улица' ATTR, vdom EXTID 'Дом' ATTR, vkorpus EXTID 'Корпус' ATTR
    PROPERTIES() IN vadrInf1 vkodStr1 EXTID 'КодСтр' ATTR, vadrTiekst1 EXTID 'АдрТекст' ATTR
    PROPERTIES() IN vbankRiekv vnomierSchieta EXTID 'НомерСчета' ATTR
    PROPERTIES() IN vsvBank1 vnaimBank EXTID 'НаимБанк' ATTR, vBIK EXTID 'БИК' ATTR, vkorSchiet EXTID 'КорСчет' ATTR
    PROPERTIES() IN vghruzOtpr vOKPO1 EXTID 'ОКПО' ATTR
    PROPERTIES() IN vsvIP1 vINNFL1 EXTID 'ИННФЛ' ATTR
    PROPERTIES() IN vFIO1 vfamiliia1 EXTID 'Фамилия' ATTR, vimia1 EXTID 'Имя' ATTR, votchiestvo1 EXTID 'Отчество' ATTR
    PROPERTIES() IN vsvIuLUch2 vnaimOrgh2 EXTID 'НаимОрг' ATTR, vINNIuL2 EXTID 'ИННЮЛ' ATTR, vKPP2 EXTID 'КПП' ATTR
    PROPERTIES() IN vadrRF2 vindieks1 EXTID 'Индекс' ATTR, vkodRieghion1 EXTID 'КодРегион' ATTR, vghorod1 EXTID 'Город' ATTR, vulitsa1 EXTID 'Улица' ATTR, vdom1 EXTID 'Дом' ATTR
    PROPERTIES() IN vadrInf2 vkodStr2 EXTID 'КодСтр' ATTR, vadrTiekst2 EXTID 'АдрТекст' ATTR
    PROPERTIES() IN vbankRiekv1 vnomierSchieta1 EXTID 'НомерСчета' ATTR
    PROPERTIES() IN vsvBank2 vnaimBank1 EXTID 'НаимБанк' ATTR, vBIK1 EXTID 'БИК' ATTR
    PROPERTIES() IN vghruzOt vonZhe EXTID 'ОнЖе'
    PROPERTIES() IN vsvIP2 vINNFL2 EXTID 'ИННФЛ' ATTR
    PROPERTIES() IN vFIO2 vfamiliia2 EXTID 'Фамилия' ATTR, vimia2 EXTID 'Имя' ATTR, votchiestvo2 EXTID 'Отчество' ATTR
    PROPERTIES() IN vsvIuLUch3 vnaimOrgh3 EXTID 'НаимОрг' ATTR, vINNIuL3 EXTID 'ИННЮЛ' ATTR, vKPP3 EXTID 'КПП' ATTR
    PROPERTIES() IN vadrRF3 vindieks2 EXTID 'Индекс' ATTR, vkodRieghion2 EXTID 'КодРегион' ATTR, vraion1 EXTID 'Район' ATTR, vghorod2 EXTID 'Город' ATTR, vulitsa2 EXTID 'Улица' ATTR, vdom2 EXTID 'Дом' ATTR
    PROPERTIES() IN vadrInf3 vkodStr3 EXTID 'КодСтр' ATTR, vadrTiekst3 EXTID 'АдрТекст' ATTR
    PROPERTIES() IN vsvPokup vOKPO2 EXTID 'ОКПО' ATTR
    PROPERTIES() IN vDenIzm vCodeOKVD EXTID 'КодОКВ' ATTR
    PROPERTIES() IN vsvIP3 vINNFL3 EXTID 'ИННФЛ' ATTR
    PROPERTIES() IN vFIO3 vfamiliia3 EXTID 'Фамилия' ATTR, vimia3 EXTID 'Имя' ATTR, votchiestvo3 EXTID 'Отчество' ATTR
    PROPERTIES() IN vsvIuLUch7 vnaimOrgh4 EXTID 'НаимОрг' ATTR, vINNIuL4 EXTID 'ИННЮЛ' ATTR, vKPP4 EXTID 'КПП' ATTR
    PROPERTIES() IN vadries3 vkodGAR1 EXTID 'КодГАР' ATTR
    PROPERTIES() IN vadrRF4 vindieks3 EXTID 'Индекс' ATTR, vkodRieghion3 EXTID 'КодРегион' ATTR, vghorod3 EXTID 'Город' ATTR, vulitsa3 EXTID 'Улица' ATTR, vdom3 EXTID 'Дом' ATTR
    PROPERTIES() IN vadrInf4 vkodStr4 EXTID 'КодСтр' ATTR, vadrTiekst4 EXTID 'АдрТекст' ATTR
    PROPERTIES() IN vbankRiekv2 vnomierSchieta2 EXTID 'НомерСчета' ATTR
    PROPERTIES() IN vsvBank3 vnaimBank2 EXTID 'НаимБанк' ATTR, vBIK2 EXTID 'БИК' ATTR
    
    OBJECTS vtiekstInf = INTEGER EXTID 'ТекстИнф' IN vinfPolFKhZh1
    
    OBJECTS vsviedTov = INTEGER EXTID 'СведТов' IN vtablSchFakt
    PROPERTIES(vsviedTov) vnomStr EXTID 'НомСтр' ATTR, vnaimTov EXTID 'НаимТов' ATTR, vOKIeI_Tov EXTID 'ОКЕИ_Тов' ATTR, vnaimIedIzm503 EXTID 'НаимЕдИзм' ATTR,
            vkolTov EXTID 'КолТов' ATTR, vtsienaTov EXTID 'ЦенаТов' ATTR, vstTovBiezNDS EXTID 'СтТовБезНДС' ATTR, vnalSt EXTID 'НалСт' ATTR, vstTovUchNal EXTID 'СтТовУчНал' ATTR
    FILTERS vkolTov(vsviedTov)
    PROPERTIES(vsviedTov) IN vaktsiz vsumAktsiz EXTID 'СумАкциз'
    PROPERTIES(vsviedTov) IN vaktsiz vbiezAktsiz EXTID 'БезАкциз'
    PROPERTIES(vsviedTov) IN vsumNal vsumNal1 EXTID 'СумНал'
    PROPERTIES(vsviedTov) IN vsvTD vkodProish EXTID 'КодПроисх' ATTR, vnomerTD EXTID 'НомерТД' ATTR
    PROPERTIES(vsviedTov) IN vsvTD503 vkodProish503 EXTID 'КодПроисх' ATTR, vnomerTD503 EXTID 'НомерТД' ATTR
    PROPERTIES(vsviedTov) IN vdopSviedTov vnaimIedIzm EXTID 'НаимЕдИзм' ATTR, vkrNaimStrPr EXTID 'КрНаимСтрПр' ATTR, vkodTov EXTID 'КодТов' ATTR
    
    OBJECTS vnomSriedIdientTov = INTEGER EXTID 'НомСредИдентТов' IN vdopSviedTov
    PROPERTIES(vnomSriedIdientTov) videntTransUpak EXTID 'ИдентТрансУпак' ATTR, vKIZ EXTID 'КИЗ', vnomUpak EXTID 'НомУпак'
    FILTERS vnomSriedIdientTovVsviedTov(vnomSriedIdientTov) == vsviedTov
    
    OBJECTS vinfPolFKhZh2 = INTEGER EXTID 'ИнфПолФХЖ2'
    FILTERS vsviedTovVinfPolFKhZh2(vinfPolFKhZh2) == vsviedTov
    PROPERTIES(vinfPolFKhZh2) identif EXTID 'Идентиф' ATTR , vinfPolFKhZh3 EXTID 'Значен' ATTR
    
    PROPERTIES() IN vvsieghoOpl vkolNiettoVs EXTID 'КолНеттоВс', vstTovBiezNDSVsiegho EXTID 'СтТовБезНДСВсего' ATTR, vstTovUchNalVsiegho EXTID 'СтТовУчНалВсего' ATTR
    PROPERTIES() IN vsumNalVsiegho vsumNal2 EXTID 'СумНал', vbiezNDS EXTID 'БезНДС'
    PROPERTIES() IN vsvPier vosnPier EXTID 'ОснПер', vsodOpier EXTID 'СодОпер' ATTR, vdataPier EXTID 'ДатаПер' ATTR
    PROPERTIES() IN vosnPier1 vnaimOsn EXTID 'НаимОсн' ATTR, vnomOsn EXTID 'НомОсн' ATTR, vdataOsn EXTID 'ДатаОсн' ATTR
    PROPERTIES() IN vrabOrgProd vdolzhnost EXTID 'Должность' ATTR
    PROPERTIES() IN vFIO4 vfamiliia4 EXTID 'Фамилия' ATTR, vimia4 EXTID 'Имя' ATTR, votchiestvo4 EXTID 'Отчество' ATTR
    PROPERTIES() IN vinLic vdolzhnost1 EXTID 'Должность' ATTR, vnaimOrgPer EXTID 'НаимОргПер' ATTR
    PROPERTIES() IN vFIO5 vfamiliia5 EXTID 'Фамилия' ATTR, vimia5 EXTID 'Имя' ATTR, votchiestvo5 EXTID 'Отчество' ATTR
    PROPERTIES() IN vFIO6 vfamiliia6 EXTID 'Фамилия' ATTR, vimia6 EXTID 'Имя' ATTR, votchiestvo6 EXTID 'Отчество' ATTR
    PROPERTIES() IN vpodpisant voblPoln EXTID 'ОблПолн' ATTR, vstatus EXTID 'Статус' ATTR, vosnPoln EXTID 'ОснПолн' ATTR
    PROPERTIES() IN vFIO7 vfamiliia7 EXTID 'Фамилия' ATTR, vimia7 EXTID 'Имя' ATTR, votchiestvo7 EXTID 'Отчество' ATTR
    PROPERTIES() IN vIP vINNFL4 EXTID 'ИННФЛ'
    PROPERTIES() IN vFIO8 vfamiliia8 EXTID 'Фамилия' ATTR, vimia8 EXTID 'Имя' ATTR, votchiestvo8 EXTID 'Отчество' ATTR
    PROPERTIES() IN vIuL vINNIuL5 EXTID 'ИННЮЛ' ATTR, vnaimOrgh5 EXTID 'НаимОрг' ATTR, vdolzhn EXTID 'Должн' ATTR
    PROPERTIES() IN vFIO9 vfamiliia9 EXTID 'Фамилия' ATTR, vimia9 EXTID 'Имя' ATTR, votchiestvo9 EXTID 'Отчество' ATTR
;


showCreateDocument(Document d) += WHEN (typeNamedId(d) == 'UniversalTransferDocument' OR typeNamedId(d) == 'UniversalTransferDocumentRevision') AND NOT updDocument(d) THEN TRUE;

createDocument(Document d) + {
    IF (typeNamedId(d) == 'UniversalTransferDocument' OR typeNamedId(d) == 'UniversalTransferDocumentRevision') AND NOT updDocument(d) THEN NEWSESSION {
        IMPORT importUPD FROM data(entity(d));

        NEW upd = UpdDocument {
            LOCAL is503 = BOOLEAN ();
            is503() <- TRUE IF vviersForm()= '5.03';
            uuid(upd) <- ISTRING[36](getWord(vidFail(), '_', wordCount(vidFail(), '_')));
            idConsignor(upd) <- STRING[46](vidOtpr());
            idConsignee(upd) <- STRING[46](vidPol());
            nameOperatorConsignor(upd) <- STRING[1000](vnaimOrgh());
            innOperatorConsignor(upd) <- STRING[10](vINNIuL());
            codeOperatorConsignor(upd) <- STRING[3](vidEDO());
            status(upd) <- GROUP MAX UpdDocumentStatus s IF staticCaption(s) == vfunktsiia() AND s IS UpdDocumentStatus;
            businessNameDocument(upd) <- STRING[255](vpoFaktKhZh());
            supplierNameDocument(upd) <- STRING[255](vnaimDokOpr());
            dateSupplier(upd) <- DATE(toDateFormat(vdataInfPr(), 'DD.MM.YYYY'));
            timeSupplier(upd) <- TIME(toDateTimeFormat(vvriemInfPr(), 'HH24.MI.SS'));
            nameOriginatorSupplier(upd) <- STRING[1000](vnaimEkonSubSost());
            numberInvoice(upd) <- IF is503() THEN STRING[1000](vnomierDoc()) ELSE STRING[1000](vnomierSchF());
            dateInvoice(upd) <- IF is503() THEN DATE(toDateFormat(vdataDoc(), 'DD.MM.YYYY')) ELSE DATE(toDateFormat(vdataSchF(), 'DD.MM.YYYY'));
            codeCurrency(upd) <- IF is503() THEN STRING[3](vCodeOKVD()) ELSE STRING[3](vkodOKV());
            supplier(upd) <- OVERRIDE legalEntityInn(vINNFL()), legalEntityInn(vINNIuL1());
            okpoSupplier(upd) <- STRING[10](vOKPO());
            innSupplierIE(upd) <- STRING[12](vINNFL());
            supplierIELastName(upd) <- STRING[60](vfamiliia());
            supplierIEFirstName(upd) <- STRING[60](vimia());
            supplierIEMiddleName(upd) <- STRING[60](votchiestvo());
            nameSupplier(upd) <- STRING[1000](vnaimOrgh1());
            innSupplier(upd) <- STRING[10](vINNIuL1());
            kppSupplier(upd) <- STRING[9](vKPP1());
            codeAddressSupplier(upd) <- STRING[36](vkodGAR());
            regionCodeSupplier(upd) <- STRING[2](vkodRieghion());
            countryCodeAddressSupplier(upd) <- STRING[3](vkodStr1());
            addressSupplier(upd) <- STRING[150](vadrTiekst1());
            numberAccountSupplier(upd) <- STRING[20](vnomierSchieta());
            nameBankSupplier(upd) <- STRING[1000](vnaimBank());
            MFOBankSupplier(upd) <- STRING[9](vBIK());
            corrAccountBankSupplier(upd) <- STRING[20](vkorSchiet());
            innConsignorCompanyIE(upd) <- STRING[12](vINNFL1());
            consignorCompanyIELastName(upd) <- STRING[60](vfamiliia1());
            consignorCompanyIEFirstName(upd) <- STRING[60](vimia1());
            consignorCompanyIEMiddleName(upd) <- STRING[60](votchiestvo1());
            nameConsignorCompany(upd) <- STRING[1000](vnaimOrgh2());
            innConsignorCompany(upd) <- STRING[10](vINNIuL2());
            countryCodeAddressConsignorCompany(upd) <- STRING[3](vkodStr2());
            addressConsignorCompany(upd) <- STRING[1000](vadrTiekst2());
            isConsignerSupplier(upd) <- vonZhe() == 'он же';
            innReceiverCompanyIE(upd) <- STRING[12](vINNFL2());
            receiverCompanyIELastName(upd) <- STRING[60](vfamiliia2());
            receiverCompanyIEFirstName(upd) <- STRING[60](vimia2());
            receiverCompanyIEMiddleName(upd) <- STRING[60](votchiestvo2());
            nameReceiverCompany(upd) <- STRING[1000](vnaimOrgh3());
            innReceiverCompany(upd) <- STRING[10](vINNIuL3());
            countryCodeAddressReceiverCompany(upd) <- STRING[3](vkodStr3());
            addressReceiverCompany(upd) <- STRING[1000](vadrTiekst3());
            customer(upd) <- OVERRIDE legalEntityInn(vINNFL3()), legalEntityInn(vINNIuL4());
            okpoCustomer(upd) <- STRING[10](vOKPO2());
            innCustomerIE(upd) <- STRING[12](vINNFL3());
            customerIELastName(upd) <- STRING[60](vfamiliia3());
            customerIEFirstName(upd) <- STRING[60](vimia3());
            customerIEMiddleName(upd) <- STRING[60](votchiestvo3());
            nameCustomer(upd) <- STRING[1000](vnaimOrgh4());
            innCustomer(upd) <- STRING[10](vINNIuL4());
            kppCustomer(upd) <- STRING[9](vKPP4());
            regionCodeCustomer(upd) <- STRING[2](vkodRieghion3());
            countryCodeAddressCustomer(upd) <- STRING[3](vkodStr4());
            addressCustomer(upd) <- STRING[150](vadrTiekst4());
            codeAddressCustomer(upd) <- STRING[36](vkodGAR1());
            
            FOR vkolTov(INTEGER i) NEW dd = UpdDocumentDetail DO {
                updDocument(dd) <- upd;
                number(dd) <- NUMERIC[6,0](vnomStr(i));
                nameSku(dd) <- STRING[1000](vnaimTov(i));
                idUOM(dd) <- STRING[4](vOKIeI_Tov(i));
                quantity(dd) <- NUMERIC[26,11](vkolTov(i));
                price(dd) <- NUMERIC[26,11](vtsienaTov(i));
                sum(dd) <- NUMERIC[19,2](vstTovBiezNDS(i));
                VATStatus(dd) <- GROUP MAX VATStatus s IF staticCaption(s) == vnalSt(i);
                invoiceSum(dd) <- NUMERIC[19,2](vstTovUchNal(i));
                dutySum(dd) <- NUMERIC[19,2](vsumAktsiz(i));
                withoutDuty(dd) <- TRUE IF vbiezAktsiz(i);
                VATSum(dd) <- NUMERIC[19,2](vsumNal1(i));
                idCountry(dd) <- STRING[3](vkodProish(i));
                numberDeclaration(dd) <- STRING[29](vnomerTD(i));
                idCountry(dd) <- IF is503() THEN STRING[3](vkodProish503(i)) ELSE STRING[3](vkodProish(i));
                numberDeclaration(dd) <- IF is503() THEN STRING[29](vnomerTD503(i)) ELSE STRING[29](vnomerTD(i));
                nameUOM(dd) <- IF is503() THEN STRING[255](vnaimIedIzm503(i)) ELSE STRING[255](vnaimIedIzm(i));
                nameCountry(dd) <- STRING[255](vkrNaimStrPr(i));
                idSku(dd) <- STRING[100](vkodTov(i));
                FOR vsviedTovVinfPolFKhZh2(INTEGER k) = i AND identif(k) = 'штрихкод' DO {
                    idSku(dd) <- vinfPolFKhZh3(k);
                }
                
                FOR vnomSriedIdientTovVsviedTov(INTEGER j) == i AND videntTransUpak(j) NEW pd = UpdTransportPackDetail DO {
                    updDocumentDetail(pd) <- dd;
                    id(pd) <- STRING[255](videntTransUpak(j));
                }
                
                FOR vnomSriedIdientTovVsviedTov(INTEGER j) == i AND vnomUpak(j) NEW pd = UpdPackDetail DO {
                    updDocumentDetail(pd) <- dd;
                    id(pd) <- STRING[255](vnomUpak(j));
                }
                
                FOR vnomSriedIdientTovVsviedTov(INTEGER j) == i AND vKIZ(j) NEW ld = UpdLotDetail DO {
                    updDocumentDetail(ld) <- dd;
                    id(ld) <- STRING[255](vKIZ(j));
                }
            }
            sum(upd) <- NUMERIC[19,2](vstTovBiezNDSVsiegho());
            invoiceSum(upd) <- NUMERIC[19,2](vstTovUchNalVsiegho());
            VATSum(upd) <- NUMERIC[19,2](vsumNal2());
            withoutVAT(upd) <- TRUE IF vbiezNDS();
            description(upd) <- STRING[255](vsodOpier());
            descriptionContract(upd) <- STRING[255](vnaimOsn());
            numberContract(upd) <- STRING[255](vnomOsn());
            dateContract(upd) <- DATE(toDateFormat(vdataOsn(), 'DD.MM.YYYY'));
            positionAgentSupplier(upd) <- STRING[128](vdolzhnost());
            lastNameAgentSupplier(upd) <- STRING[60](vfamiliia4());
            firstNameAgentSupplier(upd) <- STRING[60](vimia4());
            middleNameAgentSupplier(upd) <- STRING[60](votchiestvo4());
            positionAgentExecuter(upd) <- STRING[128](vdolzhnost1());
            nameCompanyAgentExecuter(upd) <- STRING[128](vnaimOrgPer());
            lastNameAgentExecuter(upd) <- STRING[60](vfamiliia5());
            firstNameAgentExecuter(upd) <- STRING[60](vimia5());
            middleNameAgentExecuter(upd) <- STRING[60](votchiestvo5());
            lastNameExecuter(upd) <- STRING[60](vfamiliia6());
            firstNameExecuter(upd) <- STRING[60](vimia6());
            middleNameExecuter(upd) <- STRING[60](votchiestvo6());
            supplierSignerCredentials(upd) <- GROUP MAX Credential c IF staticCaption(c) == voblPoln();
            supplierSignerStatus(upd) <- GROUP MAX CStatus c IF staticCaption(c) == vstatus();
            supplierSignerCredentialsBase(upd) <- STRING[255](vosnPoln());
            supplierSignerLastName(upd) <- STRING[60](vfamiliia7());
            supplierSignerFirstName(upd) <- STRING[60](vimia7());
            supplierSignerMiddleName(upd) <- STRING[60](votchiestvo7());
            supplierSelfEmployedInn(upd)<- STRING[12](vINNFL());
            supplierSelfEmployedLastName(upd)<- STRING[60](vfamiliia8());
            supplierSelfEmployedFirstName(upd)<- STRING[60](vimia8());
            supplierSelfEmployedMiddleName(upd)<- STRING[60](votchiestvo8());
            supplierSignerInn(upd) <- STRING[10](vINNIuL5());
            supplierSignerPosition(upd) <- STRING[128](vdolzhn());
            supplierSignerAgentLastName(upd) <- STRING[60](vfamiliia9());
            supplierSignerAgentFirstName(upd) <- STRING[60](vimia9());
            supplierSignerAgentMiddleName(upd) <- STRING[60](votchiestvo9());
            
            document(upd) <- d;
        }
        APPLY;
        MESSAGE 'УПД создан' NOWAIT;
    }
}


//GROUP vsvUchDokObor EXTID 'СвУчДокОбор';
//GROUP vsvOEDOtpr EXTID 'СвОЭДОтпр' : vsvUchDokObor;
GROUP vinfPok EXTID 'ИнфПок';
GROUP vidInfProd EXTID 'ИдИнфПрод' : vinfPok;
GROUP vsodFKhZh4 EXTID 'СодФХЖ4' : vinfPok;
GROUP vsvPrin EXTID 'СвПрин' : vsodFKhZh4;
GROUP vkodSodOpier EXTID 'КодСодОпер' : vsvPrin;
GROUP vinfPolFKhZh4 EXTID 'ИнфПолФХЖ4' : vsodFKhZh4;
GROUP vtiekstInf EXTID 'ТекстИнф' : vinfPolFKhZh4;
GROUP vinfPokGosZakKazn EXTID 'ИнфПокГосЗакКазн' : vinfPok;
GROUP vinfSviedDienObiaz EXTID 'ИнфСведДенОбяз' : vinfPokGosZakKazn;
GROUP vpodpisant1 EXTID 'Подписант' : vinfPok;
GROUP fl EXTID 'ФЛ' : vpodpisant1;
GROUP fiofl EXTID 'ФИО' : fl;
GROUP ip EXTID 'ИП' : vpodpisant1;
GROUP fioip EXTID 'ФИО' : ip;
GROUP yl EXTID 'ЮЛ' : vpodpisant1;
GROUP fioyl EXTID 'ФИО' : yl;

//vnaimOrgh = DATA LOCAL STRING();
//vINNIuL = DATA LOCAL STRING();
//vidEDO = DATA LOCAL STRING();
//vidOtpr = DATA LOCAL STRING();
//vidPol = DATA LOCAL STRING();
vEP = DATA LOCAL STRING();
vidFailInfPr = DATA LOCAL STRING();
vdataFailInfPr = DATA LOCAL STRING();
vvriemFailInfPr = DATA LOCAL STRING();
vkodItogha = DATA LOCAL STRING();
vnaimDokRaskh = DATA LOCAL STRING();
vvidDokRaskh = DATA LOCAL STRING();
vnomDokRaskh = DATA LOCAL STRING();
vdataDokRaskh = DATA LOCAL STRING();
vidFailDokRaskh = DATA LOCAL STRING();
vsvLitsPrin = DATA LOCAL STRING();
//vsodOpier = DATA LOCAL STRING();
vdataPrin = DATA LOCAL STRING();
vidientif = DATA LOCAL STRING();
vznachien = DATA LOCAL STRING();
vidFailInfPol = DATA LOCAL STRING();
vnaimDokOprPr = DATA LOCAL STRING();
//vfunktsiia = DATA LOCAL STRING();
vnomSchFInfPr = DATA LOCAL STRING();
vdataSchFInfPr = DATA LOCAL STRING();
vvidOpieratsii = DATA LOCAL STRING();
vinfSviedDienObiaz = DATA LOCAL STRING();
vnomStr = DATA LOCAL STRING();
vkodObiektFAIP = DATA LOCAL STRING();
vvidSriedstv = DATA LOCAL STRING();
vkodPokBiudzhKlass = DATA LOCAL STRING();
vkodTsieliPokup = DATA LOCAL STRING();
vsumAvans = DATA LOCAL STRING();
vidKodZak = DATA LOCAL STRING();
vlitsSchietPok = DATA LOCAL STRING();
vnaimFinOrghPok = DATA LOCAL STRING();
vnomRieiestrZapPok = DATA LOCAL STRING();
vuchNomBiudObiazPok = DATA LOCAL STRING();
vkodKaznachPok = DATA LOCAL STRING();
vnaimKaznachPok = DATA LOCAL STRING();
vOKTMOPok = DATA LOCAL STRING();
vOKTMOMiesPost = DATA LOCAL STRING();
vdataOplPried = DATA LOCAL STRING();
vuchNomDienObiaz = DATA LOCAL STRING();
vochierPlat = DATA LOCAL STRING();
vvidPlat = DATA LOCAL STRING();
//voblPoln = DATA LOCAL STRING();
//vstatus = DATA LOCAL STRING();
//vosnPoln = DATA LOCAL STRING();
vosnPolnOrgh = DATA LOCAL STRING();
//vKND = DATA LOCAL STRING();
vdataInfPok = DATA LOCAL STRING();
vvriemInfPok = DATA LOCAL STRING();
//vnaimEkonSubSost = DATA LOCAL STRING();
vosnDovierOrghSost = DATA LOCAL STRING();
//vidFail = DATA LOCAL STRING();
//vviersForm = DATA LOCAL STRING();
//vviersProgh = DATA LOCAL STRING();

lastNameFl = DATA LOCAL STRING();
firstNameFl = DATA LOCAL STRING();
middleNameFl = DATA LOCAL STRING();

innIp = DATA LOCAL STRING[12]();
lastNameIp = DATA LOCAL STRING();
firstNameIp = DATA LOCAL STRING();
middleNameIp = DATA LOCAL STRING();

innYl = DATA LOCAL STRING[10]();
positionYl = DATA LOCAL STRING();
lastNameYl = DATA LOCAL STRING();
firstNameYl = DATA LOCAL STRING();
middleNameYl = DATA LOCAL STRING();

FORM updBuyer FORMEXTID 'Файл'
    PROPERTIES() vidFail EXTID 'ИдФайл' ATTR, vviersForm EXTID 'ВерсФорм' ATTR, vviersProgh EXTID 'ВерсПрог' ATTR
    PROPERTIES() IN vsvUchDokObor vidOtpr EXTID 'ИдОтпр' ATTR, vidPol EXTID 'ИдПол' ATTR
    PROPERTIES() IN vsvOEDOtpr vnaimOrgh EXTID 'НаимОрг' ATTR, vINNIuL EXTID 'ИННЮЛ' ATTR, vidEDO EXTID 'ИдЭДО' ATTR
    PROPERTIES() IN vinfPok vKND EXTID 'КНД' ATTR, vdataInfPok EXTID 'ДатаИнфПок' ATTR, vvriemInfPok EXTID 'ВремИнфПок' ATTR, vnaimEkonSubSost EXTID 'НаимЭконСубСост' ATTR, vosnDovierOrghSost EXTID 'ОснДоверОргСост' ATTR
    PROPERTIES() IN vidInfProd vEP EXTID 'ЭП', vidFailInfPr EXTID 'ИдФайлИнфПр' ATTR, vdataFailInfPr EXTID 'ДатаФайлИнфПр' ATTR, vvriemFailInfPr EXTID 'ВремФайлИнфПр' ATTR
    PROPERTIES() IN vsodFKhZh4 vnaimDokOprPr EXTID 'НаимДокОпрПр' ATTR, vfunktsiia EXTID 'Функция' ATTR, vnomSchFInfPr EXTID 'НомСчФИнфПр' ATTR, vdataSchFInfPr EXTID 'ДатаСчФИнфПр' ATTR, vvidOpieratsii EXTID 'ВидОперации' ATTR
    PROPERTIES() IN vsvPrin vsvLitsPrin EXTID 'СвЛицПрин', vsodOpier EXTID 'СодОпер' ATTR, vdataPrin EXTID 'ДатаПрин' ATTR
    PROPERTIES() IN vkodSodOpier vkodItogha EXTID 'КодИтога' ATTR, vnaimDokRaskh EXTID 'НаимДокРасх' ATTR, vvidDokRaskh EXTID 'ВидДокРасх' ATTR, vnomDokRaskh EXTID 'НомДокРасх' ATTR, vdataDokRaskh EXTID 'ДатаДокРасх' ATTR, vidFailDokRaskh EXTID 'ИдФайлДокРасх' ATTR
    PROPERTIES() IN vinfPolFKhZh4 vidFailInfPol EXTID 'ИдФайлИнфПол' ATTR
    PROPERTIES() IN vtiekstInf vidientif EXTID 'Идентиф' ATTR, vznachien EXTID 'Значен' ATTR
    PROPERTIES() IN vinfPokGosZakKazn vidKodZak EXTID 'ИдКодЗак' ATTR, vlitsSchietPok EXTID 'ЛицСчетПок' ATTR, vnaimFinOrghPok EXTID 'НаимФинОргПок' ATTR, vnomRieiestrZapPok EXTID 'НомРеестрЗапПок' ATTR, vuchNomBiudObiazPok EXTID 'УчНомБюдОбязПок' ATTR, vkodKaznachPok EXTID 'КодКазначПок' ATTR, vnaimKaznachPok EXTID 'НаимКазначПок' ATTR, vOKTMOPok EXTID 'ОКТМОПок' ATTR, vOKTMOMiesPost EXTID 'ОКТМОМесПост' ATTR, vdataOplPried EXTID 'ДатаОплПред' ATTR, vuchNomDienObiaz EXTID 'УчНомДенОбяз' ATTR, vochierPlat EXTID 'ОчерПлат' ATTR, vvidPlat EXTID 'ВидПлат' ATTR
    PROPERTIES() IN vinfSviedDienObiaz vnomStr EXTID 'НомСтр' ATTR, vkodObiektFAIP EXTID 'КодОбъектФАИП' ATTR, vvidSriedstv EXTID 'ВидСредств' ATTR, vkodPokBiudzhKlass EXTID 'КодПокБюджКласс' ATTR, vkodTsieliPokup EXTID 'КодЦелиПокуп' ATTR, vsumAvans EXTID 'СумАванс' ATTR
    PROPERTIES() IN vpodpisant1 voblPoln EXTID 'ОблПолн' ATTR, vstatus EXTID 'Статус' ATTR, vosnPoln EXTID 'ОснПолн' ATTR, vosnPolnOrgh EXTID 'ОснПолнОрг' ATTR
  
    PROPERTIES() IN fiofl lastNameFl EXTID 'Фамилия' ATTR, firstNameFl EXTID 'Имя' ATTR, middleNameFl EXTID 'Отчество' ATTR 
    
    PROPERTIES() IN ip innIp EXTID 'ИННФЛ' ATTR
    PROPERTIES() IN fioip lastNameIp EXTID 'Фамилия' ATTR, firstNameIp EXTID 'Имя' ATTR, middleNameIp EXTID 'Отчество' ATTR    
    
    PROPERTIES() IN yl innYl EXTID 'ИННЮЛ' ATTR, positionYl EXTID 'Должн' ATTR
    PROPERTIES() IN fioyl lastNameYl EXTID 'Фамилия' ATTR, firstNameYl EXTID 'Имя' ATTR, middleNameYl EXTID 'Отчество' ATTR            
    
;

fillBuyerTitle 'Заполнения титула покупателя в УПД' (UpdDocument u, XMLFILE f){
    IMPORT updBuyer XML FROM f;
    
    dateCustomer(u)<- toDateFormat(vdataInfPok(), 'DD.MM.YYYY');
    timeCustomer(u)<- TIME(toDateTimeFormat(vvriemInfPok(), 'HH24.MI.SS'));
    nameOriginatorCustomer(u)<- STRING[1000](vnaimEkonSubSost());
    
    customerSignerCredentials(u)<- INTEGER(voblPoln());
    customerSignerStatus(u)<- INTEGER(vstatus());
    customerSignerCredentialsBase(u)<- STRING[255](OVERRIDE vosnPoln(), vosnPolnOrgh());
    
    customerSignerLastName(u)<- lastNameFl();
    customerSignerFirstName(u)<- firstNameFl();
    customerSignerMiddleName(u)<- middleNameFl();
    
    customerSelfEmployedInn(u)<- innIp();
    customerSelfEmployedLastName(u)<- lastNameIp();
    customerSelfEmployedFirstName(u)<- firstNameIp();
    customerSelfEmployedMiddleName(u)<- middleNameIp();
    
    customerSignerInn(u)<- innYl();
    customerSignerPosition(u)<- positionYl();
    
    customerSignerAgentLastName(u)<- lastNameYl();
    customerSignerAgentFirstName(u)<- firstNameYl();
    customerSignerAgentMiddleName(u)<- middleNameYl();
    dataDateTimeTransfer(u)<- NULL;
}

fillBuyerTitle 'Заполнения титула покупателя в УПД' (UpdDocument u){
    NEWSESSION {
        INPUT f = XMLFILE DO {
            fillBuyerTitle(u,f);
            APPLY;
        }
    }
}

WHEN SET(Entity e IS Entity) AND attachmentType(e) == AttachmentType.universalTransferDocumentBuyerTitle AND updDocument(Document d) AND message(d) == message(patch(e)) DO {
    fillBuyerTitle(updDocument(d), XMLFILE(data(e)));
}