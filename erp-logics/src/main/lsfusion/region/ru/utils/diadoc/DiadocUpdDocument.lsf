MODULE DiadocUpdDocument;

REQUIRE UpdDocument, DiadocMessage, CryptoPro;

NAMESPACE Diadoc;

GROUP sellersUTD EXTID 'Sellers';
GROUP sellerUTD EXTID 'Seller': sellersUTD;
GROUP organizationReferenceSellerUTD EXTID 'OrganizationReference': sellerUTD;
GROUP buyersUTD EXTID 'Buyers';
GROUP buyerUTD EXTID 'Buyer': buyersUTD;
GROUP organizationReferenceBuyerUTD EXTID 'OrganizationReference': buyerUTD;
GROUP signersUTD EXTID 'Signers';
GROUP signerDetailsUTD EXTID 'SignerDetails': signersUTD;
GROUP additionalInfoIdUTD EXTID 'AdditionalInfoId';
GROUP additionalInfoUTD EXTID 'AdditionalInfo': additionalInfoIdUTD;
GROUP tableUTD EXTID 'Table';
GROUP customsDeclarationsUTD EXTID 'CustomsDeclarations';
GROUP customsDeclarationUTD EXTID 'CustomsDeclaration': customsDeclarationsUTD;
GROUP transferInfoUTD EXTID 'TransferInfo';
GROUP transferBasesUTD EXTID 'TransferBases': transferInfoUTD;
GROUP transferBaseUTD EXTID 'TransferBase': transferBasesUTD;
GROUP employeeUTD EXTID 'Employee': transferInfoUTD;
GROUP otherIssuerUTD EXTID 'OtherIssuer': transferInfoUTD;

exportUpdDocument = DATA LOCAL UpdDocument ();

FORM universalTransferDocument FORMEXTID 'UniversalTransferDocument'
    PROPERTIES ATTR function = (OVERRIDE nameStatus(exportUpdDocument()),'') EXTID 'Function',//Функция - Функция документа
                    documentDate = toDateDDMMYYYY(OVERRIDE dateInvoice(exportUpdDocument()), currentDate()) EXTID 'DocumentDate',//ДатаСчФ - дата УПД
                    documentNumber = (OVERRIDE numberInvoice(exportUpdDocument()),'') EXTID 'DocumentNumber',//НомерСчФ - номер УПД
                    currency = (OVERRIDE codeCurrency(exportUpdDocument()),'') EXTID 'Currency',//КодОКВ - валюта (код)
                    documentCreator = (OVERRIDE nameOriginatorCustomer(exportUpdDocument()),'') EXTID 'DocumentCreator'//НаимЭконСубСост - Составитель файла обмена счета-фактуры (информации продавца)
    
    PROPERTIES ATTR IN organizationReferenceSellerUTD
                    orgTypeS = id(organizationType(organization(fromBox()))) EXTID 'OrgType',//СвИП - СвЮЛУч - СвИнНеУч
                    boxIdS = fromBoxId() EXTID 'BoxId'
    
    PROPERTIES ATTR IN organizationReferenceBuyerUTD
                    orgTypeB = id(organizationType(organization(toBox()))) EXTID 'OrgType',//СвИП - СвЮЛУч - СвИнНеУч
                    boxIdB = toBoxId() EXTID 'BoxId'
    
    PROPERTIES ATTR IN signerDetailsUTD
                    innSG = supplierSignerInn(exportUpdDocument()) EXTID 'Inn',//ИННЮЛ
                    lastNameSG = (OVERRIDE supplierSignerLastName(exportUpdDocument()), supplierSignerAgentLastName(exportUpdDocument())) EXTID 'LastName',//Фамилия
                    firstNameSG = (OVERRIDE supplierSignerFirstName(exportUpdDocument()), supplierSignerAgentFirstName(exportUpdDocument())) EXTID 'FirstName',//Имя
                    middleNameSG = (OVERRIDE supplierSignerMiddleName(exportUpdDocument()), supplierSignerAgentMiddleName(exportUpdDocument())) EXTID 'MiddleName',//Отчество
                    positionSG = supplierSignerPosition(exportUpdDocument()) EXTID 'Position',//Должн
                    signerPowersSG = nameSupplierSignerCredentials(exportUpdDocument()) EXTID 'SignerPowers',//ОблПолн - Область полномочий
                    signerTypeSG = (IF isSupplierSigner(exportUpdDocument()) THEN '3' ELSE '1') EXTID 'SignerType',
                    signerStatusSG = nameSupplierSignerStatus(exportUpdDocument()) EXTID 'SignerStatus',//Статус
                    signerPowersBaseSG = supplierSignerCredentialsBase(exportUpdDocument()) EXTID 'SignerPowersBase'//ОснПолн - Основание полномочий (доверия)
    
    PROPERTIES ATTR IN additionalInfoUTD
                    idAI = codeBusinessEvent(exportUpdDocument()) EXTID 'Id',//Идентиф - идентификатор (наименование)
                    valueAI = descriptionBusinessEvent(exportUpdDocument()) EXTID 'Value'//Значен - значение
    
    PROPERTIES ATTR IN tableUTD
                    totalWithVatExcludedT = sum(exportUpdDocument()) EXTID 'TotalWithVatExcluded',//СтТовБезНДСВсего - Сумма без учета налога
                    vatT = VATSum(exportUpdDocument()) EXTID 'Vat',//СумНалВсего - Сумма налога всего
                    withoutVatT = withoutVAT(exportUpdDocument()) EXTID 'WithoutVat',//БезНДС - Указывается, если для суммы налога всего не требуется НДС
                    totalT = invoiceSum(exportUpdDocument()) EXTID 'Total'//СтТовУчНалВсего - Сумма всего
    
    OBJECTS i = UpdDocumentDetail EXTID 'Item' IN tableUTD
    FILTERS updDocument(i) == exportUpdDocument()
    PROPERTIES ATTR productI = nameSku(i) EXTID 'Product',//НаимТов - наименование товара
                    unitI = idUOM(i) EXTID 'Unit',//ОКЕИ_Тов - единицы измерения товара (код)
                    unitNameI = nameUOM(i) EXTID 'UnitName',//НаимЕдИзм - наименование единицы измерения товара
                    quantityI = quantity(i) EXTID 'Quantity',//КолТов - количество единиц товара
                    priceI = price(i) EXTID 'Price',//ЦенаТов - цена за единицу товара
                    exciseI = dutySum(i) EXTID 'Excise',//СумАкциз - акциз
                    taxRateI = nameVATStatus(i) EXTID 'TaxRate',//НалСт - ставка налога
                    subtotalWithVatExcludedI = sum(i) EXTID 'SubtotalWithVatExcluded',//СтТовБезНДС - сумма без учета налога
                    vatI = VATSum(i) EXTID 'Vat',//СумНал - сумма налога
                    withoutVatI = TRUE IF NOT VATSum(i) EXTID 'WithoutVat',//БезНДС - Указывается, если для товара не требуется НДС
                    subtotalI = invoiceSum(i) EXTID 'Subtotal',//СтТовУчНал - сумма всего
                    itemVendorCodeI = idSku(i) EXTID 'ItemVendorCode'//КодТов - Характеристика/код/артикул/сорт товара
    PROPERTIES ATTR IN customsDeclarationUTD
                    countryI = idCountry(i) EXTID 'Country',//КодПроисх - Код страны происхождения товара по Общероссийскому классификатору стран мира (ОКСМ) или 980 - Евросоюз, 981 - ЕАЭС
                    declarationNumberI = numberDeclaration(i) EXTID 'DeclarationNumber'//НомерТД - Номер таможенной декларации
    
    PROPERTIES ATTR IN transferInfoUTD
                    operationInfoTI = (OVERRIDE description(exportUpdDocument()),'') EXTID 'OperationInfo'//СодОпер - Содержание операции
    PROPERTIES ATTR IN transferBaseUTD
                    baseDocumentNameTB = (OVERRIDE descriptionContract(exportUpdDocument()),'') EXTID 'BaseDocumentName',//НаимОсн - Наименование документа-основания отгрузки
                    baseDocumentNumberTB = numberContract(exportUpdDocument()) EXTID 'BaseDocumentNumber',//НомОсн - Номер документа-основания отгрузки
                    baseDocumentDateTB = toDateDDMMYYYY(dateContract(exportUpdDocument())) EXTID 'BaseDocumentDate'//ДатаОсн - Дата документа-основания отгрузки
    PROPERTIES ATTR IN employeeUTD
                    positionE = ((OVERRIDE positionAgentSupplier(exportUpdDocument()),' ') IF isAgentSupplier(exportUpdDocument())) EXTID 'Position',//Должность
                    lastNameE = ((OVERRIDE lastNameAgentSupplier(exportUpdDocument()),' ') IF isAgentSupplier(exportUpdDocument())) EXTID 'LastName',//Фамилия
                    firstNameE = ((OVERRIDE firstNameAgentSupplier(exportUpdDocument()),' ') IF isAgentSupplier(exportUpdDocument())) EXTID 'FirstName',//Имя
                    middleNameE = (middleNameAgentSupplier(exportUpdDocument()) IF isAgentSupplier(exportUpdDocument())) EXTID 'MiddleName'//Отчество
    PROPERTIES ATTR IN otherIssuerUTD
                    positionOI = ((OVERRIDE positionAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'Position',//Должность - Должность представителя организации
                    organizationNameOI = ((OVERRIDE nameCompanyAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'OrganizationName',//НаимОргПер - Наименование организации, которой доверена передача
                    lastNameOI = ((OVERRIDE lastNameAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'LastName',//Фамилия
                    firstNameOI = ((OVERRIDE firstNameAgentExecuter(exportUpdDocument()),'') IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'FirstName',//Имя
                    middleNameOI = (middleNameAgentExecuter(exportUpdDocument()) IF isAgentExecuter(exportUpdDocument()) AND NOT isAgentSupplier(exportUpdDocument())) EXTID 'MiddleName'//Отчество
;

document = DATA Document (UpdDocument);
titleDocument 'Документ Диадока' (UpdDocument d) = title(document(d)) CHARWIDTH 20;
primaryStatusTextDocument 'Статус' (UpdDocument d) = primaryStatusText(document(d)) CHARWIDTH 20;

messageUniversalTransferDocument 'Подписать и отправить через Диадок' (UpdDocument d) {
    FOR User u == userDiadoc(currentUser()) DO NEWSESSION {
        fromBox() <- GROUP LAST Box b IF organization(b) == (OVERRIDE organizationInn(innSupplier(d)), organizationKpp(kppSupplier(d))) ORDER b;
        toBox() <- GROUP LAST Box b IF organization(b) == (OVERRIDE organizationInn(innCustomer(d)), organizationKpp(kppCustomer(d))) ORDER b;
        DIALOG dialogMessageToPost DO {
            getToken(u);
            exportUpdDocument() <- d;
            EXPORT universalTransferDocument XML;
            
            LOCAL result = FILE ();
            TRY {
                EXTERNAL HTTP POST url() + '/GenerateTitleXml?boxId=' + fromBoxId() + '&documentTypeNamedId=UniversalTransferDocument&documentFunction=' + nameStatus(d) + '&documentVersion=utd820_05_01_01&titleIndex=0' HEADERS httpHeadersToken PARAMS exportFile() TO result;
                typeNamedIdDocument(0) <- 'UniversalTransferDocument';
                functionDocument(0) <- nameStatus(d);
                versionDocument(0) <- 'utd820_05_01_01';
                contentDocument(0) <- encode(RAWFILE(result()), 'base64');
                IF useTestSignature() THEN {
                    signWithTestSignature(0) <- TRUE;
                } ELSE {
                    sign(RAWFILE(result()), TRUE);
                    signatureDocument(0) <- encodedSignature();
                }
                
                postMessage(u);
                document(d) <- createdDocument();
            } CATCH {
                fileToString(result(), 'UTF-8');
                MESSAGE 'Ошибка отправки УПД ' + statusHttp() + ' ' + resultString();
            }
            APPLY;
        }
    }
}

EXTEND FORM updDocument
    PROPERTIES(u) SHOWIF document(u) READONLY titleDocument, primaryStatusTextDocument
    PROPERTIES(u) SHOWIF NOT document(u) messageUniversalTransferDocument
;
DESIGN updDocument {
    transfer {
        NEW diadoc {
            caption = 'Диадок API';
            MOVE PROPERTY (titleDocument(u));
            MOVE PROPERTY (primaryStatusTextDocument(u));
            MOVE PROPERTY (messageUniversalTransferDocument(u));
        }
    }
}

EXTEND FORM updDocuments
    PROPERTIES(u) READONLY titleDocument = titleDocument //AFTER isTransferred(u)
    PROPERTIES(u) PANEL SHOWIF document(u) READONLY titleDocument, primaryStatusTextDocument 
    PROPERTIES(u) PANEL SHOWIF NOT document(u) messageUniversalTransferDocument
;

DESIGN updDocuments {
    export {
        NEW diadoc {
            caption = 'Диадок API';
            MOVE PROPERTY (titleDocument(u));
            MOVE PROPERTY (primaryStatusTextDocument(u));
            MOVE PROPERTY (messageUniversalTransferDocument(u));
        }
    }
}


GROUP vsvUchDokObor EXTID 'СвУчДокОбор';
GROUP vsvOEDOtpr1 EXTID 'СвОЭДОтпр' : vsvUchDokObor;
GROUP vinfPok EXTID 'ИнфПок';
GROUP vidInfProd EXTID 'ИдИнфПрод' : vinfPok;
GROUP vsodFKhZh4 EXTID 'СодФХЖ4' : vinfPok;
GROUP vsvPrin EXTID 'СвПрин' : vsodFKhZh4;
GROUP vkodSodOpier1 EXTID 'КодСодОпер' : vsvPrin;
GROUP vinfPolFKhZh4 EXTID 'ИнфПолФХЖ4' : vsodFKhZh4;
GROUP vtiekstInf1 EXTID 'ТекстИнф' : vinfPolFKhZh4;
GROUP vinfPokGosZakKazn EXTID 'ИнфПокГосЗакКазн' : vinfPok;
GROUP vinfSviedDienObiaz1 EXTID 'ИнфСведДенОбяз' : vinfPokGosZakKazn;
GROUP vpodpisant1 EXTID 'Подписант' : vinfPok;
GROUP fl EXTID 'ФЛ' : vpodpisant1;
GROUP fiofl EXTID 'ФИО' : fl;
GROUP ip EXTID 'ИП' : vpodpisant1;
GROUP fioip EXTID 'ФИО' : ip;
GROUP yl EXTID 'ЮЛ' : vpodpisant1;
GROUP fioyl EXTID 'ФИО' : yl;

vsvOEDOtpr = DATA LOCAL STRING();
vnaimOrgh = DATA LOCAL STRING();
vINNIuL = DATA LOCAL STRING();
vidEDO = DATA LOCAL STRING();
vidOtpr = DATA LOCAL STRING();
vidPol = DATA LOCAL STRING();
vEP = DATA LOCAL STRING();
vidFailInfPr = DATA LOCAL STRING();
vdataFailInfPr = DATA LOCAL STRING();
vvriemFailInfPr = DATA LOCAL STRING();
vkodSodOpier = DATA LOCAL STRING();
vkodItogha = DATA LOCAL STRING();
vnaimDokRaskh = DATA LOCAL STRING();
vvidDokRaskh = DATA LOCAL STRING();
vnomDokRaskh = DATA LOCAL STRING();
vdataDokRaskh = DATA LOCAL STRING();
vidFailDokRaskh = DATA LOCAL STRING();
vsvLitsPrin = DATA LOCAL STRING();
vsodOpier = DATA LOCAL STRING();
vdataPrin = DATA LOCAL STRING();
vtiekstInf = DATA LOCAL STRING();
vidientif = DATA LOCAL STRING();
vznachien = DATA LOCAL STRING();
vidFailInfPol = DATA LOCAL STRING();
vnaimDokOprPr = DATA LOCAL STRING();
vfunktsiia = DATA LOCAL STRING();
vnomSchFInfPr = DATA LOCAL STRING();
vdataSchFInfPr = DATA LOCAL STRING();
vvidOpieratsii = DATA LOCAL STRING();
vinfSviedDienObiaz = DATA LOCAL STRING();
vnomStr = DATA LOCAL STRING();
vkodObiektFAIP = DATA LOCAL STRING();
vvidSriedstv = DATA LOCAL STRING();
vkodPokBiudzhKlass = DATA LOCAL STRING();
vkodTsieliPokup = DATA LOCAL STRING();
vsumAvans = DATA LOCAL STRING();
vidKodZak = DATA LOCAL STRING();
vlitsSchietPok = DATA LOCAL STRING();
vnaimFinOrghPok = DATA LOCAL STRING();
vnomRieiestrZapPok = DATA LOCAL STRING();
vuchNomBiudObiazPok = DATA LOCAL STRING();
vkodKaznachPok = DATA LOCAL STRING();
vnaimKaznachPok = DATA LOCAL STRING();
vOKTMOPok = DATA LOCAL STRING();
vOKTMOMiesPost = DATA LOCAL STRING();
vdataOplPried = DATA LOCAL STRING();
vuchNomDienObiaz = DATA LOCAL STRING();
vochierPlat = DATA LOCAL STRING();
vvidPlat = DATA LOCAL STRING();
vpodpisant = DATA LOCAL STRING();
voblPoln = DATA LOCAL STRING();
vstatus = DATA LOCAL STRING();
vosnPoln = DATA LOCAL STRING();
vosnPolnOrgh = DATA LOCAL STRING();
vKND = DATA LOCAL STRING();
vdataInfPok = DATA LOCAL STRING();
vvriemInfPok = DATA LOCAL STRING();
vnaimEkonSubSost = DATA LOCAL STRING();
vosnDovierOrghSost = DATA LOCAL STRING();
vidFail = DATA LOCAL STRING();
vviersForm = DATA LOCAL STRING();
vviersProgh = DATA LOCAL STRING();

lastNameFl = DATA LOCAL STRING();
firstNameFl = DATA LOCAL STRING();
middleNameFl = DATA LOCAL STRING();

innIp = DATA LOCAL STRING[10]();
lastNameIp = DATA LOCAL STRING();
firstNameIp = DATA LOCAL STRING();
middleNameIp = DATA LOCAL STRING();

innYl = DATA LOCAL STRING[10]();
positionYl = DATA LOCAL STRING();
lastNameYl = DATA LOCAL STRING();
firstNameYl = DATA LOCAL STRING();
middleNameYl = DATA LOCAL STRING();

FORM updBuyer FORMEXTID 'Файл'
    PROPERTIES() vidFail EXTID 'ИдФайл' ATTR, vviersForm EXTID 'ВерсФорм' ATTR, vviersProgh EXTID 'ВерсПрог' ATTR
    PROPERTIES() IN vsvUchDokObor vsvOEDOtpr EXTID 'СвОЭДОтпр', vidOtpr EXTID 'ИдОтпр' ATTR, vidPol EXTID 'ИдПол' ATTR
    PROPERTIES() IN vsvOEDOtpr1 vnaimOrgh EXTID 'НаимОрг' ATTR, vINNIuL EXTID 'ИННЮЛ' ATTR, vidEDO EXTID 'ИдЭДО' ATTR
    PROPERTIES() IN vinfPok vpodpisant EXTID 'Подписант', vKND EXTID 'КНД' ATTR, vdataInfPok EXTID 'ДатаИнфПок' ATTR, vvriemInfPok EXTID 'ВремИнфПок' ATTR, vnaimEkonSubSost EXTID 'НаимЭконСубСост' ATTR, vosnDovierOrghSost EXTID 'ОснДоверОргСост' ATTR
    PROPERTIES() IN vidInfProd vEP EXTID 'ЭП', vidFailInfPr EXTID 'ИдФайлИнфПр' ATTR, vdataFailInfPr EXTID 'ДатаФайлИнфПр' ATTR, vvriemFailInfPr EXTID 'ВремФайлИнфПр' ATTR
    PROPERTIES() IN vsodFKhZh4 vnaimDokOprPr EXTID 'НаимДокОпрПр' ATTR, vfunktsiia EXTID 'Функция' ATTR, vnomSchFInfPr EXTID 'НомСчФИнфПр' ATTR, vdataSchFInfPr EXTID 'ДатаСчФИнфПр' ATTR, vvidOpieratsii EXTID 'ВидОперации' ATTR
    PROPERTIES() IN vsvPrin vkodSodOpier EXTID 'КодСодОпер', vsvLitsPrin EXTID 'СвЛицПрин', vsodOpier EXTID 'СодОпер' ATTR, vdataPrin EXTID 'ДатаПрин' ATTR
    PROPERTIES() IN vkodSodOpier1 vkodItogha EXTID 'КодИтога' ATTR, vnaimDokRaskh EXTID 'НаимДокРасх' ATTR, vvidDokRaskh EXTID 'ВидДокРасх' ATTR, vnomDokRaskh EXTID 'НомДокРасх' ATTR, vdataDokRaskh EXTID 'ДатаДокРасх' ATTR, vidFailDokRaskh EXTID 'ИдФайлДокРасх' ATTR
    PROPERTIES() IN vinfPolFKhZh4 vtiekstInf EXTID 'ТекстИнф', vidFailInfPol EXTID 'ИдФайлИнфПол' ATTR
    PROPERTIES() IN vtiekstInf1 vidientif EXTID 'Идентиф' ATTR, vznachien EXTID 'Значен' ATTR
    PROPERTIES() IN vinfPokGosZakKazn vinfSviedDienObiaz EXTID 'ИнфСведДенОбяз', vidKodZak EXTID 'ИдКодЗак' ATTR, vlitsSchietPok EXTID 'ЛицСчетПок' ATTR, vnaimFinOrghPok EXTID 'НаимФинОргПок' ATTR, vnomRieiestrZapPok EXTID 'НомРеестрЗапПок' ATTR, vuchNomBiudObiazPok EXTID 'УчНомБюдОбязПок' ATTR, vkodKaznachPok EXTID 'КодКазначПок' ATTR, vnaimKaznachPok EXTID 'НаимКазначПок' ATTR, vOKTMOPok EXTID 'ОКТМОПок' ATTR, vOKTMOMiesPost EXTID 'ОКТМОМесПост' ATTR, vdataOplPried EXTID 'ДатаОплПред' ATTR, vuchNomDienObiaz EXTID 'УчНомДенОбяз' ATTR, vochierPlat EXTID 'ОчерПлат' ATTR, vvidPlat EXTID 'ВидПлат' ATTR
    PROPERTIES() IN vinfSviedDienObiaz1 vnomStr EXTID 'НомСтр' ATTR, vkodObiektFAIP EXTID 'КодОбъектФАИП' ATTR, vvidSriedstv EXTID 'ВидСредств' ATTR, vkodPokBiudzhKlass EXTID 'КодПокБюджКласс' ATTR, vkodTsieliPokup EXTID 'КодЦелиПокуп' ATTR, vsumAvans EXTID 'СумАванс' ATTR
    PROPERTIES() IN vpodpisant1 voblPoln EXTID 'ОблПолн' ATTR, vstatus EXTID 'Статус' ATTR, vosnPoln EXTID 'ОснПолн' ATTR, vosnPolnOrgh EXTID 'ОснПолнОрг' ATTR
  
    PROPERTIES() IN fiofl lastNameFl EXTID 'Фамилия' ATTR, firstNameFl EXTID 'Имя' ATTR, middleNameFl EXTID 'Отчество' ATTR 
    
    PROPERTIES() IN ip innIp EXTID 'ИННФЛ' ATTR
    PROPERTIES() IN fioip lastNameIp EXTID 'Фамилия' ATTR, firstNameIp EXTID 'Имя' ATTR, middleNameIp EXTID 'Отчество' ATTR    
    
    PROPERTIES() IN yl innYl EXTID 'ИННЮЛ' ATTR, positionYl EXTID 'Должн' ATTR
    PROPERTIES() IN fioyl lastNameYl EXTID 'Фамилия' ATTR, firstNameYl EXTID 'Имя' ATTR, middleNameYl EXTID 'Отчество' ATTR            
    
;


fillBuyerTitle 'Заполнения титула покупателя в УПД' (UpdDocument u, XMLFILE f){
    NEWSESSION {
        IMPORT updBuyer XML FROM f;
        
        dateCustomer(u)<- toDateFormat(vdataInfPok(), 'DD.MM.YYYY');
        timeCustomer(u)<- TIME(toDateTimeFormat(vvriemInfPok(), 'HH24.MI.SS'));
        nameOriginatorCustomer(u)<- STRING[1000](vnaimEkonSubSost());
        
        customerSignerCredentials(u)<- INTEGER(voblPoln());
        customerSignerStatus(u)<- INTEGER(vstatus());
        customerSignerCredentialsBase(u)<- STRING[255](vosnPolnOrgh());
        
        customerSignerLastName(u)<- lastNameFl();
        customerSignerFirstName(u)<- firstNameFl();
        customerSignerMiddleName(u)<- middleNameFl();
        
        customerSelfEmployedInn(u)<- innIp();       
        customerSelfEmployedLastName(u)<- lastNameIp();
        customerSelfEmployedFirstName(u)<- firstNameIp();        
        customerSelfEmployedMiddleName(u)<- middleNameIp();                
        
        customerSignerInn(u)<- innYl();
        customerSignerPosition(u)<- positionYl();
        
        customerSignerAgentLastName(u)<- lastNameYl();
        customerSignerAgentFirstName(u)<- firstNameYl();        
        customerSignerAgentMiddleName(u)<- middleNameYl();    
        dataDateTimeTransfer(u)<- NULL;                
        APPLY;
    }
}

fillBuyerTitle 'Заполнения титула покупателя в УПД' (UpdDocument u){
    INPUT f = XMLFILE DO {
        fillBuyerTitle(u,f);    
    }
}