MODULE UkdDocument;

REQUIRE ConsignmentUpdDocument;

NAMESPACE Ukd;

@defineStaticObject(ukdDocumentStatus, 'Статус УКД');

EXTEND CLASS UkdDocumentStatus {
    KSHCF 'КСЧФ',
    DIS 'ДИС',
    KSHCFDIS 'КСЧФДИС'
}

@defineStaticObject(ukdDocumentPaperStatus, 'Статус УКД');

EXTEND CLASS UkdDocumentPaperStatus {
    first '1',
    second '2'
}

//есть блок СЧФ
@defineVATInvoiceDocument('УКД', ukd, ' КСЧФ', 'Универсальный корректирующий документ');

NAVIGATOR {
    customsNavigator {
        upd {
            NEW ukdDocuments;
        }
    }
}

baseInvoiceNumber 'Номер УПД' = DATA STRING[1000] (UkdDocument) CHARWIDTH 15; //НомерСчФ
baseDateInvoice 'Дата УПД' = DATA DATE (UkdDocument); //ДатаСчФ

//-СведТов
VATStatusB = DATA VATStatus (UkdDocumentDetail);
nameVATStatusB 'Ставка НДС (до)' = staticCaption(VATStatusB(UkdDocumentDetail d)) CHARWIDTH 7; //НалСтДо

VATStatusA = DATA VATStatus (UkdDocumentDetail);
nameVATStatusA 'Ставка НДС (после)' = staticCaption(VATStatusA(UkdDocumentDetail d)) CHARWIDTH 7; //НалСтПосле

//ТаблКСчФ
//--АкцизДо
dutySumB 'Сумма акциза (до)' = DATA NUMERIC[19,2](UkdDocumentDetail); //СумАкциз
withoutDutyB 'Без акциза (после)' = DATA BOOLEAN (UkdDocumentDetail); //БезАкциз

//--АкцизПосле
dutySumA 'Сумма акциза (до)' = DATA NUMERIC[19,2](UkdDocumentDetail); //СумАкциз
withoutDutyA 'Без акциза (после)' = DATA BOOLEAN (UkdDocumentDetail); //БезАкциз

//--АкцизРазн
increaseDutySum 'Увеличение суммы акциза' (UkdDocumentDetail d) = dutySumA(d) (-) dutySumB(d) IF dutySumA(d)>dutySumB(d); //СумУвел
decreaseDutySum 'Уменьшение суммы акциза' (UkdDocumentDetail d) = dutySumB(d) (-) dutySumA(d) IF dutySumB(d)>dutySumA(d); //СумУм

//--СумНалДо
VATSumB 'Сумма НДС (до)' = DATA NUMERIC[19,2] (UkdDocumentDetail); //СумНДС

//--СумНалПосле
VATSumA 'Сумма НДС (после)' = DATA NUMERIC[19,2] (UkdDocumentDetail); //СумНДС

//--СумНалРазн
increaseVATSum 'Увеличение суммы НДС' (UkdDocumentDetail d) = VATSumA(d) (-) VATSumB(d) IF VATSumA(d)>VATSumB(d); //СумУвел
decreaseVATSum 'Уменьшение суммы НДС' (UkdDocumentDetail d) = VATSumB(d) (-) VATSumA(d) IF VATSumB(d)>VATSumA(d); //СумУм

//--СтТовУчНал
invoiceSumB 'Сумма с НДС (до)' = DATA NUMERIC[19,2] (UkdDocumentDetail); //СтоимДоИзм
invoiceSumA 'Сумма с НДС (после)' = DATA NUMERIC[19,2] (UkdDocumentDetail); //СтоимПослеИзм

sumB 'Сумма (до)' = DATA NUMERIC[19,2] (UkdDocumentDetail);
sumA 'Сумма (после)' = DATA NUMERIC[19,2] (UkdDocumentDetail);

//СодФХЖ3
description 'Содержание операции' = DATA STRING[255] (UkdDocument); //СодОпер

//-ПередатДокум
nameBaseDocument 'Документ основания' = DATA STRING[255] (UkdDocument); //НаимОсн
numberBaseDocument 'Номер документа основания' = DATA STRING[255] (UkdDocument); //НомОсн
dateBaseDocument 'Дата документа основания' = DATA DATE (UkdDocument); //ДатаОсн

//-ДокумОснКор
nameCorrectionDocument 'Основание корректировки' = DATA STRING[255] (UkdDocument); //НаимОсн

withoutVAT 'БезНДС' = DATA BOOLEAN (UkdDocument);

//-ВсегоУвел
increaseSum 'Сумма (увеличение)' (UkdDocumentDetail detail) = (sumA(detail) (-) sumB(detail)) IF sumA(detail)>sumB(detail);
increaseSum 'Сумма (увеличение)' = GROUP SUM increaseSum(UkdDocumentDetail detail) BY ukdDocument(detail);//СтТовБезНДСВсего

increaseInvoiceSum 'Сумма с НДС (увеличение)' (UkdDocumentDetail detail) = (invoiceSumA(detail) (-) invoiceSumB(detail)) IF invoiceSumA(detail)>invoiceSumB(detail);
increaseInvoiceSum 'Сумма с НДС (увеличение)' = GROUP SUM increaseInvoiceSum(UkdDocumentDetail detail) BY ukdDocument(detail);//СтТовУчНалВсего

//--СумНал
increaseVATSum 'Сумма НДС (увеличение)' = GROUP SUM increaseVATSum(UkdDocumentDetail detail) BY ukdDocument(detail);//СумНДС

//-ВсегоУм
decreaseSum 'Сумма (уменьшение)' (UkdDocumentDetail detail) = (sumB(detail) (-) sumA(detail)) IF sumB(detail)>sumA(detail);
decreaseSum 'Сумма (уменьшение)' = GROUP SUM decreaseSum(UkdDocumentDetail detail) BY ukdDocument(detail);//СтТовБезНДСВсего

//--СумНал
decreaseVATSum 'Сумма НДС (уменьшение)' = GROUP SUM decreaseVATSum(UkdDocumentDetail detail) BY ukdDocument(detail);//СумНДС

decreaseInvoiceSum 'Сумма с НДС (уменьшение)' (UkdDocumentDetail detail) = (invoiceSumB(detail) (-) invoiceSumA(detail)) IF invoiceSumB(detail)>invoiceSumA(detail);
decreaseInvoiceSum 'Сумма с НДС (уменьшение)' = GROUP SUM decreaseInvoiceSum(UkdDocumentDetail detail) BY ukdDocument(detail);//СтТовУчНалВсего

updDocument 'УПД' = DATA UpdDocument (UkdDocument);
updDocumentDetail = DATA UpdDocumentDetail(UkdDocumentDetail);
numberUpdDocument 'УПД' (UkdDocument ukd) = numberInvoice(updDocument(ukd));

EXTEND FORM ukdDocument
    PROPERTIES (u) baseInvoiceNumber, baseDateInvoice
    PROPERTIES(u) description
    PROPERTIES(u) nameBaseDocument, numberBaseDocument, dateBaseDocument
    PROPERTIES(u) nameCorrectionDocument
    PROPERTIES(u) increaseSum, increaseInvoiceSum, decreaseSum, decreaseInvoiceSum
    
    PROPERTIES (d) nameVATStatusB, VATSumB, dutySumB SHOWIF NOT withoutDutyB(d), withoutDutyB, invoiceSumB
    PROPERTIES (d) BACKGROUND RGB(213,249,185) nameVATStatusA, VATSumA,  dutySumA SHOWIF NOT withoutDutyA(d), withoutDutyA, invoiceSumA
    PROPERTIES (d) BACKGROUND RGB(255, 224, 255) increaseVATSum, decreaseVATSum, 
                    increaseDutySum SHOWIF NOT withoutDutyA(d), 
                    decreaseDutySum SHOWIF NOT withoutDutyB(d)
;

DESIGN ukdDocument {
    mainDocumentAttributes {
        NEW updDocument AFTER supplierInvoice {
            type = CONTAINERV;
            caption = 'СЧФ';
            MOVE PROPERTY(baseInvoiceNumber(u));
            MOVE PROPERTY(baseDateInvoice(u));
        }
    }
    sums {
        MOVE PROPERTY(increaseSum(u));
        MOVE PROPERTY(increaseInvoiceSum(u));
        MOVE PROPERTY(decreaseSum(u));
        MOVE PROPERTY(decreaseInvoiceSum(u));
        MOVE PROPERTY(codeCurrency(u));
    }
    documentInfo {
        NEW baseDocumentInfo {
            caption = 'Основание';
            fill = 1;
            type = CONTAINERV;
            MOVE PROPERTY(description(u));
            MOVE PROPERTY(nameBaseDocument(u));
            MOVE PROPERTY(numberBaseDocument(u));
            MOVE PROPERTY(dateBaseDocument(u));
            MOVE PROPERTY(nameCorrectionDocument(u));
        }
    }
//    supplierBank {
//        MOVE PROPERTY(codeCurrency(u));
//    }
}

EXTEND FORM ukdDocuments
    PROPERTIES(u) READONLY AFTER dateInvoice(u) baseInvoiceNumber, baseDateInvoice
    PROPERTIES(u) READONLY description
    PROPERTIES(u) READONLY nameBaseDocument, numberBaseDocument, dateBaseDocument
    
    PROPERTIES (d) READONLY nameVATStatusB, VATSumB, dutySumB SHOWIF NOT withoutDutyB(d), withoutDutyB, invoiceSumB
    PROPERTIES (d) READONLY BACKGROUND RGB(213,249,185) nameVATStatusA, VATSumA,  dutySumA SHOWIF NOT withoutDutyA(d), withoutDutyA, invoiceSumA
    PROPERTIES (d) READONLY BACKGROUND RGB(255, 224, 255) increaseVATSum, decreaseVATSum,                     
                                                          increaseDutySum SHOWIF NOT withoutDutyA(d), 
                                                          decreaseDutySum SHOWIF NOT withoutDutyB(d)
;

GROUP UKDExportA0 EXTID  'СвОЭДОтпр';

GROUP UKDExportA EXTID  'СвКСчФ';
    GROUP UKDExportA1 EXTID 'СчФ' :UKDExportA;
    GROUP UKDExportA2 EXTID  'СвПрод' :UKDExportA;   
        GROUP UKDExportA2_1 EXTID  'ИдСв' :UKDExportA2;        
            GROUP UKDExportA2_1_1 EXTID  'СвЮЛУч' :UKDExportA2_1;            
        GROUP UKDExportA2_2 EXTID  'Адрес' :UKDExportA2;
            GROUP UKDExportA2_2_1 EXTID  'АдрРФ' :UKDExportA2_2;
            GROUP UKDExportA2_2_2 EXTID  'АдрИнф' :UKDExportA2_2;
        GROUP UKDExportA2_4 EXTID  'БанкРекв' :UKDExportA2;            
            GROUP UKDExportA2_4_1 EXTID  'СвБанк' :UKDExportA2_4;     
    GROUP UKDExportA6 EXTID  'СвПокуп' :UKDExportA;
        GROUP UKDExportA6_1 EXTID  'ИдСв' :UKDExportA6;
            GROUP UKDExportA6_1_1 EXTID  'СвЮЛУч' :UKDExportA6_1;
        GROUP UKDExportA6_2 EXTID  'Адрес' :UKDExportA6;
            GROUP UKDExportA6_2_1 EXTID  'АдрРФ' :UKDExportA6_2;
            GROUP UKDExportA6_2_2 EXTID  'АдрИнф' :UKDExportA6_2;
    GROUP UKDExportA9 EXTID  'ИнфПолФХЖ1' :UKDExportA;
        GROUP UKDExportA9_1 EXTID  'ТекстИнф' :UKDExportA9;
        
GROUP UKDExportB EXTID  'ТаблКСчФ';
    GROUP UKDExportB01 EXTID 'СведТов';
        GROUP UKDExportB1 EXTID  'АкцизДо';
        GROUP UKDExportB2 EXTID  'АкцизПосле';
        GROUP UKDExportB3 EXTID  'АкцизРазн';
        GROUP UKDExportB4 EXTID  'СумНалДо';
        GROUP UKDExportB5 EXTID  'СумНалПосле';
        GROUP UKDExportB6 EXTID  'СумНалРазн';
        GROUP UKDExportB7 EXTID  'СтТовУчНал';
    GROUP UKDExportB02 EXTID 'ВсегоУвел': UKDExportB;
        GROUP UKDExportB021 EXTID 'СумНал' : UKDExportB02;
    GROUP UKDExportB03 EXTID 'ВсегоУм': UKDExportB;
        GROUP UKDExportB031 EXTID 'СумНал' : UKDExportB03;

GROUP UKDExportC EXTID  'СодФХЖ3';
    GROUP UKDExportC1 EXTID  'ПередатДокум' :UKDExportC;
    GROUP UKDExportC2 EXTID  'ДокумОснКор' :UKDExportC;
                
GROUP UKDExportD EXTID  'Подписант';
    GROUP UKDExportD_1 EXTID  'ФЛ':UKDExportD;   
        GROUP UKDExportD_1_1 EXTID  'ФИО':UKDExportD_1;             
    GROUP UKDExportD_2 EXTID  'ИП':UKDExportD; 
        GROUP UKDExportD_2_1 EXTID  'ФИО':UKDExportD_2;  
    GROUP UKDExportD_3 EXTID  'ЮЛ':UKDExportD;          
        GROUP UKDExportD_3_1 EXTID  'ФИО':UKDExportD_3;

idFile 'ИдФайл' (UkdDocument d) = 
    STRING[255](CONCAT '_', 'ON_NKORSCHFDOPPR',  idConsignee(d), [FORMULA STRING[8] 'to_char(($1),\'YYYYMMDD\')'](dateSupplier(d)), idConsignor(d), uuid(d)) CHARWIDTH 25;

showIncreaseVATSum (UkdDocumentDetail detail)= IF increaseVATSum(detail) AND NOT decreaseVATSum(detail)
    THEN increaseVATSum(detail)
    ELSE IF (detail IS UkdDocumentDetail AND NOT increaseVATSum(detail) AND NOT decreaseVATSum(detail))
        THEN 0.0;
        
showIncreaseSum (UkdDocument ukd)= IF increaseSum(ukd) AND NOT decreaseSum(ukd)
    THEN increaseSum(ukd)
    ELSE IF (ukd IS UkdDocument AND NOT increaseSum(ukd) AND NOT decreaseSum(ukd))
        THEN 0.0;
        
showIncreaseInvoiceSum (UkdDocument ukd)= IF increaseInvoiceSum(ukd) AND NOT decreaseInvoiceSum(ukd)
    THEN increaseInvoiceSum(ukd)
    ELSE IF (ukd IS UkdDocument AND NOT increaseInvoiceSum(ukd) AND NOT decreaseInvoiceSum(ukd))
        THEN 0.0;                 
            
FORM UKDPR FORMEXTID '=:Файл'
    PROPERTIES ATTR ='http://www.w3.org/2001/XMLSchema' EXTID 'xmlns:xsd', ='http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:xsi'
    PROPERTIES   = (OVERRIDE idFile(minUkdDocument()), '') EXTID 'ИдФайл' ATTR, 
                 = '3.19.710' EXTID 'ВерсПрог' ATTR, 
                 = '5.01'  EXTID 'ВерсФорм' ATTR
    OBJECTS g = UkdDocument EXTID 'СвУчДокОбор'
    FILTERS inReport(g)

    PROPERTIES = (OVERRIDE idConsignor(g),'') EXTID 'ИдОтпр' ATTR ,
               = (OVERRIDE idConsignee(g),'') EXTID 'ИдПол' ATTR                 
               
    PROPERTIES = nameOperatorConsignor(g) EXTID 'НаимОрг' ATTR IN UKDExportA0,
               = innOperatorConsignor(g) EXTID 'ИННЮЛ' ATTR IN UKDExportA0,
               = codeOperatorConsignor(g) EXTID 'ИдЭДО' ATTR IN UKDExportA0                 
               
    OBJECTS d = UkdDocument EXTID 'Документ'
    FILTERS inReport(d)    
    PROPERTIES = '1115133' IF d IS UkdDocument EXTID 'КНД' ATTR,
               = (OVERRIDE nameStatus(d),'') EXTID 'Функция' ATTR,
               = businessNameDocument(d) EXTID 'ПоФактХЖ' ATTR,
               = supplierNameDocument(d) EXTID 'НаимДокОпр' ATTR,
               = toDateDDMMYYYY(OVERRIDE dateSupplier(d), currentDate()) EXTID 'ДатаИнфПр' ATTR,                     
               = [FORMULA STRING[20] 'to_char(($1),\'HH24.MI.SS\')'](OVERRIDE timeSupplier(d), currentTime()) EXTID 'ВремИнфПр' ATTR,
               = (OVERRIDE nameOriginatorSupplier(d),'')  EXTID 'НаимЭконСубСост' ATTR
               
    PROPERTIES = (OVERRIDE numberInvoice(d),' ') EXTID 'НомерКСчФ' ATTR IN UKDExportA,
               = toDateDDMMYYYY(OVERRIDE dateInvoice(d), currentDate()) EXTID 'ДатаКСчФ' ATTR IN UKDExportA,
               = (OVERRIDE codeCurrency(d),'') EXTID 'КодОКВ' ATTR IN UKDExportA
               
    PROPERTIES = baseInvoiceNumber(d) EXTID 'НомерСчФ' ATTR IN UKDExportA1,              
               = toDateDDMMYYYY(baseDateInvoice(d)) EXTID 'ДатаСчФ' ATTR IN UKDExportA1
               
    PROPERTIES = okpoSupplier(d) EXTID 'ОКПО' ATTR IN UKDExportA2    
    
    PROPERTIES = (OVERRIDE nameSupplier(d),' ') EXTID 'НаимОрг' ATTR IN UKDExportA2_1_1,
               = innSupplier(d) EXTID 'ИННЮЛ' ATTR IN UKDExportA2_1_1,
               = kppSupplier(d) EXTID 'КПП' ATTR IN UKDExportA2_1_1    
                        
    PROPERTIES = countryCodeAddressSupplier(d) EXTID 'КодСтр' ATTR IN UKDExportA2_2_2,
               = adrressSupplier(d) EXTID 'АдрТекст' ATTR IN UKDExportA2_2_2    
    PROPERTIES = codeAdrressSupplier(d) EXTID 'КодГАР' IN UKDExportA2_2  
        
    PROPERTIES = numberAccountSupplier(d) EXTID 'НомерСчета' ATTR IN UKDExportA2_4            
    PROPERTIES = nameBankSupplier(d) EXTID 'НаимБанк' ATTR IN UKDExportA2_4_1,   
               = MFOBankSupplier(d) EXTID 'БИК' ATTR IN UKDExportA2_4_1,
               = corrAccountBankSupplier(d) EXTID 'КорСчет' ATTR IN UKDExportA2_4_1                               
                   
    PROPERTIES = okpoCustomer(d) EXTID 'ОКПО' ATTR IN UKDExportA6   
    
    PROPERTIES = (OVERRIDE nameCustomer(d),'') EXTID 'НаимОрг' ATTR IN UKDExportA6_1_1,
               = innCustomer(d) EXTID 'ИННЮЛ' ATTR IN UKDExportA6_1_1,
               = kppCustomer(d) EXTID 'КПП' ATTR IN UKDExportA6_1_1    
                           
    PROPERTIES = countryCodeAddressCustomer(d) EXTID 'КодСтр' ATTR IN UKDExportA6_2_2,
               = adrressCustomer(d) EXTID 'АдрТекст' ATTR IN UKDExportA6_2_2   
    PROPERTIES = codeAdrressCustomer(d) EXTID 'КодГАР' IN UKDExportA6_2
    
    PROPERTIES = (OVERRIDE codeBusinessEvent(d),'') EXTID 'Идентиф' ATTR IN UKDExportA9_1,
               = (OVERRIDE descriptionBusinessEvent(d),'') EXTID 'Значен' ATTR IN UKDExportA9_1    
    
    //--           
    OBJECTS detail = UkdDocumentDetail EXTID 'СведТов' IN UKDExportB
    FILTERS ukdDocument(detail)==d   
    
    PROPERTIES = (OVERRIDE INTEGER(number(detail)), defaultIndex(detail)) EXTID 'НомСтр' ATTR,
               = nameSku(detail) EXTID 'НаимТов' ATTR,
               = nameVATStatusB(detail) EXTID 'НалСтДо' ATTR,
               = nameVATStatusA(detail)  EXTID 'НалСтПосле' ATTR
    
    PROPERTIES = dutySumB(detail) EXTID 'СумАкциз' IN UKDExportB1           
    PROPERTIES = 'без акциза' IF withoutDutyB(detail)  EXTID 'БезАкциз' IN UKDExportB1
    
    PROPERTIES = dutySumA(detail) EXTID 'СумАкциз' IN UKDExportB2           
    PROPERTIES = 'без акциза' IF withoutDutyA(detail)  EXTID 'БезАкциз' IN UKDExportB2      
    
    PROPERTIES = (OVERRIDE increaseDutySum(detail), 0.0) EXTID 'СумУвел' IN UKDExportB3           
//    PROPERTIES = (OVERRIDE decreaseDutySum(detail), 0.0) EXTID 'СумУм' IN UKDExportB3
    
    PROPERTIES = (OVERRIDE VATSumB(detail), 0.0) EXTID 'СумНДС' IN UKDExportB4
    PROPERTIES = (OVERRIDE VATSumA(detail),0.0) EXTID 'СумНДС' IN UKDExportB5        
    
    PROPERTIES = showIncreaseVATSum(detail) EXTID 'СумУвел' IN UKDExportB6           
    PROPERTIES = decreaseVATSum(detail) SHOWIF NOT increaseVATSum(detail) EXTID 'СумУм' IN UKDExportB6
    
    PROPERTIES = (OVERRIDE invoiceSumB(detail), 0.0) EXTID 'СтоимДоИзм' ATTR IN UKDExportB7
    PROPERTIES = (OVERRIDE invoiceSumA(detail), 0.0) EXTID 'СтоимПослеИзм' ATTR IN UKDExportB7
    
    PROPERTIES = (OVERRIDE increaseSum(d), 0.0) EXTID 'СтТовБезНДСВсего' ATTR IN UKDExportB02
    PROPERTIES = (OVERRIDE decreaseSum(d), 0.0) EXTID 'СтТовБезНДСВсего' ATTR IN UKDExportB03
    PROPERTIES = (OVERRIDE increaseInvoiceSum(d), 0.0) EXTID 'СтТовУчНалВсего' ATTR IN UKDExportB02
    PROPERTIES = (OVERRIDE decreaseInvoiceSum(d), 0.0) EXTID 'СтТовУчНалВсего' ATTR IN UKDExportB03
    
    PROPERTIES = (OVERRIDE increaseVATSum(d), 0.0) EXTID 'СумНДС' IN UKDExportB021
    PROPERTIES = ('Без НДС' IF withoutVAT(d)) EXTID 'БезНДС' IN UKDExportB021
    
    PROPERTIES = (OVERRIDE decreaseVATSum(d), 0.0) EXTID 'СумНДС' IN UKDExportB031
    PROPERTIES = ('Без НДС' IF withoutVAT(d)) EXTID 'БезНДС' IN UKDExportB031
    
    //--      
    PROPERTIES = (OVERRIDE description(d),'') EXTID 'СодОпер' ATTR IN UKDExportC
    
    PROPERTIES = nameBaseDocument(d) EXTID 'НаимОсн' ATTR IN UKDExportC1,
               = numberBaseDocument(d) EXTID 'НомОсн' ATTR IN UKDExportC1,
               = toDateDDMMYYYY(dateBaseDocument(d)) EXTID 'ДатаОсн' ATTR IN UKDExportC1 
               
    PROPERTIES = nameCorrectionDocument(d) EXTID 'НаимОсн' ATTR IN UKDExportC2
             
    //-- Подписант
    PROPERTIES = nameSupplierSignerCredentials(d) EXTID 'ОблПолн' ATTR IN UKDExportD,
               = nameSupplierSignerStatus(d) EXTID 'Статус' ATTR IN UKDExportD,
               = supplierSignerCredentialsBase(d) EXTID 'ОснПолн' ATTR IN UKDExportD   
               
    PROPERTIES = supplierSignerLastName(d) IF isSupplierSigner(d)  EXTID 'Фамилия' ATTR IN UKDExportD_1_1,
               = supplierSignerFirstName(d) IF isSupplierSigner(d) EXTID 'Имя' ATTR IN UKDExportD_1_1,
               = supplierSignerMiddleName(d) IF isSupplierSigner(d) EXTID 'Отчество' ATTR IN UKDExportD_1_1   
               
    PROPERTIES = supplierSignerInn(d) IF NOT isSupplierSigner(d)  EXTID 'ИННЮЛ' ATTR IN UKDExportD_3,
               = supplierSignerPosition(d) IF NOT isSupplierSigner(d) EXTID 'Должн' ATTR IN UKDExportD_3            
    PROPERTIES = supplierSignerAgentLastName(d) IF NOT isSupplierSigner(d)  EXTID 'Фамилия' ATTR IN UKDExportD_3_1,
               = supplierSignerAgentFirstName(d) IF NOT isSupplierSigner(d) EXTID 'Имя' ATTR IN UKDExportD_3_1,
               = supplierSignerAgentMiddleName(d) IF NOT isSupplierSigner(d) EXTID 'Отчество' ATTR IN UKDExportD_3_1                                           
;        

@defineInvoiceDocumentXMLExport (ukd, 'УКД', KPPR, 'KORSCHFDOPPR', UKDPR);

show 'Просмотреть' (UkdDocument d)  { 
    NEWSESSION {
        SHOW ukdDocument OBJECTS u = d DOCKED READONLY;
    }
}

invoiceNumerator(UkdDocument o) <- defaultNumeratorInvoiceUpd() WHEN SET(o IS UkdDocument); //возможно нужно будет сделать параметризацию нумератора для организации

generateInvoiceNumber 'Сгенерировать номер' (UkdDocument o)  { 
    numberInvoice(o) <- curStringValue(invoiceNumerator(o));
    incrementValueSession(invoiceNumerator(o));
}
    
WHEN SETCHANGED(invoiceNumerator(UkdDocument o)) AND
     NOT CHANGED(numberInvoice(o)) 
     DO generateInvoiceNumber(o);
     
showMessage = DATA BOOLEAN (UkdDocument);

META fillUkdDocument(docType)
    fill(###docType##Detail cd, Sale.InvoiceDetail d, UkdDocumentDetail ed) {
        updDocumentDetail(ed) <- updDocumentDetail(d);
        number(ed) <- index(d);
        nameSku(ed) <- nameSku(d);
    
        VATStatusB(ed)<- CASE 
                       WHEN isNotVATPayer(supplier(ukdDocument(ed)))  THEN VATStatus.vatNot
                       WHEN vat(d)==0.0  THEN VATStatus.vat0
                       WHEN vat(d)==10.0  THEN VATStatus.vat10
                       WHEN vat(d)==18.0  THEN VATStatus.vat18
                       WHEN vat(d)==20.0  THEN VATStatus.vat20
                       ;
                       
        VATStatusA(ed) <- VATStatusB(ed);                   
                                         
        invoiceSumB(ed) <- invoiceSum(d);
        invoiceSumA(ed) <- invoiceSum(d) (-) invoiceSum(cd);
        
        sumB(ed) <- sum(d);
        sumA(ed) <- sum(d) (-) sum(cd);
        
        VATSumB(ed) <- VATSum(d);
        VATSumA(ed) <- VATSum(d) (-) VATSum(cd);
        
        withoutDutyB(ed) <- TRUE;
        withoutDutyA(ed) <- TRUE;
    }
    
    createDetails (###docType c, UkdDocument ukd) {
        FOR ##docType(###docType##Detail cd) = c  NEW ed = UkdDocumentDetail  DO {
            ukdDocument(ed) <- ukd;
            ##docType##Detail(ed) <- cd;
            fill(cd, invoiceDetail(cd), ed);
        }
    }
    
    overFill ABSTRACT LIST (###docType, UkdDocument);
    
    fill(###docType c, UkdDocument ei) {
        docType(ei) <- c;
        updDocument(ei) <- updDocument(invoice(c));
        
        baseInvoiceNumber(ei) <- numberInvoice(updDocument(ei));
        baseDateInvoice(ei) <- dateInvoice(updDocument(ei));
        
        idConsignor(ei) <- idEdi(supplier(c));
        idConsignee(ei) <- idEdi(customer(c));
        
        operatorEdi(ei) <- supplier(c);
        nameOperatorConsignor(ei) <- fullName(operatorEdi(supplier(c)));
        innOperatorConsignor(ei) <- STRING[10](inn(operatorEdi(supplier(c))));
        codeOperatorConsignor(ei) <- codeOperatorEdi(operatorEdi(supplier(c)));
        
        status(ei) <- CASE 
                            WHEN status(updDocument(ei))=UpdDocumentStatus.SHCF THEN UkdDocumentStatus.KSHCF
                            WHEN status(updDocument(ei))=UpdDocumentStatus.DOP THEN UkdDocumentStatus.DIS
                            WHEN status(updDocument(ei))=UpdDocumentStatus.SHCFDOP THEN UkdDocumentStatus.KSHCFDIS;
        
        businessNameDocument(ei) <- 'Документ, подтверждающий  согласие (факт уведомления) покупателя на изменение стоимости отгруженных товаров (выполненных работ, оказанных услуг), переданных имущественных прав' 
                                        IF status(ei)=UkdDocumentStatus.KSHCF OR status(ei)=UkdDocumentStatus.KSHCFDIS;
                                        
        supplierNameDocument(ei) <- 'Документ, подтверждающий согласие (факт уведомления) покупателя на изменение стоимости отгруженных товаров (выполненных работ, оказанных услуг), переданных имущественных прав'
                                        WHERE status(ei)=UkdDocumentStatus.KSHCFDIS OR status(ei)=UkdDocumentStatus.DIS;
                                                                                                                 
        
        dateSupplier(ei) <- date(c);
        timeSupplier(ei) <- time(c);
        nameOriginatorSupplier(ei) <- fullNameSupplier(c);
        
        showMessage(ei) <- TRUE;
        
        //invoiceNumerator(ei) <- defaultNumeratorConsignmentUpd(); //возможно нужно будет сделать параметризацию нумератора для организации
        dateInvoice(ei) <- date(c);
        codeCurrency(ei) <- sid(currency(c));
        
        supplier(ei) <- supplier(c);
        numberAccountSupplier(ei) <-  STRING[20](numberAccount(supplier(c)));            
        nameBankSupplier(ei) <- nameBank(account(supplier(c)));
        MFOBankSupplier(ei) <- STRING[9](MFOBank(account(supplier(c))));
        corrAccountBankSupplier(ei) <- corrAccount(bank(account(supplier(c))));
        
        nameSupplier(ei) <- fullNameSupplier(c);
        innSupplier(ei) <- inn(supplier(c));
        kppSupplier(ei) <- kpp(supplier(c));
        regionCodeSupplier(ei) <- STRING[2](id(region(supplierStock(c))));
        
        countryCodeAddressSupplier(ei) <- sid(country(supplier(c)));
        adrressSupplier(ei) <- address(supplier(c), date(c));
        
        customer(ei) <- customer(c);
        nameCustomer(ei) <- fullName(customer(c));
        innCustomer(ei) <- inn(customer(c));
        kppCustomer(ei) <- kpp(customer(c));
        regionCodeCustomer(ei) <- STRING[2](id(region(customerStock(c))));
        
        countryCodeAddressCustomer(ei) <- sid(country(customer(c)));
        adrressCustomer(ei) <- address(customer(c), date(c));
        
        description(ei) <- 'Изменение стоимости товаров и услуг' IF c IS ###docType;
        
        nameBaseDocument (ei) <- 'УПД' IF updDocument(ei);
        numberBaseDocument (ei) <- numberInvoice(updDocument(ei));
        dateBaseDocument (ei) <- dateInvoice(updDocument(ei));
        
        nameCorrectionDocument(ei) <- 'Без документа-основания' IF c IS ###docType;
        
        supplierSignerCredentials(ei) <- Credential.c0 IF c IS ###docType; 
        supplierSignerStatus(ei) <- CStatus.c1 IF c IS ###docType; 
        supplierSignerCredentialsBase(ei) <- 'Должностные обязанности' IF c IS ###docType; //todo: переделать на проверку
        
        supplierSignerInn(ei) <- inn(supplier(c));
        supplierSignerPosition(ei) <- name(position(chief(supplier(c), date(c))));
        
        supplierSignerAgentLastName(ei) <- lastName(chief(supplier(c), date(c)));
        supplierSignerAgentFirstName(ei) <- firstName(chief(supplier(c), date(c)));
        supplierSignerAgentMiddleName(ei) <- middleName(chief(supplier(c), date(c)));
        
        codeBusinessEvent(ei) <- 'Отсутствует'; //todo: to be written down something meaningful
        descriptionBusinessEvent(ei) <- 'Отсутствует';
            
        overFill(c, ei);
        
        createDetails(c, ei);
    }

END