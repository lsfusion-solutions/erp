MODULE LotTypeRu;

REQUIRE Lot;

NAMESPACE Stock;

EXTEND CLASS LotType {
    lp 'Одежда',
    perfumery 'Парфюмерия',
    milk 'Молочная продукция',
    shoes 'Обувь',
    medicine 'Лекарства',
    photos 'Фотоаппаратура',
    tyres 'Шины',
    tobaccoProduct 'Альтернативный табак',
    tobacco 'Табак',
    furs 'Меховые изделия',
    water 'Упакованная вода',
    beer 'Пиво',
    antiseptic 'Антисептики',
    medical 'Медицинские изделия',
    grocery 'Бакалея',
    softdrinks 'Соковая продукция и безалкогольные напитки' ,
    vegetableoil 'Растительные масла',
    seafood 'Морепродукты',
    chemistry 'Парфюмерные и косметические средства и бытовая химия',
    toys 'Игры и игрушки для детей',
    autofluids 'Моторные масла'
}

showEnableExciseMarkPrice 'Цена табачной продукции в коде маркировки' = DATA BOOLEAN (LotType);
EXTEND FORM dialogLotTypes
    PROPERTIES READONLY showEnableExciseMarkPrice(t);
onStarted() + {
    showEnableExciseMarkPrice(LotType t) <- t == LotType.tobacco OR t == LotType.tobaccoProduct;
}

enableExciseMarkPrice 'Цена табачной продукции в коде маркировки' = DATA BOOLEAN (Item) IN itemBase;

EXTEND FORM item PROPERTIES(i) enableExciseMarkPrice AFTER nameLotType(i) SHOWIF showEnableExciseMarkPrice(lotType(i));
EXTEND FORM items PROPERTIES(i) READONLYIF isReadonly() AFTER nameLotType(i) enableExciseMarkPrice SHOWIF showEnableExciseMarkPrice(lotType(i));

@defineItemGroupValueGrid (containsSugar, 'Содержит сахар', BOOLEAN);

containsSugar 'Содержит сахар' (Item i) = containsSugar(itemGroup(i));