MODULE VolumeAccountLotRu;

REQUIRE PurchaseShipmentLot, SaleShipmentLot, WriteOffLot, GISMTDocument;

NAMESPACE Stock;

volumeAccount 'Объемно-сортовой учет' = DATA BOOLEAN (LotType);
volumeAccount 'Объемно-сортовой учет' (Sku sku) = volumeAccount(lotType(sku)) MATERIALIZED;
volumeAccount 'Объемно-сортовой учет'  (Lot lot) = volumeAccount(sku(lot));

skipShowQuantity (Lot lot) += volumeAccount(lot);

FORM lotTypes 'Типы маркировки'
    OBJECTS t = LotType
    PROPERTIES (t) name READONLY, volumeAccount
    ORDERS name(t)
;

NAVIGATOR {
    gismtNavigator {
        NEW lotTypes;
    }
}

volumeAccount (Purchase.UserInvoiceDetail detail) = volumeAccount(Purchase.sku(detail));
skipCheckDocumentLot(Purchase.UserInvoiceDetail detail) += volumeAccount(detail);
isLotBarcode(Purchase.UserInvoiceDetail detail, STRING[200] s) += TRUE IF volumeAccount(detail) AND left(s, 2) = '02';

CONSTRAINT quantityLot(Purchase.UserInvoiceDetail detail)>1 AND volumeAccount(detail)
    MESSAGE 'Для товара объемно-сортового учета должны быть задана 1 марка';

idVolumeAccountLot (Sku sku, NUMERIC[16,5] quantity) = CONCAT '', '02', gtin(sku), '37', STRING(INTEGER(quantity));
idVolumeAccountLot (Sale.UserInvoiceDetail detail) = idVolumeAccountLot(Sale.sku(detail), Sale.quantity(detail));

volumeAccount (Sale.UserInvoiceDetail detail) = volumeAccount(Sale.sku(detail));
skipCheckDocumentLot(Sale.UserInvoiceDetail detail) += volumeAccount(detail);

setVolumeLot (Sale.UserInvoiceDetail detail)  {
    FOR Lot l = lot(idVolumeAccountLot(detail)) DO {
        IF NOT quantity(detail, l) THEN {
            quantity(detail, Lot l1) <- NULL;
            quantity(detail, l) <- 1.0; 
        }
    } ELSE {
        NEW l = Lot {
            id(l) <- idVolumeAccountLot(detail);
            sku(l) <- sku(detail);
            quantity(detail, Lot l1) <- NULL;
            quantity(detail, l) <- 1.0;
        }
    }
}

setVolumeAccountLot 'Заполнить марки по ОСУ' (Sale.UserInvoiceDetail detail) {
    IF volumeAccount(detail) THEN {
        setVolumeLot(detail);
    }
} ASON CONTEXTMENU quantityLot[Sale.UserInvoiceDetail];

setVolumeAccountLotUserInvoice 'Заполнить марки по ОСУ (все строки)' (Sale.UserInvoiceDetail detail) {
    FOR userInvoice(detail)=userInvoice(Sale.UserInvoiceDetail detail1) AND volumeAccount(detail1) DO {
        setVolumeLot(detail1);
    }
} ASON CONTEXTMENU quantityLot[Sale.UserInvoiceDetail];

setVolumeAccountLot 'Заполнить марки по ОСУ' (Sale.UserInvoice invoice) {
    FOR volumeAccount(Sale.UserInvoiceDetail detail) AND userInvoice(detail)=invoice DO {
        setVolumeLot(detail);
    }
}

WHEN LOCAL FORMS Sale.userInvoice (SETCHANGED(Sale.quantity(Sale.UserInvoiceDetail detail)) OR CHANGED(sku(detail))) 
    AND volumeAccount(detail) AND explicitLot(sku(detail)) AND quantity(detail)>0.0 DO {
        setVolumeAccountLot(detail);
}

WHEN LOCAL FORMS Sale.userInvoice (DROPPED(Sale.quantity(Sale.UserInvoiceDetail detail)) OR DROPPED(explicitLot(sku(detail)))) 
    OR (CHANGED(quantity(detail)) AND quantity(detail)=0.0) 
    AND volumeAccount(detail) AND explicitLot(sku(detail)) DO {
        quantity(detail, Lot l) <- NULL;
}

idVolumeAccountLot (WriteOffDetail detail) = idVolumeAccountLot(WriteOff.sku(detail), WriteOff.quantity(detail));

volumeAccount (WriteOffDetail detail) = volumeAccount(WriteOff.sku(detail));
skipCheckDocumentLot(UserWriteOffDetail detail) += volumeAccount(detail);

setVolumeLot (WriteOffDetail detail)  {
    FOR Lot l = lot(idVolumeAccountLot(detail)) DO {
        IF NOT quantity(detail, l) THEN {
            quantity(detail, Lot l1) <- NULL;
            quantity(detail, l) <- 1.0;
        }
    } ELSE {
        NEW l = Lot {
            id(l) <- idVolumeAccountLot(detail);
            sku(l) <- WriteOff.sku(detail);
            quantity(detail, Lot l1) <- NULL;
            quantity(detail, l) <- 1.0;
        }
    }
}

setVolumeAccountLot 'Заполнить марки по ОСУ' (WriteOffDetail detail) {
    IF volumeAccount(detail) THEN {
        setVolumeLot(detail);
    }
} ASON CONTEXTMENU quantityLot[UserWriteOffDetail];

setVolumeAccountLotUserInvoice 'Заполнить марки по ОСУ (все строки)' (WriteOffDetail detail) {
    FOR writeOff(detail)=writeOff(WriteOffDetail detail1) AND volumeAccount(detail1) DO {
        setVolumeLot(detail1);
    }
} ASON CONTEXTMENU quantityLot[UserWriteOffDetail];

setVolumeAccountLot 'Заполнить марки по ОСУ' (UserWriteOff writeOff) {
    FOR volumeAccount(UserWriteOffDetail detail) AND writeOff(detail)=writeOff DO {
        setVolumeLot(detail);
    }
}

WHEN LOCAL FORMS userWriteOff (SETCHANGED(WriteOff.quantity(UserWriteOffDetail detail)) OR CHANGED(WriteOff.sku(detail)))
    AND volumeAccount(detail) AND WriteOff.quantity(detail)>0.0 DO {
    setVolumeAccountLot(detail);
}

WHEN LOCAL FORMS userWriteOff (DROPPED(WriteOff.quantity(UserWriteOffDetail detail)) OR DROPPED(explicitLot(WriteOff.sku(detail))))
    OR (CHANGED(WriteOff.quantity(detail)) AND WriteOff.quantity(detail)=0.0)
        AND volumeAccount(detail) DO {
    quantity(detail, Lot l) <- NULL;
}