MODULE PurchaseReturnEInvoice;

REQUIRE PurchaseReturnInvoice, ConsignmentEInvoice;

NAMESPACE PurchaseReturn;


@defineInvoiceEinvoice();

overCreate(EInvoice ei, Consignment c) + {
    IF c IS PurchaseReturn.Invoice THEN NEW f = ExtraField {
        name(f) <- 'Признак возвратной накладной';
        code(f) <- 'PW0013';
        value(f) <- '1';
        eInvoice(f) <- ei;
    }
}

changeIsReturn (EInvoice e) {
    INPUT b = BOOLEAN DO {
        IF extraFieldByCode(e,'PW0013') AND NOT b THEN {
            DELETE ExtraField f WHERE eInvoice(f) == e AND code(f) == 'PW0013';
        } ELSE IF extraFieldByCode(e,'PW0013') AND b THEN {
            value(ExtraField f) <- '1' WHERE eInvoice(f) == e AND code(f) == 'PW0013';
        } ELSE IF NOT extraFieldByCode(e,'PW0013') AND b THEN {
            NEW f = ExtraField {
                name(f) <- 'Признак возвратной накладной';
                code(f) <- 'PW0013';
                value(f) <- '1';
                eInvoice(f) <- e;
            }
        }
    }
}

EXTEND FORM eInvoices
    PROPERTIES(e) READONLYIF isReadonly() overIsReturn ON CHANGE changeIsReturn(e) AFTER isCancel(e)
;

overSkipNumberCheck = ABSTRACT BOOLEAN (Invoice);

skipNumberCheck(Invoice i) += IF (GROUP SUM 1 IF invoice(EInvoice ei) == i) OR overSkipNumberCheck(i) THEN TRUE;

skipShowEdit(Invoice i) += (exportedSupplier(eInvoice(i)) OR eInvoice(i) AND skipEditEInvoiceStrictMode()) 
    AND NOT allowChangeSignedEDIInvoice(currentUser()) AND NOT allowEditCreatedEInvoice();
