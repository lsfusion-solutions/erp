MODULE SaleReturnEInvoice;

REQUIRE InvoiceEInvoice, SaleReturnInvoice;

NAMESPACE SaleReturn;

eOperation = DATA Sale.Operation (LegalEntity);
nameEOperation 'Операция (Продажа-возврат) для электронных накладных' (LegalEntity l) = overName(eOperation(l));

EXTEND FORM legalEntity
    PROPERTIES (l) SaleReturnInvoiceNameEOperation = nameEOperation;

DESIGN legalEntity {
    EDI{
        MOVE PROPERTY (SaleReturnInvoiceNameEOperation);
    }
}

receiver = DATA Employee (UserInvoice);
receiver(UserInvoice i) += receiver(i);

nameReceiver 'Приёмщик'(Invoice i) = name(receiver(i));

FORM dialogEInvoiceSupplier 'Выбор электронной накладной'
    OBJECTS i = EInvoice
    PROPERTIES(i) READONLY dateSupplier, numberSupplier, deliveryNoteNumber, nameSupplier, nameCustomer, nameCustomerStock
    FILTERS importedCustomer(i)
;
@extendFormFilterAccessStock(dialogEInvoiceSupplier, i, dialogEInvoiceSupplier, supplierStock, Company);

changeEInvoiceSupplier(Invoice in) {
    DIALOG dialogEInvoiceSupplier OBJECTS i = eInvoice(in) NULL INPUT NULL DO {
        invoice(EInvoice e) <- NULL WHERE e == eInvoice(in) AND NOT isCancel(e);
        invoice(i) <- in;
    }
}

EXTEND FORM userInvoice 
    PROPERTIES READONLYIF exportedCustomer(eInvoice(i)) numberEInvoice(i) ON CHANGE changeEInvoiceSupplier(i)
    PROPERTIES(i) READONLYIF exportedCustomer(eInvoice(i)) nameReceiver
;

DESIGN userInvoice {
    import {
        NEW importEDI {
            caption = 'Накладная EDI';
            flex = 1;
            type = CONTAINERH;
            MOVE PROPERTY(numberEInvoice(i));
            MOVE PROPERTY(nameReceiver(i));
        }
    }
}

signAndSendCustomerEDI 'Подписать и отправить (покупатель)'(Invoice i)  { 
    NEWSESSION {
        in(EInvoice e) <- e = eInvoice(i);
        signAndSendCustomerEDI();
        in(EInvoice e) <- NULL;
    }
}
signAndSendNoticeCustomerEDI 'Подписать и отправить уведомление об изменении (покупатель)'(Invoice i)  { 
    NEWSESSION {
        in(EInvoice e) <- e = eInvoice(i);
        signAndSendNoticeCustomerEDI();
        in(EInvoice e) <- NULL;
    }
}

hideSignAndSendCustomerEDI = ABSTRACT BOOLEAN (Invoice);
hideSignAndSendNoticeCustomerEDI = ABSTRACT BOOLEAN (Invoice);

EXTEND FORM invoices
    PROPERTIES READONLY numberEInvoice = numberEInvoice(i), statusDescription = statusDescription(i) BACKGROUND backgroundStatusDescription(i)
    PROPERTIES numberEInvoice(i) SHOWIF eInvoice(i) PANEL READONLY,
               signAndSendCustomerEDI(i) SHOWIF (eInvoice(i) AND NOT exportedCustomer(eInvoice(i)) AND NOT exportedNoticeCustomer(eInvoice(i)) AND NOT hideSignAndSendCustomerEDI(i)),
               signAndSendNoticeCustomerEDI(i) SHOWIF (eInvoice(i) AND NOT exportedCustomer(eInvoice(i)) AND NOT exportedNoticeCustomer(eInvoice(i)) AND NOT hideSignAndSendNoticeCustomerEDI(i)),
               statusDescription(i) SHOWIF eInvoice(i) PANEL
;

DESIGN invoices {
    printTabScroll {
        NEW tabConsignment{
            type = TABBED;
            MOVE printTab {caption = 'Накладная';};
            NEW eInvoice {
                caption = 'Электронная накладная';
                NEW createEI {
                    type = CONTAINERH;
                    MOVE PROPERTY(numberEInvoice(i));
                    MOVE PROPERTY(signAndSendCustomerEDI(i));
                    MOVE PROPERTY(signAndSendNoticeCustomerEDI(i));
                    MOVE PROPERTY(statusDescription(i));
                }
            }
        }
    }    
}

overCopy  ABSTRACT LIST ( EInvoiceDetail, UserInvoiceDetail);
copyData(EInvoice ei, Invoice i)  { 
    invoice(EInvoice e) <- NULL WHERE invoice(e) == i AND NOT isCancel(e);
    invoice(ei) <- i;
    number(i) <- deliveryNoteNumber48(ei);
    series(i) <- NULL;
    operation(i) <- eOperation(supplier(ei)) WHERE eOperation(supplier(ei));
    supplier(i) <- customer(ei);
    supplierStock(i) <- customerStock(ei);
    customer(i) <- supplier(ei);
    customerStock(i) <- supplierStock(ei);
    date(i) <- DATE(deliveryNoteDateTime(ei));
    time(i) <- TIME(deliveryNoteDateTime(ei));
    
    FOR eInvoice(EInvoiceDetail eid) == eInvoice(i) NEW id = UserInvoiceDetail DO {
        userInvoice(id) <- i;
        sku(id) <- OVERRIDE sku(lineItemBuyerID(eid)), skuGTIN(lineItemID(eid)), sku(lineItemID(eid));
        quantity(id) <- quantityDespatched(eid);
        price(id) <- lineItemPrice(eid);
        VAT(id) <- valueCurrentVAT(country(defaultStock(supplier(ei))), overValueVAT(eid));;
        valueVAT(id) <- NUMERIC[10,5](overValueVAT(eid));  
        invoicePrice(id) <- round2(price(id) * (100 + valueVAT(id))/100);
        sum(id) <- lineItemAmountWithoutCharges(eid) WHERE isEDI(ei);
        VATSum(id) <- lineItemAmountCharges(eid) WHERE isEDI(ei);
        invoiceSum(id) <- lineItemAmount(eid) WHERE isEDI(ei);
        overCopy(eid,id); 
    }
}