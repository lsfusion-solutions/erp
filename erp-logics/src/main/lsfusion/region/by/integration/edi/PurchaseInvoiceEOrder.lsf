MODULE PurchaseInvoiceEOrder;

REQUIRE PurchaseInvoice, CustomerEOrder;

NAMESPACE Purchase;

invoice = DATA Invoice(EOrderDespatchAdvice);

TABLE EOrderDespatchAdviceDetail(Purchase.UserInvoiceDetail);
EOrderDespatchAdviceDetail = DATA EOrderDespatchAdviceDetail(Purchase.UserInvoiceDetail) TABLE EOrderDespatchAdviceDetail;

digits = FORMULA STRING[250] 'regexp_replace(($1), \'\\D\', \'\', \'g\')';

indexSku(EOrderDespatchAdviceDetail d) = PARTITION SUM 1 ORDER quantityOrdered(d), d BY sku(d), eOrder(orderDespatchAdvice(d)) MATERIALIZED INDEXED;
orderDetail (EOrderDespatchAdviceDetail ed) = GROUP 
    MAX Purchase.OrderDetail d
    IF eOrder(orderDespatchAdvice(ed)) == order(d) AND sku(ed) == sku(d) AND localIndexSku(d) == indexSku(ed);
    
prevList (PriceListType t, UserInvoiceDetail d) += WHEN t == priceListType(d) AND EOrderDespatchAdviceDetail(d)
    THEN MIN lineItemPrice(EOrderDespatchAdviceDetail(d)), priceOrder(d);

createUserInvoice 'Создать накладную' (EOrderDespatchAdvice a)  { 
    
    NEWSESSION NESTED LOCAL {
        NEW i = UserInvoice {
        
            invoice(a) <- i;
            fillHeader(i, eOrder(a));
            number(i) <- STRING[48](digits(deliveryNoteNumber(a)));
            series(i) <- STRING[2](left(replace(deliveryNoteNumber(a), digits(deliveryNoteNumber(a)), ''), 2));
            
            fillIndexSku(eOrder(a));
            
            include(Order order, i) <- TRUE WHERE order == eOrder(a);
            
            FOR orderDespatchAdvice(EOrderDespatchAdviceDetail ad) == a AND quantityDespatch(ad) > 0.0 AND NOT skipCreateUserInvoice(orderDetail(ad))
                ORDER ad 
                NEW d = UserInvoiceDetail DO {
                    userInvoice(d) <- i;
                    EOrderDespatchAdviceDetail(d) <- ad;
                    
                    orderDetail(d) <- OVERRIDE orderDetail(ad), defaultOrderDetail(d); //если в ответе несколько строк к одной строке заказа то подставляем, потому что indexSku не равны
                    sku(d) <- sku(ad);
                    quantity(d) <- quantityDespatch(ad);
                    VAT(d) <- VAT(orderDetail(ad));
                    valueVAT(d) <- valueVAT(orderDetail(ad));
                    priceListType(d) <- priceListType(orderDetail(ad));
                    price(d) <- MIN lineItemPrice(ad), price(orderDetail(ad));
                    overFill(d, orderDetail(ad));
            }
            
            executeLocalEvents('Purchase.userInvoice');
            
            SHOW userInvoice OBJECTS i = i DOCKED NOCANCEL;
        }
    }
}

EXTEND FORM eOrderDespatchAdvices 
    PROPERTIES (o) createUserInvoice TOOLBAR;


FORM selectDespatchAdvice 'Уведомления об отгрузке'
    OBJECTS o = EOrder PANEL 
    OBJECTS a = EOrderDespatchAdvice
    PROPERTIES (a) READONLY dateTime, number, deliveryNoteNumber, nameSupplier, nameCustomer, nameCustomerStock, deliveryDateTime
    FILTERS eOrder(a) == o
    FILTERGROUP invoice
        FILTER 'Не выписаны' NOT invoice(a) DEFAULT 
;
countEOrderDespatchAdvice = GROUP SUM 1 IF NOT invoice(EOrderDespatchAdvice a) BY eOrder(a) MATERIALIZED;

beforeCreateInvoice(Purchase.Order o) + { 

    IF isEOrder(o) AND countEOrderDespatchAdvice(o) AND NOT invoiceCreated(o) THEN {
        DIALOG selectDespatchAdvice OBJECTS o = o, a INPUT NOMANAGESESSION DO {
            createUserInvoice(a);
            invoiceCreated(o) <- TRUE;
        }
    }

}