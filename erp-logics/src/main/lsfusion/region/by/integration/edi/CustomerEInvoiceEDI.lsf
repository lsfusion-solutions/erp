MODULE CustomerEInvoiceEDI;

REQUIRE EInvoiceEDI, EDS;

NAMESPACE EDI;

importedCustomer 'Импортирован (покупатель)' = DATA BOOLEAN (EInvoice);
exportedBlrapnCustomer 'Экспортировано извещение о прочтении (покупатель)' = DATA BOOLEAN (EInvoice);
exportedCustomer 'Экспортирован (покупатель)' = DATA BOOLEAN (EInvoice);
exportedNoticeCustomer 'Экспортировано уведомление об изменении (покупатель)' = DATA BOOLEAN (EInvoice);

signAndSendBlrapnCustomer 'Подписать и отправить извещение о прочтении (покупатель)' ABSTRACT LIST (EInvoice);
signAndSendBlrapnCustomerEDI 'Подписать и отправить извещение о прочтении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(supplier(i)) THEN
                signAndSendBlrapnCustomer(i);
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

signAndSendCustomer 'Подписать и отправить (покупатель)'  ABSTRACT LIST ( EInvoice);
signAndSendCustomerEDI 'Подписать и отправить (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(supplier(i)) THEN
                signAndSendCustomer(i);
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

noticeMessage = DATA LOCAL TEXT ();
fillNoticeMessage ABSTRACT LIST (EInvoice);

FORM signAndSendNotice 'Уведомление об изменении'
    OBJECTS d = TEXT PANEL
    PROPERTIES description = VALUE(d)
;
DESIGN signAndSendNotice {
    OBJECTS {
        MOVE PROPERTY(description) {
            caption = 'Текст';
            valueSize = (400, 128);
            panelCaptionVertical = TRUE;
        }
    }
}

signAndSendNoticeCustomer 'Подписать и отправить уведомление об изменении (покупатель)' ABSTRACT LIST (EInvoice, STRING[1000]);
signAndSendNoticeCustomerEDI 'Подписать и отправить уведомление об изменении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(supplier(i)) THEN {
                noticeMessage() <- NULL;
                fillNoticeMessage(i);
                DIALOG signAndSendNotice OBJECTS d = noticeMessage() INPUT DO {
                    IF d!= '' THEN {
                        signAndSendNoticeCustomer(i,STRING[1000](replace(replace(d, '\n', ' '), '\r', ' ')));
                    } 
                    ELSE MESSAGE 'Не задан текст сообщения. Уведомление не отправлено!';
                }
            }
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}
signAndSendNoticeCustomerEDIWithoutDialog 'Подписать и отправить уведомление об изменении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(supplier(i)) THEN {
                noticeMessage() <- NULL;
                fillNoticeMessage(i);
                IF noticeMessage() THEN {
                    signAndSendNoticeCustomer(i,STRING[1000](replace(replace(noticeMessage(), '\n', ' '), '\r', ' ')));
                } 
                ELSE MESSAGE 'Не задан текст сообщения. Уведомление не отправлено!';
            }
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

EXTEND FORM eInvoices
    PROPERTIES(e) BEFORE isCancel(e) READONLYIF isReadonly() importedCustomer, exportedBlrapnCustomer, exportedCustomer, exportedNoticeCustomer
    EXTEND FILTERGROUP notExported
        FILTER 'Не импортированы (покупатель)' NOT importedCustomer(e) 'F9'
        FILTER 'Не экспортированы (покупатель)' NOT exportedCustomer(e) AND NOT exportedNoticeCustomer(e) 'F10'
    PROPERTIES() DRAW e TOOLBAR signAndSendBlrapnCustomerEDI, signAndSendCustomerEDI, signAndSendNoticeCustomerEDI
;

DESIGN eInvoices{
    actionContainer {
        caption = 'Действия';
        type = CONTAINERH;
        NEW customer {
            caption = 'Покупатель';
            type = CONTAINERV;        
            MOVE PROPERTY (signAndSendBlrapnCustomerEDI()) { alignment = STRETCH; };
            MOVE PROPERTY (signAndSendCustomerEDI()) { alignment = STRETCH; }; 
            MOVE PROPERTY (signAndSendNoticeCustomerEDI()) { alignment = STRETCH; };
        }
    }
}