MODULE PurchaseReturnOrderEDI;

REQUIRE PurchaseReturnOrder, EDI, CustomerEOrder;

NAMESPACE EDI;

EXTEND CLASS PurchaseReturn.UserOrder : EOrder;

isClosed(PurchaseReturn.UserOrder o) += PurchaseReturn.isClosed(o);
isOpened(PurchaseReturn.UserOrder o) += PurchaseReturn.isOpened(o);
isReturn(PurchaseReturn.UserOrder o) += TRUE IF o IS PurchaseReturn.UserOrder;
dateTime(PurchaseReturn.UserOrder o) += PurchaseReturn.dateTime[PurchaseReturn.UserOrder](o);
shipmentDateTime(PurchaseReturn.UserOrder o) += PurchaseReturn.shipmentDateTime[PurchaseReturn.UserOrder](o);
number(PurchaseReturn.UserOrder o) += STRING[48]('R'+ PurchaseReturn.number(o));
supplier(PurchaseReturn.UserOrder o) += PurchaseReturn.supplier(o);
supplierStock(PurchaseReturn.UserOrder o) += PurchaseReturn.supplierStock(o);
customer(PurchaseReturn.UserOrder o) += PurchaseReturn.customer(o);
customerStock(PurchaseReturn.UserOrder o) += PurchaseReturn.customerStock(o);
note(PurchaseReturn.UserOrder o) += PurchaseReturn.note(o);

EXTEND CLASS PurchaseReturn.UserOrderDetail : EOrderDetail;

order(PurchaseReturn.UserOrderDetail o) += PurchaseReturn.userOrder(o);
sku(PurchaseReturn.UserOrderDetail o) += PurchaseReturn.sku(o);
quantity(PurchaseReturn.UserOrderDetail o) += PurchaseReturn.quantity(o);
price(PurchaseReturn.UserOrderDetail o) += PurchaseReturn.price(o);
valueVAT(PurchaseReturn.UserOrderDetail o) += PurchaseReturn.valueVAT(o);

isEOrder(PurchaseReturn.Order o) = EDIProvider(PurchaseReturn.supplier(o)) IS EDIProvider AND NOT skipEDI(PurchaseReturn.supplierStock(o)) AND NOT skipEDI(PurchaseReturn.customerStock(o)) AND NOT isCompany(PurchaseReturn.supplier(o));
isEOrder(PurchaseReturn.UserOrder o) = EDIProvider(PurchaseReturn.supplier(o)) IS EDIProvider AND NOT skipEDI(PurchaseReturn.supplierStock(o)) AND NOT skipEDI(PurchaseReturn.customerStock(o)) AND NOT isCompany(PurchaseReturn.supplier(o));
isEOrder(PurchaseReturn.OrderDetail d) = isEOrder(order(d));
isEOrder(PurchaseReturn.UserOrderDetail d) = isEOrder(userOrder(d));

responseNote 'Примечание поставщика' (PurchaseReturn.Order o) = note(response(o)) IN documentPrm;

quantityResponseEDI 'Подтвержденное количество (EDI)'(PurchaseReturn.OrderDetail d) = quantityAccepted(responseDetail(d));
quantityResponseEDI = GROUP SUM quantityResponseEDI(PurchaseReturn.OrderDetail d) BY order(d) MATERIALIZED;
backgroundQuantityResponseEDI(PurchaseReturn.OrderDetail d) = RGB(255,0,0) IF quantityResponseEDI(d) != quantity(d);

priceResponseEDI 'Подтвержденная цена (EDI)'(PurchaseReturn.OrderDetail d) = price(responseDetail(d));
backgroundPriceResponseEDI(PurchaseReturn.OrderDetail d) = RGB(255,0,0) IF priceResponseEDI(d) != price(d);

EXTEND FORM PurchaseReturn.userOrder
    PROPERTIES (o) READONLY SHOWIF isEOrder(o) responseNote
    PROPERTIES (d) READONLY SHOWIF isEOrder(d) quantityResponseEDI BEFORE quantity(d) BACKGROUND backgroundQuantityResponseEDI(d),
        priceResponseEDI BEFORE price(d) BACKGROUND backgroundPriceResponseEDI(d);

EXTEND FORM PurchaseReturn.orders
    PROPERTIES (o) READONLY responseNote
    PROPERTIES (d) READONLY SHOWIF isEOrder(d) quantityResponseEDI BEFORE quantity(d) BACKGROUND backgroundQuantityResponseEDI(d),
        priceResponseEDI BEFORE price(d) BACKGROUND backgroundPriceResponseEDI(d);

skipSetShipmentDateEDI = ABSTRACT BOOLEAN (PurchaseReturn.UserOrder);

WHEN SET (PurchaseReturn.UserOrder o == eOrder(EOrderResponse od)) AND deliveryDateTime(od) AND NOT skipSetShipmentDateEDI(o) DO {
    shipmentDate(o) <- DATE(deliveryDateTime(od));
    shipmentTime(o) <- TIME(deliveryDateTime(od)) WHERE NOT shipmentTime(o);
}

EXTEND FORM eOrders
    PROPERTIES(o) READONLY isReturn BEFORE isCancel(o)
;

