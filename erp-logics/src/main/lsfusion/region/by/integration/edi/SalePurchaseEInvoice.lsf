MODULE SalePurchaseEInvoice;

REQUIRE SalePurchaseInvoiceShipment, ConsignmentEInvoice, PurchaseEInvoice;

NAMESPACE SalePurchaseInvoice;

WHEN CHANGED(purchaseInvoice(Consignment.invoice(EInvoice ei))) DO {
    EDI.invoice(ei) <- purchaseInvoice(Consignment.invoice(ei));
}

WHEN CHANGED(Purchase.InvoiceDetail d == purchaseInvoiceDetail(Consignment.invoiceDetail(EInvoiceDetail ei))) DO {
    eInvoiceDetail(d) <- ei;
}

skipReceiver(PurchaseInvoice i) += i IS PurchaseInvoice;

receiver = DATA Employee (PurchaseInvoice);
receiver(PurchaseInvoice i) += receiver(i);

changeReceiver (PurchaseInvoice i) {
    NEWSESSION {
        DIALOG dialogEmployees OBJECTS e = receiver(i) CHANGE LIST shortName(e);
        APPLY;
    }
}

createShipmentEInvoice 'Создать поставку' (Purchase.Invoice i){
    NEWSESSION {
        createPurchaseShipment(Sale.UserInvoice si) <- TRUE WHERE i == purchaseInvoice(si);
        APPLY;
    }
}

EXTEND FORM Purchase.invoices
    PROPERTIES nameReceiver(i) PANEL ON CHANGE changeReceiver(i) SHOWIF (i IS PurchaseInvoice AND EDI.eInvoice(i) AND importedCustomer(EDI.eInvoice(i)) AND NOT hideSignAndSendCustomerEDI(i))
    PROPERTIES createShipmentEInvoice(i) PANEL SHOWIF (i IS PurchaseInvoice AND EDI.eInvoice(i) AND importedCustomer(EDI.eInvoice(i)) AND NOT hideSignAndSendCustomerEDI(i)) AND NOT createPurchaseShipment(invoice(i))
;

DESIGN Purchase.invoices {
    createEI {
        horizontal = TRUE;
        MOVE PROPERTY(nameReceiver(i)) BEFORE PROPERTY (signAndSendBlrapnCustomerEDI(i));
        MOVE PROPERTY(createShipmentEInvoice(i));
    }
}

//накладная на основе наклданой
overFillInvoice (Purchase.UserInvoice sd, Sale.Invoice id) + {
    FOR Consignment.invoice(EInvoice ei) = id DO {
        EDI.invoice(ei) <- sd;
        number(sd) <- STRING[48](deliveryNoteNumber(ei));
    }
}

overFillInvoice(Purchase.UserInvoiceDetail d, Sale.InvoiceDetail invoiceDetail) + {
    FOR Consignment.invoiceDetail(EInvoiceDetail ei) = invoiceDetail DO {
        eInvoiceDetail(d) <- ei;
    }
}

setPropertiesPurchaseSale(Purchase.UserInvoice sd, Sale.Invoice id) + {
    FOR Consignment.invoice(EInvoice ei) = id DO {
        EDI.invoice(ei) <- sd;
        number(sd) <- STRING[48](deliveryNoteNumber(ei));
    }
}

setPropertiesPurchaseSale(Purchase.UserInvoiceDetail d, Sale.InvoiceDetail invoiceDetail) + {
    FOR Consignment.invoiceDetail(EInvoiceDetail ei) = invoiceDetail DO {
        eInvoiceDetail(d) <- ei;
    }
}

//Накладная на основе ЭТТН
overCopy(EInvoiceDetail eid, Purchase.UserInvoiceDetail id) + {
    invoiceDetail(id) <- invoiceDetail(eid);
}
