MODULE CustomerEInvoiceLot;

REQUIRE CustomerEInvoiceTopByApi;

NAMESPACE EDI;

isBase64 = FORMULA NULL STRING PG '(regexp_match($1, \'^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$\'))[1]';

overCreateEInvoiceDetailBlrwbl(EInvoiceDetail ed, INTEGER l) + {
    IF blrwblFieldCodeMark(l) THEN {
        IF isBase64(blrwblFieldCodeMark(l)) THEN {
            decodeBase64(blrwblFieldCodeMark(l));
        } ELSE {
            decodedBase64() <- blrwblFieldCodeMark(l);
        }
        
        LOCAL idLot = STRING (INTEGER);
        idLot(INTEGER i) <- getWord(decodedBase64(), ' ', i) IF iterate(i, 1, wordCount(decodedBase64(), ' ')) AND getWord(decodedBase64(), ' ', i);
        
        //для одной марки одна строка + кол-во этих марок
        FOR INTEGER qty == [GROUP SUM 1 BY idLot(INTEGER i)](STRING[200] str) DO NEW eld = EInvoiceLotDetail {
            eInvoiceDetail(eld) <- ed;
            id(eld) <- str;
            quantity(eld) <- qty;
        }                               
    }
}
overCreateEInvoiceDetailBlrdln(EInvoiceDetail ed, INTEGER l) + {
    IF blrdlnFieldCodeMark(l) THEN {
        IF isBase64(blrdlnFieldCodeMark(l)) THEN {
            decodeBase64(blrdlnFieldCodeMark(l));
        } ELSE {
            decodedBase64() <- blrdlnFieldCodeMark(l);
        }
        
        LOCAL idLot = STRING (INTEGER);
        idLot(INTEGER i) <- getWord(decodedBase64(), ' ', i) IF iterate(i, 1, wordCount(decodedBase64(), ' ')) AND getWord(decodedBase64(), ' ', i);
        
        //для одной марки одна строка + кол-во этих марок
        FOR INTEGER qty == [GROUP SUM 1 BY idLot(INTEGER i)](STRING[200] str) DO NEW eld = EInvoiceLotDetail {
            eInvoiceDetail(eld) <- ed;
            id(eld) <- str;
            quantity(eld) <- qty;
        }                               
    }
}