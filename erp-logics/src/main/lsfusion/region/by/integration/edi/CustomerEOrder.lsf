MODULE CustomerEOrder;

REQUIRE PurchaseOrder, EOrder, EDIGLNStore;

NAMESPACE EDI;

EXTEND CLASS Purchase.UserOrder : EOrder;

isClosed(Purchase.UserOrder o) += Purchase.isClosed(o);
isOpened(Purchase.UserOrder o) += Purchase.isOpened(o);
dateTime(Purchase.UserOrder o) += Purchase.dateTime[UserOrder](o);
shipmentDateTime(Purchase.UserOrder o) += Purchase.shipmentDateTime[UserOrder](o);
number(Purchase.UserOrder o) += Purchase.number(o);
supplier(Purchase.UserOrder o) += Purchase.supplier(o);
supplierStock(Purchase.UserOrder o) += Purchase.supplierStock(o);
customer(Purchase.UserOrder o) += Purchase.customer(o);
customerStock(Purchase.UserOrder o) += Purchase.customerStock(o);
note(Purchase.UserOrder o) += Purchase.note(o);
contractNumber(Purchase.UserOrder o) += Purchase.seriesNumberContractSku(o);

EXTEND CLASS Purchase.UserOrderDetail : EOrderDetail;

order(Purchase.UserOrderDetail o) += Purchase.userOrder(o);
sku(Purchase.UserOrderDetail o) += Purchase.sku(o);
quantity(Purchase.UserOrderDetail o) += Purchase.quantity(o);
price(Purchase.UserOrderDetail o) += Purchase.price(o);
valueVAT(Purchase.UserOrderDetail o) += Purchase.valueVAT(o);

skipEDI 'Не использовать EDI для заказов' = DATA BOOLEAN (Warehouse);
EXTEND FORM warehouse
    PROPERTIES (w) skipEDI;

DESIGN warehouse {
    EDI{
        caption = 'EDI';
        MOVE PROPERTY (skipEDI(w));
    }
}

skipEDI 'Не использовать EDI для заказов' = DATA BOOLEAN (DepartmentStore);
EXTEND FORM departmentStore
    PROPERTIES (d) skipEDI;

DESIGN departmentStore {
    EDI{
        MOVE PROPERTY (skipEDI(d));
    }
}

skipEDI = ABSTRACT BOOLEAN (Stock);
skipEDI(Warehouse w) += skipEDI(w);
skipEDI(DepartmentStore d) += skipEDI(d);

isEOrder(Purchase.Order o) = EDIProvider(supplier(o)) IS EDIProvider AND NOT skipEDI(supplierStock(o)) AND NOT skipEDI(customerStock(o)) AND NOT isCompany(supplier(o));
isEOrder(Purchase.UserOrder o) = EDIProvider(supplier(o)) IS EDIProvider AND NOT skipEDI(supplierStock(o)) AND NOT skipEDI(customerStock(o)) AND NOT isCompany(supplier(o));
isEOrder(Purchase.OrderDetail d) = isEOrder(order(d));
isEOrder(Purchase.UserOrderDetail d) = isEOrder(userOrder(d));

response = GROUP MAX EOrderResponse e BY eOrder(e);
responseNote 'Примечание поставщика' (Purchase.Order o) = note(response(o)) IN documentPrm;

quantityResponseEDI 'Подтвержденное количество (EDI)'(Purchase.OrderDetail d) = quantityAccepted(responseDetail(d));
quantityResponseEDI = GROUP SUM quantityResponseEDI(Purchase.OrderDetail d) BY order(d) MATERIALIZED;

backgroundQuantityResponseEDI = ABSTRACT COLOR (Purchase.OrderDetail);

priceResponseEDI 'Подтвержденная цена (EDI)'(Purchase.OrderDetail d) = price(responseDetail(d));
backgroundPriceResponseEDI(Purchase.OrderDetail d) = RGB(255,0,0) IF priceResponseEDI(d) != price(d);

EXTEND FORM userOrder
    PROPERTIES (o) READONLY SHOWIF isEOrder(o) responseNote 
    PROPERTIES (d) READONLY SHOWIF isEOrder(d) quantityResponseEDI BEFORE quantity(d) BACKGROUND backgroundQuantityResponseEDI(d), 
                                               priceResponseEDI BEFORE price(d) BACKGROUND backgroundPriceResponseEDI(d); 

EXTEND FORM orders
    PROPERTIES (o) READONLY responseNote 
    PROPERTIES (d) READONLY SHOWIF isEOrder(d) quantityResponseEDI BEFORE quantity(d) BACKGROUND backgroundQuantityResponseEDI(d), 
                                               priceResponseEDI BEFORE price(d) BACKGROUND backgroundPriceResponseEDI(d); 

skipSetShipmentDateEDI = ABSTRACT BOOLEAN (Purchase.UserOrder);

WHEN SET (UserOrder o == eOrder(EOrderResponse od)) AND deliveryDateTime(od) AND NOT skipSetShipmentDateEDI(o) DO {
    shipmentDate(o) <- DATE(deliveryDateTime(od));
    shipmentTime(o) <- TIME(deliveryDateTime(od)) WHERE NOT shipmentTime(o);
}

despatchAdviceDetail (UserOrderDetail d) = GROUP MAX EOrderDespatchAdviceDetail ed IF eOrder(orderDespatchAdvice(ed)) == order(d) AND sku(ed) == sku(d);

/////////------------------- ORDERS
noteExtra = ABSTRACT STRING (EOrder);

FORM purchaseOrder FORMEXTID 'ORDERS'
    OBJECTS o = EOrder PANEL
    PROPERTIES READONLY number(o) EXTID 'documentNumber',
        documentDate = toChar(sendDateTime(o),'yyyy-MM-ddThh24:mi:ss') EXTID 'documentDate',
        documentType = (IF isCancel(o) THEN '1' ELSE '9') EXTID 'documentType',
        documentNameCode = (IF isReturn(o) THEN '70E' ELSE '220') EXTID 'documentNameCode',
        GLNCustomer(o) EXTID 'buyerGLN',
        nameCustomer(o) EXTID 'buyerName',
        GLNCustomerStock(o) EXTID 'destinationGLN',
        nameCustomerStock(o) EXTID 'destinationName',
        GLNSupplierStock(o) EXTID 'supplierGLN',
        nameSupplier(o) EXTID 'supplierName',
        GLNSupplierStock1(o) EXTID 'stGLN',
        contractNumber(o) EXTID 'contractNumber',
        deliveryDateTimeFirst = toChar(shipmentDateTime(o),'yyyy-MM-ddThh24:mi:ss') EXTID 'deliveryDateTimeFirst',
        lineQuantity = (GROUP SUM 1 IF overQuantity(EOrderDetail od) > 0 AND GTINBarcode(od) AND order(od) == o) EXTID 'lineQuantity',
        comment = (CONCAT '; ', note(o), noteExtra(o)) EXTID 'comment'
    OBJECTS d = EOrderDetail EXTID 'line'
    FILTERS order(d) == o
    PROPERTIES READONLY GTINBarcode(d) EXTID 'GTIN',
        idSku(d) EXTID 'IDBuyer',
        nameSku(d) EXTID 'fullName',
        overQuantity(d) EXTID 'quantityOrdered',
        extraCodeUOMSku(d) EXTID 'measurement',
        priceElement = NUMERIC[16,2](round2(price(d))) EXTID 'priceElement',
        tax = NUMERIC[4,2](round2(valueVAT(d))) EXTID 'tax'
    FILTERS overQuantity(d) > 0 AND GTINBarcode(d)
;

/////////------------------- ordrsp

ordrspDocumentNumber = DATA LOCAL NESTED STRING[48]();
ordrspDocumentDate = DATA LOCAL NESTED DATETIME();
ordrspResponseType = DATA LOCAL NESTED INTEGER();
ordrspBuyerGLN = DATA LOCAL NESTED STRING[13]();
ordrspDestinationGLN = DATA LOCAL NESTED STRING[13]();
ordrspSupplierGLN = DATA LOCAL NESTED STRING[13]();
ordrspOrderNumber = DATA LOCAL NESTED STRING[48]();
ordrspDeliveryDateTimeFirst = DATA LOCAL NESTED TEXT();
ordrspDeliveryDateTimeSecond = DATA LOCAL NESTED TEXT();
ordrspComment = DATA LOCAL NESTED TEXT();
ordrspGTIN = DATA LOCAL NESTED STRING[15](INTEGER);
ordrspAction = DATA LOCAL NESTED INTEGER(INTEGER);
ordrspQuantityOrdered = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
ordrspQuantityAccepted = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
ordrspPriceElement = DATA LOCAL NESTED NUMERIC[16,2](INTEGER);
ordrspPriceNoNDS = DATA LOCAL NESTED NUMERIC[16,4](INTEGER);
ordrspPriceNDS = DATA LOCAL NESTED NUMERIC[16,4](INTEGER);

FORM ordrsp
    PROPERTIES() ordrspDocumentNumber EXTID 'documentNumber', ordrspDocumentDate EXTID 'documentDate',
        ordrspResponseType EXTID 'function', ordrspBuyerGLN EXTID 'buyerGLN',
        ordrspDestinationGLN EXTID 'destinationGLN', ordrspSupplierGLN EXTID 'supplierGLN',
        ordrspOrderNumber EXTID 'orderNumber', ordrspDeliveryDateTimeFirst EXTID 'deliveryDateTimeFirst',
        ordrspDeliveryDateTimeSecond EXTID 'deliveryDateTimeSecond', ordrspComment EXTID 'comment'
    OBJECTS i = INTEGER EXTID 'line'
    PROPERTIES(i) ordrspGTIN EXTID 'GTIN', ordrspAction EXTID 'action', ordrspQuantityOrdered EXTID 'quantityOrdered',
        ordrspQuantityAccepted EXTID 'quantityAccepted', ordrspPriceElement EXTID 'priceElement',
        ordrspPriceNoNDS EXTID 'priceNoNDS', ordrspPriceNDS EXTID 'priceNDS'
;

indexEOrderResponseDetail (INTEGER i) = PARTITION SUM 1 ORDER i BY ordrspGTIN(i),ordrspOrderNumber();

@openXML(EOrderResponse,o,eOrderResponses);

/////////------------------- desadv

desadvDocumentNumber = DATA LOCAL NESTED STRING[48]();
desadvDocumentDate = DATA LOCAL NESTED DATETIME();
desadvDeliveryNoteNumber = DATA LOCAL NESTED STRING[48]();
desadvDeliveryNoteDate = DATA LOCAL NESTED DATE();
desadvBuyerGLN = DATA LOCAL NESTED STRING[13]();
desadvDestinationGLN = DATA LOCAL NESTED STRING[13]();
desadvSupplierGLN = DATA LOCAL NESTED STRING[13]();
desadvStGLN = DATA LOCAL NESTED STRING[13]();
desadvOrderNumber = DATA LOCAL NESTED STRING[48]();
desadvOrderDate = DATA LOCAL NESTED DATETIME();
desadvDeliveryDateTimeFirst = DATA LOCAL NESTED DATETIME();
desadvComment = DATA LOCAL NESTED TEXT();
desadvGTIN = DATA LOCAL NESTED STRING[15](INTEGER);
desadvQuantityOrdered = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
desadvQuantityDespatch = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
desadvVAT = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
desadvLineItemPrice = DATA LOCAL NESTED NUMERIC[16,2](INTEGER);
desadvLineItemAmountWithoutCharges = DATA LOCAL NESTED NUMERIC[16,4](INTEGER);
desadvLineItemAmount = DATA LOCAL NESTED NUMERIC[16,4](INTEGER);
desadvLineItemAmountCharges = DATA LOCAL NESTED NUMERIC[16,4](INTEGER);

FORM desadv
    PROPERTIES() desadvDocumentNumber EXTID 'documentNumber', desadvDocumentDate EXTID 'documentDate',
        desadvDeliveryNoteNumber EXTID 'deliveryNoteNumber', desadvDeliveryNoteDate EXTID 'deliveryNoteDate',
        desadvBuyerGLN EXTID 'buyerGLN', desadvDestinationGLN EXTID 'destinationGLN', desadvSupplierGLN EXTID 'supplierGLN',
        desadvOrderNumber EXTID 'orderNumber', desadvOrderDate EXTID 'orderDate', desadvStGLN EXTID 'stGLN',
        desadvDeliveryDateTimeFirst EXTID 'deliveryDateTimeFirst', desadvComment EXTID 'comment'
    OBJECTS i = INTEGER EXTID 'line'
    PROPERTIES(i) desadvGTIN EXTID 'GTIN', desadvQuantityOrdered EXTID 'quantityOrdered',
        desadvQuantityDespatch EXTID 'quantityDespatch', desadvVAT EXTID 'vat',
        desadvLineItemPrice EXTID 'lineItemPrice', desadvLineItemAmountWithoutCharges EXTID 'lineItemAmountWithoutCharges',
        desadvLineItemAmount EXTID 'lineItemAmount', desadvLineItemAmountCharges EXTID 'lineItemAmountCharges'
;

@openXML(EOrderDespatchAdvice,o,eOrderDespatchAdvices);
