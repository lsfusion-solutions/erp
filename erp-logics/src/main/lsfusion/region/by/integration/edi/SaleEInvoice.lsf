MODULE SaleEInvoice;

REQUIRE SaleInvoice, ConsignmentEInvoice, SaleCreditNote;

NAMESPACE Sale;

@defineInvoiceEinvoice();

overSkipNumberCheck = ABSTRACT BOOLEAN (Invoice);

skipNumberCheck(Invoice i) += IF (GROUP SUM 1 IF invoice(EInvoice ei) == i) OR overSkipNumberCheck(i) THEN TRUE;

creditNote = DATA CreditNote(ECreditNote) INDEXED;
creditNoteDetail = DATA CreditNoteDetail(ECreditNoteDetail);
eCreditNote = GROUP LAST ECreditNote ec IF NOT isCancel(ec) ORDER dateTime(ec), ec BY creditNote(ec);
eCreditNoteDetail = GROUP LAST ECreditNoteDetail ecd IF NOT isCancel(eCreditNote(ecd)) ORDER dateTime(eCreditNote(ecd)), ecd BY creditNoteDetail(ecd);
numberCreditNote 'Номер акта приемки EDI (расход)' (ECreditNote c) = number(creditNote(c));

EXTEND FORM eCreditNotes
    PROPERTIES (c) READONLY SaleNumberCreditNote = numberCreditNote
;

filterDate 'Дата' = DATA LOCAL DATE ();
filterDate (ECreditNote c) = DATE(dateTime(c)) == filterDate() OR NOT filterDate();

//filterSupplier = DATA LOCAL LegalEntity ();
//filterSupplier (ECreditNote c) = supplier(c)= filterSupplier() OR (c IS ECreditNote AND NOT filterSupplier()) OR NOT supplier(c);

filterCustomer = DATA LOCAL LegalEntity ();
filterCustomer (ECreditNote c) = customer(c)= filterCustomer() OR (c IS ECreditNote AND NOT filterCustomer()) OR NOT customer(c);

//filterStock = DATA LOCAL Stock ();
//filterStock (ECreditNote c) = customerStock(c)= filterStock() OR (c IS ECreditNote AND NOT filterStock()) OR NOT customerStock(c);

FORM selectECreditNote 'Акты приемки EDI'
    PROPERTIES filterDate()

    OBJECTS ec = ECreditNote
    PROPERTIES(ec) READONLY dateTime, documentId, actDifNumber, numberEInvoice, nameSupplier, nameCustomer
    FILTERS filterDate(ec),
//        filterSupplier(ec),
        filterCustomer(ec),
//        filterStock(ec),
        NOT creditNote(ec)
;

DESIGN selectECreditNote {
    NEW filter {
        caption = 'Фильтр';
        MOVE PROPERTY (filterDate());
    }

    MOVE BOX(ec);
    MOVE TOOLBARBOX;
}

overCopy  ABSTRACT LIST ( ECreditNoteDetail, UserCreditNoteDetail);
overSupplierStock = ABSTRACT Stock(ECreditNote);

//copyData(ECreditNote ec, CreditNote c)  {
//    creditNote(ECreditNote e) <- NULL WHERE creditNote(e) == c AND NOT isCancel(e);
//    creditNote(ec) <- c;
//    number(c) <- number(ec);
//    series(c) <- NULL;
//    operation(c) <- eOperation(customer(ec)) WHERE eOperation(customer(ec));
//    supplier(c) <- supplier(ec);
//    supplierStock(c) <- OVERRIDE supplierStock(invoice(eInvoiceDeliveryNoteNumber(deliveryNoteNumber(ec)))), overSupplierStock(ec), defaultStock(supplier(c));
//    customer(c) <- customer(ec);
//    customerStock(c) <- customerStock(ec);
//    date(c) <- DATE(dateTime(ec));
//    time(c) <- TIME(dateTime(ec));
//
//    FOR eCreditNote(ECreditNoteDetail ecd) == eCreditNote(c) NEW cd = UserCreditNoteDetail DO {
//        userCreditNote(cd) <- c;
//        creditNoteDetail(ECreditNoteDetail d) <- NULL WHERE creditNoteDetail(d) == cd AND NOT isCancel(eCreditNote(d));
//        creditNoteDetail(ecd) <- cd;
//        sku(cd) <- OVERRIDE sku(lineItemBuyerID(ecd)), skuGTIN(lineItemID(ecd)), sku(lineItemID(ecd));
//        invoiceDetail(cd) <- OVERRIDE (GROUP MIN InvoiceDetail d IF invoice(d) == invoice(eInvoiceDeliveryNoteNumber(deliveryNoteNumber(ec))) AND index(d) == lineItemNumber(ecd) AND sku(d) == sku(cd)), (GROUP MIN InvoiceDetail d IF invoice(d) == invoice(eInvoiceDeliveryNoteNumber(deliveryNoteNumber(ec))) AND sku(d) == sku(cd));
//        quantity(cd) <- quantityOrdered(ecd) (-) quantityReceived(ecd);
//        price(cd) <- lineItemPrice(ecd);
//        VAT(cd) <- valueCurrentVAT(country(customerStock(ec)), valueVAT(ecd));;
//        valueVAT(cd) <- NUMERIC[10,5](valueVAT(ecd));
//        overCopy(ecd,cd);
//    }
//}

numberECreditNote 'Номер электронного акта приемки'(CreditNote c) = actDifNumber(eCreditNote(c));
isECreditNote 'Электронный акт приемки' (CreditNote c) = TRUE IF eCreditNote(c);

WHEN SETCHANGED(deliveryNoteNumber(Consignment.eInvoice(Invoice i))) AND changeNumberInvoice() DO {
    number(i) <- deliveryNoteNumber(Consignment.eInvoice(i));
    series(i) <- NULL;
}