MODULE CustomerEInvoice;

REQUIRE EInvoice, EDS, XMLUtils;

NAMESPACE EDI;

importedCustomer 'Импортирован (покупатель)' = DATA BOOLEAN (EInvoice);
exportedBlrapnCustomer 'Экспортировано извещение о прочтении (покупатель)' = DATA BOOLEAN (EInvoice);
exportedCustomer 'Экспортирован (покупатель)' = DATA BOOLEAN (EInvoice);
exportedNoticeCustomer 'Экспортировано уведомление об изменении (покупатель)' = DATA BOOLEAN (EInvoice);

overSupplier = ABSTRACT LegalEntity (EInvoice);
signSupplier (EInvoice i) = OVERRIDE supplier(i), overSupplier(i);

signAndSendBlrapnCustomer 'Подписать и отправить извещение о прочтении (покупатель)' ABSTRACT LIST (EInvoice);
signAndSendBlrapnCustomerEDI 'Подписать и отправить извещение о прочтении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i), customer(i)) THEN
                signAndSendBlrapnCustomer(i);
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

signAndSendCustomer 'Подписать и отправить (покупатель)'  ABSTRACT LIST ( EInvoice);
signAndSendCustomerEDI 'Подписать и отправить (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i),customer(i)) THEN
                signAndSendCustomer(i);
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

noticeMessage = DATA LOCAL TEXT ();
fillNoticeMessage ABSTRACT LIST (EInvoice);

FORM signAndSendNotice 'Уведомление об изменении'
    OBJECTS d = TEXT PANEL
    PROPERTIES description = VALUE(d)
;
DESIGN signAndSendNotice {
    OBJECTS {
        MOVE PROPERTY(description) {
            caption = 'Текст';
            valueSize = (400, 128);
            panelCaptionVertical = TRUE;
        }
    }
}

signAndSendNoticeCustomer 'Подписать и отправить уведомление об изменении (покупатель)' ABSTRACT LIST (EInvoice, STRING[1000]);
afterSuccessfullySignAndSendNoticeCustomer ABSTRACT LIST (EInvoice);
signAndSendNoticeCustomerEDI 'Подписать и отправить уведомление об изменении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i), customer(i)) THEN {
                noticeMessage() <- NULL;
                fillNoticeMessage(i);
                DIALOG signAndSendNotice OBJECTS d = noticeMessage() INPUT DO {
                    IF d!= '' THEN {
                        signAndSendNoticeCustomer(i,STRING[1000](replace(replace(d, '\n', ' '), '\r', ' ')));
                    } 
                    ELSE MESSAGE 'Не задан текст сообщения. Уведомление не отправлено!';
                }
            }
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}
signAndSendNoticeCustomerEDIWithoutDialog 'Подписать и отправить уведомление об изменении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i), customer(i)) THEN {
                noticeMessage() <- NULL;
                fillNoticeMessage(i);
                IF noticeMessage() THEN {
                    signAndSendNoticeCustomer(i,STRING[1000](replace(replace(noticeMessage(), '\n', ' '), '\r', ' ')));
                } 
                ELSE MESSAGE 'Не задан текст сообщения. Уведомление не отправлено!';
            }
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

EXTEND FORM eInvoices
    PROPERTIES(e) BEFORE isCancel(e) READONLYIF isReadonly() importedCustomer, exportedBlrapnCustomer, exportedCustomer, exportedNoticeCustomer
    EXTEND FILTERGROUP notExported
        FILTER 'Не импортированы (покупатель)' NOT importedCustomer(e) 'F9'
        FILTER 'Не экспортированы (покупатель)' NOT exportedCustomer(e) AND NOT exportedNoticeCustomer(e) 'F10'
    PROPERTIES() DRAW e TOOLBAR signAndSendBlrapnCustomerEDI, signAndSendCustomerEDI, signAndSendNoticeCustomerEDI
;

DESIGN eInvoices{
    actionContainer {
        caption = 'Действия';
        horizontal = TRUE;
        NEW customer {
            caption = 'Покупатель';
            MOVE PROPERTY (signAndSendBlrapnCustomerEDI()) { alignment = STRETCH; };
            MOVE PROPERTY (signAndSendCustomerEDI()) { alignment = STRETCH; }; 
            MOVE PROPERTY (signAndSendNoticeCustomerEDI()) { alignment = STRETCH; };
        }
    }
}

afterImportEInvoice ABSTRACT LIST (EInvoice);

validate(STRING type, BOOLEAN interactive, FILE doc) {
    readResource('region/by/integration/edi/xsd/'+type+'.xsd');
    validateXML(resourceFile(),doc);
    IF interactive THEN MESSAGE validateError() NOWAIT;
}
validate(STRING type, FILE doc) {
    validate(type, NULL, doc);
}

//--------------------------------формы----------------------------------

blrwblTestIndicator = DATA LOCAL STRING[1]();
blrwblUserID = DATA LOCAL NESTED STRING[35]();
blrwblDocumentNumber = DATA LOCAL NESTED STRING[35]();
blrwblDeliveryNoteNumber = DATA LOCAL NESTED STRING[70]();
blrwblDateTime = DATA LOCAL NESTED DATETIME();
blrwblDeliveryNoteDate = DATA LOCAL NESTED DATE();
blrwblFunctionCode = DATA LOCAL NESTED STRING[3]();
blrwblContractName = DATA LOCAL NESTED STRING[70]();
blrwblContractID = DATA LOCAL NESTED STRING[70]();
blrwblContractDate = DATA LOCAL NESTED DATE();
blrwblWaybillID = DATA LOCAL NESTED STRING[70]();
GROUP blrwblShipper EXTID 'Shipper' : deliveryNote;
blrwblSupplierGLN = DATA LOCAL NESTED STRING[13]();
blrwblSupplierName = DATA LOCAL NESTED STRING[275]();
blrwblSupplierAddress = DATA LOCAL NESTED STRING[150]();
blrwblSupplierVATRegistrationNumber = DATA LOCAL NESTED STRING[9]();
blrwblContactSupplier  = DATA LOCAL NESTED STRING[150]();
GROUP blrwblReceiver EXTID 'Receiver' : deliveryNote;
blrwblCustomerGLN = DATA LOCAL NESTED STRING[13]();
blrwblCustomerName = DATA LOCAL NESTED STRING[150]();
GROUP blrwblFreightPayer EXTID 'FreightPayer' : deliveryNote;
blrwblFreightPayerGLN = DATA LOCAL NESTED STRING[13]();
GROUP blrwblShipFrom EXTID 'ShipFrom' : deliveryNote;
blrwblSupplierStockGLN = DATA LOCAL NESTED STRING[13]();
blrwblSupplierStockAddress = DATA LOCAL NESTED STRING[150]();
blrwblContactSupplierStock = DATA LOCAL NESTED STRING[150]();
GROUP blrwblShipTo EXTID 'ShipTo' : deliveryNote;
blrwblCustomerStockGLN = DATA LOCAL NESTED STRING[13]();
blrwblCustomerStockAddress = DATA LOCAL NESTED STRING[150]();
GROUP blrwblCarrier EXTID 'Carrier' : deliveryNote;
blrwblTransportContact = DATA LOCAL NESTED STRING[150]();
blrwblDeliveryContact = DATA LOCAL NESTED STRING[150]();
blrwblProxyID = DATA LOCAL NESTED STRING[70]();
blrwblProxyDate = DATA LOCAL NESTED DATE();
blrwblPartyIssuingProxyName = DATA LOCAL NESTED STRING[175]();
blrwblQuantityTrip = DATA LOCAL NESTED STRING[70]();
blrwblQuantityTripNew = DATA LOCAL NESTED STRING[70]();
blrwblTransportOwnerName = DATA LOCAL NESTED STRING[175]();
blrwblTransportOwnerNameNew = DATA LOCAL NESTED STRING[175]();
blrwblTransportID = DATA LOCAL NESTED STRING[35]();
blrwblTransportIDNew = DATA LOCAL NESTED STRING[35]();
blrwblTrailerID = DATA LOCAL NESTED STRING[35]();
blrwblTrailerIDNew = DATA LOCAL NESTED STRING[35]();
blrwblSealIDReceiver = DATA LOCAL NESTED STRING[35]();
blrwblOrderID = DATA LOCAL NESTED STRING[35]();
cancelDeliveryNoteId = DATA LOCAL NESTED STRING[43]();
blrwblCurrency = DATA LOCAL NESTED STRING[3]();
blrwblFieldName = DATA LOCAL NESTED STRING[255](INTEGER);
blrwblFieldCode = DATA LOCAL NESTED STRING[6](INTEGER);
blrwblFieldValue = DATA LOCAL NESTED STRING[2560](INTEGER);
GROUP blrwblDespatchAdviceLogisticUnitLineItemDeliveryNote EXTID 'DespatchAdviceLogisticUnitLineItem' :deliveryNote;
blrwblLineItemNumber = DATA LOCAL NESTED INTEGER(INTEGER);
blrwblLineItemSign = DATA LOCAL NESTED STRING[4](INTEGER);
blrwblLineItemID = DATA LOCAL NESTED STRING[14](INTEGER);
blrwblLineItemBuyerID = DATA LOCAL NESTED STRING[35](INTEGER);
blrwblItemCustomCode = DATA LOCAL NESTED STRING[10](INTEGER);
blrwblDeliveryTypePrev = DATA LOCAL NESTED INTEGER(INTEGER);
blrwblDeliveryNotePrev = DATA LOCAL NESTED STRING[70](INTEGER);
blrwblDeliveryNoteDatePrev = DATA LOCAL NESTED DATETIME(INTEGER);
blrwblDeliveryNotePrevLineID = DATA LOCAL NESTED INTEGER(INTEGER);
blrwblLineItemSupplierID = DATA LOCAL NESTED STRING[35](INTEGER);
blrwblLineItemName = DATA LOCAL NESTED STRING[500](INTEGER);
blrwblGrossWeightValue = DATA LOCAL NESTED NUMERIC[12,6](INTEGER);
blrwblQuantityDespatched = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
blrwblLineItemQuantityUOM = DATA LOCAL NESTED STRING[3](INTEGER);
blrwblDespatchUnitQuantityDespatched = DATA LOCAL NESTED NUMERIC[12,5](INTEGER);
blrwblExpiryDate = DATA LOCAL NESTED DATE(INTEGER);
blrwblValueVAT = DATA LOCAL NESTED STRING[7](INTEGER);
blrwblAdditionalInformation = DATA LOCAL NESTED STRING[512](INTEGER);
blrwblLineItemProductDate = DATA LOCAL NESTED DATE(INTEGER);
blrwblLineItemPrice = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
blrwblLineItemPriceSPT = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
blrwblLineItemManufacturerPrice = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
blrwblLineItemAmountWithoutCharges = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
blrwblLineItemAmount = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
blrwblLineItemAmountCharges = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
blrwblLineItemAmountExcise = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
blrwblLineItemLineItemIdentification = DATA LOCAL NESTED INTEGER(INTEGER);
lineItemManufacturerOutputPrice = DATA LOCAL NUMERIC[18,2](INTEGER);
typeDiscount = DATA LOCAL STRING[512](INTEGER);
bulkDiscountRate = DATA LOCAL STRING[512](INTEGER);
outputPriceIncludingShippingCoast = DATA LOCAL STRING[80](INTEGER);
outputPriceShippingCoast = DATA LOCAL NUMERIC[18,2](INTEGER);
outputPricePackingCoast = DATA LOCAL NUMERIC[18,2](INTEGER);
bulkMarginRate = DATA LOCAL STRING[70](INTEGER);
cutRate = DATA LOCAL STRING[512](INTEGER);
additionalInformationPrice = DATA LOCAL STRING[512](INTEGER);
additionalInformationNote = DATA LOCAL STRING[512](INTEGER);

GROUP blrwblLineItemIdentification EXTID 'LineItemIdentification';
blrwblGroupPackingCodeMark = DATA LOCAL NESTED STRING[130](INTEGER);
blrwblUpperLevelCodeMark = DATA LOCAL NESTED STRING[130](INTEGER);
blrwblFieldCodeMark = DATA LOCAL NESTED STRING[130000](INTEGER);
blrwblLineItemLineItemExtraField = DATA LOCAL NESTED INTEGER(INTEGER);
blrwblLineItemFieldName = DATA LOCAL NESTED STRING[255](INTEGER);
blrwblLineItemFieldCode = DATA LOCAL NESTED STRING[6](INTEGER);
blrwblLineItemFieldValue = DATA LOCAL NESTED STRING[2560](INTEGER);

fieldCodeMark = DATA LOCAL STRING(INTEGER);
fieldCodeMarkHeaderFieldCodeMark = DATA LOCAL INTEGER(INTEGER);

FORM blrwbl
    PROPERTIES IN messageHeader 
        blrwblTestIndicator() EXTID 'TestIndicator',
        blrwblUserID() EXTID 'UserID'
    PROPERTIES IN deliveryNote 
        blrwblDocumentNumber() EXTID 'DocumentID',
        blrwblDeliveryNoteNumber() EXTID 'DeliveryNoteID',
        blrwblDeliveryNoteDate() EXTID 'DeliveryNoteDate',
        blrwblDateTime() EXTID 'CreationDateTime',
        blrwblFunctionCode() EXTID 'FunctionCode',
        blrwblContractName() EXTID 'ContractName',
        blrwblContractID() EXTID 'ContractID',
        blrwblContractDate() EXTID 'ContractDate',
        blrwblWaybillID() EXTID 'WaybillID',
        blrwblQuantityTrip() EXTID 'QuantityTrip',
        blrwblTransportOwnerName() EXTID 'TransportOwnerName',
        blrwblTransportID() EXTID 'TransportID',
        blrwblTrailerID() EXTID 'TrailerID',
        blrwblSealIDReceiver() EXTID 'SealID',
        blrwblOrderID() EXTID 'OrderID',
        cancelDeliveryNoteId() EXTID 'CancelDeliveryNoteID',
        blrwblCurrency() EXTID 'Currency'
    PROPERTIES IN blrwblShipper 
        blrwblSupplierGLN() EXTID 'GLN',
        blrwblSupplierName() EXTID 'Name',
        blrwblSupplierAddress() EXTID 'Address',
        blrwblSupplierVATRegistrationNumber() EXTID 'VATRegistrationNumber',
        blrwblContactSupplier() EXTID 'Contact'
    PROPERTIES IN blrwblReceiver
        blrwblCustomerGLN() EXTID 'GLN',
        blrwblCustomerName() EXTID 'Name'
    PROPERTIES IN blrwblFreightPayer 
        blrwblFreightPayerGLN() EXTID 'GLN'
    PROPERTIES IN blrwblShipFrom 
        blrwblSupplierStockGLN() EXTID 'GLN',
        blrwblSupplierStockAddress() EXTID 'Address',
        blrwblContactSupplierStock() EXTID 'Contact'
    PROPERTIES IN blrwblShipTo 
        blrwblCustomerStockGLN() EXTID 'GLN',
        blrwblCustomerStockAddress() EXTID 'Address'
    PROPERTIES IN blrwblCarrier 
        blrwblTransportContact() EXTID 'TransportContact',
        blrwblDeliveryContact() EXTID 'DeliveryContact',
        blrwblProxyID() EXTID 'ProxyID',
        blrwblProxyDate() EXTID 'ProxyDate',
        blrwblPartyIssuingProxyName() EXTID 'PartyIssuingProxyName',
        blrwblQuantityTripNew() EXTID 'QuantityTrip',
        blrwblTransportOwnerNameNew() EXTID 'TransportOwnerName',
        blrwblTransportIDNew() EXTID 'TransportID',
        blrwblTrailerIDNew() EXTID 'TrailerID'

    OBJECTS e = INTEGER EXTID 'ExtraField' IN deliveryNote
    PROPERTIES(e) blrwblFieldName EXTID 'FieldName',
        blrwblFieldCode EXTID 'FieldCode',
        blrwblFieldValue EXTID 'FieldValue'

    OBJECTS i = INTEGER EXTID 'LineItem' IN blrwblDespatchAdviceLogisticUnitLineItemDeliveryNote
    PROPERTIES(i) blrwblLineItemNumber EXTID 'LineItemNumber',
        blrwblLineItemSign EXTID 'LineItemSign',
        blrwblLineItemID EXTID 'LineItemID',
        blrwblLineItemBuyerID EXTID 'LineItemBuyerID',
        blrwblItemCustomCode EXTID 'ItemCustomCode',
        blrwblDeliveryTypePrev EXTID 'DeliveryTypePrev',
        blrwblDeliveryNotePrev EXTID 'DeliveryNotePrev',
        blrwblDeliveryNoteDatePrev EXTID 'DeliveryNoteDatePrev',
        blrwblDeliveryNotePrevLineID EXTID 'DeliveryNotePrevLineID',
        blrwblLineItemSupplierID EXTID 'LineItemSupplierID',
        blrwblLineItemName EXTID 'LineItemName',
        blrwblGrossWeightValue EXTID 'GrossWeightValue',
        blrwblQuantityDespatched EXTID 'QuantityDespatched',
        blrwblLineItemQuantityUOM EXTID 'LineItemQuantityUOM',
        blrwblDespatchUnitQuantityDespatched EXTID 'DespatchUnitQuantityDespatched',
        blrwblExpiryDate EXTID 'BestBeforeDate',
        blrwblValueVAT EXTID 'TaxRate',
        blrwblAdditionalInformation EXTID 'AdditionalInformation',
        blrwblLineItemProductDate EXTID 'LineItemProductDate',
        blrwblLineItemPrice EXTID 'LineItemPrice',
        blrwblLineItemPriceSPT EXTID 'LineItemPriceSPT',
        blrwblLineItemManufacturerPrice EXTID 'LineItemManufacturerPrice',
        blrwblLineItemAmountWithoutCharges EXTID 'LineItemAmountWithoutCharges',
        blrwblLineItemAmount EXTID 'LineItemAmount',
        blrwblLineItemAmountCharges EXTID 'LineItemAmountCharges',
        blrwblLineItemAmountExcise EXTID 'LineItemAmountExcise'
    PROPERTIES(i) IN fieldCostControl 
        lineItemManufacturerOutputPrice EXTID 'LineItemManufacturerOutputPrice',
        typeDiscount EXTID 'TypeDiscount', 
        bulkDiscountRate EXTID 'BulkDiscountRate', 
        outputPriceIncludingShippingCoast EXTID 'OutputPriceIncludingShippingCoast', 
        outputPriceShippingCoast EXTID 'OutputPriceShippingCoast', 
        outputPricePackingCoast EXTID 'OutputPricePackingCoast', 
        bulkMarginRate EXTID 'BulkMarginRate', 
        cutRate EXTID 'CutRate', 
        additionalInformationPrice EXTID 'AdditionalInformationPrice',
        additionalInformationNote EXTID 'AdditionalInformation'

    OBJECTS d = INTEGER EXTID 'GroupPackingHeader' IN blrwblLineItemIdentification
    PROPERTIES(d) blrwblGroupPackingCodeMark EXTID 'GroupPackingCodeMark',
        blrwblUpperLevelCodeMark EXTID 'UpperLevelCodeMark'
    PROPERTIES(i) IN blrwblLineItemIdentification blrwblFieldCodeMark EXTID 'FieldCodeMark'
    FILTERS blrwblLineItemLineItemIdentification(d) == i
    OBJECTS f = INTEGER EXTID 'LineItemExtraField'
    PROPERTIES(f) blrwblLineItemFieldName EXTID 'FieldName',
        blrwblLineItemFieldCode EXTID 'FieldCode',
        blrwblLineItemFieldValue EXTID 'FieldValue'
    FILTERS blrwblLineItemLineItemExtraField(f) == i

    OBJECTS m = INTEGER EXTID 'FieldCodeMark' IN fieldCodeMarkHeader
    PROPERTIES (m) fieldCodeMark EXTID 'value'
    FILTERS fieldCodeMarkHeaderFieldCodeMark(m) == i
;

blrdlnTestIndicator = DATA LOCAL STRING[1]();
blrdlnUserID = DATA LOCAL NESTED STRING[35]();
blrdlnDocumentNumber = DATA LOCAL NESTED STRING[35]();
blrdlnDeliveryNoteNumber = DATA LOCAL NESTED STRING[70]();
blrdlnDateTime = DATA LOCAL NESTED DATETIME();
blrdlnDeliveryNoteDate = DATA LOCAL NESTED DATE();
blrdlnFunctionCode = DATA LOCAL NESTED STRING[3]();
blrdlnContractName = DATA LOCAL NESTED STRING[70]();
blrdlnContractID = DATA LOCAL NESTED STRING[70]();
blrdlnContractDate = DATA LOCAL NESTED DATE();
GROUP blrdlnShipper EXTID 'Shipper' : deliveryNote;
blrdlnSupplierGLN = DATA LOCAL NESTED STRING[13]();
blrdlnSupplierName = DATA LOCAL NESTED STRING[275]();
blrdlnSupplierAddress = DATA LOCAL NESTED STRING[150]();
blrdlnSupplierVATRegistrationNumber = DATA LOCAL NESTED STRING[9]();
blrdlnContactSupplier  = DATA LOCAL NESTED STRING[150]();
GROUP blrdlnReceiver EXTID 'Receiver' : deliveryNote;
blrdlnCustomerGLN = DATA LOCAL NESTED STRING[13]();
blrdlnCustomerName = DATA LOCAL NESTED STRING[150]();
GROUP blrdlnShipFrom EXTID 'ShipFrom' : deliveryNote;
blrdlnSupplierStockGLN = DATA LOCAL NESTED STRING[13]();
blrdlnSupplierStockAddress = DATA LOCAL NESTED STRING[150]();
blrdlnContactSupplierStock = DATA LOCAL NESTED STRING[150]();
GROUP blrdlnShipTo EXTID 'ShipTo' : deliveryNote;
blrdlnCustomerStockGLN = DATA LOCAL NESTED STRING[13]();
blrdlnCustomerStockAddress = DATA LOCAL NESTED STRING[150]();
GROUP blrdlnCarrier EXTID 'Carrier' : deliveryNote;
blrdlnDeliveryContact = DATA LOCAL NESTED STRING[150]();
blrdlnProxyID = DATA LOCAL NESTED STRING[70]();
blrdlnProxyDate = DATA LOCAL NESTED DATE();
blrdlnPartyIssuingProxyName = DATA LOCAL NESTED STRING[175]();
blrdlnOrderID = DATA LOCAL NESTED STRING[35]();
blrdlnCurrency = DATA LOCAL NESTED STRING[3]();
blrdlnFieldName = DATA LOCAL NESTED STRING[255](INTEGER);
blrdlnFieldCode = DATA LOCAL NESTED STRING[6](INTEGER);
blrdlnFieldValue = DATA LOCAL NESTED STRING[2560](INTEGER);
GROUP blrdlnDespatchAdviceLogisticUnitLineItemDeliveryNote EXTID 'DespatchAdviceLogisticUnitLineItem' :deliveryNote;
blrdlnLineItemNumber = DATA LOCAL NESTED INTEGER(INTEGER);
blrdlnLineItemSign = DATA LOCAL NESTED STRING[4](INTEGER);
blrdlnLineItemID = DATA LOCAL NESTED STRING[14](INTEGER);
blrdlnItemCustomCode = DATA LOCAL NESTED STRING[10](INTEGER);
blrdlnLineItemBuyerID = DATA LOCAL NESTED STRING[35](INTEGER);
blrdlnDeliveryTypePrev = DATA LOCAL NESTED INTEGER(INTEGER);
blrdlnDeliveryNotePrev = DATA LOCAL NESTED STRING[70](INTEGER);
blrdlnDeliveryNoteDatePrev = DATA LOCAL NESTED DATETIME(INTEGER);
blrdlnDeliveryNotePrevLineID = DATA LOCAL NESTED INTEGER(INTEGER);
blrdlnLineItemSupplierID = DATA LOCAL NESTED STRING[35](INTEGER);
blrdlnLineItemName = DATA LOCAL NESTED STRING[500](INTEGER);
blrdlnQuantityDespatched = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
blrdlnLineItemQuantityUOM = DATA LOCAL NESTED STRING[3](INTEGER);
blrdlnExpiryDate = DATA LOCAL NESTED DATE(INTEGER);
blrdlnValueVAT = DATA LOCAL NESTED STRING[7](INTEGER);
blrdlnAdditionalInformation = DATA LOCAL NESTED STRING[512](INTEGER);
blrdlnLineItemProductDate = DATA LOCAL NESTED DATE(INTEGER);
blrdlnLineItemPrice = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
blrdlnLineItemPriceSPT = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
blrdlnLineItemManufacturerPrice = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
blrdlnLineItemAmountWithoutCharges = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
blrdlnLineItemAmount = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
blrdlnLineItemAmountCharges = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
blrdlnLineItemAmountExcise = DATA LOCAL NESTED NUMERIC[12,5](INTEGER);
blrdlnLineItemLineItemIdentification = DATA LOCAL NESTED INTEGER(INTEGER);
GROUP blrdlnLineItemIdentification EXTID 'LineItemIdentification';
blrdlnGroupPackingCodeMark = DATA LOCAL NESTED STRING[130](INTEGER);
blrdlnUpperLevelCodeMark = DATA LOCAL NESTED STRING[130](INTEGER);
blrdlnFieldCodeMark = DATA LOCAL NESTED STRING[130000](INTEGER);
blrdlnLineItemLineItemExtraField = DATA LOCAL NESTED INTEGER(INTEGER);
blrdlnLineItemFieldName = DATA LOCAL NESTED STRING[255](INTEGER);
blrdlnLineItemFieldCode = DATA LOCAL NESTED STRING[6](INTEGER);
blrdlnLineItemFieldValue = DATA LOCAL NESTED STRING[2560](INTEGER);

FORM blrdln
    PROPERTIES IN messageHeader blrdlnTestIndicator() EXTID 'TestIndicator',
        blrdlnUserID() EXTID 'UserID'
    PROPERTIES IN deliveryNote blrdlnDocumentNumber() EXTID 'DocumentID',
        blrdlnDeliveryNoteNumber() EXTID 'DeliveryNoteID',
        blrdlnDeliveryNoteDate() EXTID 'DeliveryNoteDate',
        blrdlnDateTime() EXTID 'CreationDateTime',
        blrdlnFunctionCode() EXTID 'FunctionCode',
        blrdlnContractName() EXTID 'ContractName',
        blrdlnContractID() EXTID 'ContractID',
        blrdlnContractDate() EXTID 'ContractDate',
        blrdlnOrderID() EXTID 'OrderID',
        cancelDeliveryNoteId() EXTID 'CancelDeliveryNoteID',
        blrdlnCurrency() EXTID 'Currency'
    PROPERTIES IN blrdlnShipper blrdlnSupplierGLN() EXTID 'GLN',
        blrdlnSupplierName() EXTID 'Name',
        blrdlnSupplierAddress() EXTID 'Address',
        blrdlnSupplierVATRegistrationNumber() EXTID 'VATRegistrationNumber',
        blrdlnContactSupplier() EXTID 'Contact'
    PROPERTIES IN blrdlnReceiver blrdlnCustomerGLN() EXTID 'GLN',
        blrdlnCustomerName() EXTID 'Name'
    PROPERTIES IN blrdlnShipFrom blrdlnSupplierStockGLN() EXTID 'GLN',
        blrdlnSupplierStockAddress() EXTID 'Address',
        blrdlnContactSupplierStock() EXTID 'Contact'
    PROPERTIES IN blrdlnShipTo blrdlnCustomerStockGLN() EXTID 'GLN',
        blrdlnCustomerStockAddress() EXTID 'Address'
    PROPERTIES IN blrdlnCarrier blrdlnDeliveryContact() EXTID 'DeliveryContact',
        blrdlnProxyID() EXTID 'ProxyID',
        blrdlnProxyDate() EXTID 'ProxyDate',
        blrdlnPartyIssuingProxyName() EXTID 'PartyIssuingProxyName'

    OBJECTS e = INTEGER EXTID 'ExtraField' IN deliveryNote
    PROPERTIES(e) blrdlnFieldName EXTID 'FieldName',
        blrdlnFieldCode EXTID 'FieldCode',
        blrdlnFieldValue EXTID 'FieldValue'

    OBJECTS i = INTEGER EXTID 'LineItem' IN blrdlnDespatchAdviceLogisticUnitLineItemDeliveryNote
    PROPERTIES(i) blrdlnLineItemNumber EXTID 'LineItemNumber',
        blrdlnLineItemSign EXTID 'LineItemSign',
        blrdlnLineItemID EXTID 'LineItemID',
        blrdlnItemCustomCode EXTID 'ItemCustomCode',
        blrdlnDeliveryTypePrev EXTID 'DeliveryTypePrev',
        blrdlnDeliveryNotePrev EXTID 'DeliveryNotePrev',
        blrdlnDeliveryNoteDatePrev EXTID 'DeliveryNoteDatePrev',
        blrdlnDeliveryNotePrevLineID EXTID 'DeliveryNotePrevLineID',
        blrdlnLineItemBuyerID EXTID 'LineItemBuyerID',
        blrdlnLineItemSupplierID EXTID 'LineItemSupplierID',
        blrdlnLineItemName EXTID 'LineItemName',
        blrdlnQuantityDespatched EXTID 'QuantityDespatched',
        blrdlnLineItemQuantityUOM EXTID 'LineItemQuantityUOM',
        blrdlnExpiryDate EXTID 'BestBeforeDate',
        blrdlnValueVAT EXTID 'TaxRate',
        blrdlnAdditionalInformation EXTID 'AdditionalInformation',
        blrdlnLineItemProductDate EXTID 'LineItemProductDate',
        blrdlnLineItemPrice EXTID 'LineItemPrice',
        blrdlnLineItemPriceSPT EXTID 'LineItemPriceSPT',
        blrdlnLineItemManufacturerPrice EXTID 'LineItemManufacturerPrice',
        blrdlnLineItemAmountWithoutCharges EXTID 'LineItemAmountWithoutCharges',
        blrdlnLineItemAmount EXTID 'LineItemAmount',
        blrdlnLineItemAmountCharges EXTID 'LineItemAmountCharges',
        blrdlnLineItemAmountExcise EXTID 'LineItemAmountExcise'
    PROPERTIES(i) IN fieldCostControl
        lineItemManufacturerOutputPrice EXTID 'LineItemManufacturerOutputPrice',
        typeDiscount EXTID 'TypeDiscount',
        bulkDiscountRate EXTID 'BulkDiscountRate',
        outputPriceIncludingShippingCoast EXTID 'OutputPriceIncludingShippingCoast',
        outputPriceShippingCoast EXTID 'OutputPriceShippingCoast',
        outputPricePackingCoast EXTID 'OutputPricePackingCoast',
        bulkMarginRate EXTID 'BulkMarginRate',
        cutRate EXTID 'CutRate',
        additionalInformationPrice EXTID 'AdditionalInformationPrice',
        additionalInformationNote EXTID 'AdditionalInformation'
    OBJECTS d = INTEGER EXTID 'GroupPackingHeader' IN blrdlnLineItemIdentification
    PROPERTIES(d) blrdlnGroupPackingCodeMark EXTID 'GroupPackingCodeMark',
        blrdlnUpperLevelCodeMark EXTID 'UpperLevelCodeMark'
    PROPERTIES(i) IN blrdlnLineItemIdentification blrdlnFieldCodeMark EXTID 'FieldCodeMark'
    FILTERS blrdlnLineItemLineItemIdentification(d) == i
    OBJECTS f = INTEGER EXTID 'LineItemExtraField'
    PROPERTIES(f) blrdlnLineItemFieldName EXTID 'FieldName',
        blrdlnLineItemFieldCode EXTID 'FieldCode',
        blrdlnLineItemFieldValue EXTID 'FieldValue'
    FILTERS blrdlnLineItemLineItemExtraField(f) == i
;


exportBlrwbrDateTime = DATA LOCAL NESTED DATETIME();

GROUP report EXTID 'Report';

hideMessageHeaderBlrwbr = DATA LOCAL BOOLEAN ();

FORM exportBlrwbr FORMEXTID 'BLRWBR'
    PROPERTIES ATTR ='0.1' IF NOT hideMessageHeaderBlrwbr() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrwbr()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih 
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrwbrDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRWBR' EXTID 'MessageType',
        glnCustomer(eih) EXTID 'MsgSenderID',
        glnSupplier(eih) EXTID 'MsgReceiverID',
        userIDSupplierStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein 
        deliveryNoteType = '700' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrwbrDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = IF eCreditNote(ei) THEN '21' ELSE '11' EXTID 'FunctionCode',
        referenceDocument = numberSupplier(ein) EXTID 'ID' IN referenceDocument,
        date = toChar(dateSupplier(ein),'YYYYMMDDHH24MISS') EXTID 'Date' IN referenceDocument,
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDate = toChar(deliveryNoteDate(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate'
    PROPERTIES DRAW ein IN report 
        reportId(ein) EXTID 'ReportID',
        reportDate = toChar(reportDate(ein),'YYYYMMDD') EXTID 'ReportDate',
        reportName(ein) EXTID 'ReportName'
    PROPERTIES DRAW ein IN shipper 
        glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN receiver 
        glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipTo 
        glnCustomerStock(ein) EXTID 'GLN',
        addressCustomerStock(ein) EXTID 'Address',
        contactCustomerStock(ein) EXTID 'Contact'
    PROPERTIES DRAW ein 
        sealIDReceiver(ein) EXTID 'SealIDReceiver'
;

FORM exportBlrwbrNew FORMEXTID 'BLRWBR'
    PROPERTIES ATTR ='2.0' IF hideMessageHeaderBlrwbr() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrwbr()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrwbrDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRWBR' EXTID 'MessageType',
        glnCustomer(eih) EXTID 'MsgSenderID',
        glnSupplier(eih) EXTID 'MsgReceiverID',
        userIDSupplierStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein
        deliveryNoteType = '700' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrwbrDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = IF eCreditNote(ei) THEN '21' ELSE '11' EXTID 'FunctionCode',
        referenceDocument = numberSupplier(ein) EXTID 'ID' IN referenceDocument,
        date = toChar(dateSupplier(ein),'YYYYMMDDHH24MISS') EXTID 'Date' IN referenceDocument,
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDate = toChar(deliveryNoteDate(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate'
    PROPERTIES DRAW ein IN report
        reportId(ein) EXTID 'ReportID',
        reportDate = toChar(reportDate(ein),'YYYYMMDD') EXTID 'ReportDate',
        reportName(ein) EXTID 'ReportName'
    PROPERTIES DRAW ein IN shipper
        glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN receiver
        glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipTo
        glnCustomerStock(ein) EXTID 'GLN',
        addressCustomerStock(ein) EXTID 'Address',
        contactCustomerStock(ein) EXTID 'Contact'
    PROPERTIES DRAW ein
        sealIDReceiver(ein) EXTID 'SealIDReceiver'
;

exportBlrdnrDateTime = DATA LOCAL NESTED DATETIME();

hideMessageHeaderBlrdnr = DATA LOCAL BOOLEAN ();

FORM exportBlrdnr FORMEXTID 'BLRDNR'
    PROPERTIES ATTR ='0.1' IF NOT hideMessageHeaderBlrdnr() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrdnr()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih 
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrdnrDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRDNR' EXTID 'MessageType',
        glnCustomer(eih) EXTID 'MsgSenderID',
        glnSupplier(eih) EXTID 'MsgReceiverID',
        userIDSupplierStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein 
        deliveryNoteType = '270' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrdnrDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = IF eCreditNote(ei) THEN '21' ELSE '11' EXTID 'FunctionCode',
        referenceDocument = numberSupplier(ein) EXTID 'ID' IN referenceDocument,
        date = toChar(dateSupplier(ein),'YYYYMMDDHH24MISS') EXTID 'Date' IN referenceDocument,
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDate = toChar(deliveryNoteDate(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate'
    PROPERTIES DRAW ein IN report
        reportId(ein) EXTID 'ReportID',
        reportDate = toChar(reportDate(ein),'YYYYMMDD') EXTID 'ReportDate',
        reportName(ein) EXTID 'ReportName'
    PROPERTIES DRAW ein IN shipper 
        glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN receiver 
        glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipTo 
        contactCustomerStock(ein) EXTID 'Contact'
;

FORM exportBlrdnrNew FORMEXTID 'BLRDNR'
    PROPERTIES ATTR ='2.0' IF hideMessageHeaderBlrdnr() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrdnr()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrdnrDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRDNR' EXTID 'MessageType',
        glnCustomer(eih) EXTID 'MsgSenderID',
        glnSupplier(eih) EXTID 'MsgReceiverID',
        userIDSupplierStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein
        deliveryNoteType = '270' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrdnrDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = IF eCreditNote(ei) THEN '21' ELSE '11' EXTID 'FunctionCode',
        referenceDocument = numberSupplier(ein) EXTID 'ID' IN referenceDocument,
        date = toChar(dateSupplier(ein),'YYYYMMDDHH24MISS') EXTID 'Date' IN referenceDocument,
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDate = toChar(deliveryNoteDate(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate'
    PROPERTIES DRAW ein IN report
        reportId(ein) EXTID 'ReportID',
        reportDate = toChar(reportDate(ein),'YYYYMMDD') EXTID 'ReportDate',
        reportName(ein) EXTID 'ReportName'
    PROPERTIES DRAW ein IN shipper
        glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN receiver
        glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipTo
        contactCustomerStock(ein) EXTID 'Contact'
;


//акты
exportedCustomer 'Экспортирован (покупатель)' = DATA BOOLEAN (ECreditNote);
importedCustomer 'Импортирован (покупатель)' = DATA BOOLEAN (ECreditNote);

signAndSendCustomer 'Подписать и отправить (покупатель)'  ABSTRACT LIST (ECreditNote);
signAndSendCustomerCreditNoteEDI 'Подписать и отправить (покупатель)'()  {
    IF askPasswordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(ECreditNote c) DO {
        IF EDIProviderInvoice(supplier(c), customer(c)) THEN
            signAndSendCustomer(c);
        ELSE
            MESSAGE 'Не выбран EDI провайдер для акта приемки : ' + documentId(c);
        in(c) <- NULL;
    }
        ELSE
    MESSAGE 'Не выбрано ни одного акта приемки';
}

EXTEND FORM eCreditNotes
    PROPERTIES(c) BEFORE isCancel(c) READONLYIF isReadonly() exportedCustomer, importedCustomer
    EXTEND FILTERGROUP notExported
        FILTER 'Не импортированы (покупатель)' NOT importedCustomer(c) 'F9'
        FILTER 'Не экспортированы (покупатель)' NOT exportedCustomer(c) 'F10'
    PROPERTIES() DRAW c TOOLBAR signAndSendCustomerCreditNoteEDI
;

GROUP actDifLineItem EXTID 'ActDifLineItem';
exportBlradfDateTime = DATA LOCAL NESTED DATETIME();

FORM exportBlradf FORMEXTID 'BLRADF'
    OBJECTS ec = ECreditNote PANEL

    OBJECTS ech = ECreditNote EXTID 'MessageHeader'
    FILTERS ech == ec
    PROPERTIES DRAW ech 
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlradfDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRADF' EXTID 'MessageType',
        blradfMsgSenderID() EXTID 'MsgSenderID',
        blradfMsgReceiverID() EXTID 'MsgReceiverID',
        testIndicator = IF isTestDocument(ech) THEN '1' EXTID 'TestIndicator'

    OBJECTS ecn = ECreditNote EXTID 'Actdif'
    FILTERS ecn == ec
    PROPERTIES DRAW ecn 
        ID = STRING[14](resultMilliseconds()) EXTID 'ID',
        creationDateTime = toChar(exportBlradfDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = (IF isCancel(ecn) THEN '1' ELSE '9') EXTID 'FunctionCode',
        actDifNumber(ecn) EXTID 'ActDifNumber',
        actDifDate = toChar(actDifDate(ecn),'YYYYMMDD') EXTID 'ActDifDate',
        contractNumber(ecn) EXTID 'ContractNumber',
        contractDate = toChar(contractDate(ecn),'YYYYMMDD') EXTID 'ContractDate'
    PROPERTIES DRAW ecn IN referenceDocument
        typeEInvoice(ecn) EXTID 'Type',
        numberEInvoice(ecn) EXTID 'ID',
        deliveryNoteDate = toChar(dateEInvoice(ecn),'YYYYMMDD') EXTID 'Date'
    PROPERTIES DRAW ecn IN shipper 
        unpSupplier(ecn) EXTID 'VATRegistrationNumber',
        nameSupplier(ecn) EXTID 'Name',
        addressSupplier(ecn) EXTID 'Address',
        glnSupplier(ecn) EXTID 'GLN'
    PROPERTIES DRAW ecn IN receiver
        unpCustomer(ecn) EXTID 'VATRegistrationNumber',
        nameCustomer(ecn) EXTID 'Name',
        addressCustomer(ecn) EXTID 'Address',
        glnCustomer(ecn) EXTID 'GLN'
    PROPERTIES DRAW ecn IN shipTo
        glnCustomerStock(ecn) EXTID 'GLN',
        addressCustomerStock(ecn) EXTID 'Address'
    PROPERTIES DRAW ecn
        currency(ecn) EXTID 'Currency'

    OBJECTS f = ECreditNoteExtraField EXTID 'ExtraField'
    FILTERS eCreditNote(f) == ecn
    PROPERTIES DRAW f
        name(f) EXTID 'FieldName',
        code(f) EXTID 'FieldCode',
        value(f) EXTID 'FieldValue'

    PROPERTIES DRAW ecn
        correctField(ecn) EXTID 'CorrectField',
        cancelDeliveryNoteId(ecn) EXTID 'CancelDeliveryNoteId'

    OBJECTS d = ECreditNoteDetail EXTID 'LineItem' //IN actDifLineItem
    FILTERS eCreditNote(d) == ecn
    PROPERTIES DRAW d 
        lineItemNumber(d) EXTID 'LineItemNumber',
        lineItemID(d) EXTID 'LineItemID',
        lineItemShipperID(d) EXTID 'LineItemShipperID',
        lineItemReceiverID(d) EXTID 'LineItemReceiverID',
        lineItemName(d) EXTID 'LineItemName',
        itemCustomCode(d) EXTID 'ItemCustomCode',
        itemCustomCodeOther(d) EXTID 'ItemCustomCodeOther',
        quantityDespatched(d) EXTID 'QuantityDespatched',
        additionalInformation(d) EXTID 'AdditionalInformation',
        lineItemQuantityUOM = mapToNewUOM(lineItemQuantityUOM(d))  EXTID 'LineItemQuantityUOM',
        priceDespatched(d) EXTID 'LineItemPriceWithoutCharges',
        sumDespatched(d) EXTID 'LineItemAmountWithoutCharges',
        valueVAT(d) EXTID 'TaxRate',
        invoiceSumDespatched(d) EXTID 'LineItemAmountOrdered',
        quantityReceived(d) EXTID 'QuantityReceivedFact',
        priceReceived(d) EXTID 'LineItemFactPrice',
        sumReceived(d) EXTID 'LineItemAmountWithoutChargesReceivedFact',
        invoiceSumReceived(d) EXTID 'LineItemAmountReceivedFact',
        quantityAccepted(d) EXTID 'QuantityAccepted',
        priceAccepted(d) EXTID 'LineItemPriceAccepted',
        sumAccepted(d) EXTID 'LineItemAmountAcceptedWithoutCharges',
        invoiceSumAccepted(d) EXTID 'AmountAccepted',
        quantityNotAccepted(d) EXTID 'QuantityNotAccepted',
        priceNotAccepted(d) EXTID 'LineItemPriceDeliveredNotAccepted',
        sumNotAccepted(d) EXTID 'AmountReceivedDeliveredNotAcceptedWithoutCharges',
        invoiceSumNotAccepted(d) EXTID 'AmountNotAccepted'
    
    OBJECTS ecnt = ECreditNote EXTID 'Total'
    FILTERS ecnt == ec
    PROPERTIES DRAW ecn 
        totalLineItem(ecnt) EXTID 'TotalLineItem',
        totalQuantityDespatched(ecnt) EXTID 'TotalLineItemQuantity',
        totalSumDespached(ecnt) EXTID 'TotalAmountWithoutCharges',
        totalInvoiceSumDespatched(ecnt) EXTID 'TotalLineItemAmountOrdered',
        totalQuantityReceived(ecnt) EXTID 'TotalQuantityReceivedFact',
        totalSumReceived(ecnt) EXTID 'TotalAmountReceivedWithoutCharges',
        totalInvoiceSumReceived(ecnt) EXTID 'TotalAmountReceived'
;