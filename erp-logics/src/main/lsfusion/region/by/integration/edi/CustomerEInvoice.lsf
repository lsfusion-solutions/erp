MODULE CustomerEInvoice;

REQUIRE EInvoice, EDS, XMLUtils;

NAMESPACE EDI;

importedCustomer 'Импортирован (покупатель)' = DATA BOOLEAN (EInvoice);
imported2560Customer 'Получено подтверждение об отправке накладной (2560)' (EInvoice ei)= 
    TRUE IF GROUP SUM 1 IF eInvoice(EInvoiceMessage m) == ei AND isSupplier(m) AND code(m) == '2560';
exportedBlrapnCustomer 'Экспортировано извещение о прочтении (покупатель)' = DATA BOOLEAN (EInvoice);
//такое же извещение получает поставщик на свое подтвержлдение, по хорошему нужно смотреть на родительский APN чтобы понимать к какому относится, ссылка пока не обрабатывается
imported2551Customer 'Получено подтверждение о получении извещения (2551)' (EInvoice ei)=
    TRUE IF GROUP SUM 1 IF eInvoice(EInvoiceMessage m) == ei AND type(m) == EInvoiceMessageType.blrapn_blrapn AND code(m) == '2551';
exportedCustomer 'Экспортирован (покупатель)' = DATA BOOLEAN (EInvoice);
exportedNoticeCustomer 'Экспортировано уведомление об изменении (покупатель)' = DATA BOOLEAN (EInvoice);

overSupplier = ABSTRACT LegalEntity (EInvoice);
signSupplier (EInvoice i) = OVERRIDE supplier(i), overSupplier(i);

signAndSendBlrapnCustomer 'Подписать и отправить извещение о прочтении (покупатель)' ABSTRACT LIST (EInvoice);
signAndSendBlrapnCustomerEDI 'Подписать и отправить извещение о прочтении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i), customer(i)) THEN {
                IF imported2560Customer(i) THEN {
                    signAndSendBlrapnCustomer(i);
                } ELSE {
                    MESSAGE 'Не получено подтверждение об отправке накладной (2560): ' + deliveryNoteNumber(i);
                }
            } ELSE {
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
            }
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

skipCheck2551 = ABSTRACT VALUE BOOLEAN (EInvoice); //у кого уже сделано отправка извещения и подпаисание вместе не проверяем
dataSkipCheck2551 'Разрешить подписание накладных без получения подтверждения (2551)' = DATA BOOLEAN ();
skipCheck2551(EInvoice i) += dataSkipCheck2551() AND i IS EInvoice;
EXTEND FORM integrationData 
    PROPERTIES dataSkipCheck2551();
DESIGN integrationData { commonEdi {MOVE PROPERTY (dataSkipCheck2551());}}

signAndSendCustomer 'Подписать и отправить (покупатель)'  ABSTRACT LIST ( EInvoice);
signAndSendCustomerEDI 'Подписать и отправить (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i),customer(i)) THEN {
                IF exportedBlrapnCustomer(i) AND imported2551Customer(i) OR skipCheck2551(i) THEN {
                    signAndSendCustomer(i);
                } ELSE {
                    MESSAGE 'Не получено подтверждение о получении извещения (2551): ' + deliveryNoteNumber(i);
                }
            } ELSE {
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
            }
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

noticeMessage = DATA LOCAL TEXT ();
fillNoticeMessage ABSTRACT LIST (EInvoice);

FORM signAndSendNotice 'Уведомление об изменении'
    OBJECTS d = TEXT PANEL
    PROPERTIES description = VALUE(d)
;
DESIGN signAndSendNotice {
    OBJECTS {
        MOVE PROPERTY(description) {
            caption = 'Текст';
            valueSize = (400, 128);
            panelCaptionVertical = TRUE;
        }
    }
}

signAndSendNoticeCustomer 'Подписать и отправить уведомление об изменении (покупатель)' ABSTRACT LIST (EInvoice, STRING[1000]);
afterSuccessfullySignAndSendNoticeCustomer ABSTRACT LIST (EInvoice);
signAndSendNoticeCustomerEDI 'Подписать и отправить уведомление об изменении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i), customer(i)) THEN {
                noticeMessage() <- NULL;
                fillNoticeMessage(i);
                DIALOG signAndSendNotice OBJECTS d = noticeMessage() INPUT DO {
                    IF d!= '' THEN {
                        signAndSendNoticeCustomer(i,STRING[1000](replace(replace(d, '\n', ' '), '\r', ' ')));
                    } 
                    ELSE MESSAGE 'Не задан текст сообщения. Уведомление не отправлено!';
                }
            }
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}
signAndSendNoticeCustomerEDIWithoutDialog 'Подписать и отправить уведомление об изменении (покупатель)'() {
    IF askPasswordEDSService() AND NOT passwordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO {
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(signSupplier(i), customer(i)) THEN {
                noticeMessage() <- NULL;
                fillNoticeMessage(i);
                IF noticeMessage() THEN {
                    signAndSendNoticeCustomer(i,STRING[1000](replace(replace(noticeMessage(), '\n', ' '), '\r', ' ')));
                } 
                ELSE MESSAGE 'Не задан текст сообщения. Уведомление не отправлено!';
            }
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
}

EXTEND FORM eInvoices
    PROPERTIES(e) BEFORE isCancel(e) READONLYIF isReadonly() importedCustomer, exportedBlrapnCustomer, exportedCustomer, exportedNoticeCustomer
    EXTEND FILTERGROUP notExported
        FILTER 'Не импортированы (покупатель)' NOT importedCustomer(e) 'F9'
        FILTER 'Не экспортированы (покупатель)' NOT exportedCustomer(e) AND NOT exportedNoticeCustomer(e) 'F10'
    PROPERTIES() DRAW e TOOLBAR signAndSendBlrapnCustomerEDI, signAndSendCustomerEDI, signAndSendNoticeCustomerEDI
;

DESIGN eInvoices{
    actionContainer {
        caption = 'Действия';
        horizontal = TRUE;
        NEW customer {
            caption = 'Покупатель';
            MOVE PROPERTY (signAndSendBlrapnCustomerEDI()) { alignment = STRETCH; };
            MOVE PROPERTY (signAndSendCustomerEDI()) { alignment = STRETCH; }; 
            MOVE PROPERTY (signAndSendNoticeCustomerEDI()) { alignment = STRETCH; };
        }
    }
}

afterImportEInvoice ABSTRACT LIST (EInvoice);

validate(STRING type, BOOLEAN interactive, FILE doc) {
    readResource('region/by/integration/edi/xsd/'+type+'.xsd');
    validateXML(resourceFile(),doc);
    IF interactive THEN MESSAGE validateError() NOWAIT;
}
validate(STRING type, FILE doc) {
    validate(type, NULL, doc);
}

//--------------------------------формы----------------------------------

eTestIndicator = DATA LOCAL STRING[1]();
eUserID = DATA LOCAL NESTED STRING[35]();
eDocumentID = DATA LOCAL NESTED STRING[35]();
eDeliveryNoteNumber = DATA LOCAL NESTED STRING[43]();
eDateTime = DATA LOCAL NESTED DATETIME();
eDeliveryNoteDate = DATA LOCAL NESTED DATE();
eFunctionCode = DATA LOCAL NESTED STRING[3]();
eContractName = DATA LOCAL NESTED STRING[70]();
eContractID = DATA LOCAL NESTED STRING[70]();
eContractDate = DATA LOCAL NESTED DATE();
eWaybillID = DATA LOCAL NESTED STRING[70]();
GROUP eShipper EXTID 'Shipper' : deliveryNote;
eSupplierGLN = DATA LOCAL NESTED STRING[13]();
eSupplierName = DATA LOCAL NESTED STRING[275]();
eSupplierAddress = DATA LOCAL NESTED STRING[150]();
eSupplierVATRegistrationNumber = DATA LOCAL NESTED STRING[19]();
eContactSupplier = DATA LOCAL NESTED STRING[150]();
GROUP eReceiver EXTID 'Receiver' : deliveryNote;
eCustomerGLN = DATA LOCAL NESTED STRING[13]();
eCustomerName = DATA LOCAL NESTED STRING[150]();
GROUP eFreightPayer EXTID 'FreightPayer' : deliveryNote;
eFreightPayerGLN = DATA LOCAL NESTED STRING[13]();
GROUP eShipFrom EXTID 'ShipFrom' : deliveryNote;
eSupplierStockGLN = DATA LOCAL NESTED STRING[13]();
eSupplierStockAddress = DATA LOCAL NESTED STRING[150]();
eContactSupplierStock = DATA LOCAL NESTED STRING[150]();
GROUP eShipTo EXTID 'ShipTo' : deliveryNote;
eCustomerStockGLN = DATA LOCAL NESTED STRING[13]();
eCustomerStockAddress = DATA LOCAL NESTED STRING[150]();
GROUP eCarrier EXTID 'Carrier' : deliveryNote;
eTransportContact = DATA LOCAL NESTED STRING[150]();
eDeliveryContact = DATA LOCAL NESTED STRING[150]();
eProxyID = DATA LOCAL NESTED STRING[70]();
eProxyDate = DATA LOCAL NESTED DATE();
ePartyIssuingProxyName = DATA LOCAL NESTED STRING[175]();
eQuantityTrip = DATA LOCAL NESTED STRING[70]();
eQuantityTripNew = DATA LOCAL NESTED STRING[70]();
eTransportOwnerName = DATA LOCAL NESTED STRING[175]();
eTransportOwnerNameNew = DATA LOCAL NESTED STRING[175]();
eTransportID = DATA LOCAL NESTED STRING[35]();
eTransportIDNew = DATA LOCAL NESTED STRING[35]();
eTrailerID = DATA LOCAL NESTED STRING[35]();
eTrailerIDNew = DATA LOCAL NESTED STRING[35]();
eSealIDReceiver = DATA LOCAL NESTED STRING[35]();
eOrderID = DATA LOCAL NESTED STRING[35]();
eCancelDeliveryNoteId = DATA LOCAL NESTED STRING[43]();
eCurrency = DATA LOCAL NESTED STRING[3]();
eFieldName = DATA LOCAL NESTED STRING[255](INTEGER);
eFieldCode = DATA LOCAL NESTED STRING[6](INTEGER);
eFieldValue = DATA LOCAL NESTED STRING[2560](INTEGER);

GROUP eDespatchAdviceLogisticUnitLineItemDeliveryNote EXTID 'DespatchAdviceLogisticUnitLineItem' :deliveryNote;
eLineItemNumber = DATA LOCAL NESTED INTEGER(INTEGER);
eLineItemSign = DATA LOCAL NESTED STRING[4](INTEGER);
eLineItemID = DATA LOCAL NESTED STRING[14](INTEGER);
eLineItemBuyerID = DATA LOCAL NESTED STRING[35](INTEGER);
eItemCustomCode = DATA LOCAL NESTED STRING[10](INTEGER);
eDeliveryTypePrev = DATA LOCAL NESTED INTEGER(INTEGER);
eDeliveryNotePrev = DATA LOCAL NESTED STRING[70](INTEGER);
eDeliveryNoteDatePrev = DATA LOCAL NESTED DATETIME(INTEGER);
eDeliveryNotePrevLineID = DATA LOCAL NESTED STRING[6](INTEGER);
eLineItemSupplierID = DATA LOCAL NESTED STRING[35](INTEGER);
eLineItemName = DATA LOCAL NESTED STRING[500](INTEGER);
eGrossWeightValue = DATA LOCAL NESTED NUMERIC[12,6](INTEGER);
eQuantityDespatched = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
eLineItemQuantityUOM = DATA LOCAL NESTED STRING[3](INTEGER);
eDespatchUnitQuantityDespatched = DATA LOCAL NESTED NUMERIC[12,5](INTEGER);
eExpiryDate = DATA LOCAL NESTED DATE(INTEGER);
eValueVAT = DATA LOCAL NESTED STRING[7](INTEGER);
eAdditionalInformation = DATA LOCAL NESTED STRING[512](INTEGER);
eLineItemProductDate = DATA LOCAL NESTED DATE(INTEGER);
eLineItemPrice = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
eLineItemPriceSPT = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
eLineItemManufacturerPrice = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);
eLineItemAmountWithoutCharges = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
eLineItemAmount = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
eLineItemAmountCharges = DATA LOCAL NESTED NUMERIC[18,2](INTEGER);
eLineItemAmountExcise = DATA LOCAL NESTED NUMERIC[12,2](INTEGER);

lineItemManufacturerOutputPrice = DATA LOCAL NUMERIC[18,2](INTEGER);
typeDiscount = DATA LOCAL STRING[512](INTEGER);
bulkDiscountRate = DATA LOCAL STRING[512](INTEGER);
outputPriceIncludingShippingCoast = DATA LOCAL STRING[80](INTEGER);
outputPriceShippingCoast = DATA LOCAL NUMERIC[18,2](INTEGER);
outputPricePackingCoast = DATA LOCAL NUMERIC[18,2](INTEGER);
bulkMarginRate = DATA LOCAL STRING[70](INTEGER);
cutRate = DATA LOCAL STRING[512](INTEGER);
additionalInformationPrice = DATA LOCAL STRING[512](INTEGER);
additionalInformationNote = DATA LOCAL STRING[512](INTEGER);

lineItemLineItemIdentification = DATA LOCAL INTEGER(INTEGER);
groupPackingCodeMark = DATA LOCAL STRING(INTEGER);
groupPackingHeaderGroupPackingCodeMark = DATA LOCAL INTEGER(INTEGER);
upperLevelCodeMark = DATA LOCAL STRING(INTEGER);
fieldCodeMark = DATA LOCAL STRING(INTEGER);
fieldCodeMarkHeaderFieldCodeMark = DATA LOCAL INTEGER(INTEGER);

eLineItemLineItemExtraField = DATA LOCAL NESTED INTEGER(INTEGER);
eLineItemFieldName = DATA LOCAL NESTED STRING[255](INTEGER);
eLineItemFieldCode = DATA LOCAL NESTED STRING[6](INTEGER);
eLineItemFieldValue = DATA LOCAL NESTED STRING[2560](INTEGER);

eItemCustomCodeOther = DATA LOCAL NESTED STRING[4](INTEGER);
eLineItemQuantitySPT = DATA LOCAL NESTED STRING[3](INTEGER);
eQuantityDespatchedSPT = DATA LOCAL NESTED NUMERIC[12,5] (INTEGER);

FORM importEInvoice
    PROPERTIES IN messageHeader
    eTestIndicator() EXTID 'TestIndicator',
        eUserID() EXTID 'UserID'
    PROPERTIES IN deliveryNote
    eDocumentID() EXTID 'DocumentID',
        eDeliveryNoteNumber() EXTID 'DeliveryNoteID',
        eDeliveryNoteDate() EXTID 'DeliveryNoteDate',
        eDateTime() EXTID 'CreationDateTime',
        eFunctionCode() EXTID 'FunctionCode',
        eContractName() EXTID 'ContractName',
        eContractID() EXTID 'ContractID',
        eContractDate() EXTID 'ContractDate',
        eWaybillID() EXTID 'WaybillID',
        eQuantityTrip() EXTID 'QuantityTrip',
        eTransportOwnerName() EXTID 'TransportOwnerName',
        eTransportID() EXTID 'TransportID',
        eTrailerID() EXTID 'TrailerID',
        eSealIDReceiver() EXTID 'SealID',
        eOrderID() EXTID 'OrderID',
        eCancelDeliveryNoteId() EXTID 'CancelDeliveryNoteID',
        eCurrency() EXTID 'Currency'

    PROPERTIES IN eShipper
    eSupplierGLN() EXTID 'GLN',
        eSupplierName() EXTID 'Name',
        eSupplierAddress() EXTID 'Address',
        eSupplierVATRegistrationNumber() EXTID 'VATRegistrationNumber',
        eContactSupplier() EXTID 'Contact'
    PROPERTIES IN eReceiver
    eCustomerGLN() EXTID 'GLN',
        eCustomerName() EXTID 'Name'

    PROPERTIES IN eFreightPayer
    eFreightPayerGLN() EXTID 'GLN'
    
    PROPERTIES IN eShipFrom
    eSupplierStockGLN() EXTID 'GLN',
        eSupplierStockAddress() EXTID 'Address',
        eContactSupplierStock() EXTID 'Contact'
    PROPERTIES IN eShipTo
    eCustomerStockGLN() EXTID 'GLN',
        eCustomerStockAddress() EXTID 'Address'
    PROPERTIES IN eCarrier
    eTransportContact() EXTID 'TransportContact',
        eDeliveryContact() EXTID 'DeliveryContact',
        eProxyID() EXTID 'ProxyID',
        eProxyDate() EXTID 'ProxyDate',
        ePartyIssuingProxyName() EXTID 'PartyIssuingProxyName',
        eQuantityTripNew() EXTID 'QuantityTrip',
        eTransportOwnerNameNew() EXTID 'TransportOwnerName',
        eTransportIDNew() EXTID 'TransportID',
        eTrailerIDNew() EXTID 'TrailerID'
    OBJECTS e = INTEGER EXTID 'ExtraField' IN deliveryNote
    PROPERTIES(e) eFieldName EXTID 'FieldName',
        eFieldCode EXTID 'FieldCode',
        eFieldValue EXTID 'FieldValue'

    OBJECTS i = INTEGER EXTID 'LineItem' IN eDespatchAdviceLogisticUnitLineItemDeliveryNote
    PROPERTIES(i) eLineItemNumber EXTID 'LineItemNumber',
        eLineItemSign EXTID 'LineItemSign',
        eLineItemID EXTID 'LineItemID',
        eLineItemBuyerID EXTID 'LineItemBuyerID',
        eItemCustomCode EXTID 'ItemCustomCode',
        eItemCustomCodeOther EXTID 'ItemCustomCodeOther',
        eDeliveryTypePrev EXTID 'DeliveryTypePrev',
        eDeliveryNotePrev EXTID 'DeliveryNotePrev',
        eDeliveryNoteDatePrev EXTID 'DeliveryNoteDatePrev',
        eDeliveryNotePrevLineID EXTID 'DeliveryNotePrevLineID',
        eLineItemSupplierID EXTID 'LineItemSupplierID',
        eLineItemName EXTID 'LineItemName',
        eGrossWeightValue EXTID 'GrossWeightValue',
        eQuantityDespatched EXTID 'QuantityDespatched',
        eLineItemQuantityUOM EXTID 'LineItemQuantityUOM',
        eDespatchUnitQuantityDespatched EXTID 'DespatchUnitQuantityDespatched',
        eExpiryDate EXTID 'BestBeforeDate',
        eQuantityDespatchedSPT EXTID 'QuantityDespatchedSPT',
        eLineItemQuantitySPT EXTID 'LineItemQuantitySPT',
        eValueVAT EXTID 'TaxRate',
        eAdditionalInformation EXTID 'AdditionalInformation',
        eLineItemProductDate EXTID 'LineItemProductDate',
        eLineItemPrice EXTID 'LineItemPrice',
        eLineItemPriceSPT EXTID 'LineItemPriceSPT',
        eLineItemManufacturerPrice EXTID 'LineItemManufacturerPrice',
        eLineItemAmountWithoutCharges EXTID 'LineItemAmountWithoutCharges',
        eLineItemAmount EXTID 'LineItemAmount',
        eLineItemAmountCharges EXTID 'LineItemAmountCharges',
        eLineItemAmountExcise EXTID 'LineItemAmountExcise'

    PROPERTIES(i) IN fieldCostControl
    lineItemManufacturerOutputPrice EXTID 'LineItemManufacturerOutputPrice',
        typeDiscount EXTID 'TypeDiscount',
        bulkDiscountRate EXTID 'BulkDiscountRate',
        outputPriceIncludingShippingCoast EXTID 'OutputPriceIncludingShippingCoast',
        outputPriceShippingCoast EXTID 'OutputPriceShippingCoast',
        outputPricePackingCoast EXTID 'OutputPricePackingCoast',
        bulkMarginRate EXTID 'BulkMarginRate',
        cutRate EXTID 'CutRate',
        additionalInformationPrice EXTID 'AdditionalInformationPrice',
        additionalInformationNote EXTID 'AdditionalInformation'
    
    OBJECTS lineItemIdentification = INTEGER EXTID 'LineItemIdentification'
    FILTERS lineItemLineItemIdentification(lineItemIdentification) == i
    PROPERTIES(lineItemIdentification) IN groupPackingHeader upperLevelCodeMark EXTID 'UpperLevelCodeMark'

    OBJECTS groupPackingCodeMark = INTEGER EXTID 'GroupPackingCodeMark' IN groupPackingHeader
    PROPERTIES(groupPackingCodeMark) groupPackingCodeMark EXTID 'value'
    FILTERS groupPackingHeaderGroupPackingCodeMark(groupPackingCodeMark) == lineItemIdentification

    OBJECTS fieldCodeMark = INTEGER EXTID 'FieldCodeMark' IN fieldCodeMarkHeader
    PROPERTIES(fieldCodeMark) fieldCodeMark EXTID 'value'
    FILTERS fieldCodeMarkHeaderFieldCodeMark(fieldCodeMark) == lineItemIdentification

    OBJECTS f = INTEGER EXTID 'LineItemExtraField'
    PROPERTIES(f) eLineItemFieldName EXTID 'FieldName',
        eLineItemFieldCode EXTID 'FieldCode',
        eLineItemFieldValue EXTID 'FieldValue'
    FILTERS eLineItemLineItemExtraField(f) == i
;

exportBlrwbrDateTime = DATA LOCAL NESTED DATETIME();

GROUP report EXTID 'Report';

hideMessageHeaderBlrwbr = DATA LOCAL BOOLEAN ();

FORM exportBlrwbrNew FORMEXTID 'BLRWBR'
    PROPERTIES ATTR ='2.0' IF hideMessageHeaderBlrwbr() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrwbr()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrwbrDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRWBR' EXTID 'MessageType',
        glnCustomer(eih) EXTID 'MsgSenderID',
        glnSupplier(eih) EXTID 'MsgReceiverID',
        userIDSupplierStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator',
        formType = formType(eih) EXTID 'FormType'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein
        deliveryNoteType = '700' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrwbrDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = IF eCreditNote(ei) THEN '21' ELSE '11' EXTID 'FunctionCode',
        referenceDocument = numberSupplier(ein) EXTID 'ID' IN referenceDocument,
        date = toChar(dateSupplier(ein),'YYYYMMDDHH24MISS') EXTID 'Date' IN referenceDocument,
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDate = toChar(deliveryNoteDate(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate'
    PROPERTIES DRAW ein IN report
        reportId(ein) EXTID 'ReportID',
        reportDate = toChar(reportDate(ein),'YYYYMMDD') EXTID 'ReportDate',
        reportName(ein) EXTID 'ReportName'
    PROPERTIES DRAW ein IN shipper
        glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN receiver
        glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipTo
        glnCustomerStock(ein) EXTID 'GLN',
        addressCustomerStock(ein) EXTID 'Address',
        contactCustomerStock(ein) EXTID 'Contact'
    PROPERTIES DRAW ein
        sealIDReceiver(ein) EXTID 'SealIDReceiver'
;

exportBlrdnrDateTime = DATA LOCAL NESTED DATETIME();

hideMessageHeaderBlrdnr = DATA LOCAL BOOLEAN ();

FORM exportBlrdnrNew FORMEXTID 'BLRDNR'
    PROPERTIES ATTR ='2.0' IF hideMessageHeaderBlrdnr() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrdnr()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrdnrDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRDNR' EXTID 'MessageType',
        glnCustomer(eih) EXTID 'MsgSenderID',
        glnSupplier(eih) EXTID 'MsgReceiverID',
        userIDSupplierStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator',
        formType = formType(eih) EXTID 'FormType'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein
        deliveryNoteType = '270' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrdnrDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = IF eCreditNote(ei) THEN '21' ELSE '11' EXTID 'FunctionCode',
        referenceDocument = numberSupplier(ein) EXTID 'ID' IN referenceDocument,
        date = toChar(dateSupplier(ein),'YYYYMMDDHH24MISS') EXTID 'Date' IN referenceDocument,
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDate = toChar(deliveryNoteDate(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate'
    PROPERTIES DRAW ein IN report
        reportId(ein) EXTID 'ReportID',
        reportDate = toChar(reportDate(ein),'YYYYMMDD') EXTID 'ReportDate',
        reportName(ein) EXTID 'ReportName'
    PROPERTIES DRAW ein IN shipper
        glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN receiver
        glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipTo
        contactCustomerStock(ein) EXTID 'Contact'
;


//акты
exportedCustomer 'Экспортирован (покупатель)' = DATA BOOLEAN (ECreditNote);
importedCustomer 'Импортирован (покупатель)' = DATA BOOLEAN (ECreditNote);
exportedBlrapnCustomer 'Экспортировано извещение о получении (покупатель)' = DATA BOOLEAN (ECreditNote);
importedNoticeCustomer 'Импортировано уведомление об изменении (покупатель)' = DATA BOOLEAN (ECreditNote);
exportedNoticeCustomer 'Экспортировано извещение о прочтении (покупатель)' = DATA BOOLEAN (ECreditNote);
numberNoticeCustomer 'Номер уведомления об изменении' = DATA STRING[35](ECreditNote);
dateNoticeCustomer 'Дата уведомления об изменении' = DATA DATETIME (ECreditNote);


signAndSendCustomer 'Подписать и отправить (покупатель)'  ABSTRACT LIST (ECreditNote);
signAndSendCustomerCreditNote 'Подписать и отправить (покупатель)'()  {
    IF askPasswordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(ECreditNote c) DO {
        IF NOT exportedCustomer(eInvoice(c)) THEN {
            MESSAGE 'Акт приемки не может быть отправлен. Не подписан ЭТТН';
        } ELSE {
            IF EDIProviderInvoice(supplier(c), customer(c)) THEN
                signAndSendCustomer(c);
            ELSE
                MESSAGE 'Не выбран EDI провайдер для акта приемки : ' + documentId(c);
            in(c) <- NULL;
        } 
    } ELSE
    MESSAGE 'Не выбрано ни одного акта приемки';
}

signAndSendBlrapnCustomer 'Подписать и отправить извещение о прочтении (покупатель)'  ABSTRACT LIST (ECreditNote);
signAndSendBlrapnCustomerCreditNote 'Подписать и отправить извещение о прочтении (покупатель)'() {
    IF askPasswordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(ECreditNote i) DO {
        IF EDIProviderInvoice(customer(i), supplier(i)) THEN {
            IF importedCustomer(i) THEN {
                signAndSendBlrapnCustomer(i);
            } ELSE
                MESSAGE 'Не получен ответ от поставщика по акта приемки: ' + actDifNumber(i);
        } ELSE
            MESSAGE 'Не выбран EDI провайдер для акта приемки: ' + actDifNumber(i);

        in(i) <- NULL;
    } ELSE
        MESSAGE 'Не выбрано ни одного акта приемки';
}

EXTEND FORM eCreditNotes
    PROPERTIES(c) BEFORE isCancel(c) READONLYIF isReadonly() exportedCustomer, importedCustomer, exportedBlrapnCustomer, 
        importedNoticeCustomer, exportedNoticeCustomer
    EXTEND FILTERGROUP notExported
        FILTER 'Не импортированы (покупатель)' NOT importedCustomer(c) 'F9'
        FILTER 'Не экспортированы (покупатель)' NOT exportedCustomer(c) 'F10'
    PROPERTIES() DRAW c TOOLBAR signAndSendCustomerCreditNote, signAndSendBlrapnCustomerCreditNote
;

exportBlradfDateTime = DATA LOCAL NESTED DATETIME();

hideMessageHeaderBlradf = DATA LOCAL BOOLEAN ();

FORM exportBlradf FORMEXTID 'BLRADF'
    PROPERTIES ATTR ='2.0' IF hideMessageHeaderBlradf() EXTID 'version'
    OBJECTS ec = ECreditNote PANEL

    OBJECTS ech = ECreditNote EXTID 'MessageHeader'
    FILTERS (ech == ec AND NOT hideMessageHeaderBlradf())
    PROPERTIES DRAW ech 
        messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlradfDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRADF' EXTID 'MessageType',
        blradfMsgSenderID() EXTID 'MsgSenderID',
        blradfMsgReceiverID() EXTID 'MsgReceiverID',
        testIndicator = IF isTestDocument(ech) THEN '1' EXTID 'TestIndicator'

    OBJECTS ecn = ECreditNote EXTID 'Actdif'
    FILTERS ecn == ec
    PROPERTIES DRAW ecn 
        ID = STRING[14](resultMilliseconds()) EXTID 'ID',
        creationDateTime = toChar(exportBlradfDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = (IF isCancel(ecn) THEN '1' ELSE '9') EXTID 'FunctionCode',
        actDifNumber(ecn) EXTID 'ActDifNumber',
        actDifDate = toChar(actDifDate(ecn),'YYYYMMDD') EXTID 'ActDifDate',
        contractNumber(ecn) EXTID 'ContractNumber',
        contractDate = toChar(contractDate(ecn),'YYYYMMDD') EXTID 'ContractDate'
    PROPERTIES DRAW ecn IN referenceDocument
        typeEInvoice(ecn) EXTID 'Type',
        numberEInvoice(ecn) EXTID 'ID',
        deliveryNoteDate = toChar(dateEInvoice(ecn),'YYYYMMDD') EXTID 'Date'
    PROPERTIES DRAW ecn IN shipper 
        unpSupplier(ecn) EXTID 'VATRegistrationNumber',
        nameSupplier(ecn) EXTID 'Name',
        addressSupplier(ecn) EXTID 'Address',
        glnSupplier(ecn) EXTID 'GLN'
    PROPERTIES DRAW ecn IN receiver
        unpCustomer(ecn) EXTID 'VATRegistrationNumber',
        nameCustomer(ecn) EXTID 'Name',
        addressCustomer(ecn) EXTID 'Address',
        glnCustomer(ecn) EXTID 'GLN'
    PROPERTIES DRAW ecn IN shipTo
        glnCustomerStock(ecn) EXTID 'GLN',
        addressCustomerStock(ecn) EXTID 'Address'

    OBJECTS ecnsc = ECreditNoteSupplierContact EXTID 'ShipperContact'
    FILTERS eCreditNote(ecnsc) == ecn
    PROPERTIES DRAW ecnsc
        contact(ecnsc) EXTID 'Contact'

    OBJECTS ecncc = ECreditNoteCustomerContact  EXTID 'ReceiverContact'
    FILTERS eCreditNote(ecncc) == ecn
    PROPERTIES DRAW ecncc
        contact(ecncc) EXTID 'Contact'

    PROPERTIES DRAW ecn
        currency(ecn) EXTID 'Currency'

    OBJECTS f = ECreditNoteExtraField EXTID 'ExtraField'
    FILTERS eCreditNote(f) == ecn
    PROPERTIES DRAW f
        name(f) EXTID 'FieldName',
        code(f) EXTID 'FieldCode',
        value(f) EXTID 'FieldValue'

    PROPERTIES DRAW ecn
        correctField(ecn) EXTID 'CorrectField',
        cancelDeliveryNoteId(ecn) EXTID 'CancelDeliveryNoteID'

    OBJECTS d = ECreditNoteDetail EXTID 'LineItem' //IN actDifLineItem
    FILTERS eCreditNote(d) == ecn
    PROPERTIES DRAW d 
        lineItemNumber(d) EXTID 'LineItemNumber',
        lineItemID(d) EXTID 'LineItemID',
        lineItemShipperID(d) EXTID 'LineItemShipperID',
        lineItemReceiverID(d) EXTID 'LineItemReceiverID',
        lineItemName(d) EXTID 'LineItemName',
        itemCustomCode(d) EXTID 'ItemCustomCode',
        itemCustomCodeOther(d) EXTID 'ItemCustomCodeOther',
        quantityDespatched(d) EXTID 'QuantityDespatched',
        additionalInformation(d) EXTID 'AdditionalInformation',
        lineItemQuantityUOM = mapToNewUOM(lineItemQuantityUOM(d))  EXTID 'LineItemQuantityUOM',
        priceDespatched(d) EXTID 'LineItemPriceWithoutCharges',
        sumDespatched(d) EXTID 'LineItemAmountWithoutCharges',
        valueVAT(d) EXTID 'TaxRate',
        VATSumDespatched(d) EXTID 'LineItemAmountCharges',
        invoiceSumDespatched(d) EXTID 'LineItemAmountOrdered',
        quantityReceived(d) EXTID 'QuantityReceivedFact',
        priceReceived(d) EXTID 'LineItemFactPrice',
        sumReceived(d) EXTID 'LineItemAmountWithoutChargesReceivedFact',
        VATSumReceived(d) EXTID 'LineItemAmountChargesFact',
        invoiceSumReceived(d) EXTID 'LineItemAmountReceivedFact',
        quantityAccepted(d) EXTID 'QuantityAccepted',
        priceAccepted(d) EXTID 'LineItemPriceAccepted',
        sumAccepted(d) EXTID 'LineItemAmountAcceptedWithoutCharges',
        VATSumAccepted(d) EXTID 'LineItemAmountChargesAccepted',
        invoiceSumAccepted(d) EXTID 'AmountAccepted',
        quantityNotAccepted(d) EXTID 'QuantityNotAccepted',
        priceNotAccepted(d) EXTID 'LineItemPriceDeliveredNotAccepted',
        sumNotAccepted(d) EXTID 'AmountReceivedDeliveredNotAcceptedWithoutCharges',
        VATSumNotAccepted(d) EXTID 'LineItemAmountChargesNotAccepted',
        invoiceSumNotAccepted(d) EXTID 'AmountNotAccepted'
    
    OBJECTS ecnt = ECreditNote EXTID 'Total'
    FILTERS ecnt == ec
    PROPERTIES DRAW ecn 
        totalLineItem(ecnt) EXTID 'TotalLineItem',
        totalQuantityDespatched(ecnt) EXTID 'TotalLineItemQuantity',
        totalSumDespached(ecnt) EXTID 'TotalAmountWithoutCharges',
        totalInvoiceSumDespatched(ecnt) EXTID 'TotalLineItemAmountOrdered',
        totalQuantityReceived(ecnt) EXTID 'TotalQuantityReceivedFact',
        totalSumReceived(ecnt) EXTID 'TotalAmountReceivedWithoutCharges',
        totalVATSumReceived(ecnt) EXTID 'TotalLineItemAmountChargesReceived',
        totalInvoiceSumReceived(ecnt) EXTID 'TotalAmountReceived'
;

GROUP actDif EXTID 'Actdif';
blradfMsgDateTime = DATA LOCAL NESTED DATETIME();
blradfID = DATA LOCAL NESTED STRING[35]();
blradfFunctionCode = DATA LOCAL NESTED STRING[3]();
blradfActDifNumber = DATA LOCAL NESTED STRING[35]();
GROUP blradfReferenceDocument EXTID 'ReferenceDocument' : actDif;
blradfDeliveryNoteType = DATA LOCAL NESTED NUMERIC[3,0]();
blradfDeliveryNoteNumber = DATA LOCAL NESTED STRING[70]();
blradfDeliveryNoteDate = DATA LOCAL NESTED DATE();
GROUP blradfShipper EXTID 'Shipper' : actDif;
blradfSupplierGLN = DATA LOCAL NESTED STRING[13]();
GROUP blradfReceiver EXTID 'Receiver' : actDif;
blradfCustomerGLN = DATA LOCAL NESTED STRING[13]();
GROUP blradfShipTo EXTID 'ShipTo' : actDif;
blradfCustomerStockGLN = DATA LOCAL NESTED STRING[13]();
GROUP actDifLineItemActDif EXTID 'ActDifLineItem' : actDif;
blradfLineItemNumber = DATA LOCAL NESTED INTEGER(INTEGER);
blradfLineItemID = DATA LOCAL NESTED STRING[14](INTEGER);
blradfLineItemBuyerID = DATA LOCAL NESTED STRING[35](INTEGER);
blradfLineItemSupplierID = DATA LOCAL NESTED STRING[35](INTEGER);
blradfLineItemName = DATA LOCAL NESTED STRING[500](INTEGER);
blradfQuantityOrdered = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
blradfQuantityReceived = DATA LOCAL NESTED NUMERIC[16,5](INTEGER);
blradfValueVAT = DATA LOCAL NESTED STRING[7](INTEGER);
blradfLineItemPrice = DATA LOCAL NESTED NUMERIC[16,4](INTEGER);
blradfAmountOrdered = DATA LOCAL NESTED NUMERIC[18,4](INTEGER);
blradfAmountReceived = DATA LOCAL NESTED NUMERIC[18,4](INTEGER);
blradfAdditionalInformation = DATA LOCAL NESTED STRING[512](INTEGER);

FORM blradf
    PROPERTIES IN messageHeader
    blradfMsgDateTime() EXTID 'MsgDateTime',
        blradfMsgSenderID() EXTID 'MsgSenderID',
        blradfMsgReceiverID() EXTID 'MsgReceiverID'
    PROPERTIES IN securityBuyer
    blradfSecurityID() EXTID 'SecurityID',
        blradfCertificateID() EXTID 'CertificateID',
        blradfSecurityPartyID() EXTID 'SecurityPartyID',
        blradfCreationSignatureDate() EXTID 'CreationSignatureDate',
        blradfCreationSignatureTime() EXTID 'CreationSignatureTime',
        blradfSignatureValue() EXTID 'SignatureValue'
    PROPERTIES IN actDif
    blradfID() EXTID 'ID',
        blradfCreationDateTime() EXTID 'CreationDateTime',
        blradfFunctionCode() EXTID 'FunctionCode',
        blradfActDifNumber() EXTID 'ActDifNumber',
        blradfDate() EXTID 'ActDifDate'
    PROPERTIES IN blradfReferenceDocument
    blradfDeliveryNoteNumber() EXTID 'ID'
    PROPERTIES IN blradfShipper
    blradfSupplierGLN() EXTID 'GLN'
    PROPERTIES IN blradfReceiver
    blradfCustomerGLN() EXTID 'GLN'
    PROPERTIES IN blradfShipTo
    blradfCustomerStockGLN() EXTID 'GLN'

    OBJECTS i = INTEGER EXTID 'LineItem' IN actDifLineItemActDif
    PROPERTIES(i) blradfLineItemNumber EXTID 'LineItemNumber',
        blradfLineItemID EXTID 'LineItemID',
        blradfLineItemBuyerID EXTID 'LineItemBuyerID',
        blradfLineItemSupplierID EXTID 'LineItemSupplierID',
        blradfLineItemName EXTID 'LineItemName',
        blradfQuantityOrdered EXTID 'QuantityOrdered',
        blradfQuantityReceived EXTID 'QuantityReceived',
        blradfValueVAT EXTID 'TaxRate',
        blradfLineItemPrice EXTID 'LineItemPrice',
        blradfAmountOrdered EXTID 'AmountOrdered',
        blradfAmountReceived EXTID 'AmountReceived',
        blradfAdditionalInformation EXTID 'AdditionalInformation'
;

