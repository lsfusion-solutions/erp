MODULE SupplierEInvoice;

REQUIRE EInvoice, EDS;

NAMESPACE EDI;

exportedSupplier 'Экспортирован (поставщик)' = DATA BOOLEAN (EInvoice);
importedSupplier 'Импортирован (поставщик)' = DATA BOOLEAN (EInvoice);
importedNoticeSupplier 'Импортировано уведомление об изменении (поставщик)' = DATA BOOLEAN (EInvoice);
numberNoticeSupplier 'Номер уведомления об изменении' = DATA STRING[35](EInvoice);
dateNoticeSupplier 'Дата уведомления об изменении' = DATA DATETIME (EInvoice);
importedSupplierCancel 'Импортирован (поставщик) отмена' = DATA BOOLEAN (EInvoice);
exportedBlrapnSupplier 'Экспортировано извещение о прочтении (поставщик)' = DATA BOOLEAN (EInvoice);

isImportedSupplier 'Можно отправить уведомление о получении'(EInvoice i) = importedSupplier(i) OR importedNoticeSupplier(i) OR importedSupplierCancel(i);

skipSendSupplier = ABSTRACT BOOLEAN (EInvoice);
signAndSendSupplier 'Подписать и отправить (поставщик)'  ABSTRACT LIST ( EInvoice);
signAndSendSupplierEDI 'Подписать и отправить (поставщик)'() {
    IF askPasswordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO { 
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(customer(i), supplier(i)) THEN
                signAndSendSupplier(i);
            ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
    
}

signAndSendSupplierCancelEDI 'Подписать и отправить отмену (поставщик)'() {
    IF askPasswordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO { 
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(customer(i), supplier(i)) THEN {
                exportedSupplier(i) <- NULL WHERE exportedSupplier(i) AND NOT isCancel(i); //если оригинал отправлялся а отмена нет то нужно разрешить отправить отмену
                isCancel(i) <- TRUE;
                signAndSendSupplier(i);
            } ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    }
    ELSE
        MESSAGE 'Не выбрано ни одной накладной';
    
}

signAndSendBlrapnSupplier 'Подписать и отправить извещение о прочтении (поставщик)'  ABSTRACT LIST ( EInvoice);
signAndSendBlrapnSupplierEDI 'Подписать и отправить извещение о прочтении (поставщик)'() {
    IF askPasswordEDSService() THEN {
        DIALOG passwordEDSService DO {} ELSE { BREAK; };
    }
    FOR in(EInvoice i) DO { 
        IF isEDI(i) THEN {
            IF EDIProviderInvoice(customer(i), supplier(i)) THEN {
                IF isImportedSupplier(i) THEN {
                    signAndSendBlrapnSupplier(i);
                } ELSE
                    MESSAGE 'Не получен ответ от покупателя по накладной: ' + deliveryNoteNumber(i);
            } ELSE
                MESSAGE 'Не выбран EDI провайдер для накладной: ' + deliveryNoteNumber(i);
        } ELSE
            MESSAGE 'Запрещен обмен через провайдера для не EDI накладной: ' + deliveryNoteNumber(i);
        in(i) <- NULL;
    } ELSE
        MESSAGE 'Не выбрано ни одной накладной';
    
}

EXTEND FORM eInvoices
    PROPERTIES(e) BEFORE isCancel(e) READONLYIF isReadonly() exportedSupplier, importedSupplier, importedNoticeSupplier, importedSupplierCancel, exportedBlrapnSupplier
    EXTEND FILTERGROUP notExported
        FILTER 'Не экспортированы (поставщик)' NOT exportedSupplier(e) 'F8'
        FILTER 'Не импортированы (поставщик)' NOT isImportedSupplier(e) 'F11'
    PROPERTIES() DRAW e TOOLBAR signAndSendSupplierEDI, signAndSendSupplierCancelEDI, signAndSendBlrapnSupplierEDI
;

DESIGN eInvoices{
    actionContainer {
        caption = 'Действия';
        type = CONTAINERH;
        NEW supplier {
            caption = 'Поставщик';
            type = CONTAINERV;        
            MOVE PROPERTY (signAndSendSupplierEDI()) { alignment = STRETCH; };
            MOVE PROPERTY (signAndSendSupplierCancelEDI()) { alignment = STRETCH; };
            MOVE PROPERTY (signAndSendBlrapnSupplierEDI()) { alignment = STRETCH; };
        }
    }
}

blrwbrUserID = DATA LOCAL NESTED STRING[35]();
blrwbrDocumentNumber = DATA LOCAL NESTED STRING[48]();
blrwbrDocumentId = DATA LOCAL NESTED STRING[35]();
blrwbrDateTime = DATA LOCAL NESTED DATETIME();
blrwbrDeliveryNoteNumber = DATA LOCAL NESTED STRING[70]();
blrwbrFunctionCode = DATA LOCAL NESTED STRING[3]();

FORM blrwbr
    PROPERTIES IN messageHeader blrwbrDocumentNumber() EXTID 'MessageID',
        blrwbrUserID() EXTID 'UserID'
    PROPERTIES IN deliveryNote blrwbrDocumentId() EXTID 'DocumentID',
        blrwbrDeliveryNoteNumber() EXTID 'DeliveryNoteID',
        blrwbrDateTime() EXTID 'CreationDateTime',
        blrwbrFunctionCode() EXTID 'FunctionCode'
;

blrdnrUserID = DATA LOCAL NESTED STRING[35]();
blrdnrDocumentNumber = DATA LOCAL NESTED STRING[48]();
blrdnrDocumentId = DATA LOCAL NESTED STRING[35]();
blrdnrDateTime = DATA LOCAL NESTED DATETIME();
blrdnrDeliveryNoteNumber = DATA LOCAL NESTED STRING[70]();
blrdnrFunctionCode = DATA LOCAL NESTED STRING[3]();

FORM blrdnr
    PROPERTIES IN messageHeader blrdnrDocumentNumber() EXTID 'MessageID',
        blrdnrUserID() EXTID 'UserID'
    PROPERTIES IN deliveryNote blrdnrDocumentId() EXTID 'DocumentID',
        blrdnrDeliveryNoteNumber() EXTID 'DeliveryNoteID',
        blrdnrDateTime() EXTID 'CreationDateTime',
        blrdnrFunctionCode() EXTID 'FunctionCode'
;

exportBlrwblDateTime = DATA LOCAL NESTED DATETIME();

GROUP freightPayer EXTID 'FreightPayer';
GROUP shipFrom EXTID 'ShipFrom';
GROUP carrier EXTID 'Carrier';
GROUP extraField EXTID 'ExtraField';
GROUP extraField0 EXTID 'ExtraField';
GROUP despatchAdviceLogisticUnitLineItem EXTID 'DespatchAdviceLogisticUnitLineItem';
GROUP lineItemIdentification EXTID 'LineItemIdentification';

hideMessageHeaderBlrwbl = DATA LOCAL BOOLEAN ();

FORM exportBlrwbl FORMEXTID 'BLRWBL'
    PROPERTIES ATTR ='0.1' IF NOT hideMessageHeaderBlrwbl() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrwbl()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrwblDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRWBL' EXTID 'MessageType',
        glnSupplier(eih) EXTID 'MsgSenderID',
        glnCustomer(eih) EXTID 'MsgReceiverID',
        userIDCustomerStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein deliveryNoteType = '700' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrwblDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = (IF isCancel(ein) THEN '1' ELSE '9') EXTID 'FunctionCode',
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDateTime = toChar(deliveryNoteDateTime(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate',
        contractName(ein) EXTID 'ContractName',
        contractId(ein) EXTID 'ContractID',
        contractDate = toChar(contractDate(ein),'YYYYMMDD') EXTID 'ContractDate',
        waybillId(ein) EXTID 'WaybillID'
    PROPERTIES DRAW ein IN shipper glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber',
        contactSupplier(ein) EXTID 'Contact'
    PROPERTIES DRAW ein IN receiver glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN freightPayer glnFreightPayer(ein) EXTID 'GLN',
        nameFreightPayer(ein) EXTID 'Name',
        addressFreightPayer(ein) EXTID 'Address',
        unpFreightPayer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipFrom glnSupplierStock(ein) EXTID 'GLN',
        addressSupplierStock(ein) EXTID 'Address',
        contactSupplierStock(ein) EXTID 'Contact'
    PROPERTIES DRAW ein IN shipTo glnCustomerStock(ein) EXTID 'GLN',
        addressCustomerStock(ein) EXTID 'Address'
    PROPERTIES DRAW ein IN carrier transportContact(ein) EXTID 'TransportContact',
        deliveryContact(ein) EXTID 'DeliveryContact',
        proxyID(ein) EXTID 'ProxyID',
        proxyDate = toChar(proxyDate(ein),'YYYYMMDD') EXTID 'ProxyDate',
        partyIssuingProxyName(ein) EXTID 'PartyIssuingProxyName'
    PROPERTIES DRAW ein quantityTrip(ein) EXTID 'QuantityTrip',
        transportOwnerName(ein) EXTID 'TransportOwnerName',
        transportID(ein) EXTID 'TransportID',
        trailerID(ein) EXTID 'TrailerID',
        sealIDReceiver(ein) EXTID 'SealID',
        orderID(ein) EXTID 'OrderID',
        currency(ein) EXTID 'Currency'
    PROPERTIES DRAW ein IN extraField0 fieldName0 = IF replaceNumber(ein) AND NOT useExtraFields(ein) THEN 'Номер заменяемой накладной' EXTID 'FieldName',
        fieldCode0 = IF replaceNumber(ein) AND NOT useExtraFields(ein) THEN 'PW0014' EXTID 'FieldCode',
        fieldValue0 = IF replaceNumber(ein) AND NOT useExtraFields(ein) THEN replaceNumber(ein) EXTID 'FieldValue'
    PROPERTIES DRAW ein IN extraField fieldName = IF isReturn(ein) AND NOT useExtraFields(ein) THEN 'Признак возвратной накладной' EXTID 'FieldName',
        fieldCode = IF isReturn(ein) AND NOT useExtraFields(ein) THEN 'PW0013' EXTID 'FieldCode',
        fieldValue = IF isReturn(ein) AND NOT useExtraFields(ein) THEN '1' EXTID 'FieldValue'
    
    OBJECTS f = ExtraField EXTID 'ExtraField'
    FILTERS eInvoice(f) == ein AND useExtraFields(ein)
    PROPERTIES DRAW f name(f) EXTID 'FieldName',
        code(f) EXTID 'FieldCode',
        value(f) EXTID 'FieldValue'
    
    OBJECTS d = EInvoiceDetail EXTID 'LineItem' IN despatchAdviceLogisticUnitLineItem
    FILTERS eInvoice(d) == ein
    PROPERTIES DRAW d lineItemNumber(d) EXTID 'LineItemNumber',
        lineItemSign(d) EXTID 'LineItemSign',
        lineItemID(d) EXTID 'LineItemID',
        lineItemBuyerID(d) EXTID 'LineItemBuyerID',
        itemCustomCode(d) EXTID 'ItemCustomCode',
        deliveryTypePrev(d) EXTID 'DeliveryTypePrev',
        deliveryNotePrev(d) EXTID 'DeliveryNotePrev',
        deliveryNoteDatePrev = toChar(deliveryNoteDatePrev(d),'YYYYMMDDHH24MISS') EXTID 'DeliveryNoteDatePrev',
        deliveryNotePrevLineID(d) EXTID 'DeliveryNotePrevLineID',
        lineItemSupplierID(d) EXTID 'LineItemSupplierID',
        lineItemName(d) EXTID 'LineItemName',
        grossWeightValue(d) EXTID 'GrossWeightValue',
        quantityDespatched(d) EXTID 'QuantityDespatched',
        lineItemQuantityUOM(d) EXTID 'LineItemQuantityUOM',
        despatchUnitQuantityDespatched(d) EXTID 'DespatchUnitQuantityDespatched',
        expiryDate = toChar(expiryDate(d),'YYYYMMDD') EXTID 'BestBeforeDate',
        quantityDespatchedSPT(d) EXTID 'QuantityDespatchedSPT',
        lineItemQuantitySPT(d) EXTID 'LineItemQuantitySPT',
        valueVAT(d) EXTID 'TaxRate',
        additionalInformation(d) EXTID 'AdditionalInformation',
        manufactureDate = toChar(manufactureDate(d),'YYYYMMDD') EXTID 'LineItemProductDate',
        lineItemAmountWithoutCharges1 = lineItemAmountWithoutCharges(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmountWithoutCharges' ,
        lineItemAmountWithoutCharges2 = NUMERIC[18,2](lineItemAmountWithoutCharges(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmountWithoutCharges',
        lineItemAmountCharges1 = lineItemAmountCharges(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmountCharges',
        lineItemAmountCharges2 = NUMERIC[18,2](lineItemAmountCharges(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmountCharges' ,
        lineItemAmount1 = lineItemAmount(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmount',
        lineItemAmount2 = NUMERIC[18,2](lineItemAmount(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmount',
        lineItemPrice1 = lineItemPrice(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemPrice',
        lineItemPrice2 = NUMERIC[12,2](lineItemPrice(d)) IF useRoundNumeric(ein) EXTID 'LineItemPrice',
        lineItemPriceSPT(d) EXTID 'LineItemPriceSPT',
        lineItemManufacturerPrice1 = lineItemManufacturerPrice(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemManufacturerPrice',
        lineItemManufacturerPrice2 = NUMERIC[12,2](lineItemManufacturerPrice(d)) IF useRoundNumeric(ein) EXTID 'LineItemManufacturerPrice',
        lineItemAmountExcise1 = lineItemAmountExcise(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmountExcise',
        lineItemAmountExcise2 = NUMERIC[18,2](lineItemAmountExcise(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmountExcise'

    OBJECTS i = INTEGER EXTID 'GroupPackingHeader' IN lineItemIdentification
    FILTERS groupPackingCodeMark(d,i) OR upperLevelCodeMark(d,i)
    PROPERTIES DRAW i groupPackingCodeMark(d,i) EXTID 'GroupPackingCodeMark',
        upperLevelCodeMark(d,i) EXTID 'UpperLevelCodeMark'
    PROPERTIES DRAW d IN lineItemIdentification fieldCodeMark(d) EXTID 'FieldCodeMark'

    OBJECTS if = ItemExtraField EXTID 'LineItemExtraField'
    FILTERS eInvoiceDetail(if) == d AND useExtraFields(eInvoice(d))
    PROPERTIES DRAW if name(if) EXTID 'FieldName',
        code(if) EXTID 'FieldCode',
        value(if) EXTID 'FieldValue'

    OBJECTS eint = EInvoice EXTID 'Total'
    FILTERS eint == ei
    PROPERTIES DRAW ein
        totalAmountWithoutCharges1 = totalAmountWithoutCharges(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmountWithoutCharges',
        totalAmountWithoutCharges2 = NUMERIC[18,2](totalAmountWithoutCharges(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmountWithoutCharges',
        totalAmountCharges1 = totalAmountCharges(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmountCharges',
        totalAmountCharges2 = NUMERIC[18,2](totalAmountCharges(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmountCharges',
        totalAmount1 = totalAmount(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmount',
        totalAmount2 = NUMERIC[18,2](totalAmount(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmount',
        totalLineItem(eint) EXTID 'TotalLineItem',
        totalLineItemQuantity(eint) EXTID 'TotalLineItemQuantity',
        totalGrossWeight(eint) EXTID 'TotalGrossWeight',
        totalDespatchUnitQuantity(eint) EXTID 'TotalDespatchUnitQuantity',
        totalAmountExcise1 = totalAmountExcise(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmountExcise',
        totalAmountExcise2 = NUMERIC[18,2](totalAmountExcise(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmountExcise'
;

exportBlrdlnDateTime = DATA LOCAL NESTED DATETIME();

hideMessageHeaderBlrdln = DATA LOCAL BOOLEAN ();

FORM exportBlrdln FORMEXTID 'BLRDLN'
    PROPERTIES ATTR ='0.1' IF NOT hideMessageHeaderBlrdln() EXTID 'version'
    OBJECTS ei = EInvoice PANEL

    OBJECTS eih = EInvoice EXTID 'MessageHeader'
    FILTERS (eih == ei AND NOT hideMessageHeaderBlrdln()) OR NOT eih IS EInvoice
    PROPERTIES DRAW eih messageId = resultMilliseconds() EXTID 'MessageID',
        msgDateTime = toChar(exportBlrdlnDateTime(),'YYYYMMDDHH24MISS') EXTID 'MsgDateTime',
        messageType = 'BLRDLN' EXTID 'MessageType',
        glnSupplier(eih) EXTID 'MsgSenderID',
        glnCustomer(eih) EXTID 'MsgReceiverID',
        userIDCustomerStock(eih) EXTID 'UserID',
        testIndicator = IF isTestDocument(eih) THEN '1' EXTID 'TestIndicator'

    OBJECTS ein = EInvoice EXTID 'DeliveryNote'
    FILTERS ein == ei
    PROPERTIES DRAW ein deliveryNoteType = '270' EXTID 'DeliveryNoteType',
        documentID = resultMilliseconds() EXTID 'DocumentID',
        creationDateTime = toChar(exportBlrdlnDateTime(),'YYYYMMDDHH24MISS') EXTID 'CreationDateTime',
        functionCode = (IF isCancel(ein) THEN '1' ELSE '9') EXTID 'FunctionCode',
        deliveryNoteNumber(ein) EXTID 'DeliveryNoteID',
        deliveryNoteDateTime = toChar(deliveryNoteDateTime(ein),'YYYYMMDD') EXTID 'DeliveryNoteDate',
        contractName(ein) EXTID 'ContractName',
        contractId(ein) EXTID 'ContractID',
        contractDate = toChar(contractDate(ein),'YYYYMMDD') EXTID 'ContractDate'
    PROPERTIES DRAW ein IN shipper glnSupplier(ein) EXTID 'GLN',
        nameSupplier(ein) EXTID 'Name',
        addressSupplier(ein) EXTID 'Address',
        unpSupplier(ein) EXTID 'VATRegistrationNumber',
        contactSupplier(ein) EXTID 'Contact'
    PROPERTIES DRAW ein IN receiver glnCustomer(ein) EXTID 'GLN',
        nameCustomer(ein) EXTID 'Name',
        addressCustomer(ein) EXTID 'Address',
        unpCustomer(ein) EXTID 'VATRegistrationNumber'
    PROPERTIES DRAW ein IN shipFrom glnSupplierStock(ein) EXTID 'GLN',
        addressSupplierStock(ein) EXTID 'Address',
        contactSupplierStock(ein) EXTID 'Contact'
    PROPERTIES DRAW ein IN shipTo glnCustomerStock(ein) EXTID 'GLN',
        addressCustomerStock(ein) EXTID 'Address'
    PROPERTIES DRAW ein IN carrier deliveryContact(ein) EXTID 'DeliveryContact',
        proxyID(ein) EXTID 'ProxyID',
        proxyDate = toChar(proxyDate(ein),'YYYYMMDD') EXTID 'ProxyDate',
        partyIssuingProxyName(ein) EXTID 'PartyIssuingProxyName'
    PROPERTIES DRAW ein orderID(ein) EXTID 'OrderID',
        currency(ein) EXTID 'Currency'
    PROPERTIES DRAW ein IN extraField0 fieldName0 = IF replaceNumber(ein) AND NOT useExtraFields(ein) THEN 'Номер заменяемой накладной' EXTID 'FieldName',
        fieldCode0 = IF replaceNumber(ein) AND NOT useExtraFields(ein) THEN 'PW0014' EXTID 'FieldCode',
        fieldValue0 = IF replaceNumber(ein) AND NOT useExtraFields(ein) THEN replaceNumber(ein) EXTID 'FieldValue'
    PROPERTIES DRAW ein IN extraField fieldName = IF isReturn(ein) AND NOT useExtraFields(ein) THEN 'Признак возвратной накладной' EXTID 'FieldName',
        fieldCode = IF isReturn(ein) AND NOT useExtraFields(ein) THEN 'PW0013' EXTID 'FieldCode',
        fieldValue = IF isReturn(ein) AND NOT useExtraFields(ein) THEN '1' EXTID 'FieldValue'

    OBJECTS f = ExtraField EXTID 'ExtraField'
    FILTERS eInvoice(f) == ein AND useExtraFields(ein)
    PROPERTIES DRAW f name(f) EXTID 'FieldName',
        code(f) EXTID 'FieldCode',
        value(f) EXTID 'FieldValue'

    OBJECTS d = EInvoiceDetail EXTID 'LineItem' IN despatchAdviceLogisticUnitLineItem
    FILTERS eInvoice(d) == ein
    PROPERTIES DRAW d lineItemNumber(d) EXTID 'LineItemNumber',
        lineItemSign(d) EXTID 'LineItemSign',
        lineItemID(d) EXTID 'LineItemID',
        itemCustomCode(d) EXTID 'ItemCustomCode',
        deliveryTypePrev(d) EXTID 'DeliveryTypePrev',
        deliveryNotePrev(d) EXTID 'DeliveryNotePrev',
        deliveryNoteDatePrev = toChar(deliveryNoteDatePrev(d),'YYYYMMDDHH24MISS') EXTID 'DeliveryNoteDatePrev',
        deliveryNotePrevLineID(d) EXTID 'DeliveryNotePrevLineID',
        lineItemBuyerID(d) EXTID 'LineItemBuyerID',
        lineItemSupplierID(d) EXTID 'LineItemSupplierID',
        lineItemName(d) EXTID 'LineItemName',
        quantityDespatched(d) EXTID 'QuantityDespatched',
        lineItemQuantityUOM(d) EXTID 'LineItemQuantityUOM',
        expiryDate = toChar(expiryDate(d),'YYYYMMDD') EXTID 'BestBeforeDate',
        quantityDespatchedSPT(d) EXTID 'QuantityDespatchedSPT',
        lineItemQuantitySPT(d) EXTID 'LineItemQuantitySPT',
        valueVAT(d) EXTID 'TaxRate',
        additionalInformation(d) EXTID 'AdditionalInformation',
        manufactureDate = toChar(manufactureDate(d),'YYYYMMDD') EXTID 'LineItemProductDate',
        lineItemAmountWithoutCharges1 = lineItemAmountWithoutCharges(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmountWithoutCharges' ,
        lineItemAmountWithoutCharges2 = NUMERIC[18,2](lineItemAmountWithoutCharges(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmountWithoutCharges',
        lineItemAmountCharges1 = lineItemAmountCharges(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmountCharges',
        lineItemAmountCharges2 = NUMERIC[18,2](lineItemAmountCharges(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmountCharges' ,
        lineItemAmount1 = lineItemAmount(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmount',
        lineItemAmount2 = NUMERIC[18,2](lineItemAmount(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmount',
        lineItemPrice1 = lineItemPrice(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemPrice',
        lineItemPrice2 = NUMERIC[12,2](lineItemPrice(d)) IF useRoundNumeric(ein) EXTID 'LineItemPrice',
        lineItemPriceSPT(d) EXTID 'LineItemPriceSPT',
        lineItemManufacturerPrice1 = lineItemManufacturerPrice(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemManufacturerPrice',
        lineItemManufacturerPrice2 = NUMERIC[12,2](lineItemManufacturerPrice(d)) IF useRoundNumeric(ein) EXTID 'LineItemManufacturerPrice',
        lineItemAmountExcise1 = lineItemAmountExcise(d) IF NOT useRoundNumeric(ein) EXTID 'LineItemAmountExcise',
        lineItemAmountExcise2 = NUMERIC[18,2](lineItemAmountExcise(d)) IF useRoundNumeric(ein) EXTID 'LineItemAmountExcise'

    OBJECTS i = INTEGER EXTID 'GroupPackingHeader' IN lineItemIdentification
    FILTERS groupPackingCodeMark(d,i) OR upperLevelCodeMark(d,i)
    PROPERTIES DRAW i groupPackingCodeMark(d,i) EXTID 'GroupPackingCodeMark',
        upperLevelCodeMark(d,i) EXTID 'UpperLevelCodeMark'
    PROPERTIES DRAW d IN lineItemIdentification fieldCodeMark(d) EXTID 'FieldCodeMark'

    OBJECTS if = ItemExtraField EXTID 'LineItemExtraField'
    FILTERS eInvoiceDetail(if) == d AND useExtraFields(eInvoice(d))
    PROPERTIES DRAW if name(if) EXTID 'FieldName',
        code(if) EXTID 'FieldCode',
        value(if) EXTID 'FieldValue'

    OBJECTS eint = EInvoice EXTID 'Total'
    FILTERS eint == ei
    PROPERTIES DRAW ein
        totalAmountWithoutCharges1 = totalAmountWithoutCharges(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmountWithoutCharges',
        totalAmountWithoutCharges2 = NUMERIC[18,2](totalAmountWithoutCharges(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmountWithoutCharges',
        totalAmountCharges1 = totalAmountCharges(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmountCharges',
        totalAmountCharges2 = NUMERIC[18,2](totalAmountCharges(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmountCharges',
        totalAmount1 = totalAmount(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmount',
        totalAmount2 = NUMERIC[18,2](totalAmount(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmount',
        totalLineItem(eint) EXTID 'TotalLineItem',
        totalLineItemQuantity(eint) EXTID 'TotalLineItemQuantity',
        totalAmountExcise1 = totalAmountExcise(eint) IF NOT useRoundNumeric(ein) EXTID 'TotalAmountExcise',
        totalAmountExcise2 = NUMERIC[18,2](totalAmountExcise(eint)) IF useRoundNumeric(ein) EXTID 'TotalAmountExcise'
;
