MODULE SkkoRequest;

REQUIRE DocumentMNS, ZReport, LegalEntityMNS, LegalEntityBy, EDIGTIN, ZReportLot, LotTypeBy, AuthorizationSkko;

CLASS SkkoRequest;

dateTime 'Дата/время'  = DATA DATETIME (SkkoRequest);
send 'Отправлен' = DATA BOOLEAN (SkkoRequest);
message 'Сообщение' = DATA STRING (SkkoRequest);
authorized = DATA BOOLEAN (SkkoRequest);

CLASS SkkoRequestType 'Тип' {
    sale 'Продажа',
    refund 'Возврат',
    cancel 'Аннулирование'
}

type = DATA SkkoRequestType (SkkoRequest);
nameType 'Тип' (SkkoRequest r) = staticCaption(type(r));

number '{numerator.number.numerator}' = DATA STRING[48] (SkkoRequest);

message_number = DATA LOCAL INTEGER();
status = DATA LOCAL STRING();

FORM importMessageNumer
    PROPERTIES() message_number, status;
;

getCurrentMessageNumber() {
    setHttpSkkoHeaders(skkoToken());
    
    resultString() <- '\{\}';
    stringToFile(resultString());

    LOCAL response = FILE();
    TRY {
        insecureSSL() <- TRUE;
        EXTERNAL HTTP POST skkoUrl() + '/message' HEADERS httpSkkoHeaders PARAMS resultFile() TO response;

        fileToString(response());
        IMPORT importMessageNumer JSON FROM response();
    } CATCH {
        MESSAGE CONCAT '\n', 'Ошибка получения номера сообщения: ', messageCaughtException() NOWAIT;
    }
}
