MODULE SignSkko;

REQUIRE AuthorizationSkko, Authentication;

CLASS SignatureAppSkko 'Приложение для подписи СККО' : StaticObject;

verify = DATA BOOLEAN ();

EXTEND CLASS SignatureAppSkko {
    default 'По умолчанию'
}

dataSignatureAppSkko = DATA SignatureAppSkko();
signatureAppSkko () = OVERRIDE dataSignatureAppSkko(), SignatureAppSkko.default;
nameSignatureAppSkko 'Приложение для подписи СККО' () = staticCaption(signatureAppSkko());

pathSkko 'Путь к библиотеке (Avest AvJCEProv)' = DATA STRING (Computer);
pathSkko 'Путь к библиотеке (Avest AvJCEProv)' () = pathSkko(currentComputer());

passwordSkko 'Пароль контейнера (Avest)' = DATA STRING (Computer) ECHO;
passwordSkko 'Пароль контейнера (Avest)' () = passwordSkko(currentComputer());

aliasSkko 'Имя ключа (Avest)' = DATA STRING (Computer);
aliasSkko 'Имя ключа (Avest)' () = aliasSkko(currentComputer());

EXTEND FORM computer PROPERTIES(c) pathSkko, passwordSkko, aliasSkko;
DESIGN computer {
    OBJECTS {
        NEW avest {
            caption = 'Avest';            
            horizontal = TRUE;
            alignment = STRETCH;
            MOVE PROPERTY(pathSkko(c));
            MOVE PROPERTY(passwordSkko(c));
            MOVE PROPERTY(aliasSkko(c));
        }
    }
}

EXTEND FORM computers PROPERTIES(c) READONLY pathSkko, passwordSkko, aliasSkko;

mnsService 'URL' = DATA STRING();

EXTEND FORM integrationData PROPERTIES() nameSignatureAppSkko;

DESIGN integrationData {
    mnsSKKO {
        MOVE PROPERTY (nameSignatureAppSkko());
    }
}

resultSignInfo = DATA LOCAL STRING ();
resultCert = DATA LOCAL STRING ();
resultSignType = DATA LOCAL STRING ();

signInfoCmsMin INTERNAL 'lsfusion.erp.region.by.SignInfoCmsMin' (STRING, STRING, STRING, STRING); //base64, alias, password, libPath

signSkkoDefault(STRING base64) {
    IF aliasSkko() AND passwordSkko() THEN {
        signInfoCmsMin (base64, aliasSkko(), passwordSkko(), pathSkko());
        resultSignType() <- 'cms-si-min/bign';
    } ELSE {
        MESSAGE ' Документ не подписан: Alias или Пароль ключа не задан' NOWAIT;
    }
    RETURN;
}