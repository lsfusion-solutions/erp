MODULE ProduceSCCryptoProxyMNS;

REQUIRE SCCryptoProxyMNS, DocumentProduceMNS;

NAMESPACE MNS;

aliasEDSService (ProduceMNS p) = aliasEDSService(legalEntity(p));
passwordEDSService (ProduceMNS p) = passwordEDSService(legalEntity(p));
EDSService(ProduceMNS p) = EDSServiceMNS(legalEntity(p));

sign(ProduceMNS p, STRING contentSubXML, BOOLEAN interactive) + {
    IF signatureApp() == SignatureApp.scCryptoProxy THEN {
        IF edsApplication(EDSService(p)) == EDSApplication.sccp THEN {
            IF aliasEDSService(p) AND (OVERRIDE passwordEDSService(), passwordEDSService(p)) THEN {
                keyID() <- aliasEDSService(p);
                password() <- (OVERRIDE passwordEDSService(), passwordEDSService(p));
                sign(contentSubXML, EDSService(p));
            } ELSE {
                IF interactive THEN {
                    MESSAGE ' Документ ' + registerNumber(p) + ' не подписан: Alias или Пароль ключа не задан' NOWAIT;
                }
                logToFile('edi', ' error: Alias or Password for key not found');
            }
            RETURN;
        }
    }
}