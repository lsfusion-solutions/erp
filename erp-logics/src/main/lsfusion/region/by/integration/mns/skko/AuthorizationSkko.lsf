MODULE AuthorizationSkko;

REQUIRE Utils;

NAMESPACE Skko;

httpSkkoHeaders = DATA LOCAL NESTED TEXT(TEXT);

skkoUrl 'URL СККО' = DATA STRING();
EXTEND FORM integrationData PROPERTIES skkoUrl();

DESIGN integrationData {
    pane {
        NEW mnsSKKO {
            caption = 'СККО';
            MOVE PROPERTY (skkoUrl());
        }
    }
}

// token
skkoToken 'Токен' = DATA STRING() ECHO;
apiKey 'Ключ авторизации' = DATA STRING();

FORM authorization
    PROPERTIES() apiKey EXTID 'api_key'
//    PROPERTIES() IN eds certificate, type, value
;

// импорт
ui = DATA LOCAL STRING();
error_description = DATA LOCAL STRING();
error_code = DATA LOCAL INTEGER();
status = DATA LOCAL BOOLEAN ();
access_token = DATA LOCAL STRING();
time_out = DATA LOCAL NUMERIC();

FORM importToken
    PROPERTIES()
    access_token EXTID 'access_token',
        error_code EXTID 'error_code',
        ui EXTID 'ui',
        error_description EXTID 'error_description',
        time_out EXTID 'time_out',
        status EXTID 'status'    
;

setHttpSkkoHeaders 'Задать заголовки' (STRING token){
    httpSkkoHeaders('Content-Type') <- 'application/json; charset=utf-8';

    IF token THEN {
        httpSkkoHeaders('x-access-token') <- token;
    }
}

getSkkoToken 'Авторизация' () {    
    EXPORT authorization JSON;
    fileToString(exportFile());
    
    LOCAL response = FILE();
    TRY {
        insecureSSL() <- TRUE;
        EXTERNAL HTTP POST skkoUrl() + '/login' PARAMS exportFile() TO response;
        IMPORT importToken JSON FROM response();
        skkoToken() <- access_token();
        APPLY;
    } CATCH {
        IMPORT importToken JSON FROM response();
        MESSAGE 'Ошибка получения токена: ' + CONCAT '\n', error_description(), messageCaughtException() NOWAIT;
    }
}

EXTEND FORM integrationData
    PROPERTIES () apiKey
    PROPERTIES READONLY skkoToken()
    PROPERTIES getSkkoToken()
;

DESIGN integrationData {
    pane {
        mnsSKKO {
            MOVE PROPERTY (apiKey());
            MOVE PROPERTY (skkoToken());
            MOVE PROPERTY (getSkkoToken());
        }
    }
}