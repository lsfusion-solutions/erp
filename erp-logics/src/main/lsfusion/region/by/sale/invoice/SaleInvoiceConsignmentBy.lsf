MODULE SaleInvoiceConsignmentBy;

REQUIRE SaleInvoice,
        SaleOperationConsignmentBy,
        InvoiceConsignmentBy;

NAMESPACE Sale;

@defineInvoiceConsignment(supplier, customer);

@implementConsignmentDocumentHeaderPrefix (invoice, invoice, Invoice);

consignmentType (Invoice consignment) += consignmentType(operation(consignment));
dataShipmentBase (Invoice consignment) += shipmentBase(operation(consignment));
ownerTrackType (Invoice consignment) += ownerTrackType(operation(consignment));
banPrint (Invoice consignment) += WHEN banOpenedPrint(operation(consignment)) AND NOT isPosted(consignment)THEN TRUE;

@deriveConsignmentPropertyALL(supplierStock);

notUseDriverTruck(Invoice c) += notUseDriverTruck(operation(c));

isInvoicePrice(InvoiceDetail d) += WHEN isInvoicePriceConsignment(operation(d)) THEN TRUE;
switchSum(InvoiceDetail d) += WHEN switchSumConsignment(operation(d)) THEN TRUE;
useEmptyVAT(InvoiceDetail d) += WHEN useEmptyVATConsignment(operation(d)) THEN TRUE;
printWithoutVAT(InvoiceDetail d) += WHEN printWithoutVAT(operation(d)) THEN TRUE;
printDashVAT(InvoiceDetail d) += WHEN printDashVAT(operation(d)) THEN TRUE;
switchSumInvoice(InvoiceDetail d) += WHEN switchSumInvoiceConsignment(operation(d)) THEN TRUE;

roundPack(InvoiceDetail d) += roundPack(operation(d));

notUseIssuanceAllowed(Invoice c) += notUseIssuanceAllowed(operation(c));
notUseIssuanceExecuted(Invoice c) += notUseIssuanceExecuted(operation(c));
notPrintGr(Invoice c) += notPrintGr(operation(c));
useGoodsAccepted(Invoice c) += useGoodsAccepted(operation(c));

skipWaybill (Invoice consignment) += WHEN skipWaybill(operation(consignment)) THEN skipWaybill(operation(consignment));
mandatoryTruck (Invoice consignment) += WHEN mandatoryTruck(operation(consignment)) THEN mandatoryTruck(operation(consignment));
skipTruck (Invoice consignment) += WHEN skipTruck(operation(consignment)) THEN skipTruck(operation(consignment));
mandatoryDriver (Invoice consignment) += WHEN mandatoryDriver(operation(consignment)) THEN mandatoryDriver(operation(consignment));
skipDriver (Invoice consignment) += WHEN skipDriver(operation(consignment)) THEN skipDriver(operation(consignment));

defaultTruck(Invoice consignment) += WHEN isSupplier(operation(consignment)) AND truck(supplier(consignment)) THEN truck(supplier(consignment));
defaultTruck(Invoice consignment) += WHEN NOT isSupplier(operation(consignment)) AND truck(customer(consignment)) THEN truck(customer(consignment));

driver(Invoice consignment) += WHEN isSupplier(operation(consignment)) AND driver(supplier(consignment)) THEN driver(supplier(consignment));
driver(Invoice consignment) += WHEN NOT isSupplier(operation(consignment)) AND driver(customer(consignment)) THEN driver(customer(consignment));

invoiceNumber 'Номер ТТН' = DATA STRING[48] (Invoice) IN numbered CHARWIDTH 7;
invoiceSeries 'Серия ТТН' = DATA BPSTRING[2] (Invoice) IN numbered CHARWIDTH 3 NOFLEX; 

order[ConsignmentDetail](InvoiceDetail d) += ISTRING[255](nameSku[ConsignmentDetail](d)) IF d IS InvoiceDetail AND orderNameSku(operation(d));
