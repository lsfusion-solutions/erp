MODULE PriceListAlcohol;

REQUIRE PriceList, ItemAlcohol, PriceListOperation;

NAMESPACE PriceList;

@defineOperationProperty(checkAlcohol, 'Проверять алкоголь', BOOLEAN, paramsContainer);

alcoholSupplierTypeUser = alcoholSupplierType(company(priceList(PriceListDetail detail)), sku(detail)); 
nameAlcoholSupplierTypeUser 'Тип поставщика алкоголя' = staticCaption(alcoholSupplierTypeUser(PriceListDetail detail));

showAlcoholSupplierType 'Тип поставщика алкоголя' = DATA BOOLEAN (UserPriceList);
showAlcoholSupplierTypeUser = showAlcoholSupplierType(priceList(PriceListDetail detail));

checkAlcohol = DATA LOCAL BOOLEAN (PriceListDetail);
changeAlcoholSupplierType(PriceListDetail detail)  { 
    DIALOG alcoholSupplierTypies OBJECTS d = alcoholSupplierType(company(detail), sku(detail)) INPUT NULL LIST name(d) DO 
        alcoholSupplierType(LegalEntity l, Sku i) <- d WHERE l == company(detail) AND i == sku(detail);
        checkAlcohol(detail) <- TRUE;
}   

changeWYSAlcoholSupplierType(PriceListDetail detail)  { 
    INPUT s = BPISTRING[100] DO 
        FOR LegalEntity l == company(detail) AND Sku i == sku(detail) DO {
            alcoholSupplierType(l, i) <- alcoholSupplierTypeCaption(s);
            checkAlcohol(detail) <- TRUE;
        }
}   

EXTEND FORM userPriceList
    PROPERTIES (p) showAlcoholSupplierType
    PROPERTIES (d) BACKGROUND background(d) nameAlcoholSupplierTypeUser ON CHANGE changeAlcoholSupplierType(d) ON CHANGEWYS changeWYSAlcoholSupplierType(d)  
                                SHOWIF showAlcoholSupplierTypeUser(d) AFTER nameSku(d)
;

DESIGN userPriceList{
    param {
        MOVE PROPERTY(showAlcoholSupplierType(p)); 
    }    
}

CONSTRAINT (CHANGED (sku(UserPriceListDetail d)) OR CHANGED (operation(d)) OR CHANGED(company(d)) OR SET(checkAlcohol(d))) 
    AND  checkAlcohol(operation(d)) AND (isParent(itemGroup('2_1'), sku(d)) OR isParent(itemGroup('2_2'), sku(d))) AND NOT alcoholSupplierType(company(d),sku(d))
    MESSAGE 'Не задан "Тип поставщика алкоголя"';

CONSTRAINT (CHANGED (sku(UserPriceListDetail d)) OR CHANGED (operation(d)) OR CHANGED(company(d)) OR SET(checkAlcohol(d))) 
    AND  checkAlcohol(operation(d)) AND (isParent(itemGroup('2_1'), sku(d)) OR isParent(itemGroup('2_2'), sku(d))) AND sid(country(sku(d))) == '112' AND alcoholSupplierType(company(d),sku(d)) == AlcoholSupplierType.importer
    MESSAGE 'Для страны Беларусь "Тип поставщика алкоголя" не может быть "от импортера"';
    
CONSTRAINT (CHANGED (sku(UserPriceListDetail d)) OR CHANGED (operation(d)) OR CHANGED(company(d)) OR SET(checkAlcohol(d))) 
    AND  checkAlcohol(operation(d)) AND (isParent(itemGroup('2_1'), sku(d)) OR isParent(itemGroup('2_2'), sku(d))) AND (NOT sid(country(sku(d))) == '112') AND alcoholSupplierType(company(d),sku(d)) == AlcoholSupplierType.manufacturer
    MESSAGE 'Для страны отличной от Беларусь "Тип поставщика алкоголя" не может быть "от изготовителя"';