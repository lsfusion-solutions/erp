MODULE PurchaseReturnImporterMarkup;

REQUIRE PurchaseReturnInvoice, PurchaseImporterMarkup;

NAMESPACE PurchaseReturn;

showImporterMarkup 'Надбавка импортера' (invoice) = ABSTRACT BOOLEAN(Invoice) IN documentPrm;
showImporterMarkup 'Надбавка импортера' (userInvoice) = DATA BOOLEAN(UserInvoice) IN documentPrm;
showImporterMarkup (UserInvoice invoice) += showImporterMarkup(invoice);

showImporterMarkup 'Надбавка импортера' (InvoiceDetail invoiceDetail) = showImporterMarkup(invoice(invoiceDetail));
showImporterMarkup 'Надбавка импортера' (UserInvoiceDetail userInvoiceDetail) = showImporterMarkup(userInvoice(userInvoiceDetail));


EXTEND FORM userInvoice
    PROPERTIES(i)  showImporterMarkup

;
DESIGN userInvoice {
    headerExtraParams {
        NEW headerImporterMarkup{
            caption = 'Надбавка импортера';
            MOVE PROPERTY(showImporterMarkup(i));
        }
    }
}

// -- Операция
@deriveDocumentOperationProperty(UserInvoice, showImporterMarkup);


importerMarkup '{document.markup} импортера' = ABSTRACT NUMERIC[8,3] (InvoiceDetail);
importerMarkup '{document.markup} импортера' = DATA NUMERIC[8,3] (UserInvoiceDetail);
importerMarkup (UserInvoiceDetail invoiceDetail) += importerMarkup(invoiceDetail);

EXTEND FORM userInvoice
    PROPERTIES (d) importerMarkup AFTER price(d) SHOWIF showImporterMarkup(d)
;

EXTEND FORM invoices
    PROPERTIES (d) READONLY importerMarkup AFTER price(d)  SHOWIF showImporterMarkup(d)
;

disableUpdateImporterMarkup= ABSTRACT VALUE BOOLEAN (UserInvoiceDetail);
overImporterMarkupBatch = ABSTRACT NUMERIC[8,3] (UserInvoiceDetail);

WHEN LOCAL (CHANGED(customerStock(UserInvoiceDetail detail)) OR
    (CHANGED(dateTime(detail)) AND NOT isPosted(detail)) OR
    CHANGED(batch(detail))  OR SET(showImporterMarkup(detail)))
    AND batch(detail) AND NOT CHANGED(importerMarkup(detail)) AND NOT disableUpdateImporterMarkup(detail) DO {
    importerMarkup (detail) <- OVERRIDE overImporterMarkupBatch(detail),
                                        prevImporterMarkup[Purchase.InvoiceDetail](prevActivePriceListLedgerB(SystemLedgerPriceListType.purchaseInvoiceStockPriceListType,
                                                                                    batch(detail),
                                                                                    customerStock(detail),
                                                                                    dateTime(detail)));
}

overImporterMarkupSku = ABSTRACT NUMERIC[8,3] (UserInvoiceDetail);
WHEN LOCAL (CHANGED(customerStock(UserInvoiceDetail detail)) OR
    (CHANGED(dateTime(detail)) AND NOT isPosted(detail)) OR
    DROPPED(batch(detail)) OR CHANGED(sku(detail)) OR SET(showImporterMarkup(detail)))
    AND NOT batch(detail) AND NOT CHANGED(importerMarkup(detail)) AND NOT disableUpdateImporterMarkup(detail) DO {
    importerMarkup (detail) <- OVERRIDE overImporterMarkupSku(detail),
                                        prevImporterMarkup[Purchase.InvoiceDetail](prevActivePriceListLedgerB(SystemLedgerPriceListType.purchaseInvoiceStockPriceListType,
                                                                                    sku(detail),
                                                                                    customerStock(detail),
                                                                                    dateTime(detail)));
}


