MODULE PurchaseInvoiceConsignmentBy;

REQUIRE PurchaseInvoice,
        PurchaseOperationConsignmentBy,
        InvoiceConsignmentBy;

NAMESPACE Purchase;

TABLE purchaseConsignmentInvoice(Invoice);

payer (invoice) = DATA LegalEntity (Invoice) TABLE purchaseConsignmentInvoice IN carConsignment;

dataTruck (invoice) = DATA Truck (Invoice) TABLE purchaseConsignmentInvoice;
nameDataTruck 'Автомобиль' (Invoice invoice) = name(dataTruck(invoice)) IN carConsignment;
dataTrailer 'Прицеп' (invoice) = DATA STRING[50] (Invoice) TABLE purchaseConsignmentInvoice IN carConsignment;
dataEmployee (invoice) = DATA Employee (Invoice) TABLE purchaseConsignmentInvoice;
nameDataEmployee 'Водитель' (Invoice invoice) = name[Contact](dataEmployee(invoice)) IN carConsignment;
waybill 'Путевой лист' (invoice) = DATA STRING[20] (Invoice) TABLE purchaseConsignmentInvoice IN carConsignment;

dataAddressSupplierStock 'Пункт погрузки' (invoice) = DATA STRING[250] (Invoice) TABLE purchaseConsignmentInvoice;
dataAddressCustomerStock 'Пункт разгрузки' (invoice) = DATA STRING[250] (Invoice) TABLE purchaseConsignmentInvoice;

readdressing 'Переадресовка' (invoice) = DATA STRING[50] (Invoice) TABLE purchaseConsignmentInvoice IN carConsignment;

overShipmentBase 'Основание отпуска' (invoice) = DATA STRING (Invoice) TABLE purchaseConsignmentInvoice IN issuanceConsignment;

issuanceAllowed (invoice) = DATA Employee(Invoice) TABLE purchaseConsignmentInvoice;

issuanceExecuted (invoice) = DATA Employee(Invoice) TABLE purchaseConsignmentInvoice;

dataForwarder (invoice) = DATA Employee (Invoice) TABLE purchaseConsignmentInvoice IN issuanceConsignment;
forwarder 'Товар к перевозке принял (экспедитор), должность, фамилия, инициалы' (Invoice invoice)= name[Contact](dataForwarder(invoice));

warrant 'По доверенности (номер, дата)' (invoice) = DATA STRING[50] (Invoice) TABLE purchaseConsignmentInvoice IN issuanceConsignment;
warrantHolder 'По доверенности выданной (наименование орг-ии)' (invoice) = DATA STRING[200] (Invoice) TABLE purchaseConsignmentInvoice IN issuanceConsignment;

goodsAccepted 'Принял грузополучатель' (invoice) = DATA STRING[150] (Invoice) TABLE purchaseConsignmentInvoice IN issuanceConsignment;    
sealNumberSupplier (invoice) = DATA STRING[50] (Invoice) TABLE purchaseConsignmentInvoice IN issuanceConsignment;
sealNumberCustomer (invoice) = DATA STRING[50] (Invoice) TABLE purchaseConsignmentInvoice IN issuanceConsignment;

loadingExecuter (invoice) = DATA LegalEntity(Invoice) TABLE purchaseConsignmentInvoice;
wayOfLoading (invoice) = DATA WayOfLoading(Invoice) TABLE purchaseConsignmentInvoice;

unloadingExecuter (invoice) = DATA LegalEntity(Invoice) TABLE purchaseConsignmentInvoice;
wayOfUnloading (invoice) = DATA WayOfLoading(Invoice) TABLE purchaseConsignmentInvoice;

codeLoading 'Код ПРР' (invoice) = DATA BPSTRING[3] (Invoice) TABLE purchaseConsignmentInvoice IN loadingConsignment;

defaultArrivalTime = ABSTRACT DATETIME(Invoice);
arrivalTime 'Время прибытия' (invoice) = DATA DATETIME(Invoice) TABLE purchaseConsignmentInvoice IN carConsignment;
downtime 'Время простоя' (invoice) = DATA INTEGER (Invoice) TABLE purchaseConsignmentInvoice IN carConsignment;
defaultDowntime (invoice) = ABSTRACT INTEGER (Invoice) IN carConsignment;
raceQuantity 'Количество ездок' (invoice) = DATA INTEGER (Invoice) TABLE purchaseConsignmentInvoice IN carConsignment;
raceQuantity(Invoice o) <- 1 WHEN SET(o IS Invoice);

countPages 'Кол-во страниц в приложении' (invoice) = DATA INTEGER (Invoice) TABLE purchaseConsignmentInvoice;

additionalDocuments 'С товаром переданы документы' (invoice) = DATA STRING[250] (Invoice) TABLE purchaseConsignmentInvoice;

EXTEND FORM  invoices
    PROPERTIES(i)  editAttributes
    PROPERTIES(i) SHOWIF showTTN1(i) READONLYIF banPrint(i)
                     printVerticalA, printVerticalAB, printHorizontalA,
                     printVerticalB, printHorizontalB, printAttach, printVerticalABAttach,
                     printVertical, printHorizontal, printHorizontalAB, printAttachXLS, printSimpleAttachXLS, 
                     printVerticalAttach, printHorizontalAttach 
    PROPERTIES(i) SHOWIF showTN2(i) READONLYIF banPrint(i)
                     printSimpleHorizontal, printSimpleVertical, printSimpleAttach, printSimpleVerticalAttach, printSimpleHorizontalAttach
;

DESIGN invoices {
    printTab {
        NEW consignmentRow1 {
            align = START;
            horizontal = TRUE;

            NEW contOne {
                alignment = STRETCH;
                horizontal = TRUE;
                caption = 'Накладная';
                MOVE PROPERTY(editAttributes(i)) {
                    alignment = STRETCH;
                }
            }
            NEW tn2 {
                alignment = STRETCH;
                lines = 3;
                caption = 'ТН-2';
                MOVE PROPERTY(printSimpleVertical(i));
                MOVE PROPERTY(printSimpleHorizontal(i));
                MOVE PROPERTY(printSimpleAttach(i));
                MOVE PROPERTY(printSimpleVerticalAttach(i));
                MOVE PROPERTY(printSimpleHorizontalAttach(i));
            }
        }
        NEW consignmentRow2 {
            align = START;
            lines = 3;
            caption = 'ТТН-1';
            MOVE PROPERTY(printVerticalA(i));
            MOVE PROPERTY(printVerticalAB(i));
            MOVE PROPERTY(printHorizontalA(i));
            MOVE PROPERTY(printVerticalB(i));
            MOVE PROPERTY(printHorizontalB(i));                
            MOVE PROPERTY(printAttach(i));      
            MOVE PROPERTY(printVertical(i));  
            MOVE PROPERTY(printHorizontal(i));
            MOVE PROPERTY(printHorizontalAB(i));
            MOVE PROPERTY(printVerticalAttach(i));                
            MOVE PROPERTY(printVerticalABAttach(i)); 
            MOVE PROPERTY(printHorizontalAttach(i));                
        }
        NEW consignmentRow3 {
            horizontal = TRUE;            
            NEW export {
                horizontal = TRUE;
                caption = 'Экспорт';  
                MOVE PROPERTY(printAttachXLS(i));  
                MOVE PROPERTY(printSimpleAttachXLS(i));                                                 
            }
        }    
    }
}

@implementConsignmentDocumentHeaderPrefix (invoice, invoice, Invoice);

consignmentType (Invoice consignment) += consignmentType(operation(consignment));
ownerTrackType (Invoice consignment) += ownerTrackType(operation(consignment));
banPrint (Invoice consignment) += WHEN banOpenedPrint(operation(consignment)) AND NOT isPosted(consignment)THEN TRUE;

@deriveConsignmentPropertyALL(invoice ,supplierStock);

notUseDriverTruck(Invoice c) += notUseDriverTruck(operation(c));

isInvoicePrice(InvoiceDetail d) += WHEN isInvoicePriceConsignment(operation(d)) THEN TRUE;
switchSum(InvoiceDetail d) += WHEN switchSumConsignment(operation(d)) THEN TRUE;
useEmptyVAT(InvoiceDetail d) += WHEN useEmptyVATConsignment(operation(d)) THEN TRUE;
printWithoutVAT(InvoiceDetail d) += WHEN printWithoutVAT(operation(d)) THEN TRUE;
switchSumInvoice(InvoiceDetail d) += WHEN switchSumInvoiceConsignment(operation(d)) THEN TRUE;

notUseIssuanceAllowed(Invoice c) += notUseIssuanceAllowed(operation(c));
notUseIssuanceExecuted(Invoice c) += notUseIssuanceExecuted(operation(c));
notPrintGr(Invoice c) += notPrintGr(operation(c));
useGoodsAccepted(Invoice c) += useGoodsAccepted(operation(c));
skipWaybill (Invoice consignment) += WHEN skipWaybill(operation(consignment)) THEN skipWaybill(operation(consignment));
mandatoryTruck (Invoice consignment) += WHEN mandatoryTruck(operation(consignment)) THEN mandatoryTruck(operation(consignment));
skipTruck (Invoice consignment) += WHEN skipTruck(operation(consignment)) THEN skipTruck(operation(consignment));
mandatoryDriver(Invoice consignment) += WHEN mandatoryDriver(operation(consignment)) THEN mandatoryDriver(operation(consignment));
skipDriver (Invoice consignment) += WHEN skipDriver(operation(consignment)) THEN skipDriver(operation(consignment));

defaultTruck(Invoice consignment) += WHEN isSupplier(operation(consignment)) AND truck(supplier(consignment)) THEN truck(supplier(consignment));
defaultTruck(Invoice consignment) += WHEN NOT isSupplier(operation(consignment)) AND truck(customer(consignment)) THEN truck(customer(consignment));

driver(Invoice consignment) += WHEN isSupplier(operation(consignment)) AND driver(supplier(consignment)) THEN driver(supplier(consignment));
driver(Invoice consignment) += WHEN NOT isSupplier(operation(consignment)) AND driver(customer(consignment)) THEN driver(customer(consignment));

invoiceNumber 'Номер ТТН' = DATA STRING[48] (Invoice) TABLE purchaseConsignmentInvoice IN numbered CHARWIDTH 7;
invoiceSeries 'Серия ТТН' = DATA BPSTRING[2] (Invoice) TABLE purchaseConsignmentInvoice IN numbered CHARWIDTH 3 NOFLEX; 

overSeriesNumber(Invoice c) += BPSTRING[31](CONCAT '', invoiceSeries(c), invoiceNumber(c));

EXTEND FORM invoices
    PROPERTIES (i) READONLY invoiceNumber, invoiceSeries
;
EXTEND FORM consignment
    PROPERTIES (c) invoiceNumber, invoiceSeries
;
DESIGN consignment {
    mainTab {
        NEW conNumber AFTER misc {
            horizontal = TRUE;
            caption = 'Печать ТТН';
            MOVE PROPERTY (invoiceNumber(c));
            MOVE PROPERTY (invoiceSeries(c));
        }
    }
}