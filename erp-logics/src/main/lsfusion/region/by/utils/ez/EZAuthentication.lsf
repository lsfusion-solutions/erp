MODULE EZAuthentication;

REQUIRE Utils, LotBy, LegalEntity;

NAMESPACE EZ;

TABLE authentication() NODEFAULT;

urlEZ 'Url к Web-сервису ГИС "Электронный знак"' = DATA STRING () TABLE authentication;
testWebService 'Тестовый Web-сервис' = DATA BOOLEAN () TABLE authentication;
usernameEZ 'Пользователь' = DATA STRING() TABLE authentication;
passwordEZ 'Пароль для API' = DATA STRING() ECHO TABLE authentication;
hostEZ 'Host' = DATA STRING () TABLE authentication;
token 'Токен' = DATA STRING () ECHO TABLE authentication;

ezToken = DATA LOCAL STRING () TABLE authentication;

// при всех использованиях сначала заполнять ezToken
ezHeadersLotOrder (TEXT name) = CASE
    WHEN name = 'Content-Type' THEN 'application/json; charset=utf-8'
    WHEN name = 'Host' THEN hostEZ()
    WHEN name = 'Token' THEN ezToken();

EXTEND FORM integrationData
    PROPERTIES() urlEZ, hostEZ, testWebService, usernameEZ, passwordEZ
    PROPERTIES() READONLY EZtoken = token
;

DESIGN integrationData {
    lotBy {
        NEW EZ {
            caption = 'ЭЗ';
            MOVE PROPERTY(urlEZ());
            MOVE PROPERTY(hostEZ());
            MOVE PROPERTY(testWebService());
            MOVE PROPERTY(usernameEZ());
            MOVE PROPERTY(passwordEZ());
            MOVE PROPERTY(EZtoken);
        }
    }
}

//авторизация
authorization 'Авторизация в ЭЗ' () {
    NEWSESSION {
        LOCAL result = FILE();
        TRY {
            headers('Host') <- hostEZ();
            headers('Content-Type') <- 'multipart/form-data; boundary=...';
            insecureSSL() <- TRUE;
            EXTERNAL HTTP POST urlEZ()  + '/auth'  BODYPARAMNAMES 'username', 'password' HEADERS headers PARAMS usernameEZ(), passwordEZ() TO result;
        } CATCH {
            MESSAGE messageCaughtException() NOWAIT;
            fileToString(result());
            MESSAGE resultString() NOWAIT;
        }
        fileToString(result());
        IMPORT JSON FROM result() TO() token;
        APPLY;
    }
}

EXTEND FORM integrationData
    PROPERTIES() authorization;

DESIGN integrationData {
    EZ {
        MOVE PROPERTY(authorization());
    }
}

dataUsernameEZ 'Пользователь' = DATA STRING(LegalEntity);
dataPasswordEZ 'Пароль для API' = DATA STRING(LegalEntity) ECHO;

dataToken 'Токен' = DATA STRING (LegalEntity);

useEZLegalEntity 'Использовать организации' = DATA BOOLEAN ();

EXTEND FORM integrationData
    PROPERTIES useEZLegalEntity()

    OBJECTS lez = LegalEntity
    PROPERTIES(lez) READONLY id, name
    PROPERTIES(lez) dataUsernameEZ, dataPasswordEZ, dataToken READONLY
    FILTERS isCompany(lez)
;

DESIGN integrationData {
    EZ {
        MOVE PROPERTY(useEZLegalEntity());
        MOVE BOX(lez) { showIf = useEZLegalEntity(); }
    }
}

usernameEZ(LegalEntity l) = OVERRIDE dataUsernameEZ(l), (usernameEZ() IF l IS LegalEntity);
passwordEZ(LegalEntity l) = OVERRIDE dataPasswordEZ(l), (passwordEZ() IF l IS LegalEntity);
token(LegalEntity l) = OVERRIDE (dataToken(l) IF useEZLegalEntity()), (token() IF l IS LegalEntity);

EZActive(LegalEntity l) = useEZLegalEntity() AND dataToken(l) MATERIALIZED;

authorization 'Авторизация в ЭЗ' (LegalEntity l) {
    NEWSESSION {
        LOCAL result = FILE();
        LOCAL token = STRING();

        TRY {
            headers('Host') <- hostEZ();
            headers('Content-Type') <- 'multipart/form-data; boundary=...';
            insecureSSL() <- TRUE;
            EXTERNAL HTTP POST urlEZ()  + '/auth'  BODYPARAMNAMES 'username', 'password' HEADERS headers PARAMS usernameEZ(l), passwordEZ(l) TO result;
        } CATCH {
            MESSAGE messageCaughtException() NOWAIT;
        }
        fileToString(result());
        IMPORT JSON FROM result() TO() token;
        dataToken(l) <- token();

        APPLY;
    }
}

EXTEND FORM integrationData
    PROPERTIES(lez) authorization GRID
;

getToken() {
    IF usernameEZ() THEN authorization();
}

getToken(LegalEntity l) {
    IF dataUsernameEZ(l) THEN authorization(l);
    IF usernameEZ() THEN authorization();
}