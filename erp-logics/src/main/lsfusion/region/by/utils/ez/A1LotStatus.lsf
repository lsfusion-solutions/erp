MODULE A1LotStatus;

REQUIRE EZLotStatus;

NAMESPACE A1;

urlA1 'Url к Web-сервису цифровой помошник' = DATA STRING ();
usernameA1 'Пользователь' = DATA STRING();
passwordA1 'Пароль для API' = DATA STRING() ECHO;
UID 'UID для тестирования' = DATA STRING ();

useA1ForLotStatus 'Использовать для проверки статуса марок' = DATA BOOLEAN ();

EXTEND FORM integrationData
    PROPERTIES() urlA1, usernameA1, passwordA1, UID, useA1ForLotStatus
;

DESIGN integrationData {
    lotBy {
        NEW a1 {
            caption = 'A1';
            MOVE PROPERTY(urlA1());
            MOVE PROPERTY(usernameA1());
            MOVE PROPERTY(passwordA1());
            MOVE PROPERTY(UID());
            MOVE PROPERTY(useA1ForLotStatus());
        }
    }
}

FORM exportLots
    OBJECTS codes = Lot
    PROPERTIES(codes) code EXTID 'value'
    FILTERS in(codes);


GROUP status;
code = DATA LOCAL STRING(INTEGER);
statusCode = DATA LOCAL INTEGER(INTEGER);

FORM importLotStatus
    OBJECTS codes = INTEGER
    PROPERTIES(codes) code
    PROPERTIES(codes) IN status statusCode EXTID 'code';

overGetStatus() + {
    IF useA1ForLotStatus() THEN {
        consumedGetStatus() <- TRUE;

        exception(Lot l) <- NULL WHERE in(l);
        
        encodeBase64(usernameA1() + ':' + passwordA1());
        headers('Authorization') <- 'Basic ' + encodedBase64();
        headers('UID') <- OVERRIDE UID(), hostnameCurrentComputer();
        
        WHILE countInLot() DO {
            EXPORT exportLots JSON TOP 1000;

            TRY {
                insecureSSL() <- TRUE;
                EXTERNAL HTTP POST urlA1() + '/api/check-code' HEADERS headers PARAMS exportFile() TO file;

                IMPORT importLotStatus JSON FROM file();
                status(Lot l) <- (GROUP MIN statusLot(statusCode(INTEGER i)) IF code(l) == code(i)) WHERE GROUP SUM 1 IF code(l) == code(INTEGER i);
                in(Lot l) <- NULL WHERE GROUP SUM 1 IF code(l) == code(INTEGER i);
            } CATCH {
                logToFile('ez', messageCaughtException());

                MESSAGE CONCAT ' ', 'Ошибка при обращении к A1', messageCaughtException() NOWAIT;

                NEWSESSION NESTED (messageCaughtException, resultString) {
                    exception(Lot l) <- CONCAT ', ', messageCaughtException(), resultString() WHERE in(l);
                    APPLY;
                }
                RETURN;
            }
        }
    }
    
}