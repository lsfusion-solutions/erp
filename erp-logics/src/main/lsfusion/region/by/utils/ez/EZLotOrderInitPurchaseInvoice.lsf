MODULE EZLotOrderInitPurchaseInvoice;

REQUIRE EZLotOrderInit, EZLotInitPurchaseInvoice;

NAMESPACE EZ;


registrationNumberDeclaration(LotInit i, STRING[14] gtin) = OVERRIDE registrationNumberDeclaration(i), registrationNumberDeclaration(lotOrderDetail(lastLotInitDetail(i, gtin)));
dateDeclaration(LotInit i, STRING[14] gtin) = OVERRIDE dateDeclaration(i), dateDeclaration(lotOrderDetail(lastLotInitDetail(i, gtin)));
sidOrigin2CountryDeclaration(LotInit i, STRING[14] gtin)= OVERRIDE sidOrigin2CountryDeclaration(i), sidOrigin2CountryDeclaration(lotOrderDetail(lastLotInitDetail(i, gtin)));
sidCountryDeclaration(LotInit i, STRING[14] gtin)= OVERRIDE sidCountryDeclaration(i), sidCountryDeclaration(lotOrderDetail(lastLotInitDetail(i, gtin)));

exportCountryProd () = '100';
exportCountryTest () = '130';
exportCountry 'Страна экспорта' () = IF testWebService() THEN exportCountryTest() ELSE exportCountryProd();

declarationReleaseDateProd () = '97';
declarationReleaseDateTest () = '127';
declarationReleaseDate 'Дата выпуска товаров по декларации' = IF testWebService() THEN declarationReleaseDateTest() ELSE declarationReleaseDateProd();

declarationNumberProd () = '96';
declarationNumberTest ()= '126';
declarationNumber 'Регистрационный номер декларации на товары' = IF testWebService() THEN declarationNumberTest() ELSE declarationNumberProd();

addMarkImport (LotInit i, STRING[14] gtin) + {
    listParams() <- listParams() + '  \{ "code": ' + markTarget() + ', "value": "' + codeMode(i) + '"\}';
    IF codeMethod(i) THEN listParams() <- listParams() + ', \{ "code": ' + markMethod() + ', "value": "' + codeMethod(i) + '"\}';

    IF sidCountryDeclaration(i, gtin) THEN {
        listParams() <- listParams() + ', \{ "code": ' + exportCountry() + ', "value": "' + sidCountryDeclaration(i, gtin) + '"\}';
    } ELSE {
        MESSAGE 'Не задана страна экспорта'NOWAIT;
    }

    IF registrationNumberDeclaration(i, gtin) THEN {
        listParams() <- listParams() + ', \{ "code": ' + declarationNumber() + ', "value": "' + registrationNumberDeclaration(i, gtin) + '"\}';
    } ELSE {
        MESSAGE 'Не задан номер декларации' NOWAIT;
    }

    IF toChar(dateDeclaration(i, gtin),'YYYY-MM-DD') THEN {
        listParams() <- listParams() + ', \{ "code": ' + declarationReleaseDate() + ', "value": "' + toChar(dateDeclaration(i, gtin),'YYYY-MM-DD') + '"\}';
    } ELSE {
        MESSAGE 'Не задана дата декларации' NOWAIT;
    }

    IF NOT sidCountryDeclaration(i, gtin) OR NOT registrationNumberDeclaration(i, gtin) OR NOT toChar(dateDeclaration(i, gtin),'YYYY-MM-DD') THEN
        RETURN;
}

overFill (LotInit i, LotOrder o) + {
    declaration(i) <- declaration(GROUP MIN LotOrderDetail od IF lotOrder(od) = o AND declaration(od) IS Declaration) WHERE declaration(GROUP MIN LotOrderDetail od IF lotOrder(od) = o AND declaration(od) IS Declaration);
}