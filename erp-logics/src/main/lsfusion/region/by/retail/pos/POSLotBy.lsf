MODULE POSLotBy;

REQUIRE POSLot, LotTypeBy, ZReportLotBy;

NAMESPACE POS;

ukz 'Товар подлежит маркировке УКЗ. Просканируйте марку.' = DATA LOCAL STRING[30] () CHANGEKEY 'F4;editing=all' EVENTID 'SCANNER';
changeUkz () {
    INPUT s = STRING[30] DO {
        IF regexPatternMatch(s, ukzPattern()) THEN {
            ukz() <- s;
            formOk();
        } ELSE {
            MESSAGE s + '\nНе является корректным УКЗ' NOWAIT;
        }
    }
}

FORM gialogUKZ 'Запрос марки'
    PROPERTIES ukz() ON CHANGE changeUkz()

    EVENTS ON QUERYOK {
    }
;

DESIGN gialogUKZ {
    REMOVE PROPERTY (formOk());
}

//sale
overCreateSaleDetail(ReceiptDetail d) + {
    IF UKZ(sku(d)) == TTRUE AND NOT ukz(d) AND NOT skipCheckPosLot() THEN {
        ukz() <- NULL;
        DIALOG gialogUKZ NOMANAGESESSION DO {
            ukz(d) <- ukz();
        } ELSE {
            DELETE d;
        }
    }
    IF (GROUP SUM 1 IF lot(d) == lot(ReceiptSaleDetail dd) AND receipt(d) == receipt(dd)) > 1 THEN {
        MESSAGE 'Марка уже добавлена.';
        DELETE d;
    }
    IF (GROUP SUM 1 IF ukz(d) == ukz(ReceiptSaleDetail dd) AND receipt(d) == receipt(dd)) > 1 THEN {
        MESSAGE 'Марка уже добавлена.';
        DELETE d;
    }
    IF  lot(d) AND overSkipCheckSkuPosLot(sku(d)) THEN {
        MESSAGE 'Товар легкой промышленности не относится к группе кодов ТН ВЭД 6201,6202,6302 ';
        DELETE d;
    }
}

//технические марки для начальных остатков
isTechnicalGtin(STRING[14] g) = (g == '02900002449457' OR g == '04814130000054' OR g == '04814130000030'); 

skuLot = DATA LOCAL Sku ();
barcode 'Обнаружен технический GTIN. Просканируйте штрихкод товара.' = DATA LOCAL STRING[14] () CHANGEKEY 'F4;editing=all' EVENTID 'SCANNER';
changeBarcode () {
    INPUT s = STRING[14] DO {
        IF skuBarcode(s) THEN {
            skuLot() <- skuBarcode(s);
            formOk();
        } ELSE {
            MESSAGE 'Не найден товар со штрихкодом:\n' +  s NOWAIT;
        }
    }
}

FORM gialogBarcode 'Запрос товара'
    PROPERTIES barcode() ON CHANGE changeBarcode()

    EVENTS ON QUERYOK {
    }
;

DESIGN gialogBarcode {
    REMOVE PROPERTY (formOk());
}
checkCreateLot(STRING[200] str, Receipt r) + {
    FOR Sku sk = skuFromGtin(idToGtin(str)) AND DepartmentStore dt = departmentStore(r) DO {
        IF (explicitLot(sk) OR overExplicitLot(sk, dt)) AND NOT (overSkipCheckSkuPosLot(sk) OR skipCheckPosLot() OR overSkipCheckPosLot(r)) 
        AND NOT lot(barcodeToId(str)) THEN {
            IF isTechnicalGtin(idToGtin(str)) THEN {
                DIALOG gialogBarcode NOMANAGESESSION DO {
                }
            } ELSE {
                skuLot() <- sk;
            }
            
            IF skuLot() THEN NEW l = Lot {
                id(l) <- barcodeToId(str);
                tail(l) <- barcodeToTail(str);
                sku(l) <- skuLot();
            }
        }
    }
 }
// для возврата если было продано без марки
lot 'Просканируйте марку СИ'= DATA LOCAL STRING[200] () CHANGEKEY 'F4;editing=all' EVENTID 'SCANNER';

changeLot () {
    INPUT s = STRING[200] DO {
        lot() <- s;
        formOk();
    }
}

FORM gialogLot'Запрос марки'
    PROPERTIES lot() ON CHANGE changeLot()

EVENTS ON QUERYOK {
}
;


//return
overCreateReturn(ReceiptReturnDetail d) + {
    ukz(d) <- ukz(receiptSaleDetail(d));
    ukz() <- NULL;
    IF UKZ(sku(d)) == TTRUE AND NOT ukz(d) AND NOT skipCheckPosLot() THEN {
        DIALOG gialogUKZ NOMANAGESESSION DO {
            ukz(d) <- ukz();
        } ELSE {
            DELETE d;
        }
    }
    IF (explicitLot(sku(d)) OR overExplicitLot(sku(d), departmentStore(d))) AND NOT (skipCheckPosLot() OR overSkipCheckPosLot(receipt(d)) OR overSkipCheckSkuPosLot(sku(d))) AND NOT lot(d) THEN {
        DIALOG gialogLot NOMANAGESESSION DO {
            IF skuFromGtin(idToGtin(lot())) = sku(d)  AND NOT lot(barcodeToId(lot())) AND NOT skipCreateLotOnChangeBarcode() THEN NEW l = Lot {
                id(l) <- barcodeToId(lot());
                tail(l) <- barcodeToTail(lot());
                sku(l) <- skuFromGtin(idToGtin(lot()));
            }
            FOR (Lot l = lot(barcodeToId(lot())) OR l = customLot(lot())) AND sku(d) = sku(l) DO {
                lot(d) <- l;
            }
        } ELSE {
            DELETE d;
        }
    }
}

overCreateReturn(ReceiptReturnDetail d, ReceiptSaleDetail sd) + {
    ukz(d) <- ukz(sd);
    ukz() <- NULL;
    IF UKZ(sku(d)) == TTRUE AND NOT ukz(d) AND NOT skipCheckPosLot() THEN {
        DIALOG gialogUKZ NOMANAGESESSION DO {
            ukz(d) <- ukz();
        } ELSE {
            DELETE d;
        }
    }
}

EXTEND FORM POS
    PROPERTIES(d) READONLY ukz SHOWIF UKZ(sku(d)) == TTRUE  PANEL
;

DESIGN POS {
    PANEL(d) {
         batchContainer  {
            MOVE PROPERTY(ukz(d)) {
                panelCaptionVertical = TRUE; focusable = FALSE; font = 'bold 24';
            }
        }
    }
}

overExplicitLot(Sku sk, DepartmentStore dt) += controlLot(lotType(sk)) AND dt IS DepartmentStore;
overSkipCheckSkuPosLot (Sku sk) += TRUE IF lotType(sk)==LotType.clothes AND customsGroup(defaultCountry(), sk) AND NOT isSuitableTNVEDClothes(sk);
skipShowLot (ReceiptDetail d) += TRUE IF lotType(sku(d))==LotType.clothes AND customsGroup(defaultCountry(), sku(d)) AND NOT isSuitableTNVEDClothes(sku(d));
