MODULE PurchasePriceLimitManufacturingPrice713;

REQUIRE PurchasePriceLimitManufacturingPrice, PricingSum;

NAMESPACE Purchase;

@defineOption(limitOldPricingPrice, 'Ограничивать цены по старым поставкам', BOOLEAN, pricings);

oldPricingPrice 'Предыдущая входная цена' = DATA NUMERIC[16,4] (UserInvoiceDetail);

WHEN LOCAL FORMS userInvoice (SETCHANGED(sku(UserInvoiceDetail d)) OR SETCHANGED(customerStock(d)) OR (SETCHANGED(pricingDateTime(d)) AND NOT isPosted(d)))
                             AND limitOldPricingPrice() DO {
    oldPricingPrice(d) <- (MIN prevPriceB(SystemLedgerPriceListType.manufacturingPriceStockPriceListType, sku(d), customerStock(d), pricingDateTime(d)),
                               prevPriceB(SystemLedgerPriceListType.supplierPricingPriceListType, sku(d), customerStock(d), pricingDateTime(d))) 
                          IF prevBalanceB(sku(d), customerStock(d), pricingDateTime(d)) > 0; 
}

EXTEND FORM userInvoice
    PROPERTIES(pd) SHOWIF createPricing[Invoice](i) oldPricingPrice 
                  BEFORE pricingPrice(pd) 
                  BACKGROUND IF oldPricingPrice(d) > pricingPrice(pd) THEN RGB(255,212,212) ELSE IF oldPricingPrice(d) < pricingPrice(pd) THEN RGB(212,255,212);
;

overLimitBasePrice(UserInvoiceDetail detail) += oldPricingPrice(detail) IF oldPricingPrice(detail) < (MIN manufacturingPrice(detail), price(detail));
