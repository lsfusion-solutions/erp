MODULE SaleReturnManufacturingPriceLedger;

REQUIRE SaleReturnManufacturingPrice;//, PriceListLedger;

NAMESPACE SaleReturn;

//----- Проведение по регистру изменения цены изготовителя

changeManufacturingPrice 'Проводить по регистру изменение цены изготовителя' = DATA BOOLEAN (Sale.Operation);

EXTEND FORM Sale.operation
    PROPERTIES(o) changeManufacturingPrice
;
DESIGN Sale.operation {
    showContainer {
        MOVE PROPERTY(changeManufacturingPrice(o));
    }
}

@defineDocumentInterfaceProperty (invoice, changeManufacturingPrice, 'Проводить по регистру изменение цены изготовителя');

@deriveDocumentOperationProperty(UserInvoice, changeManufacturingPrice);

EXTEND FORM userInvoice
    PROPERTIES (i) changeManufacturingPrice
;

EXTEND CLASS InvoiceDetail : PriceListLedger;

fromDateTime[PriceListLedger] (InvoiceDetail ledger) += dateTime(ledger);
isPosted[PriceListLedger](InvoiceDetail ledger) += isPosted(ledger);
sku[PriceListLedger] (InvoiceDetail ledger) += sku(ledger);
operation[PriceListLedger](InvoiceDetail ledger) += operation(ledger);
description[PriceListLedger] (InvoiceDetail ledger) += description(ledger);
company[PriceListLedger] (InvoiceDetail ledger) += supplier(ledger);

in(InvoiceDetail ledger, SystemLedgerPriceListType type) +=
    WHEN showManufacturingPrice(ledger) AND price(ledger) AND type == SystemLedgerPriceListType.manufacturingPriceStockPriceListType THEN changeManufacturingPrice(ledger);

price(InvoiceDetail ledger, SystemLedgerPriceListType type) +=
    WHEN showManufacturingPrice(ledger) AND price(ledger) AND type == SystemLedgerPriceListType.manufacturingPriceStockPriceListType AND changeManufacturingPrice(ledger) THEN manufacturingPrice(ledger);

in(InvoiceDetail ledger, Stock stock) += supplierStock(ledger) == stock;
in(InvoiceDetail ledger, Batch batch) += batch(ledger) == batch;
show[PriceListLedger] (InvoiceDetail ledger) + { show(ledger);};
