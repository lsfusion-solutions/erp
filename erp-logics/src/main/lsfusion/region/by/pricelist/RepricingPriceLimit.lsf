MODULE RepricingPriceLimit;

REQUIRE Repricing, PriceLimit, RepricingImporterMarkup;

NAMESPACE Repricing;

//------------------ Предельные надбавки ----------------------//

@defineDocumentInterfaceProperty (repricing, showLimitPrice, 'Предельная надбавка');
@defineDocumentInterfaceDetailMarkupPrefix (repricing, limit, ' предельная');



useLimitMarkupValue = ABSTRACT VALUE BOOLEAN (UserRepricingDetail);

WHEN LOCAL //FORMS userRepricing 
             (CHANGED(departmentStore(UserRepricingDetail detail)) OR
              CHANGED(sku(detail)) OR 
              CHANGED(importerMarkup(detail)) OR
              SET(showLimitPrice(detail)))
             AND showLimitPrice(detail)  DO {

    limitMarkup(detail) <- [floor(((100.0 + X)/(100 + Z)-1.0)*100.0, 0.01)](
                                            (OVERRIDE markup(priceLimitPriceListType(departmentStore(detail)), sku(detail)), limitMarkupValue() IF useLimitMarkupValue(detail)),
                                            (OVERRIDE importerMarkup(detail), 0.0));
    
}

//----------------------------------------------- Операции -----------------------------------------------------//

// Вид цены для расценки для операции
@defineDocumentHeaderProperty (operation, showLimitPrice, 'Предельная надбавка');

EXTEND FORM operation
    PROPERTIES(o) showLimitPrice
;

DESIGN operation {
    paramsContainer {
        MOVE PROPERTY(showLimitPrice(o));
    }
}

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции расценки, заданной для операции закупка
showLimitPrice (UserRepricing invoice) <- showLimitPrice(operation(invoice))
    WHEN CHANGED(operation(invoice));

EXTEND FORM userRepricing
    PROPERTIES(p) showLimitPrice
    PROPERTIES(d) SHOWIF showLimitPrice(p) BEFORE markup(d) limitMarkup
;
DESIGN userRepricing{
    GROUP(documentPrm,p) {
        MOVE PROPERTY (showLimitPrice(p));
    }
}

EXTEND FORM repricings
    PROPERTIES(d) READONLY SHOWIF showLimitPrice(p) BEFORE markup(d) limitMarkup 
;

// Имплементим для расчета оптимальной розничной цены

overLimitBasePrice = ABSTRACT NUMERIC[16,4] (UserRepricingDetail);
limitBasePrice(UserRepricingDetail d) = OVERRIDE overLimitBasePrice(d), price(d);
 
limitPrice = ABSTRACT CASE NUMERIC[16,4] (RepricingDetail);
limitPrice (UserRepricingDetail detail) += WHEN detail IS UserRepricingDetail THEN 
            round([ (X*(Y+100)/100 (+) W)*(Z+100)/100](
                    limitBasePrice(detail),
                    limitMarkup(detail),
                    retailExtraPackagingCost(detail),
                    valueVAT(detail)), roundCondition(priceLimitPriceListType(departmentStore(detail)), sku(detail)));
//                                       IF limitMarkup(detail) > 0.3 AND limitMarkup(detail) <= 1  THEN
//                                           limitMarkup(detail)
//                                       ELSE
//                                           round(
//                                           IF limitMarkup(detail) <= 0.3 THEN
//                                                [ (X+Y)*(Z+100)/100](
//                                                    limitBasePrice(detail),
//                                                    limitMarkup(detail),
//                                                    valueVAT(detail))
//                                           ELSE [ X*(Y+100)*(Z+100)/10000](
//                                                    limitBasePrice(detail),
//                                                    limitMarkup(detail),
//                                                    valueVAT(detail)), roundCondition(priceLimitPriceListType(departmentStore(detail)), sku(detail)));

calcMarkupLimitPrice = ABSTRACT CASE NUMERIC[8,3] (RepricingDetail);
calcMarkupLimitPrice(UserRepricingDetail d) += WHEN d IS UserRepricingDetail THEN
    NUMERIC[8,3]([ round2(min( (((X/(100+Y)*100 (-) W)/Z) -1)*100, 99999))](
            (retailPrice(d) - OVERRIDE extraRetailPrice(d), 0.0),
            valueVAT(d),
            retailExtraPackagingCost(d),
            repricingPrice(d)));

WHEN LOCAL FORMS userRepricing GOAFTER retailPrice[UserRepricingDetail] 
            (SETCHANGED(retailPrice(UserRepricingDetail d)) OR CHANGED(limitBasePrice(d)) OR CHANGED(limitMarkup(d))) AND //  вообще в событии должно быть это условие, но тогда не всегда срабатывает (см. skype с Vitalur за 10.07) 
             showLimitPrice(d) AND (limitPrice(d) + OVERRIDE extraRetailPrice(d), 0.0) < retailPrice(d) DO {
    retailPrice(d) <- limitPrice(d) + OVERRIDE extraRetailPrice(d), 0.0;
     
    markup(d) <- calcMarkupLimitPrice(d);
}

overShowImporterMarkup (Repricing r) += showLimitPrice(r);