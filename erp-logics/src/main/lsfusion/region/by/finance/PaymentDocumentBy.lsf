MODULE PaymentDocumentBy;

REQUIRE System,
        LegalEntityBy,
        Stock,
        Utils,
        Bank,
        Numerator;
        
NAMESPACE Payment;

CLASS ABSTRACT PaymentDocument 'Платежный документ';

date 'Дата' (paymentDocument) = ABSTRACT DATE (PaymentDocument);
number 'Номер' (paymentDocument) = ABSTRACT STRING[50] (PaymentDocument);

numberContract 'Номер договора' (paymentDocument) = ABSTRACT STRING[50] (PaymentDocument);
dateContract 'Дата договора' (paymentDocument) = ABSTRACT DATE (PaymentDocument);

notAcceptance 'Без акцепта' =  ABSTRACT BOOLEAN (PaymentDocument);

currency =  ABSTRACT Currency (PaymentDocument);
nameCurrency 'Валюта' (PaymentDocument document) = name(currency(document));
sidCurrency 'Код валюты' (PaymentDocument document) = sid(currency(document));
shortNameCurrency 'Валюта сокр.' (PaymentDocument document) = shortName(currency(document));

sum 'Сумма' = ABSTRACT NUMERIC[18,4] (PaymentDocument);

// ---------------------------------- Плательщик ---------------------------- //

accountPayer= ABSTRACT Bank.Account(PaymentDocument);
numberAccountPayer 'р/сч плательщика' (PaymentDocument document)= number(accountPayer(document));
nameBankAccountPayer 'Наименование банка плательщика' (PaymentDocument document) = nameBank(accountPayer(document)) IN account;
addressBankAccountPayer 'Адрес банка плательщика' (PaymentDocument document) = addressBank(accountPayer(document)) IN account;
MFOBankAccountPayer 'Код BIC банка плательщика' (PaymentDocument document) = MFOBank(accountPayer(document)) IN account;
departmentBankAccountPayer 'Отдел банка плательщика' (PaymentDocument document) = departmentBank(accountPayer(document)) IN account;
CBUBankAccountPayer 'ЦБУ банка плательщика' (PaymentDocument document) = CBUBank(accountPayer(document)) IN account;
fullNameBankAccountPayer= STRING[255](CONCAT ', ', nameBankAccountPayer(PaymentDocument document),
                                                                     addressBankAccountPayer(document),
                                                                     departmentBankAccountPayer(document),
                                                                     CBUBankAccountPayer(document));

payer (PaymentDocument document) = legalEntity (accountPayer(document));
UNPPayer 'УНП плательщика' (PaymentDocument document) = UNP(payer(document));
addressPayer 'Юридический адрес плательщика' (PaymentDocument document) =
    address(payer(document), date(document)) CHARWIDTH 30;
namePayer 'Полное наименование плательщика' (PaymentDocument document) = name(payer(document)) CHARWIDTH 30;

// ---------------------------------- Бенифициар ---------------------------- //

accountBeneficiaries= ABSTRACT Bank.Account(PaymentDocument);
numberAccountBeneficiaries 'р/сч бенефициара' (PaymentDocument document)= number(accountBeneficiaries(document));
nameBankAccountBeneficiaries 'Наименование банка бенефициара' (PaymentDocument document) = nameBank(accountBeneficiaries(document)) IN account;
addressBankAccountBeneficiaries 'Адрес банка бенефициара' (PaymentDocument document) = addressBank(accountBeneficiaries(document)) IN account;
MFOBankAccountBeneficiaries 'Код BIC банка бенефициара' (PaymentDocument document) = MFOBank(accountBeneficiaries(document)) IN account;
departmentBankAccountBeneficiaries 'Отдел банка бенефициара' (PaymentDocument document) = departmentBank(accountBeneficiaries(document)) IN account;
CBUBankAccountBeneficiaries 'ЦБУ банка бенефициара' (PaymentDocument document) = CBUBank(accountBeneficiaries(document)) IN account;

fullNameBankAccountBeneficiaries= STRING[255](CONCAT ', ', nameBankAccountBeneficiaries(PaymentDocument document),
                                                                          addressBankAccountBeneficiaries(document),
                                                                          departmentBankAccountBeneficiaries(document),
                                                                          CBUBankAccountBeneficiaries(document));

beneficiaries (PaymentDocument document)= legalEntity (accountBeneficiaries(document));
UNPBeneficiaries 'УНП бенефициара' (PaymentDocument document) = UNP(beneficiaries(document));
addressBeneficiaries 'Юридический адрес бенефициара' (PaymentDocument document) =
    address(beneficiaries(document), date(document)) CHARWIDTH 30;
nameBeneficiaries 'Наименование бенефициара' (PaymentDocument document) = name(beneficiaries(document)) CHARWIDTH 30;

// ---------------------------------- Корреспондент ---------------------------- //
accountCorrespondent= ABSTRACT Bank.Account(PaymentDocument);
numberAccountCorrespondent 'р/сч корреспондента' (PaymentDocument document)= number(accountCorrespondent(document));
nameBankAccountCorrespondent 'Наименование банка корреспондента' (PaymentDocument document) = nameBank(accountCorrespondent(document)) IN account;
addressBankAccountCorrespondent 'Адрес банка корреспондента' (PaymentDocument document) = addressBank(accountCorrespondent(document)) IN account;
MFOBankAccountCorrespondent 'Код BIC банка корреспондента' (PaymentDocument document) = MFOBank(accountCorrespondent(document)) IN account;
departmentBankAccountCorrespondent 'Отдел банка корреспондента' (PaymentDocument document) = departmentBank(accountCorrespondent(document)) IN account;
CBUBankAccountCorrespondent 'ЦБУ банка корреспондента' (PaymentDocument document) = CBUBank(accountCorrespondent(document)) IN account;
fullNameBankAccountCorrespondent= STRING[255](CONCAT ', ', nameBankAccountCorrespondent(PaymentDocument document),
                                                                          addressBankAccountCorrespondent(document),
                                                                          departmentBankAccountCorrespondent(document),
                                                                          CBUBankAccountCorrespondent(document));

correspondent (PaymentDocument document)= legalEntity (accountCorrespondent(document));
UNPCorrespondent 'УНП корреспондента' (PaymentDocument document) = UNP(correspondent(document));
addressCorrespondent 'Юридический адрес корреспондента' (PaymentDocument document) =
    address(correspondent(document), date(document)) CHARWIDTH 30;
nameCorrespondent 'Наименование корреспондента' (PaymentDocument document) = name(correspondent(document)) CHARWIDTH 30;

text 'Назначение платежа' = ABSTRACT TEXT(PaymentDocument);

// ------------------------------------- Очередь --------------------------------- //

CLASS FilePayment 'Очередь';
TABLE filePayment (FilePayment);

name 'Наименование' = DATA STRING[20](FilePayment) IN base;

FORM filePayment 'Очередь'
    OBJECTS t=FilePayment PANEL
    PROPERTIES(t) name
    EDIT FilePayment OBJECT t
;

FORM filePayments 'Очередь'
    OBJECTS t=FilePayment
    PROPERTIES(t) READONLY name 
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE
    ORDERS name(t)
    LIST FilePayment OBJECT t
;
DESIGN filePayments { BOX { size = (600, 400); } }

filePayment =  ABSTRACT FilePayment (PaymentDocument);
nameFilePayment 'Очередь' (PaymentDocument document) = name(filePayment(document));

// ---------------------------- Формы для платежек --------------------------------- //

META definePaymentDocumentForm(form, caption)
    FORM form###document caption
        OBJECTS c=PaymentDocument PANEL SUBREPORT

        PROPERTIES (c) date, number, notAcceptance, nameCurrency,
                       sidCurrency, shortNameCurrency, sum, numberContract, dateContract,
                       numberAccountPayer, nameBankAccountPayer, addressBankAccountPayer,
                       MFOBankAccountPayer, departmentBankAccountPayer, CBUBankAccountPayer,
                       UNPPayer, addressPayer, namePayer,
                       numberAccountBeneficiaries, nameBankAccountBeneficiaries, addressBankAccountBeneficiaries,
                       MFOBankAccountBeneficiaries, departmentBankAccountBeneficiaries, CBUBankAccountBeneficiaries,
                       UNPBeneficiaries, addressBeneficiaries, nameBeneficiaries,
                       numberAccountCorrespondent, nameBankAccountCorrespondent, addressBankAccountCorrespondent,
                       MFOBankAccountCorrespondent, departmentBankAccountCorrespondent, CBUBankAccountCorrespondent,
                       UNPCorrespondent, addressCorrespondent, nameCorrespondent,
                       text, nameFilePayment,
                       fullNameBankAccountPayer, fullNameBankAccountBeneficiaries, fullNameBankAccountCorrespondent

    ;
    print###form caption (PaymentDocument paymentDocument)  { PRINT form###document OBJECTS c = paymentDocument; }  IMAGE 'print.png' IN print;
END

@definePaymentDocumentForm(paymentRequest , 'Платежное требование');
@definePaymentDocumentForm(paymentOrder, 'Платежное поручение');

// ---------------------------- Формы для платежек (список на дату)--------------------------------- //

reportFilePrintPaymentDocumentD () = 'Payment_paymentRequestDocument_c.jrxml';

META definePaymentDocumentFormDate(form, caption)
    FORM form caption
        OBJECTS d=DATE PANEL SUBREPORT reportFilePrintPaymentDocumentD()
        PROPERTIES(d)  VALUE

        OBJECTS c=PaymentDocument
        PROPERTIES (c) date, number, notAcceptance, nameCurrency,
                       sidCurrency, shortNameCurrency, sum, numberContract, dateContract,
                       numberAccountPayer, nameBankAccountPayer, addressBankAccountPayer,
                       MFOBankAccountPayer, departmentBankAccountPayer, CBUBankAccountPayer,
                       UNPPayer, addressPayer, namePayer,
                       numberAccountBeneficiaries, nameBankAccountBeneficiaries, addressBankAccountBeneficiaries,
                       MFOBankAccountBeneficiaries, departmentBankAccountBeneficiaries, CBUBankAccountBeneficiaries,
                       UNPBeneficiaries, addressBeneficiaries, nameBeneficiaries,
                       numberAccountCorrespondent, nameBankAccountCorrespondent, addressBankAccountCorrespondent,
                       MFOBankAccountCorrespondent, departmentBankAccountCorrespondent, CBUBankAccountCorrespondent,
                       UNPCorrespondent, addressCorrespondent, nameCorrespondent,
                       text, nameFilePayment,
                       fullNameBankAccountPayer, fullNameBankAccountBeneficiaries, fullNameBankAccountCorrespondent
        FILTERS  date(c)==d
    ;
    printPaymentRequestDocument caption (DATE date)  { PRINT form OBJECTS d = date; }  IMAGE 'print.png' IN print;
END

@definePaymentDocumentFormDate(paymentRequestDocumentDate , 'Список П/Т за день');

// ----------------- Implement Платежки --------------- //


META definePaymentDocument (object)
    @definePaymentDocumentInner (object, ###object);
END

META definePaymentDocumentInner (object, class)

    text 'Назначение платежа' = DATA TEXT(class);

    notAcceptance 'Без акцепта' =  DATA BOOLEAN (class);

    filePayment =  DATA FilePayment (class);
    nameFilePayment 'Очередь' (class object) = name(filePayment(object)) IN documentPrm;
END

META implementPaymentDocument (concrete)
    @implementPaymentDocumentInner (concrete, ###concrete);
END
META implementPaymentDocumentInner (concrete, class)
    EXTEND CLASS class : PaymentDocument;

    date[PaymentDocument] (class document) += date(document);
    number[PaymentDocument] (class document) += seriesNumber(document);
    numberContract[PaymentDocument] (class document) += seriesNumberContract(document);
    dateContract[PaymentDocument] (class document) += dateContract(document);

    accountPayer[PaymentDocument] (class document) += accountFrom(document);
    accountBeneficiaries[PaymentDocument] (class document) += accountTo(document);

    notAcceptance[PaymentDocument] (class document) += notAcceptance(document);
    currency[PaymentDocument] (class document) += currency(contract(document));
    sum[PaymentDocument] (class document) += sum(document);
    text[PaymentDocument] (class document) += text(document);
    filePayment[PaymentDocument] (class document) += filePayment(document);

END
META extendFormPaymentDocument (form, concrete, object, container)
    EXTEND FORM  form
        PROPERTIES(concrete) notAcce##concrete##tance, nameFile###concrete##ayment, text;

    DESIGN  form {
        paramContainer {
            MOVE PROPERTY(notAcce##concrete##tance(concrete));
            MOVE PROPERTY(nameFile###concrete##ayment(concrete));
        }
        MOVE PROPERTY(text(concrete)) AFTER paramContainer {
            panelCaptionVertical = TRUE;
            alignment = STRETCH;
        }
    }
END