MODULE PurchaseReturnInvoiceGeneralLedger;

REQUIRE GeneralLedger, PurchaseReturnInvoice, DimensionLegalEntity, DimensionStock, DimensionTax;

NAMESPACE PurchaseReturn;

//------------------- Приход товара/тары от поставщ. --------------------//

EXTEND CLASS Invoice : GeneralLedger.GLDocument;
isPosted[GLDocument](Invoice document) += isPosted(document);
name[GLDocument](Invoice document) += description(document);

number[GLDocument](Invoice document) += number(document);
series[GLDocument](Invoice document) += series(document);

dateTime[GLDocument](Invoice document) += dateTime(document);
operation[GLDocument](Invoice document) += operation(document);
//editGLDocument (GLDocument)+= editInvoice(GLDocument);

description(Invoice invoice, Range range) =  CONCAT ', ', description(invoice),
                                                       staticCaption(tax(range)),
                                                       'шкала' + number(range),
                                                       'тек.ставка' + valueRate(range, date(invoice)); 
                                                          
///////////////////////// Сторно ///////////////////////////
//-------------------------------- НДС поставщика с разбивкой по ставке----------------------------------//
//-- Тара
negativeVATSumContainerInvoiceDetail (Invoice invoice, Range range) = -VATSumContainerInvoiceDetail(invoice, range);
@defineGeneralLedgerAggregationOperation (invoice,                                      // основание
                                          range,                                        // шкала
                                          InvSupVATC,                                   // идентификатор
                                          customer,                                     // компания
                                          negativeVATSumContainerInvoiceDetail,          // сумма
                                          description,                                  // описание
                                          '18.5',                                       // дебет
                                          '60.1',                                       // кредит
                                          'by_default',                                 // идентификатор плана счетов
                                          'by_default_purchase_invoice'                         // идентификатор операции
                                          );
debit(InvSupVATCGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATCGeneralLedger AND dimensionType == DimensionType.stock THEN customerStock(invoice(generalLedger));
debit(InvSupVATCGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATCGeneralLedger AND dimensionType == DimensionType.range THEN range(generalLedger);

credit(InvSupVATCGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATCGeneralLedger AND dimensionType == DimensionType.organization THEN supplier(invoice(generalLedger));
idOperation(InvSupVATCGeneralLedger l) += '01' IF l IS InvSupVATCGeneralLedger;    

//-- Услуги
negativeVATSumChargeInvoiceDetail (Invoice invoice, Range range) = -VATSumChargeInvoiceDetail(invoice, range);

@defineGeneralLedgerAggregationOperation (invoice,
                                          range,
                                          InvSupVATCH,
                                          customer,
                                          negativeVATSumChargeInvoiceDetail,
                                          description,
                                          '18.6',
                                          '60.1',
                                          'by_default',
                                          'by_default_purchase_invoice'
                                          );
debit(InvSupVATCHGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATCHGeneralLedger AND dimensionType == DimensionType.stock THEN customerStock(invoice(generalLedger));
debit(InvSupVATCHGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATCHGeneralLedger AND dimensionType == DimensionType.range THEN range(generalLedger);

credit(InvSupVATCHGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATCHGeneralLedger AND dimensionType == DimensionType.organization THEN supplier(invoice(generalLedger));
idOperation(InvSupVATCHGeneralLedger l) += '01' IF l IS InvSupVATCHGeneralLedger;    

//-- Товар
negativeVATSumItemInvoiceDetail (Invoice invoice, Range range) = -VATSumItemInvoiceDetail(invoice, range);

@defineGeneralLedgerAggregationOperation (invoice,
                                          range,
                                          InvSupVATI,
                                          customer,
                                          negativeVATSumItemInvoiceDetail,
                                          description,
                                          '18.1',
                                          '60.1',
                                          'by_default',
                                          'by_default_purchase_invoice'
                                          );
debit(InvSupVATIGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATIGeneralLedger AND dimensionType == DimensionType.stock THEN customerStock(invoice(generalLedger));
debit(InvSupVATIGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATIGeneralLedger AND dimensionType == DimensionType.range THEN range(generalLedger);
credit(InvSupVATIGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupVATIGeneralLedger AND dimensionType == DimensionType.organization THEN supplier(invoice(generalLedger));
idOperation(InvSupVATIGeneralLedger l) += '01' IF l IS InvSupVATIGeneralLedger;    

//-------------------------------- Сумма поставщика ----------------------------------//
//-- Тара
negativeSumContainerInvoiceDetail (Invoice invoice) = -sumContainerInvoiceDetail(invoice);

@defineGeneralLedgerAggregationOperation (invoice,
                                          InvSupC,
                                          customer,
                                          negativeSumContainerInvoiceDetail,
                                          description,
                                          '41.3',
                                          '60.1',
                                          'by_default',
                                          'by_default_purchase_invoice'
                                          );
debit(InvSupCGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupCGeneralLedger AND dimensionType == DimensionType.stock THEN customerStock(invoice(generalLedger));
credit(InvSupCGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupCGeneralLedger AND dimensionType == DimensionType.organization THEN supplier(invoice(generalLedger));
idOperation(InvSupCGeneralLedger l) += '01' IF l IS InvSupCGeneralLedger;    

//-- Товар
negativeSumItemInvoiceDetail (Invoice invoice) = -sumItemInvoiceDetail(invoice);

@defineGeneralLedgerAggregationOperation (invoice,
                                          InvSupIH,
                                          customer,
                                          negativeSumItemInvoiceDetail,
                                          description,
                                          '41.2',
                                          '60.1',
                                          'by_default',
                                          'by_default_purchase_invoice'
                                          );
debit(InvSupIHGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupIHGeneralLedger AND dimensionType == DimensionType.stock THEN customerStock(invoice(generalLedger));
credit(InvSupIHGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS InvSupIHGeneralLedger AND dimensionType == DimensionType.organization THEN supplier(invoice(generalLedger));
idOperation(InvSupIHGeneralLedger l) += '01' IF l IS InvSupIHGeneralLedger;    

// ----------------------------------- Стандартные данные ----------------------------------- //

//@defineLoadDefaultOperation (Purchase, iname, isid){
//    @defineLoadDefaultOperationPrefix (Purchase, iname, isid, ){
//    loadDefaultOperation 'Добавить значение операций'(ISTRING[100] iname, ISTRING[100] isid)  { 
//        NEW t = Purchase.Operation {
//            name(t) <- iname;
//            id (t) <- isid;
//        }
//    }
//};
//};
//loadDefaultOperationsPurchaseInvoiceBy 'Загрузить стандартные операции прихода товара' ()  { 
//    EXEC loadDefaultOperation ('Приход товара от поставщика', 'by_default_purchase_invoice');
//} ;
//
//loadDefaultOperations () + {  loadDefaultOperationsPurchaseInvoiceBy(); }

@extendFormGeneralLedgerDocument(invoices, i);