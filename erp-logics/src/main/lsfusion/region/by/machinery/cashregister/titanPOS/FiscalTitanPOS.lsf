MODULE FiscalTitanPOS;

REQUIRE System, POS, OperationTitanPOS, Utils;

// открытие смены
fiscalOpenZReport() + {
    IF sidModelCurrentCashRegister() == 'titanPOS' THEN {
        // Внимание: Z будет все равно открыт, даже если будет ошибка (подключения)
        // любая фин. операция откроет смену, если ошибка подключения будет устранена
        eqOpenShift(currentCashRegister(),NULL); 
        IF NOT titanECode() THEN apply();
    }
}


// Перемещение денег cashOperation
fiscalService(CashOperation cashOperation) + {
    CASE
        WHEN sidCashRegisterModel(cashOperation) == 'titanPOS' AND sum(cashOperation) > 0 THEN {
            eqCashInCome(currentCashRegister(),NUMERIC[10,2](sum(cashOperation))); // внесение
            IF NOT titanECode() THEN apply();
        }
        WHEN sidCashRegisterModel(cashOperation) == 'titanPOS' AND sum(cashOperation) < 0 THEN {
            eqCashOutCome(currentCashRegister(),NUMERIC[10,2](abs(sum(cashOperation)))); // изъятие
            IF NOT titanECode() THEN apply();
        }
}

// X-отчет
fiscalXReport() + {  IF sidModelCurrentCashRegister() == 'titanPOS' THEN eqXReport(currentCashRegister()); }

// Наличные в кассе
fiscalCashSum() + {  IF sidModelCurrentCashRegister() == 'titanPOS' THEN eqCashMoney(currentCashRegister());}

// Z-отчет
fiscalZReport() + {
    IF sidModelCurrentCashRegister() == 'titanPOS' THEN {
        eqZReport(currentCashRegister());
        IF NOT titanECode() THEN closeCurrentZReport();
    }
}

// Напечатать чек
postPrint(Receipt receipt) + {
    IF sidModelCurrentCashRegister() == 'titanPOS' THEN {
        titanECode() <- NULL;
        IF NOT fiscalSkip(receipt) THEN 
            eqSale(currentCashRegister(),receipt); // Пропускать, если флаг Отключить ФР
        IF NOT titanECode() THEN {
            apply();
            createCurrentReceipt();
        } // ELSE cancel(receipt); - не отменяем, чтоб не сбрасывать чек, мало какие ошибки
    }
}

// Аннулировать чек: условие наличия интерфейса
showifFiscalResetReceipt() += IF sidModelCurrentCashRegister() == 'titanPOS' THEN TRUE;

// Аннулировать чек: обработка
fiscalResetReceiptCashRegister(Receipt receipt) + {
    IF sidModelCurrentCashRegister() == 'titanPOS' THEN {
        titanECode() <- NULL;
        IF NOT fiscalSkip(receipt) THEN
            eqReset(currentCashRegister(),receipt);
        IF NOT titanECode() THEN {
            dataSkip(receipt) <- TRUE;
            resetted(receipt) <- TRUE;
            apply();
        }
    }
}

// отрезать чек
fiscalCutReceipt() + { IF sidModelCurrentCashRegister() == 'titanPOS' THEN MESSAGE 'Операция не поддерживается'; }

// прогон ленты
fiscalAdvancePaper() + { IF sidModelCurrentCashRegister() == 'titanPOS' THEN MESSAGE 'Операция не поддерживается'; }

// копия документа
fiscalPrintCopyReceipt() + { IF sidModelCurrentCashRegister() == 'titanPOS' THEN eqCopyDoc(currentCashRegister()); } 

couponText 'Текст купонов' = ABSTRACT TEXT (Receipt);