MODULE StructureTitanPOSCommon;
// Здесь содержаться общие определения без привязки к рознице или опту

REQUIRE CashRegister;

NAMESPACE StructureTitanPOS; // чтобы не послетали настройки для уже работающих объектов

titanPort 'Порт (titanPOS)'               = DATA STRING[10] (CashRegister);
titanPin  'PIN код (titanPOS)'            = DATA STRING[10] (CashRegister);
titanBarcode 'Код в чеке (titanPOS)'      = DATA BOOLEAN (CashRegister) CHARWIDTH 10;
titanTax 'НДС в чеке (titanPOS)'          = DATA BOOLEAN (CashRegister) CHARWIDTH 10;
titanSid 'ID сессии (titanPOS)'           = DATA STRING (CashRegister) CHARWIDTH 10;
titanCashDrawer 'Ден. ящик (titanPOS)'    = DATA BOOLEAN (CashRegister) CHARWIDTH 10;
titanVersion 'Версия ПО (titanPOS)'       = DATA NUMERIC[10,5] (CashRegister) CHARWIDTH 12;
titanNotInfoBonus 'Не выводить инф. о бонусах (titanPOS)' = DATA BOOLEAN (CashRegister) CHARWIDTH 15;

EXTEND FORM groupCashRegister
    PROPERTIES (c) SHOWIF sidModel(grc) = 'titanPOS'
    titanVersion, titanPort, titanPin, titanBarcode, titanTax, titanCashDrawer, titanNotInfoBonus, titanSid
;

version 'Версия titanPOS' (CashRegister o) = OVERRIDE titanVersion(o),0;
vid 'Версия titanPOS' = version(currentCashRegister());
delChar 'Удаление незначащих нулей и точек' (NUMERIC n) = replace(toChar(n,'FM99999999999.999999') + ' ','. ','');

// Локальные внутренние свойства
// ---------------------------------------------------------
titanResult 'Ответ от СКО' = DATA LOCAL FILE ();
titanEMessage 'Текст ошибки' = DATA LOCAL STRING ();
titanECode 'Код ошибки' = DATA LOCAL INTEGER ();

// ПРИЕМ ДАННЫХ
// ---------------------------------------------------------
// форма стандартного приема
status 'Код статуса' = DATA LOCAL INTEGER ();
error 'Текст ошибки' = DATA LOCAL STRING();
titanKey 'ID сессии' = DATA LOCAL STRING();

// + получение статуса 
registerId 'Регистрационный номер ПК' = DATA LOCAL STRING();
firstDocNumber 'Номер первого кассового документа в смене или 0, если смена не открыта' = DATA LOCAL NUMERIC();
shiftOpened 'Признак открытой/закрытой кассовой смены' = DATA LOCAL BOOLEAN ();
receiveCashier 'Кассир открывший смену' = DATA LOCAL STRING ();
certExpDate 'Срок действия сертификата СКО (дата и время)' = DATA LOCAL DATETIME();
totalSum 'Сумма наличных денег в кассе' = DATA LOCAL NUMERIC();
docNumber 'Номер следующего кассового документа или 0, если смена не открыта' = DATA LOCAL NUMERIC();
resetDocNumber 'Номер аннулируемого документа' = DATA LOCAL NUMERIC();
model 'Модель СКО' = DATA LOCAL STRING();
serial 'Серийный номер СКО' = DATA LOCAL STRING();


revocationServiceStatus 'Пустая строка или текст ошибки обновления СОС' = DATA LOCAL STRING();
eventsCount 'Количество неотправленных событий программной кассы' = DATA LOCAL NUMERIC();
docsCount ' Количество не отправленных документов программной кассы' = DATA LOCAL NUMERIC();
documentsSenderStatus 'Пустая строка или текст ошибки отправки документов' = DATA LOCAL STRING();
eventsSenderStatus 'Пустая строка или текст ошибки отправки документов' = DATA LOCAL STRING();
number 'Номер Z отчета или чека' = DATA LOCAL STRING ();
position 'Дата и время документа' = DATA LOCAL DATETIME ();

FORM receiveForm 'Принятые данные'
    PROPERTIES() status EXTID 'Status', error EXTID 'Error', titanKey EXTID 'TitanKey'
    PROPERTIES() registerId EXTID 'RegisterId', revocationServiceStatus EXTID 'RevocationServiceStatus',
        eventsCount EXTID 'EventsCount', firstDocNumber EXTID 'FirstDocNumber', shiftOpened EXTID 'ShiftOpened',
        receiveCashier EXTID 'Cashier', docsCount EXTID 'DocsCount', documentsSenderStatus EXTID 'DocumentsSenderStatus',
        serial EXTID 'Serial', certExpDate EXTID 'CertExpDate', totalSum EXTID 'TotalSum', docNumber EXTID 'DocNumber',
        model EXTID 'Model', eventsSenderStatus EXTID 'EventsSenderStatus',
        number EXTID 'Number', position EXTID 'Position'
;

// для версии старше 2.1
docDateRep 'Дата и время документа' = DATA LOCAL DATETIME ();
docNumberRep 'Номер Z-отчета' = DATA LOCAL STRING[48] ();

FORM receiveFormRep 'Принятые данные: отчеты Z,X'
    PROPERTIES() status EXTID 'Status', error EXTID 'Error', titanKey EXTID 'TitanKey'
    PROPERTIES() docDateRep EXTID 'DocDate', docNumberRep EXTID 'DocNumber'
;

// ПЕРЕДАЧА ДАННЫХ
// ---------------------------------------------------------
pin = DATA LOCAL STRING ();
sendCashier = DATA LOCAL STRING ();

// Формы запросов 
FORM sendOpen 'Открытие сеанса с СКО'
    PROPERTIES () titanKey EXTID 'TitanKey',pin EXTID 'Pin', sendCashier EXTID 'Cashier';

FORM sendForm 'Передача: init, info, close, openshift, closeShift'
    PROPERTIES () titanKey EXTID 'TitanKey';


// Внесение, изъятия
sendTotalSum 'Сумма' = DATA LOCAL NUMERIC[10,2] ();
isDeposit  'Флаг внесения / изъятия' = DATA LOCAL TBOOLEAN ();

FORM sendInOutMoney 'Внесение / изъятия'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES () sendTotalSum EXTID 'TotalSum', isDeposit EXTID 'IsDeposit';

FORM sendResetDocNumber 'Аннулировние чека'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES () resetDocNumber EXTID 'ChequeNumber';

// Копии документов
copyDocNumber 'Копия документа' = DATA LOCAL INTEGER ();
copyZReport 'Копия Z отчета' = DATA LOCAL INTEGER ();

FORM sendCopyDocNumber 'Копия документа'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES () copyDocNumber EXTID 'ChequeNumber', copyZReport EXTID 'Number';

text 'Произвольный текст' = DATA TEXT ();
FORM textForm
    PROPERTIES () titanKey EXTID 'TitanKey', text EXTID 'Text'
;    
