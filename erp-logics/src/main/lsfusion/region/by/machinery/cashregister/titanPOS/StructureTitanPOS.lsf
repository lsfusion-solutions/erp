MODULE StructureTitanPOS;

REQUIRE POS, ZReportLot, Utils;

titanPort 'Порт (titanPOS)'               = DATA STRING[10] (CashRegister);
titanPin  'PIN код (titanPOS)'            = DATA STRING[10] (CashRegister);
titanBarcode 'Код в чеке (titanPOS)'      = DATA BOOLEAN (CashRegister) CHARWIDTH 10;
titanTax 'НДС в чеке (titanPOS)'          = DATA BOOLEAN (CashRegister) CHARWIDTH 10;
titanSid 'ID сессии (titanPOS)'           = DATA STRING (CashRegister) CHARWIDTH 10;
titanCashDrawer 'Ден. ящик (titanPOS)'    = DATA BOOLEAN (CashRegister) CHARWIDTH 10;
titanVersion 'Версия ПО (titanPOS)'       = DATA NUMERIC[10,5] (CashRegister) CHARWIDTH 12;
titanNotInfoBonus 'Не выводить инф. о бонусах (titanPOS)' = DATA BOOLEAN (CashRegister) CHARWIDTH 15;

EXTEND FORM groupCashRegister
    PROPERTIES (c) SHOWIF sidModel(grc) = 'titanPOS' 
        titanVersion, titanPort, titanPin, titanBarcode, titanTax, titanCashDrawer, titanNotInfoBonus, titanSid 
;

version 'Версия titanPOS' (CashRegister o) = OVERRIDE titanVersion(o),0;
vid 'Версия titanPOS' = version(currentCashRegister()); 
delChar 'Удаление незначащих нулей и точек' (NUMERIC n) = replace(toChar(n,'FM99999999999.999999') + ' ','. ',''); 

// Локальные внутренние свойства
// ---------------------------------------------------------
titanResult 'Ответ от СКО' = DATA LOCAL FILE ();
titanEMessage 'Текст ошибки' = DATA LOCAL STRING ();
titanECode 'Код ошибки' = DATA LOCAL INTEGER ();

// ПРИЕМ ДАННЫХ
// ---------------------------------------------------------
// форма стандартного приема
status 'Код статуса' = DATA LOCAL INTEGER ();
error 'Текст ошибки' = DATA LOCAL STRING();
titanKey 'ID сессии' = DATA LOCAL STRING();

// + получение статуса 
registerId 'Регистрационный номер ПК' = DATA LOCAL STRING();
firstDocNumber 'Номер первого кассового документа в смене или 0, если смена не открыта' = DATA LOCAL NUMERIC();
shiftOpened 'Признак открытой/закрытой кассовой смены' = DATA LOCAL BOOLEAN ();
receiveCashier 'Кассир открывший смену' = DATA LOCAL STRING ();
certExpDate 'Срок действия сертификата СКО (дата и время)' = DATA LOCAL DATETIME();
totalSum 'Сумма наличных денег в кассе' = DATA LOCAL NUMERIC();
docNumber 'Номер следующего кассового документа или 0, если смена не открыта' = DATA LOCAL NUMERIC();
resetDocNumber 'Номер аннулируемого документа' = DATA LOCAL NUMERIC();
model 'Модель СКО' = DATA LOCAL STRING();
serial 'Серийный номер СКО' = DATA LOCAL STRING();


revocationServiceStatus 'Пустая строка или текст ошибки обновления СОС' = DATA LOCAL STRING();
eventsCount 'Количество неотправленных событий программной кассы' = DATA LOCAL NUMERIC();
docsCount ' Количество не отправленных документов программной кассы' = DATA LOCAL NUMERIC();
documentsSenderStatus 'Пустая строка или текст ошибки отправки документов' = DATA LOCAL STRING();
eventsSenderStatus 'Пустая строка или текст ошибки отправки документов' = DATA LOCAL STRING();
number 'Номер Z отчета или чека' = DATA LOCAL STRING ();
position 'Дата и время документа' = DATA LOCAL DATETIME ();

FORM receiveForm 'Принятые данные'
    PROPERTIES() status EXTID 'Status', error EXTID 'Error', titanKey EXTID 'TitanKey'
    PROPERTIES() registerId EXTID 'RegisterId', revocationServiceStatus EXTID 'RevocationServiceStatus',
        eventsCount EXTID 'EventsCount', firstDocNumber EXTID 'FirstDocNumber', shiftOpened EXTID 'ShiftOpened',
        receiveCashier EXTID 'Cashier', docsCount EXTID 'DocsCount', documentsSenderStatus EXTID 'DocumentsSenderStatus',
        serial EXTID 'Serial', certExpDate EXTID 'CertExpDate', totalSum EXTID 'TotalSum', docNumber EXTID 'DocNumber',
        model EXTID 'Model', eventsSenderStatus EXTID 'EventsSenderStatus',
        number EXTID 'Number', position EXTID 'Position' 
;

// для версии старше 2.1
docDateRep 'Дата и время документа' = DATA LOCAL DATETIME ();
docNumberRep 'Номер Z-отчета' = DATA LOCAL STRING[48] ();

FORM receiveFormRep 'Принятые данные: отчеты Z,X'
    PROPERTIES() status EXTID 'Status', error EXTID 'Error', titanKey EXTID 'TitanKey'
    PROPERTIES() docDateRep EXTID 'DocDate', docNumberRep EXTID 'DocNumber'
;

// ПЕРЕДАЧА ДАННЫХ
// ---------------------------------------------------------
pin = DATA LOCAL STRING ();
sendCashier = DATA LOCAL STRING ();

// Формы запросов 
FORM sendOpen 'Открытие сеанса с СКО'
    PROPERTIES () titanKey EXTID 'TitanKey',pin EXTID 'Pin', sendCashier EXTID 'Cashier';

FORM sendForm 'Передача: init, info, close, openshift, closeShift'
    PROPERTIES () titanKey EXTID 'TitanKey';


// Внесение, изъятия
sendTotalSum 'Сумма' = DATA LOCAL NUMERIC[10,2] ();
isDeposit  'Флаг внесения / изъятия' = DATA LOCAL TBOOLEAN ();

FORM sendInOutMoney 'Внесение / изъятия'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES () sendTotalSum EXTID 'TotalSum', isDeposit EXTID 'IsDeposit';

FORM sendResetDocNumber 'Аннулировние чека'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES () resetDocNumber EXTID 'ChequeNumber';

// Копии документов
copyDocNumber 'Копия документа' = DATA LOCAL INTEGER ();
copyZReport 'Копия Z отчета' = DATA LOCAL INTEGER ();

FORM sendCopyDocNumber 'Копия документа'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES () copyDocNumber EXTID 'ChequeNumber', copyZReport EXTID 'Number';

// Чек продажи / возврат
// Особенности:
// detailDiscountLabel: как DiscountLabel - не используем, возможно отменят в 24г., используем как Footer 
// в КСА 3 счктчика оплаты: 1 - наличные, 2 - банковская карта, 3 - прочие
GROUP goods EXTID 'Goods';

receiptRefund 'Признак: false - продажа, true - возврат' = DATA LOCAL TBOOLEAN ();
receiptDiscountLabel 'Описание скидки на чек' = DATA LOCAL STRING();
receiptDiscountSum 'Сумма скидки на чек' = DATA LOCAL NUMERIC();
receiptTotalSum 'Общая сумма чека с учетом скидок' = DATA LOCAL NUMERIC();
receiptSendEmail 'Флаг отправки почты' = DATA LOCAL TBOOLEAN ();
receiptEmail 'Почтовый адрес' = DATA LOCAL STRING();
receiptHeader 'Текст перед чеком'= DATA LOCAL STRING();
receiptFooter 'Текст после чека'= DATA LOCAL STRING();
// ---------------------------------------------------
// см. POSElemaRB - типы платежей, строка 188
paymentSum 'Сумма' (Payment p) = IF receiptRefund() = TTRUE THEN abs(sum(p)) ELSE sum(p);

paymentDescription 'Название оплаты' (Payment p) = namePaymentType(p);
//paymentDescription 'Название оплаты' (Payment p) = namePaymentType(p) + ', ' + sidPaymentType(p); // отладка 

paymentTypeFlag 'Тип расчета' = ABSTRACT VALUE INTEGER(Payment);
paymentTypeFlag (Payment p) += IF sidPaymentType(p) = 'cash' THEN 1 ELSE IF sidPaymentType(p) = 'card' THEN 2 ELSE 3; 
// ---------------------------------------------------
detailQuantity 'Количество товара' (ReceiptDetail o) = quantity(o);
detailPrice 'Цена товара' (ReceiptDetail o) = price(o);

// печатается, как Footer, возможно не будет поддерживаться, как и DiscountLabel
detailDiscountLabel 'Описание скидки на товара'  = ABSTRACT VALUE STRING(ReceiptDetail); 

detailDiscountSum 'Сумма скидки на товар' (ReceiptDetail o) = discountSum(o) (+) bonusPaid(o);
detailTotalSum 'Сумма товара' (ReceiptDetail o) = sum(o);

detailName 'Название товара' (ReceiptDetail o) = 
    IF type(o) = 'Сертификат' THEN 'Подарочный сертификат' ELSE overNameSku(o); //CONCAT '',overNameSku(o),IF idBarcode(o) THEN ' / '+ idBarcode(o);

// Вид кода товара: 0 - без кода, 1 - EAN13 (товар), 3 - услуга, 4 - сертификат
//detailCodeType  'Вид кода товара' (ReceiptDetail o) = IF idBarcode(o) THEN 1 ELSE 1;
detailCodeType  'Вид кода товара' (ReceiptDetail o) = 
    IF type(o) = 'Сертификат' THEN 4 ELSE                       // продажа сертификат
    IF skuType(sku(o)) = SkuType.skuTypeItem THEN 1 ELSE        // товар
    IF skuType(sku(o)) = SkuType.skuTypeCharge THEN 3 ELSE 0;   // услуга, иначе 0 

//detailBarcode 'Код товара' (ReceiptDetail o) = IF titanBarcode(currentCashRegister()) THEN idBarcode(o);
//detailBarcode 'Код товара' (ReceiptDetail o) = 
//    IF NOT(vid() > 2.1) THEN (IF titanBarcode(currentCashRegister()) THEN idBarcode(o) ELSE NULL) ELSE idBarcode(o);
detailBarcode 'Код товара' (ReceiptDetail o) = 
    IF NOT(vid() > 2.1) THEN (IF titanBarcode(currentCashRegister()) THEN GTINBarcode(sku(o)) ELSE NULL) ELSE GTINBarcode(sku(o));

detailHideCodes 'Скрывать код товара в чеке, версия старше 2.1' (ReceiptDetail o) = 
    IF o THEN IF titanBarcode(currentCashRegister()) THEN TFALSE ELSE TTRUE;

detailTax 'Ставка НДС' = ABSTRACT VALUE INTEGER(ReceiptDetail); 
detailTax (ReceiptDetail o) += IF titanTax(currentCashRegister()) AND valueVAT(o) THEN
    IF valueVAT(o) = 20 THEN 1 ELSE 
    IF valueVAT(o) = 10 THEN 2 ELSE 
    IF valueVAT(o) =  0 THEN 3 ELSE NULL;

detailDepartament 'Код отдела КСА' = ABSTRACT VALUE INTEGER (ReceiptDetail);
detailMarka 'Код марки' (ReceiptDetail o) = IF vid() > 2.1 AND idLot(o) THEN encodeText((CONCAT '', idLot(o), tailLot(o)),'base64');
   
FORM saleForm 'Продажа и возврат, кроме возврата со скидкой для версии старше 2.1'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES() receiptRefund EXTID 'Refund',
        receiptDiscountSum EXTID 'DiscountSum',
        receiptTotalSum EXTID 'TotalSum', receiptSendEmail EXTID 'SendEmail', receiptEmail EXTID 'Email',
        receiptHeader EXTID 'Header', receiptFooter EXTID 'Footer'  // нет ограничений по длине, только для версии 2.1

    OBJECTS payments = Payment EXTID 'Payments'
    PROPERTIES(payments) paymentTypeFlag EXTID 'TypeFlag',
        paymentSum EXTID 'Sum',
        paymentDescription EXTID 'Description'
    FILTERS IF paymentSum(payments) AND abs(paymentSum(payments)) > 0 THEN TRUE ELSE NULL

    OBJECTS lines = ReceiptDetail EXTID 'Lines'
    PROPERTIES(lines) detailQuantity EXTID 'Quantity', detailPrice EXTID 'Price',
        detailTax EXTID 'Tax',
        detailDiscountSum EXTID 'DiscountSum', detailDiscountLabel EXTID 'Footer',
        detailTotalSum EXTID 'TotalSum',
        detailDepartament EXTID 'Departament',
        detailHideCodes EXTID 'HideCodes',
        detailMarka EXTID 'MarkSI'

    PROPERTIES(lines) IN goods detailBarcode EXTID 'Barcode', detailCodeType EXTID 'CodeType', detailName EXTID 'Name'
;


detailQuantityDsc (ReceiptDetail o) = IF o THEN 1;
detailPriceDsc (ReceiptDetail o) = sum(o);
detailNameDsc (ReceiptDetail o) = 
    IF discountSum(o) (+) bonusPaid(o) THEN detailName(o) + '\n' + 
    '( возврат ' + delChar(quantity(o)) + ' ед. товара по цене ' + delChar(detailPrice(o)) + ' руб. ' +  
    'с учетом ранее предоставленной суммы скидки ' + delChar(discountSum(o) (+) bonusPaid(o)) + ' руб. )'
    ELSE detailName(o);

FORM returnForm 'Возврат товара со скидкой, версия > 2.1'
    PROPERTIES () titanKey EXTID 'TitanKey'
    PROPERTIES() receiptRefund EXTID 'Refund',
        receiptTotalSum EXTID 'TotalSum', receiptSendEmail EXTID 'SendEmail', receiptEmail EXTID 'Email',
        receiptHeader EXTID 'Header', receiptFooter EXTID 'Footer'  // нет ограничений по длине

    OBJECTS payments = Payment EXTID 'Payments'
    PROPERTIES(payments) paymentTypeFlag EXTID 'TypeFlag',
        paymentSum EXTID 'Sum',
        paymentDescription EXTID 'Description'
    FILTERS IF paymentSum(payments) AND abs(paymentSum(payments)) > 0 THEN TRUE ELSE NULL

    OBJECTS lines = ReceiptDetail EXTID 'Lines'
    PROPERTIES(lines) detailQuantityDsc EXTID 'Quantity', detailPriceDsc EXTID 'Price',
        detailTax EXTID 'Tax',
        detailTotalSum EXTID 'TotalSum',
        detailDepartament EXTID 'Departament',
        detailHideCodes EXTID 'HideCodes'

    PROPERTIES(lines) IN goods detailBarcode EXTID 'Barcode', detailCodeType EXTID 'CodeType', detailNameDsc EXTID 'Name'
;

text 'Произвольный текст' = DATA TEXT ();
FORM textForm
    PROPERTIES () titanKey EXTID 'TitanKey', text EXTID 'Text'
;    
