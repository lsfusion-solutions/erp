MODULE ReportBI;

NAMESPACE BI;

order 'Номер' = DATA LOCAL INTEGER(INTEGER);
nameGroup 'Группировка' = DATA LOCAL STRING[100](INTEGER);

countGroup = OVERRIDE [GROUP MAX order(INTEGER i)](), 0;

addGroup(INTEGER i, STRING[100] name)  { 
    nameGroup(i) <- name;
    order(i) <- (OVERRIDE [GROUP MAX order(INTEGER in)](), 0) + 1;
}
reorderGroup()  { 
    order(INTEGER i) <- PARTITION SUM 1 IF nameGroup(i) ORDER order(i);
}
deleteGroup(INTEGER i)  { 
    nameGroup(i) <- NULL;
    order(i) <- NULL;
    reorderGroup();
}

META defineReport(id, name)
    nameGroupDB###id = ABSTRACT CASE STRING[50](INTEGER);
    exprGroupDB###id = ABSTRACT CASE STRING[100](INTEGER);
    captionGroup###id = ABSTRACT CASE STRING[50](INTEGER);
    
    nameGroup1###id() = GROUP MAX nameGroupDB###id(INTEGER i) IF order(i) == 1;
    nameGroup2###id() = GROUP MAX nameGroupDB###id(INTEGER i) IF order(i) == 2;
    nameGroup3###id() = GROUP MAX nameGroupDB###id(INTEGER i) IF order(i) == 3;
    
    exprGroup1###id() = GROUP MAX exprGroupDB###id(INTEGER i) IF order(i) == 1;
    exprGroup2###id() = GROUP MAX exprGroupDB###id(INTEGER i) IF order(i) == 2;
    exprGroup3###id() = GROUP MAX exprGroupDB###id(INTEGER i) IF order(i) == 3;

    captionGroup1###id() = GROUP MAX captionGroup###id(INTEGER i) IF order(i) == 1;
    captionGroup2###id() = GROUP MAX captionGroup###id(INTEGER i) IF order(i) == 2;
    captionGroup3###id() = GROUP MAX captionGroup###id(INTEGER i) IF order(i) == 3;
    
    FORM id##Report name
        OBJECTS df=DATE PANEL
        PROPERTIES dateFrom = VALUE(df)
       
        OBJECTS dt=DATE PANEL
        PROPERTIES dateTo = VALUE(dt)
        
        OBJECTS gr = INTEGER 
        PROPERTIES(gr) READONLY order, nameGroup
        ORDERS order(gr)
        FILTERS nameGroup(gr)
        
        EVENTS 
            ON INIT {
                SEEK id##Report.df = sum(currentDate(), -1);
                SEEK id##Report.dt = sum(currentDate(), -1);
            }
    ;
    
    DESIGN id##Report {
        NEW scroll {
            fill = 1;
            height = 1;
            NEW container {
                fill = 1;
                NEW topContainer {
                    horizontal = FALSE;
                    alignment = STRETCH;
                    NEW dates {
                        horizontal = TRUE;
                        caption = 'Период';
                        MOVE PROPERTY(dateFrom){caption = 'Дата (с)';}
                        MOVE PROPERTY(dateTo){caption = 'Дата (по)';}
                    }
                    NEW filters {
                        horizontal = FALSE;
                        alignment = STRETCH;
                        caption = 'Фильтры';
                    }
                }
                NEW bottomContainer {
                    fill = 2;
                    horizontal = TRUE;
                    NEW rhContainer {
                        NEW checkBoxContainer {
                            caption = 'Группировка';
                        }
                        NEW lhContainer {
                            horizontal = TRUE;
                            caption = 'Данные';
                        }
                    }
                    MOVE BOX(gr) { caption = 'Порядок группировки'; };
                }
                NEW print {
                    type = COLUMNS;
                    lines = 2;
                    alignment = STRETCH;
                }
            }
        }
        MOVE TOOLBARBOX;
    }
    
    NAVIGATOR {
        BI {
           NEW id##Report;
        }
    }
END 

META createGroup(id, object, name, number, nameDB, expr, caption, container)
    g###object###id name = DATA LOCAL BOOLEAN();
    WHEN LOCAL SET(g###object###id()) AND countGroup() < 3 DO addGroup(number, name);
    WHEN LOCAL SET(g###object###id()) AND countGroup() == 3 DO { g###object###id() <- NULL; };
    WHEN LOCAL DROPPED(g###object###id()) DO deleteGroup(number);
    
    nameGroupDB###id(INTEGER i) += WHEN i == number THEN STRING[50](nameDB);
    exprGroupDB###id(INTEGER i) += WHEN i == number THEN STRING[100](expr);
    captionGroup###id(INTEGER i) += WHEN i == number THEN STRING[50](caption);
    
    hide###object###id = ABSTRACT BOOLEAN();
    
    EXTEND FORM id##Report
        PROPERTIES() g###object###id SHOWIF NOT hide###object###id()
    ;
    DESIGN id##Report {
        container {
            MOVE PROPERTY(g###object###id());
        }
    }
END 

META createGroup(id, object, name, number, nameDB, caption, container)
    @createGroup(id, object, name, number, nameDB, nameDB, caption, container);
END

META createGroupCount(id, object, name, number, nameDB, expr, caption, container, count)
    g###object###id name = DATA LOCAL BOOLEAN();
    WHEN LOCAL SET(g###object###id()) AND countGroup() < count DO addGroup(number, name);
    WHEN LOCAL SET(g###object###id()) AND countGroup() == count DO { g###object###id() <- NULL; };
    WHEN LOCAL DROPPED(g###object###id()) DO deleteGroup(number);
    
    nameGroupDB###id(INTEGER i) += WHEN i == number THEN STRING[50](nameDB);
    exprGroupDB###id(INTEGER i) += WHEN i == number THEN STRING[100](expr);
    captionGroup###id(INTEGER i) += WHEN i == number THEN STRING[50](caption);
    
    hide###object###id = ABSTRACT BOOLEAN();
    
    EXTEND FORM id##Report
        PROPERTIES() g###object###id SHOWIF NOT hide###object###id()
    ;
    DESIGN id##Report {
        container {
            MOVE PROPERTY(g###object###id());
        }
    }
END 

META createGroupCount(id, object, name, number, nameDB, caption, container, count)
    @createGroupCount(id, object, name, number, nameDB, nameDB, caption, container, count);
END