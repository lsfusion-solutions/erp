MODULE ItemInternet;

REQUIRE Item, ScalesItem;

NAMESPACE Item;

//работа с изображениями
GROUP images;

dataImageTimeChanged = DATA DATETIME (Item);
urlHttpAccess 'Url изображения' = DATA STRING[255] (Item);
hashImage = DATA STRING[128] (Item);
customImageUpload = ABSTRACT BOOLEAN ();
calcmd5 (IMAGEFILE f)= FORMULA STRING[100] 'md5($1)';

ftpConnectionString 'Строка подключения (ftp://username:password@host:port/path/)' = DATA STRING[250]();
imageFolderName 'Директория на FTP для изображений' = DATA STRING[60] ();
pathHttpAccess 'Путь для доступа по http' = DATA STRING[255] ();
imageHttps 'Работа с изображениями по https' = DATA BOOLEAN ();
pathHttpsAccess 'Путь для доступа по https' = DATA STRING[255] ();
pathImageWebAccess = IF imageHttps() THEN pathHttpsAccess() ELSE pathHttpAccess();
sendImageItemToFtpCustom ABSTRACT LIST (Item);
fileNameImage = DATA STRING (Item);
fileNameImage (Barcode b) = fileNameImage(sku(b));

dataImageInternet = ABSTRACT IMAGEFILE (Item);
imageInternetOver (Item i) = OVERRIDE dataImageInternet(i), dataImage(i);

WHEN SETCHANGED (imageInternetOver(Item i)) AND NOT customImageUpload() DO {
    dataImageTimeChanged(i) <- currentDateTime();
    hashImage(i) <- calcmd5(imageInternetOver(i));
}

sendImageItemToFtp(Item i){
    IF customImageUpload() THEN sendImageItemToFtpCustom(i);
    ELSE{
        WRITE imageInternetOver(i) TO CONCAT '', ftpConnectionString(), imageFolderName(), id(i);
        urlHttpAccess(i) <- CONCAT '', pathImageWebAccess(), imageFolderName(), id(i), '.', extension(FILE(imageInternetOver(i)));
        fileNameImage(i) <-  id(i) + '.' +  extension(FILE(imageInternetOver(i)));
        dataImageTimeChanged(i) <- NULL;
    }
}

//задание для планировщика
sendImageToFTP 'Выгрузка изображений на FTP'(){
    NEWSESSION {
        FOR dataImageTimeChanged(Item i) DO {
            sendImageItemToFtp(i);
        }
        APPLY;
    }
}
sendAllImageToFTPCustom ABSTRACT LIST (); 

sendAllImageToFTP 'Выгрузка всех изображений на FTP'(){
    NEWSESSION {
        IF customImageUpload() THEN sendAllImageToFTPCustom();
        ELSE {
            FOR imageInternetOver(Item i) DO {
                sendImageItemToFtp(i);
            }
        }
        APPLY;
    }
}

calcAllImageHashCustom ABSTRACT LIST ();

calcAllImageHash 'Раccчитать md5 всех изображений' (){
    IF customImageUpload() THEN calcAllImageHashCustom();
    ELSE{
        FOR imageInternetOver(Item i) AND NOT hashImage(i)DO {
            hashImage(i) <- calcmd5(imageInternetOver(i));
        }
    }
    APPLY;
}

EXTEND FORM integrationData
    PROPERTIES ftpConnectionString(), imageFolderName(), imageHttps(),
        pathHttpAccess(), pathHttpsAccess(), sendImageToFTP(), sendAllImageToFTP(),
        calcAllImageHash();

DESIGN integrationData{
    pane{
        NEW delivery{
            caption = 'Доставка';
            tabbed = TRUE;
            NEW settings{
                caption = 'Настройки';
                MOVE PROPERTY (ftpConnectionString());
                MOVE PROPERTY (imageFolderName());
                MOVE PROPERTY (imageHttps());
                MOVE PROPERTY (pathHttpAccess());
                MOVE PROPERTY (pathHttpsAccess());
                NEW action{
                    caption ='Выгрузка';
                    horizontal = TRUE;
                    MOVE PROPERTY (sendImageToFTP());
                    MOVE PROPERTY (sendAllImageToFTP());
                    MOVE PROPERTY (calcAllImageHash());              
                }
            }
        }
    }
}

//квант весового товара
@definePrimitiveItemAttribute(passScalesQuantum, NUMERIC[16,5], 'Квант весового товара', scales);

//Лимит на количество одной позиции в интернет-заказе
@definePrimitiveItemAttribute(limitPerInternetOrder, INTEGER, 'Лимит на количество в интернет-заказе', itemBase);