MODULE ItemSize;

REQUIRE System, Item;

NAMESPACE Item;

// Размеры
@defineDoubleItemAttribute(length, NUMERIC[8,2], 'Длина, мм', itemSize);
@defineItemAttributeBatch (length, 'Длина, мм');
@implementItemAttribute(length, 'Длина, мм', Double, itemLength);

@defineDoubleItemAttribute(width, NUMERIC[8,2], 'Ширина, мм', itemSize);
@defineItemAttributeBatch (width, 'Ширина, мм');
@implementItemAttribute(width, 'Ширина, мм', Double, itemWidth);

@defineDoubleItemAttribute(height, NUMERIC[8,2], 'Высота, мм', itemSize);
@defineItemAttributeBatch (height, 'Высота, мм');
@implementItemAttribute(height, 'Высота, мм', Double, itemHeight);

// Объем
@defineDoubleItemAttribute(volume, NUMERIC[9,3], 'Объем, л', itemSize);
@defineItemAttributeBatchClass (volume, 'Объем', sku);
@implementItemAttribute(volume, 'Объем', Double, itemVolume);

volume(Item sku) += volume(sku);

overCopy(Item s, Item d) + { 
    length(d) <- length(s);
    width(d) <- width(s);
    height(d) <- height(s);
    volume(d) <- volume(s);
}

//----------------------- Переход на новый основной классификатор ---------------------------//
overReplaceToItemGroup(CustomGroup g, ItemGroup ng) + {
    userShowLength(ng) <- userShowLength(itemGroup(g));
    userShowWidth(ng) <- userShowWidth(itemGroup(g));
    userShowHeight(ng) <- userShowHeight(itemGroup(g));
    userShowVolume(ng) <- userShowVolume(itemGroup(g));
}