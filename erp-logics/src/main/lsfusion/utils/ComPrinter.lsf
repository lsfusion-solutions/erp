MODULE ComPrinter;

REQUIRE Authentication, SerialPort, EmployeeComputer, QZTray;

NAMESPACE Utils;

printerComPort 'Com-port принтера' = DATA INTEGER (Computer);

printerBaudRate 'Baud rate принтера' = DATA INTEGER (Computer);

vidPrinterComPort 'VID принтера' = DATA STRING[4] (Computer) CHARWIDTH 8;
pidPrinterComPort 'PID принтера' = DATA STRING[4] (Computer) CHARWIDTH 8;

codePageComPort 'Кодировка' = DATA STRING[10] (Computer);

jsonPrinterComPort (Computer c, INTEGER baudRate) = 
                JSON FROM number = printerComPort(c),
                          baudRate = baudRate,
                          vid = vidPrinterComPort(c), 
                          pid = pidPrinterComPort(c);
                          
jsonPrinterComPort (Computer c) = jsonPrinterComPort(c, OVERRIDE printerBaudRate(c), 9600); 

testPrinterComPort 'Проверить подключение' (Computer c) { serialPortTest(jsonPrinterComPort(c), TRUE); }

EXTEND FORM computer 
    PROPERTIES(c) printerComPort, printerBaudRate, vidPrinterComPort, pidPrinterComPort, codePageComPort, testPrinterComPort

    PROPERTIES requestPrinterPort = JSON FROM caption = 'Запросить' CUSTOM 'serialPortRequestPort' ON CHANGE {
        INPUT s = TEXT DO {
            stringToFile(s);
            
            IMPORT JSON FROM resultFile() FIELDS () STRING[4] vid NULL, STRING[4] pid NULL DO {
                vidPrinterComPort(c) <- vid;
                pidPrinterComPort(c) <- pid;
                
                printerComPort(c) <- 1 IF NOT vid;
            }            
        }
    }
;

DESIGN computer {
    OBJECTS {
        NEW comPrinter {
            caption = 'Печать';
            NEW comPrinterRow1 {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(printerComPort(c));
                MOVE PROPERTY(printerBaudRate(c));
                MOVE PROPERTY(vidPrinterComPort(c));
                MOVE PROPERTY(pidPrinterComPort(c));
                MOVE PROPERTY(requestPrinterPort);
                MOVE PROPERTY(codePageComPort(c));
                MOVE PROPERTY(testPrinterComPort(c));
            }
        }
    }
} 

useQZTray 'Использовать QZ Tray (qz.io)' = DATA BOOLEAN (Computer);
localFileName 'Печатать в файл' = DATA STRING (Computer) CHARWIDTH 20;
EXTEND FORM computer PROPERTIES(c) useQZTray, localFileName; 

DESIGN computer {
    comPrinter {
        NEW comPrinterRow2 {
            horizontal = TRUE;
            alignment = STRETCH;
            MOVE PROPERTY(useQZTray(c));
            MOVE PROPERTY(localFileName(c));
        }
    }
} 

printComPort (TEXT t) {
    IF useQZTray(userComputer()) THEN {
        IF localFileName(userComputer()) THEN
            QZPrintCommand(localFileName(userComputer()), t);
        ELSE
            QZPrintDefaultCommand(t);
    } ELSE IF localFileName(userComputer()) THEN {
        stringToFile(t, (OVERRIDE codePageComPort(userComputer()), 'UTF-8'), 'prl');
        open(resultFile(), localFileName(userComputer()));
    } ELSE
        serialPortSend(jsonPrinterComPort(userComputer()), t);
}

// для печати на принтер через файл нужно создать такой bat-файл (или подключить отдельный exe-файл ниже, который будет печатать файл)
//copy %1 \\localhost\%~n1
//del %1
// файл (exe) можно скчаать кнопкой, так как лежит в ресурсах. Exe собирается из vbs-файла из ресурсов при помощи утилиты vbs to exe
// затем в Chrome ассоциировать расширение prl с этим файлом, и включить автоматический запуск этого скачанного файла  
downloadPrintFile 'Скачать приложение печати этикеток на локальный принтер' () {
    readResource('/lib/win32/printfile');
    open(file(RAWFILE(resourceFile()), 'exe'), 'printfile');
}

EXTEND FORM computer
    PROPERTIES downloadPrintFile()
;

DESIGN computer {
    comPrinterRow2 {
        MOVE PROPERTY(downloadPrintFile());
    }
}