MODULE InContractLedgerContractPayment;

REQUIRE  ContractPayment;

NAMESPACE ContractPayment;

skip[OutContractLedger](Payment outContractLedger) += isReturn(outContractLedger);

CLASS InContractPayment: InContractLedger;

inContractPayment = AGGR InContractPayment WHERE isReturn(Payment payment) MATERIALIZED;

isPosted[InContractLedger](InContractPayment inContractLedger) += isPosted(payment(inContractLedger));
dateTime[InContractLedger](InContractPayment inContractLedger) += dateTime(payment(inContractLedger));
contract[InContractLedger](InContractPayment inContractLedger) += contract(payment(inContractLedger));
description[InContractLedger](InContractPayment inContractLedger) += STRING[200]('Возвратный ' +  description(payment(inContractLedger)));
number[InContractLedger](InContractPayment inContractLedger) += number(payment(inContractLedger));
series[InContractLedger](InContractPayment inContractLedger) += series(payment(inContractLedger));
//customerStock[InContractLedger](InContractPayment inContractLedger) += customerStock(payment(inContractLedger));
//supplierStock[InContractLedger](InContractPayment inContractLedger) += supplierStock(payment(inContractLedger));
//paymentCondition[InContractLedger](InContractPayment inContractLedger) += paymentCondition(payment(inContractLedger));

sum[InContractLedger](InContractPayment inContractLedger) += sumContract(payment(inContractLedger));

//inContractLedger[ContractLedger](InContractPayment inContractLedger) += OVERRIDE extraInContractLedger(l), invoice(l);