MODULE Dimension;

REQUIRE GeneralLedger;

//------------------------- Субконто -------------------------------//

CLASS ABSTRACT Dimension 'Субконто';
TABLE dimension(Dimension);
name 'Название' = ABSTRACT ISTRING[255] (Dimension) CHARWIDTH 40 MATERIALIZED;

FORM dimensions 'Субконто'
    OBJECTS d = Dimension
    PROPERTIES(d) READONLY objectClassName, name
    LIST Dimension OBJECT d
;

CLASS DimensionType 'Тип субконто';
TABLE dimensionType(DimensionType);

name 'Наименование' (DimensionType type) = staticCaption(type) IF type IS DimensionType;

id 'Идентификатор' = DATA STRING[20] (DimensionType) CHARWIDTH 3;
dimensionType = ABSTRACT CASE EXCLUSIVE DimensionType (Dimension) MATERIALIZED;
nameDimensionType 'Тип субконто' (Dimension dimension) = name(dimensionType(dimension));

TABLE GLAccountDimensionType(GLAccount, DimensionType);
order 'Порядковый номер' = DATA INTEGER (GLAccount,DimensionType);
dimensionsType 'Субконто' (GLAccount GLAccount) = GROUP
                                                CONCAT STRING[255](name(DimensionType dimensionType)) IF order (GLAccount,dimensionType) , ', '
                                                ORDER order (GLAccount,dimensionType) CHARWIDTH 40 MATERIALIZED;

overCopy(GLAccount from, GLAccount to) + { 
    order(to, DimensionType dimensionType) <- order(from, dimensionType);
}

prev (GLAccount account, DimensionType type) = PARTITION PREV type IF order(account, type)
                                                                  ORDER order(account, type) BY account;
namePrev 'Предок' (GLAccount account, DimensionType type) = name(prev(account, type));

TABLE generalLedgerDimensionType(GeneralLedger, DimensionType);
debit = ABSTRACT CASE EXCLUSIVE Dimension (GeneralLedger, DimensionType) MATERIALIZED INDEXED;
nameDebit 'Субконто (дебет)' (GeneralLedger generalLedger,DimensionType dimensionType)= name(debit(generalLedger,dimensionType));
debit = DATA Dimension (UserGeneralLedger, DimensionType) INDEXED;
nameDebit 'Субконто (дебет)' (UserGeneralLedger userGeneralLedger,DimensionType dimensionType)= name(debit(userGeneralLedger,dimensionType));
debit(UserGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS UserGeneralLedger AND dimensionType IS DimensionType THEN debit(generalLedger,dimensionType);
CONSTRAINT debit(UserGeneralLedger userGeneralLedger,DimensionType dimensionType) IF NOT dimensionType(debit(userGeneralLedger,dimensionType)) == dimensionType
    CHECKED BY debit[UserGeneralLedger,DimensionType]
        MESSAGE 'Субконто (дебет) проводки должен соответствовать субконто';

credit = ABSTRACT CASE EXCLUSIVE Dimension (GeneralLedger, DimensionType) MATERIALIZED INDEXED;
nameCredit 'Субконто (кредит)' (GeneralLedger generalLedger,DimensionType dimensionType)= name(credit(generalLedger,dimensionType));
credit = DATA Dimension (UserGeneralLedger,DimensionType) INDEXED;
nameCredit 'Субконто (кредит)' (UserGeneralLedger userGeneralLedger,DimensionType dimensionType)= name(credit(userGeneralLedger,dimensionType));
credit(UserGeneralLedger generalLedger,DimensionType dimensionType) += WHEN generalLedger IS UserGeneralLedger AND dimensionType IS DimensionType THEN credit(generalLedger,dimensionType);
CONSTRAINT credit(UserGeneralLedger userGeneralLedger,DimensionType dimensionType) IF NOT dimensionType(credit(userGeneralLedger,dimensionType)) == dimensionType
    CHECKED BY credit[UserGeneralLedger,DimensionType]
        MESSAGE 'Субконто (кредит) проводки должен соответствовать субконто';

overCopy(GeneralLedger from, UserGeneralLedger to) + { 
    debit(to, DimensionType dimensionType) <- debit(from, dimensionType);
    credit(to, DimensionType dimensionType) <- credit(from, dimensionType);
}

dimensionTypeIdDimensionType (string1) = GROUP AGGR DimensionType dimensionType WHERE dimensionType IS DimensionType BY id(dimensionType);

// Отбор субконто

inDebit (GeneralLedger gl, d)= GROUP SUM 1 BY debit(gl, DimensionType dt);  
inCredit (GeneralLedger gl, d) = GROUP SUM 1 BY credit(gl, DimensionType dt);

in (GeneralLedger gl, Dimension d) = inDebit(gl, d) OR inCredit(gl, d);  

//-- Подсчет сумм одно субконто
TABLE GLAccountLegalEntityDDate(GLAccount, LegalEntity, Dimension, DATE);
sumCredit 'Сумма (кредит)' (GLAccount, company, d1, date)= GROUP SUM
    sum(GeneralLedger ledger) IF isPosted(ledger) AND DimensionType t1 IS DimensionType
        BY credit(ledger), legalEntity(ledger), credit(ledger,t1), date(ledger); // MATERIALIZED
sumDebit 'Сумма (дебет)' (GLAccount, company, d1, date)= GROUP SUM
    sum(GeneralLedger ledger) IF isPosted(ledger) AND DimensionType t1 IS DimensionType
        BY debit(ledger), legalEntity(ledger), debit(ledger,t1), date(ledger); // MATERIALIZED
balance 'Сальдо' (GLAccount GLAccount, LegalEntity company, Dimension d1, DATE date)=
    sumDebit(GLAccount, company, d1, date) (-) sumCredit(GLAccount, company, d1, date);

sumCredit 'Сумма (кредит)' (GLAccount GLAccount, LegalEntity company, Dimension d1, DATE dateFrom, DATE dateTo) = GROUP
        SUM
    sumCredit(GLAccount, company, d1, DATE date) IF date >= dateFrom AND date <= dateTo;
sumDebit 'Сумма (дебет)' (GLAccount GLAccount, LegalEntity company, Dimension d1, DATE dateFrom, DATE dateTo) = GROUP
        SUM
    sumDebit(GLAccount, company, d1, DATE date) IF date >= dateFrom AND date <= dateTo;
balance 'Сальдо' (GLAccount GLAccount, LegalEntity company, Dimension d1, DATE dateFrom, DATE dateTo)=
    sumDebit(GLAccount, company, d1, dateFrom, dateTo) (-) sumCredit(GLAccount, company, d1, dateFrom, dateTo);

//-- Подсчет сумм два субконто
TABLE GLAccountLegalEntityDDDate(GLAccount, LegalEntity, Dimension, Dimension, DATE);
sumCredit 'Сумма (кредит)' (GLAccount, company, d1, d2, date)= GROUP SUM
    sum(GeneralLedger ledger) IF isPosted(ledger) AND DimensionType t1 IS DimensionType AND DimensionType t2 IS DimensionType  AND t1 != t2
        BY credit(ledger), legalEntity(ledger), credit(ledger,t1), credit(ledger,t2), date(ledger); // MATERIALIZED
sumDebit 'Сумма (дебет)' (GLAccount, company, d1, d2, date)= GROUP SUM
    sum(GeneralLedger ledger) IF isPosted(ledger) AND DimensionType t1 IS DimensionType AND DimensionType t2 IS DimensionType  AND t1 != t2
        BY debit(ledger), legalEntity(ledger), debit(ledger,t1), debit(ledger,t2), date(ledger); // MATERIALIZED
balance 'Сальдо' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, DATE date)=
    sumDebit(GLAccount, company, d1, d2, date) (-) sumCredit(GLAccount, company, d1, d2, date);

sumCredit 'Сумма (кредит)' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, DATE dateFrom, DATE dateTo) = GROUP
        SUM
    sumCredit(GLAccount, company, d1, d2, DATE date) IF date >= dateFrom AND date <= dateTo;
sumDebit 'Сумма (дебет)' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, DATE dateFrom, DATE dateTo) = GROUP
        SUM
    sumDebit(GLAccount, company, d1, d2, DATE date) IF date >= dateFrom AND date <= dateTo;
balance 'Сальдо' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, DATE dateFrom, DATE dateTo)=
    sumDebit(GLAccount, company, d1, d2, dateFrom, dateTo) (-) sumCredit(GLAccount, company, d1, d2, dateFrom, dateTo);

//-- Подсчет сумм три субконто
TABLE GLAccountLegalEntityDDDDate(GLAccount, LegalEntity, Dimension, Dimension, Dimension, DATE);
sumCredit 'Сумма (кредит)' (GLAccount, company, d1, d2, d3, date) = GROUP SUM
    sum(GeneralLedger ledger) IF isPosted(ledger) AND
    DimensionType t1 IS DimensionType AND DimensionType t2 IS DimensionType AND DimensionType t3 IS DimensionType AND
    t1 != t2 AND t2 != t3 AND t1 != t3
        BY credit(ledger), legalEntity(ledger), credit(ledger,t1), credit(ledger,t2), credit(ledger,t3), date(ledger); // MATERIALIZED
sumDebit 'Сумма (дебет)' (GLAccount, company, d1, d2, d3, date) = GROUP SUM
    sum(GeneralLedger ledger) IF isPosted(ledger) AND
    DimensionType t1 IS DimensionType AND DimensionType t2 IS DimensionType AND DimensionType t3 IS DimensionType AND
    t1 != t2 AND t2 != t3 AND t1 != t3
        BY debit(ledger), legalEntity(ledger), credit(ledger,t1), credit(ledger,t2), credit(ledger,t3), date(ledger); // MATERIALIZED
balance 'Сальдо' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, Dimension d3, DATE date)=
    sumDebit(GLAccount, company, d1, d2, d3, date) (-) sumCredit(GLAccount, company, d1, d2, d3, date);

sumCredit 'Сумма (кредит)' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, Dimension d3, DATE dateFrom, DATE dateTo) = GROUP
        SUM
    sumCredit(GLAccount, company, d1, d2, d3, DATE date) IF date >= dateFrom AND date <= dateTo;
sumDebit 'Сумма (дебет)' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, Dimension d3, DATE dateFrom, DATE dateTo) = GROUP
        SUM
    sumDebit(GLAccount, company, d1, d2, d3, DATE date) IF date >= dateFrom AND date <= dateTo;
balance 'Сальдо' (GLAccount GLAccount, LegalEntity company, Dimension d1, Dimension d2, Dimension d3, DATE dateFrom, DATE dateTo)=
    sumDebit(GLAccount, company, d1, d2, d3, dateFrom, dateTo) (-) sumCredit(GLAccount, company, d1, d2, d3, dateFrom, dateTo);

//--
orderDebit 'Порядковый номер' (GeneralLedger ledger, DimensionType dimensionType)=  order(debit(ledger), dimensionType);
orderCredit 'Порядковый номер' (GeneralLedger ledger, DimensionType dimensionType)=  order(credit(ledger), dimensionType);

dimensionsDebit 'Субконто (дебет)' (GeneralLedger ledger) = GROUP
                                                CONCAT STRING[255](nameDebit(ledger, DimensionType dimensionType)) IF orderDebit(ledger, dimensionType) , ', '
                                                ORDER orderDebit (ledger, dimensionType) CHARWIDTH 40;
dimensionsCredit 'Субконто (кредит)' (GeneralLedger ledger) = GROUP
                                                CONCAT STRING[255](nameCredit(ledger, DimensionType dimensionType)) IF orderCredit(ledger, dimensionType) , ', '
                                                ORDER orderCredit (ledger, dimensionType) CHARWIDTH 40;

FORM dimensionType 'Тип субконто'
    OBJECTS d = DimensionType PANEL
    PROPERTIES(d) name, id
    EDIT DimensionType OBJECT d
;

FORM dimensionTypes 'Тип субконто'
    OBJECTS d = DimensionType
    PROPERTIES(d) READONLY name, id
    PROPERTIES(d) NEWSESSION NEW, EDIT, DELETE 
    LIST DimensionType OBJECT d
;

EXTEND FORM GLAccount

    OBJECTS d = DimensionType
    PROPERTIES(d) READONLY name
    PROPERTIES order(g,d), namePrev(g,d)
;
DESIGN GLAccount {
    OBJECTS {
        MOVE BOX(d);
    }
}
EXTEND FORM GLAccounts
    PROPERTIES(g) READONLY dimensionsType BEFORE deletea
    PROPERTIES(gl) READONLY dimensionsDebit AFTER idDebit(gl)
    PROPERTIES(gl) READONLY dimensionsCredit AFTER idCredit(gl)
    OBJECTS w = DimensionType PANEL
    PROPERTIES(w) SELECTOR name
    FILTERS order(g,w)
    OBJECTS ww = DimensionType PANEL
    PROPERTIES(ww) SELECTOR name
    FILTERS order(g,ww)
    OBJECTS www = DimensionType PANEL
    PROPERTIES(www) SELECTOR name
    FILTERS order(g,www)

    OBJECTS d = Dimension
    PROPERTIES READONLY name(d), sumDebit(g,l,d,dFrom,dTo), sumCredit(g,l,d,dFrom,dTo), balance(g,l,d,dFrom,dTo)
    FILTERS dimensionType(d) == w
    FILTERGROUP filter1
            FILTER 'С суммами' sumCredit(g,l,d,dFrom,dTo) OR sumDebit(g,l,d,dFrom,dTo) 'F11' DEFAULT
    OBJECTS dd = Dimension
    PROPERTIES READONLY name(dd), sumDebit(g,l,d,dd,dFrom,dTo), sumCredit(g,l,d,dd,dFrom,dTo), balance(g,l,d,dd,dFrom,dTo)
    FILTERS dimensionType(dd) == ww
    FILTERGROUP filter2
            FILTER 'С суммами' sumCredit(g,l,d,dd,dFrom,dTo) OR sumDebit(g,l,d,dd,dFrom,dTo) 'F10' DEFAULT
    OBJECTS ddd = Dimension
    PROPERTIES READONLY name(ddd), sumDebit(g,l,d,dd,ddd,dFrom,dTo), sumCredit(g,l,d,dd,ddd,dFrom,dTo), balance(g,l,d,dd,ddd,dFrom,dTo)
    FILTERS dimensionType(ddd) == www
    FILTERGROUP filter3
            FILTER 'С суммами' sumCredit(g,l,d,dd,ddd,dFrom,dTo) OR sumCredit(g,l,d,dd,ddd,dFrom,dTo) 'F9' DEFAULT

;
DESIGN GLAccounts {
    wor{
        NEW dimension BEFORE BOX(gl) {
            caption = 'Аналитика';
            horizontal = TRUE;
            fill = 1;
            NEW dimension1 {
                fill = 1;
                caption = 'Субконто 1';
                MOVE BOX(w);
                MOVE BOX(d);
            }
            NEW dimension2 {
                fill = 1;
                caption = 'Субконто 2';
                MOVE BOX(ww);
                MOVE BOX(dd);
            }
            NEW dimension3 {
                fill = 1;
                caption = 'Субконто 3';
                MOVE BOX(www);
                MOVE BOX(ddd);
            }
        }
    }
}


EXTEND FORM GLAccountDialog
    PROPERTIES(g) READONLY dimensionsType BEFORE deletea
;

EXTEND FORM userGeneralLedger

    OBJECTS d = DimensionType
    PROPERTIES READONLY name(d), orderDebit(g,d)
    PROPERTIES nameDebit(g,d)
    FILTERS orderDebit(g,d)
    ORDERS orderDebit(g,d)

    OBJECTS c = DimensionType
    PROPERTIES READONLY name(c), orderCredit(g,c)
    PROPERTIES nameCredit(g,c)
    FILTERS orderCredit(g,c)
    ORDERS orderCredit(g,c)
;
DESIGN userGeneralLedger {
    NEW row BEFORE TOOLBARBOX{
        horizontal = TRUE;
        caption = 'Субконто';
        fill = 1;
        MOVE BOX(d) {caption = 'Дебет';}
        MOVE BOX(c) {caption = 'Кредит';}
    }
}

EXTEND FORM generalLedgers
    PROPERTIES(g) READONLY AFTER idDebit(g) dimensionsDebit
    PROPERTIES(g) READONLY AFTER idCredit(g) dimensionsCredit
;



//------------------- Пользовательское субконто ---------------------//
CLASS UserDimension 'Субконто (польз.)' : Dimension, StaticObject;

TABLE userDimension(UserDimension);
name 'Название' = DATA ISTRING[255] (UserDimension) CHARWIDTH 40;
name(UserDimension dimension)+= name(dimension);

dimensionType = DATA DimensionType (UserDimension);
nameDimensionType 'Тип субконто' (UserDimension dimension) = name(dimensionType(dimension));

dimensionType (UserDimension dimension) += WHEN dimension IS UserDimension THEN dimensionType(dimension);

EXTEND CLASS DimensionType { userDimensionType 'Пользовательский тип' }


FORM userDimension 'Субконто (польз.)'
    OBJECTS t=UserDimension PANEL
    PROPERTIES(t) name, nameDimensionType
    EDIT UserDimension OBJECT t
;

FORM userDimensions 'Субконто (польз.)'
    OBJECTS t=UserDimension
    PROPERTIES(t) READONLY staticCaption, name, nameDimensionType 
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE
    ORDERS name(t)
    LIST UserDimension OBJECT t
;
DESIGN userDimensions { BOX { size = (600, 400); } }

NAVIGATOR {
    accountType {
        NEW dimensionTypes;
        NEW userDimensions;
    }
}
// ------------------- Субконто для проводок --------------- //

id = ABSTRACT ISTRING[100](Dimension) MATERIALIZED;
//idDimension(dimension) += idGLAccount(dimension);
id(UserDimension dimension) += ISTRING[20](staticCaption(dimension)) IF dimension IS UserDimension;

overIdDebit = ABSTRACT CASE EXCLUSIVE ISTRING[100](GeneralLedger, DimensionType) MATERIALIZED;
idDebit 'Субконто (дебет)' (GeneralLedger generalLedger, DimensionType dimensionType) =
    OVERRIDE overIdDebit(generalLedger, dimensionType),
             id(debit(generalLedger, dimensionType));

overIdCredit = ABSTRACT CASE EXCLUSIVE ISTRING[100](GeneralLedger, DimensionType) MATERIALIZED;
idCredit 'Субконто (кредит)' (GeneralLedger generalLedger, DimensionType dimensionType) =
    OVERRIDE overIdCredit(generalLedger, dimensionType),
             id(credit(generalLedger, dimensionType));

idDimensionsDebit 'Субконто (дебет)' (GeneralLedger ledger) = GROUP
                                                                       CONCAT STRING[255](idDebit(ledger, DimensionType dimensionType)) IF orderDebit(ledger, dimensionType) , ', '
                                                                    ORDER orderDebit (ledger, dimensionType) CHARWIDTH 5;

idDimensionsCredit 'Субконто (кредит)' (GeneralLedger ledger) = GROUP
                                                                         CONCAT STRING[255](idCredit(ledger, DimensionType dimensionType)) IF orderCredit(ledger, dimensionType) , ', '
                                                                      ORDER orderCredit (ledger, dimensionType) CHARWIDTH 5;
// ----------------------------------- Стандартные данные ----------------------------------- //

loadDefaultGLAccount 'Добавить субконто'(INTEGER integer, STRING[20] sidType, STRING[20] sidAccount, DimensionType type)  { 
    order(GLAccount g,type) <- integer WHERE g == GLAccountIdTypeIdGLAccount(sidType, sidAccount);
}
loadDefaultDimensionGLAccounts 'Загрузить стандартный субконто для счетов' ()  ABSTRACT LIST ( ) IN loadDefault;

@implementLoadDefaultData(loadDefaultDimensionGLAccounts);
