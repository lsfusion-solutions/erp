MODULE InvoiceContract;

REQUIRE StockContract, Invoice;

META defineInvoicePaymentCondition (sign)

    paymentCondition 'Условия оплаты' = ABSTRACT PaymentCondition (Invoice) MATERIALIZED;
    paymentCondition 'Условия оплаты' = DATA PaymentCondition (UserInvoice);
    paymentCondition(UserInvoice prop) += paymentCondition(prop);
    paymentCondition[Invoice.Invoice](Invoice prop) += paymentCondition(prop);
    descriptionPaymentCondition 'Условия оплаты' (Invoice i) = description(paymentCondition(i)) IN base CHARWIDTH 10;
    descriptionPaymentCondition 'Условия оплаты' (UserInvoice i) = description(paymentCondition(i)) CHARWIDTH 10;

    paymentCondition(UserInvoice prop) <- OVERRIDE paymentCondition(contractSku(prop)), paymentCondition(agreement(prop))
        WHEN CHANGED(agreement(prop)) OR
             CHANGED(contractSku(prop));

    firstPaymentDate (Invoice i) = IF bankingDays(paymentCondition(i)) THEN
                                              jumpWorkdays(country(customer(i)), date(i), countDaysFirstPaymentPeriod(paymentCondition(i))) ELSE
                                              sum(date(i), countDaysFirstPaymentPeriod(paymentCondition(i)));
    EXTEND FORM userInvoice
        PROPERTIES(i) descriptionPaymentCondition
    ;

    DESIGN userInvoice{
        GROUP(documentPrm,i) {
            MOVE PROPERTY(descriptionPaymentCondition(i));
        }
    }

END

paymentCondition 'Условия оплаты' = ABSTRACT PaymentCondition (Invoice) MATERIALIZED;
descriptionPaymentCondition 'Условия оплаты' (Invoice i) = description(paymentCondition(i)) IN base CHARWIDTH 10;

META defineInvoiceContractSum (sign)

    contractSum 'Сумма по договору' = ABSTRACT NUMERIC[18,4] (Invoice);
    contractSum 'Сумма по договору' = DATA NUMERIC[18,4] (UserInvoice);
    contractSum (UserInvoice i) += contractSum(i);
    
    WHEN (CHANGED(currency(UserInvoice i)) OR CHANGED(contractSku(i))) AND currency(i) != currency(contractSku(i)) AND typeExchange(contractSku(i)) DO
        contractSum(i) <- NUMERIC[18,4](invoiceSumInvoiceDetail(i) * 
                                            rateOn(typeExchange(contractSku(i)), 
                                                         currency(i),
                                                         date(i)));     

    WHEN (CHANGED(currency(UserInvoice i)) OR CHANGED(currency(contractSku(i)))) AND currency(i) == currency(contractSku(i)) AND NOT CHANGED(contractSum(i)) DO
        contractSum(i) <- NULL;     
END