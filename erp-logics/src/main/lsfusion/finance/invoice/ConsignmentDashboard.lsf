MODULE ConsignmentDashboard;

REQUIRE Dashboard, OrderInvoice, SaleLedger; 

NAMESPACE Order;

inConsignmentPrint 'Вкл' = DATA LOCAL BOOLEAN (Order);
countInConsignmentPrintOrder = GROUP SUM 1 IF inConsignmentPrint(Order order);

beforePrintConsignment  ABSTRACT LIST ( Order);
overPrintConsignment  ABSTRACT LIST ( Order);
consumedPrintConsignment = DATA LOCAL NESTED BOOLEAN ();
afterPrintConsignment  ABSTRACT LIST ( Order);

printConsignment 'Создать накладные' (Order order)  { 
    NEWSESSION NESTED LOCAL {
        consumedPrintConsignment() <- NULL;
        beforePrintConsignment(order);
        IF consumedPrintConsignment() THEN RETURN;
        
        overPrintConsignment(order);
        IF NOT consumedPrintConsignment() THEN {
            addUserInvoice(order);
        }
        afterPrintConsignment(order);
        APPLY;
    }
} TOOLBAR CHANGEKEY 'ctrl ENTER';

backgroundConsignmentDashboard 'Цвет' = ABSTRACT CASE COLOR (Order);
backgroundConsignmentDashboard(Order o) += WHEN isReturn(o) THEN RGB(148,255,255);

backgroundConsignmentDashboard 'Цвет' = ABSTRACT CASE COLOR (Invoice);

changeNumber (Invoice.Invoice invoice)  { 
    INPUT s = STRING[48] DO {
        number(invoice) <- s;         
        apply();
    }    
}

changeSeries (Invoice.Invoice invoice)  { 
    INPUT s = BPSTRING[2] DO {
        series(invoice) <- s;
        apply();
    }    
}

toInvoiced = ABSTRACT CASE BOOLEAN (Order);
toInvoiced(Order o) += WHEN o IS Order THEN TRUE IF toInvoice(o);

toInvoiced = ABSTRACT CASE BOOLEAN (OrderDetail);
toInvoiced (OrderDetail d) += WHEN d IS OrderDetail THEN TRUE IF toInvoice(d);

skipDefaultOpened = ABSTRACT BOOLEAN (Invoice.Invoice);

printConsignmentReadonly = ABSTRACT CASE BOOLEAN (Order);
skipConsignmentDashboard = ABSTRACT VALUE BOOLEAN (Order);

filterConsignmentDateFrom 'Дата с' = DATA LOCAL NESTED DATE ();

FORM consignmentDashboard 'Выписка накладных' AUTOREFRESH 60
    PROPERTIES () filterConsignmentDateFrom

    OBJECTS dt = DATE PANEL
    PROPERTIES(dt) date = VALUE

    OBJECTS o=Order GRID LAST
    PROPERTIES(o) inConsignmentPrint
    PROPERTIES(o) READONLY BACKGROUND backgroundConsignmentDashboard(o) number, date, shipmentDate, nameFromStock, 
                  nameTo, nameToStock, addressToStock, quantityOrderDetail,
                  note
    PROPERTIES(o) printConsignment READONLYIF printConsignmentReadonly(o) 
    FILTERS isPosted (o),
            NOT skipConsignmentDashboard(o),
            NOT forbidInvoice(o)
    FILTERGROUP toInvoice FILTER 'Не выписаны' toInvoiced(o) 'ctrl F6' DEFAULT
    FILTERGROUP opened FILTER 'Открыт' isOpened(o) 'F4' DEFAULT
    FILTERGROUP filters FILTER 'Текущие заказы' date(o)<=dt 'F6' DEFAULT
                        FILTER 'Будущие заказы' date(o)>dt 'F6'       
    FILTERS out (o)
    
    OBJECTS d = OrderDetail GRID
    PROPERTIES(d) READONLY index, idBarcodeSku, nameSku, nameBatch, quantity, invoiced    
    FILTERS order(d) == o,
            date(o) >= filterConsignmentDateFrom() OR (o IS Order AND NOT filterConsignmentDateFrom())
    FILTERGROUP toInvoiceDetail FILTER 'Не выписаны' toInvoiced(d) 'ctrl F6' DEFAULT 
    
    OBJECTS i = Invoice.Invoice GRID LAST
    PROPERTIES (i) SHOWIF isOpened(i) PANEL numInv=number ON CHANGE changeNumber(i), serInv=series ON CHANGE changeSeries(i)
    PROPERTIES (i) READONLY isPosted 
    PROPERTIES (i) READONLY BACKGROUND backgroundConsignmentDashboard(i) number, series
    PROPERTIES (i) READONLY BACKGROUND backgroundConsignmentDashboard(i) date, time, nameFromStock, nameTo, nameToStock, addressToStock, overNameOperation, countInvoiceDetail, 
                   quantityInvoiceDetail, sumInvoiceDetail, VATSumInvoiceDetail, invoiceSumInvoiceDetail, 
                   sumGrossWeightInvoiceDetail, seriesNumberOrder, note, noteOrder
    PROPERTIES (i) NEWSESSION EDIT SHOWIF overShowEdit(i), deletei = DELETE SHOWIF overShowDelete(i)

    FILTERS out (i),
            date(i) >= filterConsignmentDateFrom() OR (i IS Invoice AND NOT filterConsignmentDateFrom())                           
    FILTERGROUP openedI  FILTER 'Открыт' isOpened(i) OR skipDefaultOpened(i) DEFAULT
    FILTERGROUP filters1 FILTER 'Предыдущие накладные' date(i)<dt 'F7'
                         FILTER 'Накладные на дату' date(i)==dt 'F8' DEFAULT
                         FILTER 'Будущие накладные' date(i)>dt 'F9'
  
    EVENTS ON INIT {
        IF filterInvoiceInterval() THEN
            filterConsignmentDateFrom() <- subtract(currentDate(), filterInvoiceInterval()); 
    }                      
;

DESIGN consignmentDashboard {
    BOX {
        NEW base1Container {
            fill = 1;

             NEW base2Container {
                fill = 4;
                horizontal = FALSE;
                    NEW tabContainer{
                        tabbed = TRUE;
                        fill = 1;
                        MOVE BOX(i){
                            caption = 'Накладные';
//                            PROPERTY(nameToInvoice){
//                                charWidth = 40;
//                            }
                            PROPERTY(addressToStock(o)){
                                caption = 'Адрес получателя';
                            }
//                            PROPERTY(nameToStockInvoice){                  
//                                charWidth = 45;
//                            }
                            PROPERTY(numInv) {
                                font = 'bold 18';
                            }
                            PROPERTY(serInv) {
                                font = 'bold 18';
                                valueWidth = 50;
                            }
                            PROPERTY(seriesNumberOrder(i)) { charWidth = 8;}
                        }
                        MOVE BOX(d){
                            caption = 'Детализация'; 
                        }
                        NEW printContainer {
                            caption = 'Печать';
                            MOVE GROUP(numbered,i);
                        }
                    }
                    NEW secondContainer BEFORE tabContainer {
                        fill = 1;
                        MOVE BOX(o){
                            caption = 'Заказы';
                                PROPERTY(nameTo(o)){
                                    charWidth = 40;
                                }
                                PROPERTY(nameToStock(o)){
                                    charWidth = 45;
                                }
                                PROPERTY(date(o)){
                                    caption = 'Дата заказа';
                                }
                                PROPERTY(number(o)){
                                    caption = 'Номер заказа';
                                }
                                PROPERTY(addressToStock(o)){
                                    caption = 'Адрес получателя';
                                }
                            }
                        }
                    }
                }
                NEW thirdContainer BEFORE base1Container {
                    horizontal = TRUE;
                    caption = 'Шапка';
                    MOVE PROPERTY(date);
                    MOVE PROPERTY(filterConsignmentDateFrom());
                }
        MOVE TOOLBARBOX;
    }
}

@extendFormFilterRoleAccessNS(order, o, consignmentDashboard, Operation); 
@extendFormFilterRoleAccessNS(invoice, i, consignmentDashboard, Operation);

@extendFormFilterAccessStockNoNull(order, o, consignmentDashboard, fromStock, company);
@extendFormFilterAccessStockNoNull(invoice, i, consignmentDashboard, fromStock, company);

@extendFormFilterRoleAccess(order, o, consignmentDashboard);
@extendFormFilterRoleAccess(invoice, i, consignmentDashboard);


NAVIGATOR {
    saleDashboardNavigator {
        NEW consignmentDashboard;
    }
}

// Выписка накладной по одному заказу
singleInvoicedOrder 'Считать выписанным заказ, по которому создана хоть одна накладная' = DATA BOOLEAN () COMPLEX;
EXTEND FORM options PROPERTIES () singleInvoicedOrder;
 
DESIGN options {
    sale {        
        MOVE PROPERTY(singleInvoicedOrder());
    }    
}
toInvoiced(Order o) += WHEN singleInvoicedOrder() AND o IS Order THEN o IS Order AND NOT invoicedOrderDetail(o);
