MODULE RepricingBatch;

REQUIRE RepricingManufacturingPrice, RepricingDashboard;

NAMESPACE Repricing;

//----------------- 

isSupplierRepricing 'Дооценка по партиям за счет цены поставщика' = DATA BOOLEAN ();

EXTEND FORM options
    PROPERTIES() isSupplierRepricing
;

DESIGN options {
    rPanel  {
        MOVE PROPERTY(isSupplierRepricing());
    }
}


// По партиям

//-- поставщика
supplierPriceBSku 'Цена по товару' (Batch batch, Stock stock, DATETIME dateTime)= prevPriceB(SystemLedgerPriceListType.supplierPricingPriceListType, sku(batch), stock, dateTime);
manufacturingPriceBSku 'Цена по товару' (Batch batch, Stock stock, DATETIME dateTime)= prevPriceB(SystemLedgerPriceListType.manufacturingPriceStockPriceListType, sku(batch), stock, dateTime);

//-- розничная
priceB 'Цена партии' (Batch batch, Stock stock, DATETIME dateTime)= prevPriceBBatch(SystemLedgerPriceListType.retailPricingPriceListType, batch, stock, dateTime);
priceBSku 'Цена по товару' (Batch batch, Stock stock, DATETIME dateTime)= prevPriceB(SystemLedgerPriceListType.retailPricingPriceListType, sku(batch), stock, dateTime);

toRepricing (Batch batch, Stock stock, DATETIME dateTime) =  balanceB(batch, stock, dateTime) 
    IF NOT (priceB(batch, stock, dateTime) == priceBSku(batch, stock, dateTime));
toRepricing (Stock stock, DATETIME dateTime) = GROUP SUM 1 IF toRepricing (Batch batch, stock, dateTime);     

setUserRepricingStock 'Создать акт переоценки по партиям'(DepartmentStore stock, DATETIME dateTime, Operation operation)   { 
	NEWSESSION {
	    IF toRepricing (stock, dateTime) AND stock IS DepartmentStore THEN {
	    
	        NEW p = UserRepricing {
	            departmentStore(p) <- stock;
	            date(p) <- toDate(dateTime);
	            time(p) <- toTime(dateTime);
	            operation(p) <- operation;
	            
	            FOR toRepricing(Batch batch, stock, dateTime) INLINE NEW d = UserRepricingDetail DO {
	                userRepricing(d) <- p;    
	                sku(d) <- sku(batch);
	                batch(d) <- batch;
	                quantity(d) <- balanceB(batch, stock, dateTime);
	                curRetailPrice(d) <- priceB(batch, stock, dateTime);
	                retailPrice(d) <- priceBSku(batch, stock, dateTime);
	                
	                price(d) <- supplierPriceBSku(batch, stock, dateTime) WHERE isSupplierRepricing();
                    manufacturingPrice(d) <- manufacturingPriceBSku(batch, stock, dateTime) WHERE isSupplierRepricing();
	            }  
	            SHOW userRepricing OBJECTS p = p DOCKED NOCANCEL;
	        }
	    }     
	}
} TOOLBAR;

documentNameSkuBatch 'Наименование (для документов)' = documentNameSku(batch(RepricingDetail d));
documentNameSkuBatch 'Наименование (для документов)' = documentNameSku(batch(UserRepricingDetail d));

EXTEND FORM userRepricing
    PROPERTIES documentNameSkuBatch(d) ON CHANGE changeBatch(d) AFTER nameBatch(d)
;
EXTEND FORM repricings
    PROPERTIES READONLY documentNameSkuBatch(d) AFTER nameBatch(d)
;

FORM repricingBatchDashboard 'Дооценка по партиям'
    OBJECTS d = DepartmentStore PANEL
    PROPERTIES (d) SELECTOR name
    FILTERS isCompany(d)
        
    OBJECTS o = Repricing.Operation PANEL
    PROPERTIES (o) SELECTOR name
    FILTERS in(currentUser(), o)

    OBJECTS t=DATETIME PANEL
    PROPERTIES(t) VALUE        
     
    OBJECTS bt = Batch
    PROPERTIES (bt) READONLY date, name, nameSku, documentNameSku 
    PROPERTIES (bt,d,t) READONLY balanceB, priceB, priceBSku
    
    FILTERS toRepricing(bt,d,t)       
    PROPERTIES (d,t,o)  DRAW bt  setUserRepricingStock
                  
    OBJECTS p = Repricing
    PROPERTIES (p) READONLY isPosted, number, series, date, time, beforeDate,
                   nameDepartmentStore, countRepricingDetail, diffSumRepricingDetail,
                   diffMarkupSumRepricingDetail, diffVATSumRepricingDetail,
                   diffRetailSumRepricingDetail, numberDisposal, skipChangeLedger,
                   statusLabel BACKGROUND backgroundPrintLabelTransaction(p),
                   note                      
               
    PROPERTIES (p) createLabelTransaction SHOWIF showPrintLabelTransaction(p), 
                   createSnapshotLabelTransaction 
    
    PROPERTIES (p) print TOOLBAR                                           
    PROPERTIES (p) NEWSESSION NEW, EDIT SHOWIF showEditUser(p), deletep = DELETE SHOWIF showDeleteUser(p)    
                       
    FILTERGROUP filters FILTER 'Переоценки на дату' date(p)==toDate(t) 'F6' DEFAULT                
                                               
;
DESIGN repricingBatchDashboard {
    BOX {
        NEW topContainer {
            horizontal = TRUE;
            MOVE BOX(d);
            MOVE BOX(o);
            MOVE BOX(t) { caption = 'Время с';}
        }
        MOVE BOX(bt);
        MOVE BOX(p);
        MOVE TOOLBARBOX;
    }
}
NAVIGATOR {
    retailDashboardNavigator {
        NEW FOLDER retailRepricingDashboardNavigator 'Переоценка' {
            MOVE repricingDashboard;
            NEW repricingBatchDashboard;            
        }
    }
}


