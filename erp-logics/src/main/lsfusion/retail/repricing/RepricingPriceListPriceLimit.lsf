MODULE RepricingPriceListPriceLimit;

REQUIRE RepricingPriceList, PriceLimit; 

NAMESPACE Repricing;

skipRepricingPriceLimit = ABSTRACT BOOLEAN (Sku);

overLimitBasePrice = ABSTRACT NUMERIC[16,4] (Sku, DepartmentStore, DATETIME);
limitBasePrice(Sku s, DepartmentStore d, DATETIME  dt) = round2(OVERRIDE overLimitBasePrice(s,d,dt), 
                                                                         prevPriceA(basePriceListType(priceLimitPriceListType(d)), s, d, dt));

useLimitMarkupValue = ABSTRACT VALUE BOOLEAN (Sku, DepartmentStore);

overSetManagementRetailPrice(DepartmentStore d, DATETIME dt) + { 
    LOCAL limitPrice = NUMERIC[16,4] (Sku);

    limitPrice(Sku sku) <- IF markup(priceLimitPriceListType(d), sku) > 1 THEN
                                round([ X*(Y+100.0)*(Z+100.0)/10000.0](
                                      limitBasePrice(sku, d, dt),
                                      markup(priceLimitPriceListType(d), sku),
                                      valueVAT(sku, d)), roundCondition(priceLimitPriceListType(d), sku))
                           ELSE
                                IF markup(priceLimitPriceListType(d), sku) > 0.3 THEN
                                    markup(priceLimitPriceListType(d), sku)
                                ELSE
                                    round([ (X+Y)*(Z+100.0)/100.0](
                                        limitBasePrice(sku, d, dt),
                                        markup(priceLimitPriceListType(d), sku),
                                        valueVAT(sku, d)), roundCondition(priceLimitPriceListType(d), sku)) WHERE managementRetailPrice(sku);

    limitPrice(Sku sku) <- round([ X*(Y+100.0)*(Z+100.0)/10000.0](
                                      limitBasePrice(sku, d, dt),
                                      limitMarkupValue(),
                                      valueVAT(sku, d)), roundCondition(priceLimitPriceListType(d), sku)) WHERE useLimitMarkupValue(sku, d) AND NOT markup(priceLimitPriceListType(d), sku) AND managementRetailPrice(sku);

    managementRetailPrice (Sku sku) <- limitPrice(sku) WHERE limitPrice(sku) < managementRetailPrice (sku) AND NOT skipRepricingPriceLimit(sku); 
}

calculateDescriptionPricing (Sku sku, DepartmentStore d, DATETIME dt) + {
    descriptionPricing (sku, 'Предельные надбавки') <- STRING(IF markup(priceLimitPriceListType(d), sku) > 1 THEN
             round([ X*(Y+100.0)*(Z+100.0)/10000.0](
                   limitBasePrice(sku, d, dt),
                   markup(priceLimitPriceListType(d), sku),
                   valueVAT(sku, d)), roundCondition(priceLimitPriceListType(d), sku))
        ELSE
             IF markup(priceLimitPriceListType(d), sku) > 0.3 THEN
                 markup(priceLimitPriceListType(d), sku)
             ELSE
                 round([ (X+Y)*(Z+100.0)/100.0](
                     limitBasePrice(sku, d, dt),
                     markup(priceLimitPriceListType(d), sku),
                     valueVAT(sku, d)), roundCondition(priceLimitPriceListType(d), sku))); 
}