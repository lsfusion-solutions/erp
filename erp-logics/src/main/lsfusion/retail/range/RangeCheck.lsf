MODULE RangeCheck;

REQUIRE Range;
NAMESPACE Range;

// Упрощенная версия

TABLE rangeRevStoreSku (RangeRev, Store, Sku);
include 'Вкл.' = DATA BOOLEAN (RangeRev, Store, Sku);
include 'Вкл.' (RangeRev v, DepartmentStore ds, Sku s) = include (v, store(ds), s);

overCopy(RangeRev r, RangeRev pr) + { 
    include(r, Store st, Sku s) <- include(pr, st, s);
}

include 'В ассортименте' (Sku s,Store store,DATE dt) = GROUP SUM 1 IF include(rangeRev(Range r, dt), store, s);
in (Sku s, Range r, Store st, DATE d) += include(rangeRev(r, d), st, s);

inFilter 'В ассортименте' (RangeRev v,Sku s) = GROUP SUM 1 IF include(v, Store st, s);
EXTEND FORM rangeRev
    OBJECTS store1 = Store BEFORE s
    PROPERTIES (store1) nameStoreType
    PROPERTIES include(v,store1,s) COLUMNS (store1) HEADER name(store1)
    FILTERS active(store1)
    ORDERS nameStoreType(store1)
    FILTERGROUP filters
        FILTER 'Включен' inFilter(v, s)  DEFAULT
        FILTER 'Без поставщиков' inFilter(v, s) AND NOT priceA(pt, s, d, dateTime(v))      
;

DESIGN rangeRev{
    PROPERTY(nameStoreType(store1)) { hide = TRUE;}
}

counInclude 'Кол-во товаров' (RangeRev v,Store st) = GROUP SUM 1 IF include(v, st, Sku s);
counInclude 'Кол-во товаров' (RangeRev v,Sku s) = GROUP SUM 1 IF include(v, Store st, s);
counInclude 'Кол-во товаров' (RangeRev v) = GROUP SUM 1 IF counInclude(v, Sku s);
counInclude'Кол-во товаров' (Range r, DATE dt) = counInclude(rangeRev(r,dt));
counInclude'Кол-во товаров' (Range r, Sku s, DATE dt) = counInclude(rangeRev(r,dt),s);
counInclude 'Кол-во товаров' = GROUP SUM 1 IF include(RangeRev v, Store st, Sku s) BY range(v),s;
counInclude 'Кол-во товаров' = GROUP SUM 1 IF include(RangeRev v, Store st, Sku s) BY range(v),st,s;

EXTEND FORM range
    PROPERTIES (v)       READONLY counInclude
    OBJECTS store = Store
    PROPERTIES  READONLY name(store),counInclude(v,store)
    FILTERS counInclude(v,store)
;
DESIGN range {
    tabs {
        NEW first FIRST {
            fill = 1;
            caption = 'Версии';
            horizontal = FALSE;
            MOVE BOX(v);
            MOVE BOX(store);
        }     
    }
}
EXTEND FORM ranges
    PROPERTIES (r,d) READONLY counInclude BEFORE nameGroup(r)        
;
counInclude (Range r, Store st, DATE dt) = counInclude(rangeRev(r,dt), st);
include (Range r, Store store, Sku s, DATE dt)= include(rangeRev(r, dt), store, s);
include (Range r,Sku s,DATE dt) = GROUP SUM 1 IF include(r, Store store, s, dt);

EXTEND FORM ranges      
    ORDERS name(s)
    FILTERS include(r,s,d)
    
    OBJECTS store = Store
    PROPERTIES(store) READONLY name
    FILTERS include(r,store,s,d)
;

DESIGN ranges {
    range{
        horizontal = FALSE;
        
        NEW tabR {
            fill = 2;
            type = SPLITH;
            MOVE BOX(s) {fill = 2;}
            MOVE BOX(store);
        }
    }
}

EXTEND FORM storeRange 
    FILTERS counInclude(sr, ss, d)
    FILTERS include(rn, ds, sk, d)
;

WHEN autoSetGroupAttribute(mainRole(currentUser())) AND [ GROUP SUM 1 IF CHANGED(itemGroup(Item item)) AND include(RangeRev v, Store store, item) AND NOT inChild(range(v), item) BY range(v), itemGroup(item)](Range r, ItemGroup g) DO {
    inData(r, g) <- TRUE;
}

CONSTRAINT include(RangeRev v, Store store, Sku s) AND NOT inChild(range(v), s) MESSAGE 'Товар не соответствует выбранным группам для ассортимента';

moveItemGroupOver(ItemGroup parent, ItemGroup gg) + {
    IF autoSetGroupAttribute(mainRole[CustomUser](currentUser())) THEN {
        inData(Range r, parent) <- TRUE WHERE inChild(r,gg) AND NOT inChild(r,parent);        
        //inData(Range r, g) <- TRUE WHERE (GROUP SUM 1 IF include(RangeRev v, Store store, Sku s) AND range(v)==r AND isParent(g,s)) AND NOT inChild(r,g);    
    }
}

