MODULE ZReportReport;

REQUIRE ZReport;

NAMESPACE ZReport;

inReport 'Отм.' = DATA LOCAL BOOLEAN (Stock);

sumReceiptDetailZReport 'Сумма Z-отчета' (date, DATE dateFrom, DATE dateTo)= GROUP SUM sumReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport) AND
    inReport(departmentStore(zReport))
        BY date(zReport);
    
sumReceiptDetailZReport 'Сумма Z-отчета' (stock, date)= GROUP SUM sumReceiptDetail(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport);

sumPositiveCashPaymentZReport 'Сумма продажа (наличные)' (stock, date)= GROUP SUM sumPositiveCashPayment(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport);
sumPositiveCardPaymentZReport 'Сумма продажа (карточка)' (stock, date)= GROUP SUM sumPositiveCardPayment(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport);
discountSumReceiptDetailZReport 'Сумма скидок Z-отчета по строкам чека' (stock, date)= GROUP SUM discountSumReceiptDetail(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport);        
discountSumZReport 'Сумма скидок Z-отчета' (stock, date)= GROUP SUM discountSum(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport);        
VATSumSaleZReport 'Сумма НДС по продажам' (stock, date)= GROUP SUM sumVATReceiptDetail(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport);    
              
sumNegativeCashPaymentZReport 'Сумма возврата (наличные)' (stock, date)= GROUP SUM sumNegativeCashPayment(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport); 
sumNegativeCardPaymentZReport 'Сумма возврата (карточка)' (stock, date)= GROUP SUM sumNegativeCardPayment(ZReport zReport) IF isPosted(zReport)
        BY departmentStore(zReport), date(zReport);  

nameReceiptDetailZReport (Stock stock)= name(stock) + ' (сумма Z-отчета)';    
namePositiveCash (Stock stock)= name(stock) + ' (сумма продажа (наличные))';    
namePositiveCard (Stock stock)= name(stock) + ' (сумма продажа (карточка))';    
nameGiftCard (Stock stock)= name(stock) + ' (сумма продаж (сертификат))';    
nameReceiptDetailGiftCard (Stock stock) = name(stock) + ' (сумма проданных сертификатов)';    
nameDiscountSum (Stock stock)= name(stock) + ' (сумма скидок)';    
nameVATSumSale (Stock stock)= name(stock) + ' (сумма НДС по продажам)';        
                                  
nameNegativeCash (Stock stock)= name(stock) + ' (сумма возврата (наличные)';    
nameNegativeCard (Stock stock)= name(stock) + ' (сумма возврата (карточка)';    
nameVATSumReturn (Stock stock)= name(stock) + ' (сумма НДС по возвратам)';                                     

countReceipt 'Кол-во чеков за день' (date) = 
    GROUP SUM countReceipt(ZReport zReport) IF isPosted(zReport) BY date(zReport);

countReceipt 'Кол-во чеков в магазине за день' (departmentStore, date) = 
    GROUP SUM countReceipt(ZReport zReport) IF isPosted(zReport) BY departmentStore(zReport), date(zReport);
    
countReturnReceipt 'Кол-во возвратных чеков' (o) =
    GROUP SUM 1 IF [GROUP SUM 1 BY receipt(ReceiptReturnDetail rd) ](Receipt d) BY zReport(d) MATERIALIZED IN documentSum;
    
countReturnReceipt 'Кол-во возвратных чеков за день' (departmentStore, date) = 
    GROUP SUM countReturnReceipt(ZReport zReport) IF isPosted(zReport) BY departmentStore(zReport), date(zReport);    

countFiscalReceipt 'Кол-во фискальных чеков за день' = countReceipt(DepartmentStore departmentStore, DATE date) (-) countReturnReceipt(departmentStore, date);    
    
averageSumReceipt 'Средняя сумма чека в магазине за день' (DepartmentStore departmentStore, DATE date) = 
    round2(sumReceiptDetailZReport(departmentStore, date) / countFiscalReceipt(departmentStore, date));

countReceiptDetail (zReport) = GROUP SUM countReceiptDetail(Receipt receipt) BY zReport(receipt);
countReceiptDetail 'Кол-во позиций чеков в магазине за период' (departmentStore, date) =
    GROUP SUM countReceiptDetail(ZReport zReport) IF isPosted(zReport) BY departmentStore(zReport), date(zReport);
averageCountReceiptDetail 'Среднее кол-во позиций в чеке в магазине за париод' (DepartmentStore departmentStore, DATE date) = 
    NUMERIC[16,4](countReceiptDetail(departmentStore, date)) / NUMERIC[16,4](countReceipt(departmentStore, date));
  
quantityReceiptDetail 'Кол-во (всего)' (departmentStore, date) =
    GROUP SUM quantityReceiptDetail(ZReport zReport) IF isPosted(zReport) BY departmentStore(zReport), date(zReport);
 
countReceipt (Stock stock)= name(stock) + ' (кол-во чеков)';        
averageSumReceipt (Stock stock)= name(stock) + ' (cредняя сумма чека)';        
countReceiptDetail (Stock stock)= name(stock) + ' (кол-во позиций чеков)';
quantityReceiptDetail (Stock stock)= name(stock) + ' (кол-во всего)';
averageCountReceiptDetail (Stock stock)= name(stock) + ' (среднее кол-во позиций в чеке)'; 
countFiscalReceipt (Stock stock)= name(stock) + ' (фискальных чеков)';      
  
                         
sumReceiptDetailZReportStocks 'Сумма Z-отчета' (DATE dt) = GROUP SUM sumReceiptDetailZReport(DepartmentStore st,dt) IF inReport(st);
sumPositiveCashPaymentZReportStocks 'Сумма продажа (наличные)' (DATE dt) = GROUP SUM sumPositiveCashPaymentZReport(DepartmentStore st,dt) IF inReport(st);
sumPositiveCardPaymentZReportStocks 'Сумма продажа (карточка)' (DATE dt) = GROUP SUM sumPositiveCardPaymentZReport(DepartmentStore st,dt) IF inReport(st);
discountSumZReportStocks 'Сумма скидок Z-отчета' (DATE dt) = GROUP SUM discountSumZReport(DepartmentStore st,dt) IF inReport(st);
VATSumSaleZReportStocks 'Сумма НДС по продажам' (DATE dt) = GROUP SUM VATSumSaleZReport(DepartmentStore st,dt) IF inReport(st);
sumNegativeCashPaymentZReportStocks  'Сумма возврата (наличные)' (DATE dt) = GROUP SUM sumNegativeCashPaymentZReport(DepartmentStore st,dt) IF inReport(st);
sumNegativeCardPaymentZReportStocks 'Сумма возврата (карточка)' (DATE dt) = GROUP SUM sumNegativeCardPaymentZReport(DepartmentStore st,dt) IF inReport(st);
countReceiptStocks 'Кол-во чеков в магазине за день' (DATE dt) = GROUP SUM countReceipt(DepartmentStore st,dt) IF inReport(st);
countFiscalReceiptStocks 'Кол-во фискальных чеков за день' (DATE dt) = GROUP SUM countFiscalReceipt(DepartmentStore st,dt) IF inReport(st);
averageSumReceiptStocks 'Средняя сумма чека в магазине за день' (DATE date) =     round2(sumReceiptDetailZReportStocks(date) / countReceiptStocks(date));    
countReceiptDetailStocks 'Кол-во позиций чеков в магазине за период' (DATE dt) = GROUP SUM countReceiptDetail(DepartmentStore st,dt) IF inReport(st);
sumReceiptDetailZReport 'Сумма Z-отчета' (DATE dt) = GROUP SUM sumReceiptDetailZReport(DepartmentStore st,dt) IF inReport(st);
averageCountReceiptDetailStocks 'Среднее кол-во позиций в чеке в магазине за париод' (DATE date) =  NUMERIC[16,4](countReceiptDetailStocks(date)) / NUMERIC[16,4](countReceiptStocks(date));

allStocks 'Только итоги' = DATA LOCAL BOOLEAN ();
showProperty = DepartmentStore ds IS DepartmentStore AND NOT allStocks();

//----в разрезе недели
sumReceiptDetailZReport 'Сумма Z-отчета' (number, year, DATE dateFrom, DATE dateTo) = GROUP SUM sumReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport) AND
    inReport(departmentStore(zReport))
        BY extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
    
sumReceiptDetailZReport 'Сумма Z-отчета' (stock, number, year, DATE dateFrom, DATE dateTo)= GROUP SUM sumReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
discountSumZReport 'Сумма скидок Z-отчета' (stock, number, year, DATE dateFrom, DATE dateTo)= GROUP SUM discountSum(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
countReceipt 'Кол-во чеков в магазине за день' (departmentStore, number, year, DATE dateFrom, DATE dateTo) = GROUP SUM countReceipt(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport) 
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
countReturnReceipt 'Кол-во возвратных чеков за день' (departmentStore, number, year, DATE dateFrom, DATE dateTo) = GROUP SUM countReturnReceipt(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport) 
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
countFiscalReceipt 'Кол-во фискальных чеков за день' = 
    countReceipt(DepartmentStore departmentStore, INTEGER number, INTEGER year, DATE dateFrom, DATE dateTo) (-) countReturnReceipt(departmentStore, number, year, dateFrom, dateTo);
averageSumReceipt 'Средняя сумма чека в магазине за день' (DepartmentStore departmentStore, INTEGER number, INTEGER year, DATE dateFrom, DATE dateTo) = 
    round2(sumReceiptDetailZReport(departmentStore, number, year, dateFrom, dateTo) / countFiscalReceipt(departmentStore, number, year, dateFrom, dateTo));
sumPositiveCashPaymentZReport 'Сумма продажа (наличные)' (stock, number, year, DATE dateFrom, DATE dateTo)= GROUP SUM sumPositiveCashPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
sumPositiveCardPaymentZReport 'Сумма продажа (карточка)' (stock, number, year, DATE dateFrom, DATE dateTo)= GROUP SUM sumPositiveCardPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
VATSumSaleZReport 'Сумма НДС по продажам' (stock, number, year, DATE dateFrom, DATE dateTo)= GROUP SUM sumVATReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
sumNegativeCashPaymentZReport 'Сумма возврата (наличные)' (stock, number, year, DATE dateFrom, DATE dateTo)= GROUP SUM sumNegativeCashPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
sumNegativeCardPaymentZReport 'Сумма возврата (карточка)' (stock, number, year, DATE dateFrom, DATE dateTo)= GROUP SUM sumNegativeCardPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
countReceiptDetail 'Кол-во позиций чеков в магазине за период' (departmentStore, number, year, DATE dateFrom, DATE dateTo) = GROUP SUM countReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
quantityReceiptDetail 'Кол-во (всего)' (departmentStore, number, year, DATE dateFrom, DATE dateTo) = GROUP SUM quantityReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport), extractWeekZeroBased(date(zReport)), extractYear(date(zReport));
averageCountReceiptDetail 'Среднее кол-во позиций в чеке в магазине за париод' (DepartmentStore departmentStore, INTEGER number, INTEGER year, DATE dateFrom, DATE dateTo) = 
    NUMERIC[16,4](countReceiptDetail(departmentStore, number, year, dateFrom, dateTo)) / NUMERIC[16,4](countReceipt(departmentStore, number, year, dateFrom, dateTo));
        
        
sumReceiptDetailZReportStocks 'Сумма Z-отчета' = GROUP SUM sumReceiptDetailZReport(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
discountSumZReportStocks 'Сумма скидок Z-отчета' = GROUP SUM discountSumZReport(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
countReceiptStocks 'Кол-во чеков в магазине за день' = GROUP SUM countReceipt(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
countFiscalReceiptStocks 'Кол-во фискальных чеков за день' = GROUP SUM countFiscalReceipt(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
averageSumReceiptStocks 'Средняя сумма чека в магазине за день' (INTEGER number, INTEGER year, DATE dateFrom, DATE dateTo) = 
    round2(sumReceiptDetailZReportStocks(number, year, dateFrom, dateTo) / countReceiptStocks(number, year, dateFrom, dateTo));
sumPositiveCashPaymentZReportStocks 'Сумма продажа (наличные)' = GROUP SUM sumPositiveCashPaymentZReport(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
sumPositiveCardPaymentZReportStocks 'Сумма продажа (карточка)' = GROUP SUM sumPositiveCardPaymentZReport(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
VATSumSaleZReportStocks 'Сумма НДС по продажам' = GROUP SUM VATSumSaleZReport(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
sumNegativeCashPaymentZReportStocks  'Сумма возврата (наличные)' = GROUP SUM sumNegativeCashPaymentZReport(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
sumNegativeCardPaymentZReportStocks 'Сумма возврата (карточка)' = GROUP SUM sumNegativeCardPaymentZReport(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
countReceiptDetailStocks 'Кол-во позиций чеков в магазине за период' = GROUP SUM countReceiptDetail(DepartmentStore st,DATE dt) IF 
    dt >= (DATE dateFrom AS DATE) AND dt <= (DATE dateTo AS DATE) AND inReport(st) 
        BY extractWeekZeroBased(dt), extractYear(dt), dateFrom, dateTo;
averageCountReceiptDetailStocks 'Среднее кол-во позиций в чеке в магазине за париод' (INTEGER number, INTEGER year, DATE dateFrom, DATE dateTo) =  
    NUMERIC[16,4](countReceiptDetailStocks(number, year, dateFrom, dateTo)) / NUMERIC[16,4](countReceiptStocks(number, year, dateFrom, dateTo));

sumReceiptDetailZReport 'Сумма Z-отчета' (stock, DATE dateFrom, DATE dateTo)= GROUP SUM sumReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
discountSumZReport 'Сумма скидок Z-отчета' (stock, DATE dateFrom, DATE dateTo)= GROUP SUM discountSum(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
countReceipt 'Кол-во чеков' (DepartmentStore st, DATE dateFrom, DATE dateTo)= GROUP     
        SUM countReceipt(st,DATE date) IF
    date >= (dateFrom AS DATE) AND date <= (dateTo AS DATE);
countReturnReceipt 'Кол-во возвратных чеков' (departmentStore, DATE dateFrom, DATE dateTo) = GROUP SUM countReturnReceipt(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport) 
        BY departmentStore(zReport);
countFiscalReceipt 'Кол-во фискальных чеков' = 
    countReceipt(DepartmentStore departmentStore, DATE dateFrom, DATE dateTo) (-) countReturnReceipt(departmentStore, dateFrom, dateTo);
averageSumReceipt 'Средняя сумма чека в магазине' (DepartmentStore departmentStore, DATE dateFrom, DATE dateTo) = 
    round2(sumReceiptDetailZReport(departmentStore, dateFrom, dateTo) / countFiscalReceipt(departmentStore, dateFrom, dateTo));
sumPositiveCashPaymentZReport 'Сумма продажа (наличные)' (stock, DATE dateFrom, DATE dateTo)= GROUP SUM sumPositiveCashPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
sumPositiveCardPaymentZReport 'Сумма продажа (карточка)' (stock, DATE dateFrom, DATE dateTo)= GROUP SUM sumPositiveCardPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
VATSumSaleZReport 'Сумма НДС по продажам' (stock, DATE dateFrom, DATE dateTo)= GROUP SUM sumVATReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
sumNegativeCashPaymentZReport 'Сумма возврата (наличные)' (stock, DATE dateFrom, DATE dateTo)= GROUP SUM sumNegativeCashPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
sumNegativeCardPaymentZReport 'Сумма возврата (карточка)' (stock, DATE dateFrom, DATE dateTo)= GROUP SUM sumNegativeCardPayment(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
countReceiptDetail 'Кол-во позиций чеков в магазине' (departmentStore, DATE dateFrom, DATE dateTo) = GROUP SUM countReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
quantityReceiptDetail 'Кол-во (всего)' (departmentStore, DATE dateFrom, DATE dateTo) = GROUP SUM quantityReceiptDetail(ZReport zReport) IF 
    date(zReport) >= (dateFrom AS DATE) AND date(zReport) <= (dateTo AS DATE) AND isPosted(zReport)
        BY departmentStore(zReport);
averageCountReceiptDetail 'Среднее кол-во позиций в чеке в магазине' (DepartmentStore departmentStore, DATE dateFrom, DATE dateTo) = 
    NUMERIC[16,4](countReceiptDetail(departmentStore, dateFrom, dateTo)) / NUMERIC[16,4](countReceipt(departmentStore, dateFrom, dateTo));
        
FORM saleZreportStock 'Отчет по магазинам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo), allStocks()        
     
    OBJECTS ts = DepartmentStore GRID
    PROPERTIES READONLY id(ts), name(ts), nameLegalEntity(ts), tradingSquare(ts) 
    PROPERTIES inReport(ts)
    ORDERS name(ts)
    FILTERS isCompany(ts)     
    FILTERGROUP inactiveStock FILTER 'Активный' active(ts) 'ctrl F10' DEFAULT  
    
    OBJECTS st = DepartmentStore GRID     
    FILTERS isCompany(st),
            inReport(st)   
    
    OBJECTS sts = DepartmentStore GRID     
    FILTERS isCompany(sts),
            inReport(sts) 
                       
    OBJECTS stw = DepartmentStore GRID     
        FILTERS isCompany(stw),
                inReport(stw)
                
    OBJECTS stsw = DepartmentStore GRID     
        FILTERS isCompany(stsw),
                inReport(stsw)
                
    OBJECTS stst = DepartmentStore GRID
    FILTERS isCompany(stst),
            inReport(stst)
    
    OBJECTS stsst = DepartmentStore GRID
    FILTERS isCompany(stsst),
            inReport(stsst)
         
    OBJECTS d = DATE GRID
    PROPERTIES READONLY VALUE(d)
    PROPERTIES(d) READONLY extractMonthName, extractDOWName     
    FILTERS    sumReceiptDetailZReport(d,dFrom,dTo)       
    
    PROPERTIES READONLY SHOWIF showProperty(sts) sumReceiptDetailZReport(sts,d)  COLUMNS (sts) HEADER nameReceiptDetailZReport(sts)
    PROPERTIES READONLY SHOWIF showProperty(sts) discountSumZReport(sts,d)  COLUMNS (sts) HEADER nameDiscountSum(sts)                                 

    PROPERTIES READONLY SHOWIF showProperty(sts) countReceipt(sts,d) COLUMNS (sts) HEADER countReceipt(sts)    
    PROPERTIES READONLY SHOWIF showProperty(sts) countFiscalReceipt(sts,d) COLUMNS (sts) HEADER countFiscalReceipt(sts)                                 
    PROPERTIES READONLY SHOWIF showProperty(sts) averageSumReceipt(sts,d) COLUMNS (sts) HEADER averageSumReceipt(sts)      
//--                               
    PROPERTIES READONLY SHOWIF allStocks() sumReceiptDetailZReportStocks(d) 
    PROPERTIES READONLY SHOWIF allStocks() discountSumZReportStocks(d)                                       
    
    PROPERTIES READONLY SHOWIF allStocks() countReceiptStocks(d)  
    PROPERTIES READONLY SHOWIF allStocks() countFiscalReceiptStocks(d)                               
    PROPERTIES READONLY SHOWIF allStocks() averageSumReceiptStocks(d)                              
                               
    
    OBJECTS dt = DATE GRID
    PROPERTIES READONLY valDt = VALUE(dt)
    PROPERTIES(dt) READONLY extractMonthName, extractDOWName 
    
    FILTERS    sumReceiptDetailZReport(dt,dFrom,dTo)
                         
    PROPERTIES READONLY SHOWIF showProperty(st) sumReceiptDetailZReport(st,dt)  COLUMNS (st) HEADER nameReceiptDetailZReport(st)
    PROPERTIES READONLY SHOWIF showProperty(st) sumPositiveCashPaymentZReport(st,dt)  COLUMNS (st) HEADER namePositiveCash(st)
    PROPERTIES READONLY SHOWIF showProperty(st) sumPositiveCardPaymentZReport(st,dt)  COLUMNS (st) HEADER namePositiveCard(st)                                    
    PROPERTIES READONLY SHOWIF showProperty(st) discountSumZReport(st,dt)  COLUMNS (st) HEADER nameDiscountSum(st)                                 
    PROPERTIES READONLY SHOWIF showProperty(st) VATSumSaleZReport(st,dt)  COLUMNS (st) HEADER nameVATSumSale(st)   
                                  
    PROPERTIES READONLY SHOWIF showProperty(st) sumNegativeCashPaymentZReport(st,dt)  COLUMNS (st) HEADER nameNegativeCash(st)                                 
    PROPERTIES READONLY SHOWIF showProperty(st) sumNegativeCardPaymentZReport(st,dt)  COLUMNS (st) HEADER nameNegativeCard(st)                             
    
    PROPERTIES READONLY SHOWIF showProperty(st) countReceipt(st,dt) COLUMNS (st) HEADER countReceipt(st)   
    PROPERTIES READONLY SHOWIF showProperty(st) countFiscalReceipt(st,dt) COLUMNS (st) HEADER countFiscalReceipt(st)                                 
    PROPERTIES READONLY SHOWIF showProperty(st) averageSumReceipt(st,dt) COLUMNS (st) HEADER averageSumReceipt(st)                                 
    PROPERTIES READONLY SHOWIF showProperty(st) countReceiptDetail(st,dt) COLUMNS (st) HEADER countReceiptDetail(st)                                 
    PROPERTIES READONLY SHOWIF showProperty(st) averageCountReceiptDetail(st,dt) COLUMNS (st) HEADER averageCountReceiptDetail(st)   
    PROPERTIES READONLY SHOWIF showProperty(st) quantityReceiptDetail(st,dt) COLUMNS (st) HEADER quantityReceiptDetail(st)

//-- Итоги
    PROPERTIES READONLY SHOWIF allStocks() sumReceiptDetailZReportStocks(dt) 
    PROPERTIES READONLY SHOWIF allStocks() sumPositiveCashPaymentZReportStocks(dt) 
    PROPERTIES READONLY SHOWIF allStocks() sumPositiveCardPaymentZReportStocks(dt)                                  
    PROPERTIES READONLY SHOWIF allStocks() discountSumZReportStocks(dt)                 
    PROPERTIES READONLY SHOWIF allStocks() VATSumSaleZReportStocks(dt)    
                                  
    PROPERTIES READONLY SHOWIF allStocks() sumNegativeCashPaymentZReportStocks(dt)                
    PROPERTIES READONLY SHOWIF allStocks() sumNegativeCardPaymentZReportStocks(dt)                            
    
    PROPERTIES READONLY SHOWIF allStocks() countReceiptStocks(dt)  
    PROPERTIES READONLY SHOWIF allStocks() countFiscalReceiptStocks(dt)                               
    PROPERTIES READONLY SHOWIF allStocks() averageSumReceiptStocks(dt)                              
    PROPERTIES READONLY SHOWIF allStocks() countReceiptDetailStocks(dt)                                 
    PROPERTIES READONLY SHOWIF allStocks() averageCountReceiptDetailStocks(dt) 
      
      
//----в разрезе недели
    OBJECTS ny = (n = INTEGER, y = INTEGER) GRID
    PROPERTIES READONLY n = VALUE(n) HEADER 'Номер недели'
    PROPERTIES READONLY y = VALUE(y) HEADER 'Год'
    FILTERS sumReceiptDetailZReport(n,y,dFrom,dTo)
    ORDERS y, n
    
    PROPERTIES READONLY SHOWIF showProperty(stw) sumReceiptDetailZReport(stw,n,y,dFrom,dTo)  COLUMNS (stw) HEADER nameReceiptDetailZReport(stw)
    PROPERTIES READONLY SHOWIF showProperty(stw) discountSumZReport(stw,n,y,dFrom,dTo)  COLUMNS (stw) HEADER nameDiscountSum(stw)
    
    PROPERTIES READONLY SHOWIF showProperty(stw) countReceipt(stw,n,y,dFrom,dTo) COLUMNS (stw) HEADER countReceipt(stw)
    PROPERTIES READONLY SHOWIF showProperty(stw) countFiscalReceipt(stw,n,y,dFrom,dTo) COLUMNS (stw) HEADER countFiscalReceipt(stw)
    PROPERTIES READONLY SHOWIF showProperty(stw) averageSumReceipt(stw,n,y,dFrom,dTo) COLUMNS (stw) HEADER averageSumReceipt(stw)
    
//--
    PROPERTIES READONLY SHOWIF allStocks() sumReceiptDetailZReportStocks(n,y,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() discountSumZReportStocks(n,y,dFrom,dTo)
    
    PROPERTIES READONLY SHOWIF allStocks() countReceiptStocks(n,y,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() countFiscalReceiptStocks(n,y,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() averageSumReceiptStocks(n,y,dFrom,dTo)
    
    
    OBJECTS nyw = (nw = INTEGER, yw = INTEGER) GRID
    PROPERTIES READONLY nw = VALUE(nw) HEADER 'Номер недели'
    PROPERTIES READONLY yw = VALUE(yw) HEADER 'Год'
    FILTERS sumReceiptDetailZReport(nw,yw,dFrom,dTo)
    ORDERS yw, nw

    PROPERTIES READONLY SHOWIF showProperty(stsw) sumReceiptDetailZReport(stsw,nw,yw,dFrom,dTo)  COLUMNS (stsw) HEADER nameReceiptDetailZReport(stsw)
    PROPERTIES READONLY SHOWIF showProperty(stsw) sumPositiveCashPaymentZReport(stsw,nw,yw,dFrom,dTo)  COLUMNS (stsw) HEADER namePositiveCash(stsw)
    PROPERTIES READONLY SHOWIF showProperty(stsw) sumPositiveCardPaymentZReport(stsw,nw,yw,dFrom,dTo)  COLUMNS (stsw) HEADER namePositiveCard(stsw)
    PROPERTIES READONLY SHOWIF showProperty(stsw) discountSumZReport(stsw,nw,yw,dFrom,dTo)  COLUMNS (stsw) HEADER nameDiscountSum(stsw)
    PROPERTIES READONLY SHOWIF showProperty(stsw) VATSumSaleZReport(stsw,nw,yw,dFrom,dTo)  COLUMNS (stsw) HEADER nameVATSumSale(stsw)
    
    PROPERTIES READONLY SHOWIF showProperty(stsw) sumNegativeCashPaymentZReport(stsw,nw,yw,dFrom,dTo)  COLUMNS (stsw) HEADER nameNegativeCash(stsw)                                 
    PROPERTIES READONLY SHOWIF showProperty(stsw) sumNegativeCardPaymentZReport(stsw,nw,yw,dFrom,dTo)  COLUMNS (stsw) HEADER nameNegativeCard(stsw)
    
    PROPERTIES READONLY SHOWIF showProperty(stsw) countReceipt(stsw,nw,yw,dFrom,dTo) COLUMNS (stsw) HEADER countReceipt(stsw)
    PROPERTIES READONLY SHOWIF showProperty(stsw) countFiscalReceipt(stsw,nw,yw,dFrom,dTo) COLUMNS (stsw) HEADER countFiscalReceipt(stsw)                                 
    PROPERTIES READONLY SHOWIF showProperty(stsw) averageSumReceipt(stsw,nw,yw,dFrom,dTo) COLUMNS (stsw) HEADER averageSumReceipt(stsw)                                 
    PROPERTIES READONLY SHOWIF showProperty(stsw) countReceiptDetail(stsw,nw,yw,dFrom,dTo) COLUMNS (stsw) HEADER countReceiptDetail(stsw)                                 
    PROPERTIES READONLY SHOWIF showProperty(stsw) averageCountReceiptDetail(stsw,nw,yw,dFrom,dTo) COLUMNS (stsw) HEADER averageCountReceiptDetail(stsw)
    PROPERTIES READONLY SHOWIF showProperty(stsw) quantityReceiptDetail(stsw,nw,yw,dFrom,dTo) COLUMNS (stsw) HEADER quantityReceiptDetail(stsw)
//--
    PROPERTIES READONLY SHOWIF allStocks() sumReceiptDetailZReportStocks(nw,yw,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() sumPositiveCashPaymentZReportStocks(nw,yw,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() sumPositiveCardPaymentZReportStocks(nw,yw,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() discountSumZReportStocks(nw,yw,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() VATSumSaleZReportStocks(nw,yw,dFrom,dTo)
    
    PROPERTIES READONLY SHOWIF allStocks() sumNegativeCashPaymentZReportStocks(nw,yw,dFrom,dTo)                
    PROPERTIES READONLY SHOWIF allStocks() sumNegativeCardPaymentZReportStocks(nw,yw,dFrom,dTo)
    
    PROPERTIES READONLY SHOWIF allStocks() countReceiptStocks(nw,yw,dFrom,dTo)
    PROPERTIES READONLY SHOWIF allStocks() countFiscalReceiptStocks(nw,yw,dFrom,dTo)                               
    PROPERTIES READONLY SHOWIF allStocks() averageSumReceiptStocks(nw,yw,dFrom,dTo)                              
    PROPERTIES READONLY SHOWIF allStocks() countReceiptDetailStocks(nw,yw,dFrom,dTo)                                 
    PROPERTIES READONLY SHOWIF allStocks() averageCountReceiptDetailStocks(nw,yw,dFrom,dTo)

//--По магазинам (кратко)
    PROPERTIES READONLY name(stst), tradingSquare(stst), sumReceiptDetailZReport(stst,dFrom,dTo), discountSumZReport(stst,dFrom,dTo), countReceipt(stst,dFrom,dTo),
                        countFiscalReceipt(stst,dFrom,dTo), averageSumReceipt(stst,dFrom,dTo)

//--По магазинам (детализированно)
    PROPERTIES READONLY name(stsst), tradingSquare(stsst), sumReceiptDetailZReport(stsst,dFrom,dTo), sumPositiveCashPaymentZReport(stsst,dFrom,dTo),
                        sumPositiveCardPaymentZReport(stsst,dFrom,dTo), discountSumZReport(stsst,dFrom,dTo), VATSumSaleZReport(stsst,dFrom,dTo),
                        sumNegativeCashPaymentZReport(stsst,dFrom,dTo), sumNegativeCardPaymentZReport(stsst,dFrom,dTo),
                        countReceipt(stsst,dFrom,dTo), countFiscalReceipt(stsst,dFrom,dTo), averageSumReceipt(stsst,dFrom,dTo),
                        countReceiptDetail(stsst,dFrom,dTo), averageCountReceiptDetail(stsst,dFrom,dTo), quantityReceiptDetail(stsst,dFrom,dTo)
                                       
    FILTERS //(ts IS DepartmentStore AND NOT limitAccess(currentUser())) OR 
            accessCompany(currentUser(),ts);
;

DESIGN saleZreportStock {

    MOVE BOX(dates) {
        caption = 'Период';
        type = CONTAINERH;
        MOVE PROPERTY (allStocks());
    }

    REMOVE BOX(st);
    NEW detail {
        type = SPLITH;
        fill = 1;
        MOVE BOX(ts) { fill = 2; }
        NEW tab {
            fill = 5;
            tabbed = TRUE;
            NEW s {
                fill = 1;
                tabbed = TRUE;
                caption = 'Краткий';
                MOVE BOX(d) {
                    caption = 'По дням';
                }
                MOVE BOX(ny) {
                    caption = 'По неделям';
                }
                MOVE BOX(stst) {
                    caption = 'По магазинам';
                }
            }
            NEW d {
                fill = 1;
                tabbed = TRUE;
                caption = 'Детализированный';
                MOVE BOX(dt) {
                    caption = 'По дням';
                }
                MOVE BOX(nyw) {
                    caption = 'По неделям';
                }
                MOVE BOX(stsst) {
                    caption = 'По магазинам';
                }
            } 
        }
        PROPERTY(discountSumZReport(sts,d)) { background = #EEFFEE; }          
        PROPERTY(discountSumZReportStocks(d)) { background = #EEFFEE; }  
        

        PROPERTY(sumPositiveCashPaymentZReport(st,dt)) { background = #FFEEEE; } 
        PROPERTY(sumPositiveCardPaymentZReport(st,dt)) { background = #F4FFBD; }    

        PROPERTY(discountSumZReport(st,dt)) { background = #EEFFEE; }  
        PROPERTY(VATSumSaleZReport(st,dt)) { background = #E4FFBD; }             
        
        PROPERTY(sumNegativeCashPaymentZReport(st,dt)) { background = #D4FFFF; }              
        PROPERTY(sumNegativeCardPaymentZReport(st,dt)) { background = #C4FFBD; }    
                  
//-- итоги                  
        PROPERTY(sumPositiveCashPaymentZReportStocks(dt)) { background = #FFEEEE; } 
        PROPERTY(sumPositiveCardPaymentZReportStocks(dt)) { background = #F4FFBD; }    

        PROPERTY(discountSumZReportStocks(dt)) { background = #EEFFEE; }  
        PROPERTY(VATSumSaleZReportStocks(dt)) { background = #E4FFBD; }             
        
        PROPERTY(sumNegativeCashPaymentZReportStocks(dt)) { background = #D4FFFF; }              
        PROPERTY(sumNegativeCardPaymentZReportStocks(dt)) { background = #C4FFBD; } 
                                                                
//----в разрезе недели
        PROPERTY(discountSumZReport(stw,n,y,dFrom,dTo)) { background = #EEFFEE; }          
        PROPERTY(discountSumZReportStocks(n,y,dFrom,dTo)) { background = #EEFFEE; }
        
        PROPERTY(sumPositiveCashPaymentZReport(stsw,nw,yw,dFrom,dTo)) { background = #FFEEEE; } 
        PROPERTY(sumPositiveCardPaymentZReport(stsw,nw,yw,dFrom,dTo)) { background = #F4FFBD; }
        
        PROPERTY(discountSumZReport(stsw,nw,yw,dFrom,dTo)) { background = #EEFFEE; }  
        PROPERTY(VATSumSaleZReport(stsw,nw,yw,dFrom,dTo)) { background = #E4FFBD; }             
                
        PROPERTY(sumNegativeCashPaymentZReport(stsw,nw,yw,dFrom,dTo)) { background = #D4FFFF; }              
        PROPERTY(sumNegativeCardPaymentZReport(stsw,nw,yw,dFrom,dTo)) { background = #C4FFBD; }
        
        PROPERTY(sumPositiveCashPaymentZReportStocks(nw,yw,dFrom,dTo)) { background = #FFEEEE; } 
        PROPERTY(sumPositiveCardPaymentZReportStocks(nw,yw,dFrom,dTo)) { background = #F4FFBD; }    
        
        PROPERTY(discountSumZReportStocks(nw,yw,dFrom,dTo)) { background = #EEFFEE; }  
        PROPERTY(VATSumSaleZReportStocks(nw,yw,dFrom,dTo)) { background = #E4FFBD; }             
                
        PROPERTY(sumNegativeCashPaymentZReportStocks(nw,yw,dFrom,dTo)) { background = #D4FFFF; }              
        PROPERTY(sumNegativeCardPaymentZReportStocks(nw,yw,dFrom,dTo)) { background = #C4FFBD; }
//--По магазинам
        PROPERTY(sumPositiveCashPaymentZReport(stsst,dFrom,dTo)) { background = #FFEEEE; } 
        PROPERTY(sumPositiveCardPaymentZReport(stsst,dFrom,dTo)) { background = #F4FFBD; }

        PROPERTY(discountSumZReport(stsst,dFrom,dTo)) { background = #EEFFEE; }  
        PROPERTY(VATSumSaleZReport(stsst,dFrom,dTo)) { background = #E4FFBD; }             
                
        PROPERTY(sumNegativeCashPaymentZReport(stsst,dFrom,dTo)) { background = #D4FFFF; }              
        PROPERTY(sumNegativeCardPaymentZReport(stsst,dFrom,dTo)) { background = #C4FFBD; }
    }                                                                                
    MOVE TOOLBARBOX;
}

NAVIGATOR {
    retailReports  {
        NEW saleZreportStock;
    }
}

divider 'Диапазон суммы'  = DATA LOCAL NUMERIC[18,4] () PREREAD;

divider 'Диапазон суммы' (Receipt r)  = INTEGER (sumReceiptDetail(r) / divider())*divider();

filterReceiptSumFrom 'Сумма с' = DATA LOCAL NUMERIC[18,4] () PREREAD;
filterSumFrom (Receipt r) = sumReceiptDetail(r) >= filterReceiptSumFrom() OR (r IS Receipt AND NOT filterReceiptSumFrom());   

filterReceiptSumTo 'Сумма по' = DATA LOCAL NUMERIC[18,4] () PREREAD;
filterSumTo (Receipt r) = sumReceiptDetail(r) <= filterReceiptSumTo() OR (r IS Receipt AND NOT filterReceiptSumTo());   

FORM receiptListPeriod 'Реестр чеков'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)     
       
    PROPERTIES () filterReceiptSumFrom, filterReceiptSumTo, divider
    
    OBJECTS st = DepartmentStore PANEL 
    PROPERTIES name[Stock](st) SELECTOR 
    FILTERS isCompany(st), active(st)    
    
    OBJECTS r = Receipt
    PROPERTIES(r) READONLY  nameDepartmentStore, numberZReport, dateZReport, number, date, time, hour, numberCashRegister, nameEmployee,
                            sumSkuReceiptDetail, sumReceiptDetail, discountSumReceiptDetail,
                            discountSum, sumVATReceiptDetail, countReceiptDetail, quantityReceiptDetail,
                            sumCashPayment, sumCardPayment, divider SHOWIF divider(), dataSkip
    ORDERS date(r)//, time(r)                                            
    FILTERS date(r) >= dFrom,
            date(r) <= dTo,
            isPosted(r),
            filterSumFrom(r),
            filterSumTo(r)
            
    FILTERGROUP department
        FILTER 'По магазину' departmentStore(r) == st AND date(zReport(r)) >= dFrom AND date(zReport(r)) <= dTo 'F9' DEFAULT
;
DESIGN receiptListPeriod {
    BOX {
        NEW top {
            type = CONTAINERH;
            MOVE BOX(dates) {caption ='Период';}
            MOVE BOX(st);
        }
        NEW mid {
            type = CONTAINERH;
         
            NEW filter {
                type = CONTAINERH;
                caption = 'Фильтры';
                MOVE PROPERTY (filterReceiptSumFrom());
                MOVE PROPERTY (filterReceiptSumTo());
            }
            NEW mid1 {
                caption = 'Делитель';
                MOVE PROPERTY (divider());
            }
        }
        MOVE BOX(r);
        MOVE TOOLBARBOX;
    }
}
@extendFormFilterStockAccess(st, receiptListPeriod, company);
@extendFormFilterAccessStockNoNull(receipt, r, receiptListPeriod, departmentStore, company);

NAVIGATOR {
    retailReports  {
        NEW receiptListPeriod;
    }
}
