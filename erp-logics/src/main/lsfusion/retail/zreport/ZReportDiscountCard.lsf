MODULE ZReportDiscountCard;

REQUIRE ZReport, DiscountCard;

NAMESPACE ZReport;

discountCard (receipt) = DATA DiscountCard (Receipt);
countReceipt 'Кол-во чеков' = GROUP SUM 1 BY discountCard(Receipt r); 
externalCountReceipt 'Кол-во чеков(дополнительно)' = ABSTRACT INTEGER (DiscountCard) MATERIALIZED; 
totalCountReceipt 'Кол-во чеков(всего)'(DiscountCard dc) = countReceipt(dc) (+) externalCountReceipt(dc); 
prevCountReceipt 'Кол-во чеков' (DiscountCard dc) = PREV(countReceipt(dc));
prevTotalCountReceipt 'Кол-во чеков(всего)'(DiscountCard dc) = prevCountReceipt(dc) (+) externalCountReceipt(dc); 
seriesNumberDiscountCard (Receipt receipt) = seriesNumber(discountCard(receipt));
discountCard (ReceiptSaleDetail d) = discountCard(receipt(d));
discountCard (ReceiptReturnDetail d) = discountCard(receipt(d));
//discountCard (ReceiptReturnDetail d) = OVERRIDE discountCard(receiptSale(d)), discountCard(receipt(d));
discountCard (ReceiptDetail d) = discountCard(receipt(d));
idDiscountCard 'Код дисконтной карты' (ReceiptDetail d) = id(discountCard(d));

banValidity 'Не проверять срок действия дисконтной карты' = DATA BOOLEAN () COMPLEX ;

EXTEND FORM options
    PROPERTIES () banValidity
;
DESIGN options {
    discountCards{
        MOVE PROPERTY (banValidity());
    }
}

CONSTRAINT dateTo(discountCard(Receipt receipt)) < date(receipt) AND countReceiptSaleDetail(receipt) AND NOT banValidity()
    CHECKED BY discountCard[Receipt] 
        MESSAGE 'Закончился срок действия карты';

numberDiscountCard 'Номер дисконтной карты' (Receipt receipt) = seriesNumber(discountCard(receipt)) IN receiptDiscount;
nameLegalEntityDiscountCard 'Держатель дисконтной карты' (Receipt receipt) = nameLegalEntity(discountCard(receipt)) IN receiptDiscount CHARWIDTH 30;
numberDiscountCard 'Номер дисконтной карты' (ReceiptDetail receiptDetail) = numberDiscountCard(receipt(receiptDetail));
nameLegalEntityDiscountCard 'Держатель дисконтной карты' (ReceiptDetail receiptDetail) = nameLegalEntityDiscountCard(receipt(receiptDetail)) CHARWIDTH 30;
nameDiscountCard 'Наименование дисконтной карты' (Receipt receipt) = name(discountCard(receipt));

countReceiptsDiscountCard 'Кол-во чеков по дисконтным картам в Z-отчете' (zReport) = GROUP SUM 1 IF discountCard(Receipt receipt)  
    BY zReport(receipt) MATERIALIZED IN documentSum;
    
EXTEND FORM zReport
    PROPERTIES(b) AFTER nameEmployee(b) numberDiscountCard, nameLegalEntityDiscountCard
;
EXTEND FORM zReports
    PROPERTIES(b) READONLY AFTER nameEmployee(b) numberDiscountCard, nameLegalEntityDiscountCard 
;

//--Накопленные суммы

TABLE zReportDiscountCard (DiscountCard);
posSum 'Сумма продаж' (discountCard) = GROUP SUM sumReceiptDetail (Receipt receipt) BY discountCard(receipt) MATERIALIZED TABLE zReportDiscountCard;
posReturnSum 'Сумма возвратов' (discountCard) = GROUP SUM sum(ReceiptReturnDetail d) IF NOT discountCard[ReceiptDetail](d) BY discountCard(receiptSale(d)) MATERIALIZED TABLE zReportDiscountCard; 
signedTransferSum 'Сумма переводов' (discountCard) = ABSTRACT NUMERIC[18,4] (DiscountCard) MATERIALIZED;

cumulativeSum 'Накопленная сумма (основная)' (DiscountCard discountCard) = initialSum(discountCard) (+) posSum(discountCard) (-) posReturnSum(discountCard) (+) signedTransferSum(discountCard) MATERIALIZED TABLE zReportDiscountCard;

externalSum 'Дополнительные накопления' (discountCard) = ABSTRACT NUMERIC[18,4] (DiscountCard) MATERIALIZED;
totalSum 'Накопленная сумма' (DiscountCard d) = cumulativeSum(d) (+) externalSum(d); 
prevTotalSum 'Накопленная сумма' (DiscountCard d) = PREV(totalSum(d)); 

INDEX discountCard(Receipt r), date(r);
dateFirstUse 'Дата первого использования'=  GROUP MIN date(Receipt receipt) BY discountCard (receipt);

//перевод накоплений по карте

discountCard = DATA DiscountCard (DiscountCard) INDEXED;
numberDiscountCard 'Номер дисконтной карты для перевода' (DiscountCard d) = number(discountCard(d)); 
transferSum 'Сумма перевода' = DATA NUMERIC[18,4] (DiscountCard);

CONSTRAINT discountCard(DiscountCard c) == c
    MESSAGE 'Запрещено переводить накопления с карты на ту же карту';

totalTransferSum 'Сумма переводов' = GROUP SUM transferSum(DiscountCard d) BY discountCard(d);

signedTransferSum(DiscountCard d) += totalTransferSum(d) (-) transferSum(d);

EXTEND FORM discountCard
    PROPERTIES(d) READONLY totalTransferSum
    PROPERTIES(d) numberDiscountCard, transferSum
;

DESIGN discountCard {
    PANEL(d) {
        NEW row4 {
            caption = 'Перевод накоплений';
            horizontal = TRUE;
            MOVE PROPERTY(totalTransferSum(d));
            MOVE PROPERTY(numberDiscountCard(d));
            MOVE PROPERTY(transferSum(d));
        }
    }       
}

EXTEND FORM discountCards
    PROPERTIES(d) READONLY AFTER initialSum(d) posSum, posReturnSum, cumulativeSum, externalSum, signedTransferSum, totalSum
    PROPERTIES(d) READONLY AFTER date(d) dateFirstUse
    PROPERTIES(d) READONLY totalTransferSum, numberDiscountCard, transferSum 
;

numberDiscountCardInput 'Штрихкод' = DATA LOCAL STRING[15] () EVENTID 'SCANNER';
changeNumberDiscountCardInput()  { 
    INPUT s = STRING[15] DO {
        numberDiscountCardInput() <- processedBarcode(s);
        formOk();
    }
}

FORM numberDiscountCardInput 'Ввод номера старой дисконтной карты'
    PROPERTIES() numberDiscountCardInput ON CHANGE changeNumberDiscountCardInput()
;

DESIGN numberDiscountCardInput {
    PROPERTY (numberDiscountCardInput()) {
        caption = 'Штрихкод';
        font = 'bold 32';
        panelCaptionVertical = TRUE;
        changeKey = 'F4';
        focusable = TRUE;
    }
}

numberDiscountCardInputNew 'Штрихкод' = DATA LOCAL STRING[15] () EVENTID 'SCANNER';
changeNumberDiscountCardInputNew()  { 
    INPUT s = STRING[15] DO {
        numberDiscountCardInputNew() <- processedBarcode(s);
        formOk();
    }
}

FORM numberDiscountCardInputNew 'Ввод номера новой дисконтной карты'
    PROPERTIES() numberDiscountCardInputNew ON CHANGE changeNumberDiscountCardInputNew()
;

DESIGN numberDiscountCardInputNew {
    PROPERTY (numberDiscountCardInputNew()) {
        caption = 'Штрихкод';
        font = 'bold 32';
        panelCaptionVertical = TRUE;
        changeKey = 'F4';
        focusable = TRUE;
    }
}

showTransferSum() = numberDiscountCardInput() AND NOT numberDiscountCardInputNew();
notShowTransferSum() = NOT showTransferSum();

changeTransferSum (DiscountCard dc)  { 
    INPUT n = NUMERIC[18,4] DO
        IF NOT n > prevTotalSum(dc) AND NOT n < 0.0 THEN
            transferSum(dc) <- n;
        ELSE 
            IF n < 0.0 THEN
                MESSAGE 'Сумма перевода не может быть меньше ноля';
        ELSE    
            MESSAGE 'Нельзя переводить сумму больше суммы накопленний';           
}

FORM transferDiscountCards 'Перевод накоплений'
    OBJECTS dc = DiscountCard PANEL
    PROPERTIES(dc) READONLY nameLegalEntity, seriesNumber, prevTotalSum
    PROPERTIES(dc) transferSum SHOWIF showTransferSum() ON CHANGE changeTransferSum(dc)
    PROPERTIES(dc) totalTransferSum SHOWIF notShowTransferSum()
;

DESIGN transferDiscountCards {
    NEW topContainer {
        MOVE PROPERTY(nameLegalEntity(dc)){
            font = 'bold 32';
            panelCaptionVertical = TRUE;
            charWidth = 35;
            
        }
        MOVE PROPERTY(seriesNumber(dc)){
            font = 'bold 32';
            panelCaptionVertical = TRUE;
            alignment = STRETCH;            
        }
        MOVE PROPERTY(prevTotalSum(dc)){
            font = 'bold 32';
            panelCaptionVertical = TRUE;
            alignment = STRETCH;              
        }
        MOVE PROPERTY(transferSum(dc)){
            font = 'bold 32';
            panelCaptionVertical = TRUE;
            alignment = STRETCH;              
        }
        MOVE PROPERTY(totalTransferSum(dc)){
            font = 'bold 32';
            panelCaptionVertical = TRUE;
            alignment = STRETCH;              
        }
    }
    MOVE TOOLBARBOX;
}

overTransferDiscountCards  ABSTRACT LIST ( DiscountCard, DiscountCard); 
transferDiscountCards 'Замена карты' ()  { 
	NEWSESSION {
	    DIALOG numberDiscountCardInput DO {
	        FOR DiscountCard card == discountString(numberDiscountCardInput()) DO { 
	            transferSum(card) <- prevTotalSum(card);
	            DIALOG transferDiscountCards OBJECTS dc = card NOMANAGESESSION DO {
	                DIALOG numberDiscountCardInputNew NOMANAGESESSION DO {
	                    FOR DiscountCard newCard == discountString(numberDiscountCardInputNew()) DO {
	                        discountCard(card) <- newCard;
	                        dateTo(card) <- currentDate();
	                        legalEntity(newCard) <- legalEntity(card) WHERE NOT legalEntity(newCard);
	                        overTransferDiscountCards(newCard, card);
	                        legalEntity(card) <- NULL;
	                        DIALOG transferDiscountCards OBJECTS dc = newCard NOMANAGESESSION DO {
	                            apply();
	                            IF NOT canceled() THEN {
	                                MESSAGE 'Замена карты была успешно проведена';
	                            }
	                        }
	                    }    
	                }
	            }
	        }    
	    }
	}
}


EXTEND FORM discountCards
    PROPERTIES transferDiscountCards() DRAW d TOOLBAR
;

DESIGN discountCards{
    TOOLBAR(d){
        MOVE PROPERTY(transferDiscountCards()) BEFORE PROPERTY(generateDiscountCards());
    }
}