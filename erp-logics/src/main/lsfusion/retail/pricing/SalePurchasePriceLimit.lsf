MODULE SalePurchasePriceLimit;

REQUIRE PurchasePriceLimit, PricingSalePurchase;

NAMESPACE Sale;

//------------------ Предельные надбавки ----------------------//

@defineDocumentInterfaceProperty (invoice, showPurchaseLimitPrice, 'Предельная надбавка');
@defineDocumentInterfaceDetailMarkupPrefix (invoice, purchaseLimit, ' (закупка) предельная');

purchaseLimitMarkup(UserInvoiceDetail detail) <- markup(priceLimitPriceListType(customerStock(detail)), sku(detail))
    WHEN CHANGED (customerStock(detail)) OR
         CHANGED (sku(detail));

changePurchaseLimitMarkup(UserInvoiceDetail detail)  { 
    INPUT n = NUMERIC[8,2] DO
        dataMarkup(CalcPriceListType t, Sku s) <- n WHERE t == priceLimitPriceListType(customerStock(detail)) AND s == sku(detail);
}

//----------------------------------------------- Операции -----------------------------------------------------//

// Записываем необходимо ли показывать предельную надбавку по умолчанию из операции
showPurchaseLimitPrice (UserInvoice invoice) <- showLimitPrice(purchasePricingOperation(invoice))
    WHEN CHANGED(purchasePricingOperation(invoice));

EXTEND FORM userInvoice
    PROPERTIES(i) showPurchaseLimitPrice SHOWIF createPurchasePricing(i)
    PROPERTIES(sd) SHOWIF (showPurchaseLimitPrice(i) AND createPurchasePricing(i)) BEFORE purchaseRetailMarkup(sd) BACKGROUND backgroundPurchaseRetail(i)
                   purchaseLimitMarkup ON CHANGE changePurchaseLimitMarkup(d)
;
DESIGN userInvoice{
    purchasePricingHeader {
        MOVE PROPERTY (showPurchaseLimitPrice(i));
    }
}

EXTEND FORM invoices
    PROPERTIES(d) READONLY SHOWIF showPurchaseLimitPrice(i) BEFORE purchaseRetailMarkup(d) purchaseLimitMarkup//, overLimitPriceUserInvoiceDetail
;

// Имплементим для расчета оптимальной розничной цены


overLimitBasePrice = ABSTRACT NUMERIC[16,4] (UserInvoiceDetail);
limitBasePrice(UserInvoiceDetail d) = OVERRIDE overLimitBasePrice(d), price(d);

limitMarkupPrice (UserInvoiceDetail d) =
                                           round(
                                                [ (X+Y)*(Z+100.0)/100.0](
                                                    limitBasePrice(d),
                                                    purchaseLimitMarkup(d),
                                                    valuePurchaseRetailVAT(d)), roundCondition(priceLimitPriceListType(customerStock(d)), sku(d)));

limitPrice (UserInvoiceDetail detail) =
                                       round(
                                           [ X*(Y+100.0)*(Z+100.0)/10000.0](
                                                    limitBasePrice(detail),
                                                    purchaseLimitMarkup(detail),
                                                    valuePurchaseRetailVAT(detail)), roundCondition(priceLimitPriceListType(customerStock(detail)), sku(detail)));

WHEN LOCAL FORMS userInvoice GOAFTER purchaseRetailPrice[UserInvoiceDetail] 
            (SETCHANGED(purchaseRetailPrice(UserInvoiceDetail d)) OR CHANGED(purchaseLimitMarkup(d))) AND //  вообще в событии должно быть это условие, но тогда не всегда срабатывает (см. skype с Vitalur за 10.07) 
             showPurchaseLimitPrice(d) AND purchaseLimitMarkup(d) > 0.3 AND purchaseLimitMarkup(d) <= 1 AND purchaseLimitMarkup(d) < purchaseRetailPrice(d) NOINLINE DO {
    purchaseRetailPrice(d) <- purchaseLimitMarkup(d);
    purchaseRetailMarkup(d) <- calcPurchaseRetailMarkup(d);
}

WHEN LOCAL FORMS userInvoice GOAFTER purchaseRetailPrice[UserInvoiceDetail] 
            (SETCHANGED(purchaseRetailPrice(UserInvoiceDetail d)) OR CHANGED(limitBasePrice(d)) OR CHANGED(purchaseLimitMarkup(d))) 
            AND showPurchaseLimitPrice(d) AND purchaseLimitMarkup(d) <= 0.3 NOINLINE DO {
    IF limitMarkupPrice(d) < purchaseRetailPrice(d) THEN {
        purchaseRetailPrice(d) <- limitMarkupPrice(d);
        purchaseRetailMarkup(d) <- calcPurchaseRetailMarkup(d);
    }
}

WHEN LOCAL FORMS userInvoice GOAFTER purchaseRetailPrice[UserInvoiceDetail] 
            (SETCHANGED(purchaseRetailPrice(UserInvoiceDetail d)) OR CHANGED(limitBasePrice(d)) OR CHANGED(purchaseLimitMarkup(d))) AND //  вообще в событии должно быть это условие, но тогда не всегда срабатывает (см. skype с Vitalur за 10.07) 
             showPurchaseLimitPrice(d) AND purchaseLimitMarkup(d) > 1 NOINLINE DO {
    IF limitPrice(d) < purchaseRetailPrice(d) THEN {
        purchaseRetailPrice(d) <- limitPrice(d);
        purchaseRetailMarkup(d) <- calcPurchaseRetailMarkup(d);
    }
}

showLimitPrice(PurchaseInvoice invoice) += showPurchaseLimitPrice(invoice(invoice));
limitMarkup(PurchaseInvoiceDetail detail) += purchaseLimitMarkup(invoiceDetail(detail));


