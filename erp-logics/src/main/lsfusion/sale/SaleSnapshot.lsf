MODULE SaleSnapshot;

REQUIRE SaleLedger, StockSnapshot, StockDaysChange;

NAMESPACE Sale;


//-- Sku
saleQuantity 'Кол-во продажа' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
saleNetWeight 'Вес продажа' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot);
saleSum 'Сумма продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
saleCostSum 'Себестоимость продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
saleVATSum 'НДС продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
saleMarkupSum 'Надбавка продажа' (Sku sku, Stock stock, Snapshot snapshot) =
    saleSum(sku, stock, snapshot) (-) saleVATSum(sku, stock, snapshot) (-) saleCostSum(sku, stock, snapshot);
saleMarkupPerc 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSum(Sku sku, Stock stock, Snapshot snapshot) * 100.00 / saleCostSum(sku, stock, snapshot));
saleMarkupPercRet 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSum(Sku sku, Stock stock, Snapshot snapshot) * 100.00 / saleSum(sku, stock, snapshot));

saleVATSupplier 'НДС поставщика продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot);
saleCostVATSupplier 'С/С с НДС продажа' = saleVATSupplier(Sku sku, Stock stock, Snapshot snapshot) (+) 
                                                                saleCostSum(sku, stock, snapshot);

//-- Batch
saleQuantity 'Кол-во продажа' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
saleNetWeight 'Вес продажа' = DATA NUMERIC[14,3] (Batch, Stock, Snapshot);
saleSum 'Сумма продажа' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
saleCostSum 'Себестоимость продажа' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
saleVATSum 'НДС продажа' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
saleMarkupSum 'Надбавка продажа' (Batch batch, Stock stock, Snapshot snapshot) =
    saleSum(batch, stock, snapshot) (-) saleVATSum(batch, stock, snapshot) (-) saleCostSum(batch, stock, snapshot); 
saleMarkupPerc 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSum(Batch batch, Stock stock, Snapshot snapshot) * 100.00 / saleCostSum(batch, stock, snapshot));
saleMarkupPercRet 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSum(Batch batch, Stock stock, Snapshot snapshot) * 100.00 / saleSum(batch, stock, snapshot));

saleVATSupplier 'НДС поставщика продажа' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);
saleCostVATSupplier 'С/С с НДС продажа' = saleVATSupplier(Batch batch, Stock stock, Snapshot snapshot) (+) 
                                                                  saleCostSum(batch, stock, snapshot);
//-- группа/склад       
saleQuantity 'Кол-во продажа' = DATA NUMERIC[14,3] (SkuGroup, Stock, Snapshot);      
saleNetWeight 'Вес продажа' = DATA NUMERIC[14,3] (SkuGroup, Stock, Snapshot);
saleSum 'Сумма продажа' = DATA NUMERIC[16,2] (SkuGroup, Stock, Snapshot);
saleCostSum 'Себестоимость продажа' = DATA NUMERIC[16,2] (SkuGroup, Stock, Snapshot);
saleVATSum 'НДС продажа' = DATA NUMERIC[16,2] (SkuGroup, Stock, Snapshot);
saleMarkupSum 'Надбавка продажа' (SkuGroup group, Stock stock, Snapshot snapshot) =
    saleSum(group, stock, snapshot) (-) saleVATSum(group, stock, snapshot) (-) saleCostSum(group, stock, snapshot);
saleMarkupPerc 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSum(SkuGroup group, Stock stock, Snapshot snapshot)*100.00 / saleCostSum(group, stock, snapshot));
saleMarkupPercRet 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSum(SkuGroup group, Stock stock, Snapshot snapshot)*100.00 / saleSum(group, stock, snapshot));

saleVATSupplier 'НДС поставщика продажа' = DATA NUMERIC[16,2] (SkuGroup, Stock, Snapshot);
saleCostVATSupplier 'С/С с НДС продажа' = saleVATSupplier(SkuGroup group, Stock stock, Snapshot snapshot) (+) 
                                                                  saleCostSum(group, stock, snapshot);        
                        
//-- группа          
saleQuantity 'Кол-во продажа' (SkuGroup group, Snapshot snapshot) =
    GROUP  SUM saleQuantity (group, Stock stock, snapshot); 
saleNetWeight 'Вес продажа' (SkuGroup group, Snapshot snapshot) =
    GROUP  SUM saleNetWeight (group, Stock stock, snapshot);     
saleSum 'Сумма продажа' (SkuGroup group, Snapshot snapshot) =
    GROUP SUM saleSum (group, Stock stock, snapshot);              
saleCostSum 'Себестоимость продажа' (SkuGroup group, Snapshot snapshot) =
    GROUP SUM saleCostSum (group, Stock stock, snapshot);              
saleVATSum 'НДС продажа' (SkuGroup group, Snapshot snapshot) =
    GROUP SUM saleVATSum (group, Stock stock, snapshot);              
saleMarkupSum 'Надбавка продажа' (SkuGroup group, Snapshot snapshot) =
    GROUP SUM saleMarkupSum (group, Stock stock, snapshot); 
saleMarkupPerc 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSum(SkuGroup group, Snapshot snapshot)*100.00 / saleCostSum(group, snapshot));
saleMarkupPercRet 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSum(SkuGroup group, Snapshot snapshot)*100.00 / saleSum(group, snapshot));
        
saleVATSupplier 'НДС поставщика продажа' (SkuGroup group, Snapshot snapshot) =
    GROUP SUM saleVATSupplier (group, Stock stock, snapshot); 
saleCostVATSupplier 'С/С с НДС продажа' = saleVATSupplier(SkuGroup group, Snapshot snapshot) (+) 
                                                             saleCostSum(group, snapshot);        
        
//--По складам
saleQuantity 'Кол-во продажа' (Stock stock, Snapshot snapshot) =
    GROUP  SUM saleQuantity (Sku sku, stock, snapshot); 
saleNetWeight 'Вес продажа' (Stock stock, Snapshot snapshot) =
    GROUP  SUM saleNetWeight (Sku sku, stock, snapshot);     
saleSum 'Сумма продажа' (Stock stock, Snapshot snapshot) =
    GROUP SUM saleSum (Sku sku, stock, snapshot);   
saleCostSum 'Себестоимость продажа' (Stock stock, Snapshot snapshot) =
    GROUP SUM saleCostSum (Sku sku, stock, snapshot);              
saleVATSum 'НДС продажа' (Stock stock, Snapshot snapshot) =
    GROUP SUM saleVATSum (Sku sku, stock, snapshot);              
saleMarkupSum 'Надбавка продажа' (Stock stock, Snapshot snapshot) =
    GROUP SUM saleMarkupSum (Sku sku, stock, snapshot); 
saleMarkupPerc 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSum(Stock stock, Snapshot snapshot)*100.00 / saleCostSum(stock, snapshot));
saleMarkupPercRet 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSum(Stock stock, Snapshot snapshot)*100.00 / saleSum(stock, snapshot)); 

saleVATSupplier 'НДС поставщика продажа' (Stock stock, Snapshot snapshot) =
    GROUP SUM saleVATSupplier (Sku sku, stock, snapshot); 
saleCostVATSupplier 'С/С с НДС продажа' = saleVATSupplier(Stock stock, Snapshot snapshot) (+) 
                                                             saleCostSum(stock, snapshot);     

//-- По поставщикам
saleQuantityBatch 'Кол-во продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleQuantity (Batch batch, Stock stock, snapshot) BY supplier(batch);
saleNetWeightBatch 'Вес продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleNetWeight (Batch batch, Stock stock, snapshot) BY supplier(batch);    
saleSumBatch 'Сумма продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleSum (Batch batch, Stock stock, snapshot) BY supplier(batch);      
saleCostSumBatch 'Себестоимость продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleCostSum (Batch batch, Stock stock, snapshot) BY supplier(batch);
saleVATSumBatch 'НДС продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleVATSum (Batch batch, Stock stock, snapshot) BY supplier(batch);        
saleMarkupSumBatch 'Надбавка продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleMarkupSum (Batch batch, Stock stock, snapshot) BY supplier(batch);     
saleMarkupPercBatch 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSumBatch(LegalEntity supplier, Snapshot snapshot)*100.00 / saleCostSumBatch(supplier, snapshot));
saleMarkupPercRetBatch 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSumBatch(LegalEntity supplier, Snapshot snapshot)*100.00 / saleSumBatch(supplier, snapshot));

saleVATSupplierBatch 'НДС поставщика продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleVATSupplier (Batch batch, Stock stock, snapshot) BY supplier(batch);
saleCostVATSupplierBatch 'С/С с НДС продажа' = saleVATSupplierBatch(LegalEntity supplier, Snapshot snapshot) (+) 
                                                                     saleCostSumBatch(supplier, snapshot); 

//-- По складам поставщика
saleQuantityBatchSupplier 'Кол-во продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleQuantity (Batch batch, Stock stock, snapshot) BY supplierStock(batch);
saleNetWeightBatchSupplier 'Вес продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleNetWeight (Batch batch, Stock stock, snapshot) BY supplierStock(batch);    
saleSumBatchSupplier 'Сумма продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleSum (Batch batch, Stock stock, snapshot) BY supplierStock(batch);      
saleCostSumBatchSupplier 'Себестоимость продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleCostSum (Batch batch, Stock stock, snapshot) BY supplierStock(batch);
saleVATSumBatchSupplier 'НДС продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleVATSum (Batch batch, Stock stock, snapshot) BY supplierStock(batch);        
saleMarkupSumBatchSupplier 'Надбавка продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleMarkupSum (Batch batch, Stock stock, snapshot) BY supplierStock(batch);     
saleMarkupPercBatchSupplier 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSumBatchSupplier(Stock supplier, Snapshot snapshot)*100.00 / saleCostSumBatchSupplier(supplier, snapshot));
saleMarkupPercRetBatchSupplier 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSumBatchSupplier(Stock supplier, Snapshot snapshot)*100.00 / saleSumBatchSupplier(supplier, snapshot));

saleVATSupplierBatchSupplier 'НДС поставщика продажа' (supplier, Snapshot snapshot) =
    GROUP SUM saleVATSupplier (Batch batch, Stock stock, snapshot) BY supplierStock(batch);
saleCostVATSupplierBatchSupplier 'С/С с НДС продажа' = saleVATSupplierBatchSupplier(Stock supplier, Snapshot snapshot) (+) 
                                                                     saleCostSumBatchSupplier(supplier, snapshot);           
          
//-- Sku на дату
saleQuantity 'Кол-во продажа' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
saleNetWeight 'Вес продажа' = DATA NUMERIC[14,3] (Sku, Stock, Snapshot, DATE);
saleSum 'Сумма продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
saleCostSum 'Себестоимость продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
saleVATSum 'НДС продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
saleMarkupSum 'Надбавка продажа' (Sku sku, Stock stock, Snapshot snapshot, DATE date) = 
    saleSum(sku, stock, snapshot, date) (-) saleVATSum(sku, stock, snapshot, date) (-) saleCostSum(sku, stock, snapshot, date); 
saleMarkupPerc 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSum(Sku sku, Stock stock, Snapshot snapshot, DATE date)*100.00 / saleCostSum(sku, stock, snapshot, date));            
saleMarkupPercRet 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSum(Sku sku, Stock stock, Snapshot snapshot, DATE date)*100.00 / saleSum(sku, stock, snapshot, date));            

saleVATSupplier 'НДС поставщика продажа' = DATA NUMERIC[16,2] (Sku, Stock, Snapshot, DATE);
saleCostVATSupplier 'С/С с НДС продажа' = saleVATSupplier(Sku sku, Stock stock, Snapshot snapshot, DATE date) (+) 
                                                                    saleCostSum(sku, stock, snapshot, date);

//--По складам на дату     
saleQuantity 'Кол-во продажа' (Stock stock, Snapshot snapshot, DATE date) =
    GROUP  SUM saleQuantity (Sku sku, stock, snapshot, date); 
saleNetWeight 'Вес продажа' (Stock stock, Snapshot snapshot, DATE date) =
    GROUP  SUM saleNetWeight (Sku sku, stock, snapshot, date);     
saleSum 'Сумма продажа' (Stock stock, Snapshot snapshot, DATE date) =
    GROUP SUM saleSum (Sku sku, stock, snapshot, date);   
saleCostSum 'Себестоимость продажа' (Stock stock, Snapshot snapshot, DATE date) =
    GROUP SUM saleCostSum (Sku sku, stock, snapshot, date);              
saleVATSum 'НДС продажа' (Stock stock, Snapshot snapshot, DATE date) =
    GROUP SUM saleVATSum (Sku sku, stock, snapshot, date);              
saleMarkupSum 'Надбавка продажа' (Stock stock, Snapshot snapshot, DATE date) =
    GROUP SUM saleMarkupSum (Sku sku, stock, snapshot, date); 
saleMarkupPerc 'Надбавка, % средн.' = NUMERIC[10,2](saleMarkupSum(Stock stock, Snapshot snapshot, DATE date)*100.00 / saleCostSum(stock, snapshot, date));
saleMarkupPercRet 'Надбавка, % от цены' = NUMERIC[10,2](saleMarkupSum(Stock stock, Snapshot snapshot, DATE date)*100.00 / saleSum(stock, snapshot, date));

saleVATSupplier 'НДС поставщика продажа' (Stock stock, Snapshot snapshot, DATE date) =
    GROUP SUM saleVATSupplier (Sku sku, stock, snapshot, date); 
saleCostVATSupplier 'С/С с НДС продажа' = saleVATSupplier(Stock stock, Snapshot snapshot, DATE date) (+) 
                                                                 saleCostSum(stock, snapshot, date);

nameSaleQuantity (Stock st) = CONCAT ' ', name(st), ' (кол-во продажа)';
nameSaleNetWeight (Stock st) = CONCAT ' ', name(st), ' (вес продажа)';
nameSaleSum (Stock st) = CONCAT ' ', name(st), ' (сумма продажа)';
nameSaleCostSum (Stock st) = CONCAT ' ', name(st), ' (себестоимость продажа)';
nameSaleVATSum(Stock st) = CONCAT ' ', name(st), ' (НДС продажа)';        
nameSaleMarkupSum (Stock st) = CONCAT ' ', name(st), ' (надбавка продажа)';
nameSaleMarkupPerc (Stock st) = CONCAT ' ', name(st), ' (надбавка, % сред.)';
nameSaleMarkupPercRet (Stock st) = CONCAT ' ', name(st), ' (надбавка, % от цены)';
nameSaleVATSupplier(Stock st) = CONCAT ' ', name(st), ' (НДС поставщика продажа)';  
nameSaleCostVATSupplier(Stock st) = CONCAT ' ', name(st), ' (c/c с НДС продажа)';  

isSale 'Продажа' = DATA BOOLEAN (Snapshot) IN evidence;

extraFilterMove(Sku s, Stock st, Snapshot r) += WHEN saleQuantity(s,st,r) OR saleSum(s,st,r) THEN TRUE;
extraFilterMove(Sku s, Stock st, Snapshot r, DATE d) += WHEN saleQuantity(s,st,r,d) OR saleSum(s,st,r,d) THEN TRUE;
extraFilterMove(Batch bt,Stock ss,Snapshot r) += WHEN saleQuantity(bt,ss,r) OR saleSum(bt,ss,r) THEN TRUE;

//-- Расширяем ACTION      
            
overTakeSkuFromTo(Snapshot snapshot, DATE dateFrom, DATE dateTo) + { 
    IF isSale(snapshot) THEN {
        IF isDate(snapshot) THEN {
            IF isQuantity(snapshot) THEN {
                saleQuantity(Sku sku, Stock stock, snapshot, DATE date) <- NULL;
                saleQuantity(Sku sku, Stock stock, snapshot, DATE date) <- NUMERIC[14,3](quantitySold(sku, stock, date)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND quantitySold(sku, stock, date);
            }
            IF isSum(snapshot) THEN {
                saleSum(Sku sku, Stock stock, snapshot, DATE date) <- NULL;
                saleSum(Sku sku, Stock stock, snapshot, DATE date) <- NUMERIC[16,2](sumSold(sku, stock, date)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND sumSold(sku, stock, date);   
                
                saleVATSum(Sku sku, Stock stock, snapshot, DATE date) <- NULL;
                saleVATSum(Sku sku, Stock stock, snapshot, DATE date) <- NUMERIC[16,2](sumVATSold(sku, stock, date)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND sumVATSold(sku, stock, date);      
            } 
            IF isCost(snapshot) THEN {          
                saleCostSum(Sku sku, Stock stock, snapshot, DATE date) <- NULL;
                saleCostSum(Sku sku, Stock stock, snapshot, DATE date) <- NUMERIC[16,2](costSumSold(sku, stock, date)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND costSumSold(sku, stock, date);                   
            }  
            IF isNetWeight(snapshot) THEN {
                saleNetWeight(Sku sku, Stock stock, snapshot, DATE date) <- NULL;
                saleNetWeight(Sku sku, Stock stock, snapshot, DATE date) <- NUMERIC[14,3](quantitySold(sku, stock, date)*overNetWeight(sku)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND quantitySold(sku, stock, date);
            }  
            IF isVATSupplier(snapshot) THEN {
                saleVATSupplier(Sku sku, Stock stock, snapshot, DATE date) <- NULL;
                saleVATSupplier(Sku sku, Stock stock, snapshot, DATE date) <- NUMERIC[16,2](costSumSold(sku, stock, date)*valueVAT(sku,country(stock),dateTo)/100) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku) AND date AS DATE AND date >= (dateFrom AS DATE) 
                        AND date <= (dateTo AS DATE) AND  costSumSold(sku, stock, date);                     
            }                                                                               
        }
    }
    
};                                                                                                
useOutCompareSale = ABSTRACT BOOLEAN (Snapshot);    
useOutCompareSale ABSTRACT (Snapshot, DATE, DATE);          
overTakeSkuFromTo(Snapshot snapshot, DATE dateFrom, DATE dateTo) + { 
    IF isSale(snapshot)  THEN {
        IF NOT useOutCompareSale(snapshot) THEN {
            IF isQuantity(snapshot) THEN {
                saleQuantity(Sku sku, Stock stock, snapshot) <- NULL;
                saleQuantity(SkuGroup skuGroup, Stock stock, snapshot) <- NULL;                
                IF singleStock() THEN {
                    saleQuantity(Sku sku, Stock stock, snapshot) <- NUMERIC[14,3](quantitySold(sku, stock, dateFrom, dateTo)) 
                        WHERE stock == singleStock() AND include(snapshot, sku) AND quantitySold(sku, stock, dateFrom, dateTo);
                } ELSE {
                    saleQuantity(Sku sku, Stock stock, snapshot) <- NUMERIC[14,3](quantitySold(sku, stock, dateFrom, dateTo)) 
                        WHERE include(snapshot, stock) AND include(snapshot, sku) AND quantitySold(sku, stock, dateFrom, dateTo);
                }
                saleQuantity(SkuGroup skuGroup, Stock stock, snapshot) <- NUMERIC[14,3](GROUP SUM saleQuantity(Sku sku, stock, snapshot) IF isParent(skuGroup, sku))
                    WHERE (GROUP SUM saleQuantity(Sku sku, stock, snapshot) IF isParent(skuGroup, sku));                
                
            }    
            IF isSum(snapshot) THEN {   
                saleSum(Sku sku, Stock stock, snapshot) <- NULL;
                saleSum(SkuGroup skuGroup, Stock stock, snapshot) <- NULL;
                saleVATSum(Sku sku, Stock stock, snapshot) <- NULL;
                saleVATSum(SkuGroup skuGroup, Stock stock, snapshot) <- NULL;
                IF singleStock() THEN {
                    saleSum(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](sumSold(sku, stock, dateFrom, dateTo)) 
                        WHERE stock == singleStock() AND include(snapshot, sku) AND sumSold(sku, stock, dateFrom, dateTo);    
                    saleVATSum(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](sumVATSold(sku, stock, dateFrom, dateTo)) 
                        WHERE stock == singleStock() AND include(snapshot, sku) AND sumVATSold(sku, stock, dateFrom, dateTo);
                } ELSE {
                    saleSum(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](sumSold(sku, stock, dateFrom, dateTo)) 
                        WHERE include(snapshot, stock) AND include(snapshot, sku) AND sumSold(sku, stock, dateFrom, dateTo);    
                    saleVATSum(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](sumVATSold(sku, stock, dateFrom, dateTo)) 
                        WHERE include(snapshot, stock) AND include(snapshot, sku) AND sumVATSold(sku, stock, dateFrom, dateTo);    
                }
                saleSum(SkuGroup skuGroup, Stock stock, snapshot) <- NUMERIC[16,2](GROUP SUM saleSum(Sku sku, stock, snapshot) IF isParent(skuGroup, sku))
                    WHERE (GROUP SUM saleSum(Sku sku, stock, snapshot) IF isParent(skuGroup, sku));
                saleVATSum(SkuGroup skuGroup, Stock stock, snapshot) <- NUMERIC[16,2](GROUP SUM saleVATSum(Sku sku, stock, snapshot) IF isParent(skuGroup, sku))
                    WHERE (GROUP SUM saleVATSum(Sku sku, stock, snapshot) IF isParent(skuGroup, sku));
            } 
            IF isCost(snapshot) THEN {   
                saleCostSum(Sku sku, Stock stock, snapshot) <- NULL;
                saleCostSum(SkuGroup skuGroup, Stock stock, snapshot) <- NULL;                
                IF singleStock() THEN {
                    saleCostSum(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(sku, stock, dateFrom, dateTo)) 
                        WHERE stock = singleStock() AND include(snapshot, sku) AND costSumSold(sku, stock, dateFrom, dateTo);
                } ELSE {
                    saleCostSum(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(sku, stock, dateFrom, dateTo)) 
                        WHERE include(snapshot, stock) AND include(snapshot, sku) AND costSumSold(sku, stock, dateFrom, dateTo);
                }
                saleCostSum(SkuGroup skuGroup, Stock stock, snapshot) <- NUMERIC[16,2](GROUP SUM saleCostSum(Sku sku, stock, snapshot) IF isParent(skuGroup, sku))
                    WHERE (GROUP SUM saleCostSum(Sku sku, stock, snapshot) IF isParent(skuGroup, sku));                                                   
            } 
            IF isNetWeight(snapshot) THEN {
                saleNetWeight(Sku sku, Stock stock, snapshot) <- NULL;
                saleNetWeight(SkuGroup skuGroup, Stock stock, snapshot) <- NULL;
                saleNetWeight(Sku sku, Stock stock, snapshot) <- NUMERIC[14,3](quantitySold(sku, stock, dateFrom, dateTo)*overNetWeight(sku)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku) AND quantitySold(sku, stock, dateFrom, dateTo);
                saleNetWeight(SkuGroup skuGroup, Stock stock, snapshot) <- NUMERIC[14,3](GROUP SUM saleNetWeight(Sku sku, stock, snapshot) IF isParent(skuGroup, sku))
                    WHERE (GROUP SUM saleNetWeight(Sku sku, stock, snapshot) IF isParent(skuGroup, sku));
            }  
            IF isVATSupplier(snapshot) THEN {
                saleVATSupplier(Sku sku, Stock stock, snapshot) <- NULL;
                saleVATSupplier(SkuGroup skuGroup, Stock stock, snapshot) <- NULL;
                IF singleStock() THEN {
                    saleVATSupplier(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(sku, stock, dateFrom, dateTo)*valueVAT(sku,country(stock),dateTo)/100) 
                        WHERE stock = singleStock() AND include(snapshot, sku) AND costSumSold(sku, stock, dateFrom, dateTo);
                } ELSE {
                    saleVATSupplier(Sku sku, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(sku, stock, dateFrom, dateTo)*valueVAT(sku,country(stock),dateTo)/100) 
                        WHERE include(snapshot, stock) AND include(snapshot, sku) AND costSumSold(sku, stock, dateFrom, dateTo);
                }                     
                 saleVATSupplier(SkuGroup skuGroup, Stock stock, snapshot) <- NUMERIC[16,2] (GROUP SUM saleVATSupplier(Sku sku, stock, snapshot) IF isParent(skuGroup, sku))
                    WHERE (GROUP SUM saleVATSupplier(Sku sku, stock, snapshot) IF isParent(skuGroup, sku));
           }        
        } ELSE {
            useOutCompareSale(snapshot,dateFrom,dateTo);
        }                        
    } 
};  

overTakeBatchFromTo(Snapshot snapshot, DATE dateFrom, DATE dateTo) + { 
    IF isSale(snapshot) THEN {
        IF isQuantity(snapshot) THEN {
            saleQuantity(Batch batch, Stock stock, snapshot) <- NULL;
            IF singleStock () THEN {
                saleQuantity(Batch batch, Stock stock, snapshot) <- NUMERIC[14,3](quantitySold(batch, stock, dateFrom, dateTo)) 
                    WHERE stock == singleStock() AND include(snapshot, sku(batch)) AND quantitySold(batch, stock, dateFrom, dateTo);
            } ELSE {
                saleQuantity(Batch batch, Stock stock, snapshot) <- NUMERIC[14,3](quantitySold(batch, stock, dateFrom, dateTo)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND quantitySold(batch, stock, dateFrom, dateTo);
            }
        }
        IF isSum(snapshot) THEN { 
            saleSum(Batch batch, Stock stock, snapshot) <- NULL;
            saleCostSum(Batch batch, Stock stock, snapshot) <- NULL;
            saleVATSum(Batch batch, Stock stock, snapshot) <- NULL;
            IF singleStock () THEN {
                saleSum(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](sumSold(batch, stock, dateFrom, dateTo)) 
                    WHERE stock == singleStock() AND include(snapshot, sku(batch)) AND sumSold(batch, stock, dateFrom, dateTo);
                saleCostSum(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(batch, stock, dateFrom, dateTo)) 
                    WHERE stock == singleStock() AND include(snapshot, sku(batch)) AND costSumSold(batch, stock, dateFrom, dateTo);   
                saleVATSum(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](sumVATSold(batch, stock, dateFrom, dateTo)) 
                    WHERE stock == singleStock() AND include(snapshot, sku(batch)) AND sumVATSold(batch, stock, dateFrom, dateTo);
            } ELSE {
                saleSum(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](sumSold(batch, stock, dateFrom, dateTo)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND sumSold(batch, stock, dateFrom, dateTo);   
                saleCostSum(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(batch, stock, dateFrom, dateTo)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND costSumSold(batch, stock, dateFrom, dateTo);   
                saleVATSum(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](sumVATSold(batch, stock, dateFrom, dateTo)) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND sumVATSold(batch, stock, dateFrom, dateTo);
            }       
        } 
        IF isNetWeight(snapshot) THEN {
            saleNetWeight(Batch batch, Stock stock, snapshot) <- NULL;
            saleNetWeight(Batch batch, Stock stock, snapshot) <- NUMERIC[14,3](quantitySold(batch, stock, dateFrom, dateTo)*overNetWeight(sku(batch))) 
                WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND quantitySold(batch, stock, dateFrom, dateTo);
        } 
        IF isVATSupplier(snapshot) THEN {
            saleVATSupplier(Batch batch, Stock stock, snapshot) <- NULL;
            IF singleStock () THEN {
                saleVATSupplier(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(batch, stock, dateFrom, dateTo)*valueVAT(sku(batch),country(stock),dateTo)/100) 
                    WHERE stock = singleStock() AND include(snapshot, sku(batch)) AND costSumSold(batch, stock, dateFrom, dateTo);
            } ELSE {
                saleVATSupplier(Batch batch, Stock stock, snapshot) <- NUMERIC[16,2](costSumSold(batch, stock, dateFrom, dateTo)*valueVAT(sku(batch),country(stock),dateTo)/100) 
                    WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND costSumSold(batch, stock, dateFrom, dateTo);
            }
        }                 
                
    }      
};  
       
//-- SHOWIF
isQuantitySale= isQuantity(Snapshot snapshot) AND isSale(snapshot);
isNetWeightSale= isNetWeight(Snapshot snapshot) AND isSale(snapshot);
isSumSale= isSum(Snapshot snapshot) AND isSale(snapshot);
isVATSupplierSale= isVATSupplier(Snapshot snapshot) AND isSale(snapshot);
isCostVATSupplierSale= isCostVATSupplier(Snapshot snapshot) AND isSale(snapshot);
//--
isQuantitySaleDate= isQuantity(Snapshot snapshot) AND isSale(snapshot) AND isDate(snapshot);
isNetWeightSaleDate= isNetWeight(Snapshot snapshot) AND isSale(snapshot) AND isDate(snapshot);
isSumSaleDate= isSum(Snapshot snapshot) AND isSale(snapshot) AND isDate(snapshot);
isVATSupplierSaleDate= isVATSupplier(Snapshot snapshot) AND isSale(snapshot) AND isDate(snapshot);
isCostVATSupplierSaleDate= isCostVATSupplier(Snapshot snapshot) AND isSale(snapshot) AND isDate(snapshot);
//--
isQuantitySaleBatch= isQuantity(Snapshot snapshot) AND isSale(snapshot) AND isBatch(snapshot);
isNetWeightSaleBatch= isNetWeight(Snapshot snapshot) AND isSale(snapshot) AND isBatch(snapshot);
isSumSaleBatch= isSum(Snapshot snapshot) AND isSale(snapshot) AND isBatch(snapshot);
isVATSupplierSaleBatch= isVATSupplier(Snapshot snapshot) AND isSale(snapshot) AND isBatch(snapshot); 
isCostVATSupplierSaleBatch= isCostVATSupplier(Snapshot snapshot) AND isSale(snapshot) AND isBatch(snapshot);                                                    
                                                         
EXTEND FORM snapshot
    PROPERTIES(r)      BACKGROUND hintSaleBackground() isSale
//--sku  
    PROPERTIES(s,st,r) BEFORE inQuantity(s, st, r) BACKGROUND hintSaleBackground()
                       saleQuantity SHOWIF isQuantitySale(r), 
                       saleCostSum SHOWIF isSumSale(r),
                       saleVATSupplier SHOWIF isVATSupplierSale(r),
                       saleCostVATSupplier SHOWIF isCostVATSupplierSale(r),
                       saleMarkupSum SHOWIF isSumSale(r), 
                       saleVATSum SHOWIF isSumSale(r),                        
                       saleSum SHOWIF isSumSale(r),
                       saleMarkupPerc SHOWIF isSumSale(r),
                       saleMarkupPercRet SHOWIF isSumSale(r),
                       saleNetWeight SHOWIF isNetWeightSale(r)  
//--sku на дату  
    PROPERTIES(s3,st3,r,d3) BEFORE inQuantity(s3,st3,r,d3) BACKGROUND hintSaleBackground()
                       saleQuantity SHOWIF isQuantitySaleDate(r), 
                       saleCostSum SHOWIF isSumSaleDate(r),
                       saleVATSupplier SHOWIF isVATSupplierSaleDate(r),
                       saleCostVATSupplier SHOWIF isCostVATSupplierSaleDate(r),
                       saleMarkupSum SHOWIF isSumSaleDate(r), 
                       saleVATSum SHOWIF isSumSaleDate(r),                        
                       saleSum SHOWIF isSumSaleDate(r),
                       saleMarkupPerc SHOWIF isSumSaleDate(r),
                       saleMarkupPercRet SHOWIF isSumSaleDate(r),
                       saleNetWeight SHOWIF isNetWeightSaleDate(r)  
//--По складам на дату 
    PROPERTIES(st4,r,d4) BACKGROUND hintSaleBackground() BEFORE inQuantity(st4,r,d4)
                       saleQuantity COLUMNS 'g' (st4) HEADER nameSaleQuantity(st4) SHOWIF isQuantitySaleDate(r), 
                       saleSum COLUMNS 'g' (st4) HEADER nameSaleSum(st4) SHOWIF isSumSaleDate(r),
                       saleCostSum COLUMNS 'g' (st4) HEADER nameSaleCostSum(st4) SHOWIF isSumSaleDate(r), 
                       saleVATSupplier COLUMNS 'g' (st4) HEADER nameSaleVATSupplier(st4) SHOWIF isVATSupplierSaleDate(r),                        
                       saleCostVATSupplier COLUMNS 'g' (st4) HEADER nameSaleCostVATSupplier(st4) SHOWIF isCostVATSupplierSaleDate(r),                                                             
                       saleMarkupSum COLUMNS 'g' (st4) HEADER nameSaleMarkupSum(st4) SHOWIF isSumSaleDate(r), 
                       saleVATSum COLUMNS 'g' (st4) HEADER nameSaleVATSum(st4) SHOWIF isSumSaleDate(r),                       
                       saleMarkupPerc COLUMNS 'g' (st4) HEADER nameSaleMarkupPerc(st4) SHOWIF isSumSaleDate(r),
                       saleMarkupPercRet COLUMNS 'g' (st4) HEADER nameSaleMarkupPercRet(st4) SHOWIF isSumSaleDate(r),
                       saleNetWeight COLUMNS 'g' (st4) HEADER nameSaleNetWeight(st4) SHOWIF isNetWeightSaleDate(r)                                                                  
//-- batch
    PROPERTIES(bt,ss,r) BACKGROUND hintSaleBackground() BEFORE inQuantity(bt,ss,r) 
                       saleQuantity SHOWIF isQuantitySaleBatch(r), 
                       saleCostSum SHOWIF isSumSaleBatch(r),
                       saleVATSupplier SHOWIF isVATSupplierSaleBatch(r), 
                       saleCostVATSupplier SHOWIF isCostVATSupplierSaleBatch(r), 
                       saleMarkupSum SHOWIF isSumSaleBatch(r), 
                       saleVATSum SHOWIF isSumSaleBatch(r),                       
                       saleSum SHOWIF isSumSaleBatch(r),    
                       saleMarkupPerc SHOWIF isSumSaleBatch(r),
                       saleMarkupPercRet SHOWIF isSumSaleBatch(r),
                       saleNetWeight SHOWIF isNetWeightSaleBatch(r)              
//-- По группам                           
    PROPERTIES(sk1,r)  READONLY BEFORE balanceA(sk1,r) BACKGROUND hintSaleBackground()         
                       saleQuantity SHOWIF isQuantitySale(r), 
                       saleCostSum SHOWIF isSumSale(r),
                       saleVATSupplier SHOWIF isVATSupplierSale(r),
                       saleCostVATSupplier SHOWIF isCostVATSupplierSale(r),                     
                       saleMarkupSum SHOWIF isSumSale(r), 
                       saleVATSum SHOWIF isSumSale(r),                        
                       saleSum SHOWIF isSumSale(r),                                             
                       saleMarkupPerc SHOWIF isSumSale(r),
                       saleMarkupPercRet SHOWIF isSumSale(r),
                       saleNetWeight SHOWIF isNetWeightSale(r)
    PROPERTIES(skg,r)  READONLY BEFORE balanceA(skg,r) BACKGROUND hintSaleBackground()         
                       saleQuantity SHOWIF isQuantitySale(r), 
                       saleCostSum SHOWIF isSumSale(r),
                       saleVATSupplier SHOWIF isVATSupplierSale(r),
                       saleCostVATSupplier SHOWIF isCostVATSupplierSale(r),                     
                       saleMarkupSum SHOWIF isSumSale(r), 
                       saleVATSum SHOWIF isSumSale(r),                        
                       saleSum SHOWIF isSumSale(r),                                             
                       saleMarkupPerc SHOWIF isSumSale(r),
                       saleMarkupPercRet SHOWIF isSumSale(r),
                       saleNetWeight SHOWIF isNetWeightSale(r)
//-- По складам                           
    PROPERTIES(ts1,r)  READONLY BEFORE inQuantity(ts1,r) BACKGROUND hintSaleBackground()                         
                       saleQuantity SHOWIF isQuantitySale(r), 
                       saleCostSum SHOWIF isSumSale(r),
                       saleVATSupplier SHOWIF isVATSupplierSale(r),                       
                       saleCostVATSupplier SHOWIF isCostVATSupplierSale(r),            
                       saleMarkupSum SHOWIF isSumSale(r),
                       saleVATSum SHOWIF isSumSale(r),                         
                       saleSum SHOWIF isSumSale(r), 
                       saleMarkupPerc SHOWIF isSumSale(r),
                       saleMarkupPercRet SHOWIF isSumSale(r),
                       saleNetWeight SHOWIF isNetWeightSale(r)
//-- По поставщикам 
    PROPERTIES(l,r)    READONLY BEFORE inQuantityBatch(l,r) BACKGROUND hintSaleBackground()   
                       saleQuantityBatch SHOWIF isQuantitySaleBatch(r), 
                       saleCostSumBatch SHOWIF isSumSaleBatch(r),
                       saleVATSupplierBatch SHOWIF isVATSupplierSaleBatch(r),                       
                       saleCostVATSupplierBatch SHOWIF isCostVATSupplierSaleBatch(r),                                                
                       saleMarkupSumBatch SHOWIF isSumSaleBatch(r), 
                       saleVATSumBatch SHOWIF isSumSaleBatch(r),                       
                       saleSumBatch SHOWIF isSumSaleBatch(r),                           
                       saleMarkupPercBatch SHOWIF isSumSaleBatch(r),
                       saleMarkupPercRetBatch SHOWIF isSumSaleBatch(r),
                       saleNetWeightBatch SHOWIF isNetWeightSaleBatch(r)
                       
    PROPERTIES(lst,r)    READONLY BEFORE inQuantityBatchSupplier(lst,r) BACKGROUND hintSaleBackground()   
                       saleQuantityBatchSupplier SHOWIF isQuantitySaleBatch(r), 
                       saleCostSumBatchSupplier SHOWIF isSumSaleBatch(r),
                       saleVATSupplierBatchSupplier SHOWIF isVATSupplierSaleBatch(r),                       
                       saleCostVATSupplierBatchSupplier SHOWIF isCostVATSupplierSaleBatch(r),                                                
                       saleMarkupSumBatchSupplier SHOWIF isSumSaleBatch(r), 
                       saleVATSumBatchSupplier SHOWIF isSumSaleBatch(r),                       
                       saleSumBatchSupplier SHOWIF isSumSaleBatch(r),                           
                       saleMarkupPercBatchSupplier SHOWIF isSumSaleBatch(r),
                       saleMarkupPercRetBatchSupplier SHOWIF isSumSaleBatch(r),
                       saleNetWeightBatchSupplier SHOWIF isNetWeightSaleBatch(r)                       
                       
;
//------------------------  Товарооборачиваемость ----------------------//

isSale 'Продажа' = DATA BOOLEAN (SnapshotType);
turnoverSku 'Товарооборачиваемость' = DATA BOOLEAN (SnapshotType); 
daysOnStockSku 'Дней на складе' = DATA BOOLEAN (SnapshotType); 

EXTEND FORM snapshotType
    PROPERTIES (t) isSale, turnoverSku, daysOnStockSku
;
DESIGN snapshotType {
    row6 {
        MOVE PROPERTY(isSale(t));
        MOVE PROPERTY(turnoverSku(t));                                             
        MOVE PROPERTY(daysOnStockSku(t));                                             
    } 
} 
EXTEND FORM snapshotTypes
    PROPERTIES (t) READONLY  isSale, turnoverSku, daysOnStockSku
;
daysOnStock 'Дней на складе' = DATA INTEGER (Sku, Stock, Snapshot);
cumBalance 'Накопленный остаток' = DATA NUMERIC[18,4] (Sku, Stock, Snapshot);
turnoverSku 'Товарооборачиваемость' = DATA BOOLEAN (Snapshot) IN evidence; 
daysOnStockSku 'Дней на складе' = DATA BOOLEAN (Snapshot) IN evidence; 

@deriveDocumentSnapshotProperty(isSale);
@deriveDocumentSnapshotProperty(turnoverSku);
@deriveDocumentSnapshotProperty(daysOnStockSku);


averageSold 'Продаж в день' (Sku sku, Stock stock, Snapshot snapshot) =  
    saleQuantity(sku, stock, snapshot) /
    daysOnStock(sku, stock, snapshot);

turnover 'Товарооборачиваемость, дн.' (Sku sku, Stock stock, Snapshot snapshot) = NUMERIC[12,3](cumBalance(sku, stock, snapshot) /
    saleSum(sku, stock, snapshot));
    
coutDaysToEnd 'Дней хватит' (Sku sku, Stock stock, Snapshot snapshot) = NUMERIC[12,3](balanceA(sku, stock, snapshot) / 
    averageSold(sku, stock, snapshot));
        
//-- группа/склад       
cumBalance 'Накопленный остаток' = DATA NUMERIC[18,4] (SkuGroup, Stock, Snapshot);

turnover 'Товарооборачиваемость, дн.' (SkuGroup group, Stock stock, Snapshot snapshot) = NUMERIC[12,3](cumBalance(group, stock, snapshot) /
    saleSum(group, stock, snapshot));        
//-- группа   
cumBalance 'Накопленный остаток' (SkuGroup group, Snapshot snapshot) =
    GROUP SUM cumBalance(group, Stock stock, snapshot) MATERIALIZED;   
    
turnover 'Товарооборачиваемость, дн.' (SkuGroup group, Snapshot snapshot) = NUMERIC[12,3](cumBalance(group, snapshot) /
    saleSum(group, snapshot));    
         
//--По складам 
cumBalance 'Накопленный остаток' (Stock stock, Snapshot snapshot) =
    GROUP SUM cumBalance(Sku sku, stock, snapshot);            

turnover 'Товарооборачиваемость, дн.' (Stock stock, Snapshot snapshot) = NUMERIC[12,3](cumBalance(stock, snapshot) /
    saleSum(stock, snapshot));          

//сумма остатков на начало 
calcDataCumBalance(Sku sku, Stock stock, Snapshot snapshot, DATE dateFrom, DATE dateTo) = 
    sumA(sku, stock, snapshot) * daysInclBetweenDates(dateFrom, dateTo)
    (-)
    (GROUP
        SUM signedSum(sku, stock, DATE date) * daysInclBetweenDates(dateFrom, date) 
        IF date >= dateFrom AND date <= dateTo);

calcCumBalance 'Накопленный остаток' (Sku sku, Stock stock, DATE dateFrom, DATE dateTo) = 
    sumA(sku, stock, dateTo) * daysInclBetweenDates(dateFrom, dateTo)
    (-)
    (GROUP
        SUM signedSum(sku, stock, DATE date) * daysInclBetweenDates(dateFrom, date) 
        IF date >= dateFrom AND date <= dateTo);
 
overCalcSaleSkuParamsInterval ABSTRACT LIST ( Snapshot, DATE, DATE); 
calcSaleSkuParamsInterval 'Рассчитать продажи в день и товарооборачиваемость'(Snapshot snapshot, DATE dateFrom, DATE dateTo)  {    
    IF daysOnStockSku(snapshot) AND dateFrom IS DATE AND dateTo IS DATE THEN {
    
        IF useDaysChange() THEN {
            daysOnStock(Sku sku, Stock stock, snapshot) <- NULL;
            daysOnStock(Sku sku, Stock stock, snapshot) <- daysOnStock(sku, stock, dateFrom, dateTo) WHERE include(snapshot, stock) AND include(snapshot, sku) AND daysOnStock(sku, stock, dateFrom, dateTo);
        } ELSE {
            LOCAL daysOn = INTEGER (Sku, Stock);
            LOCAL quantity = NUMERIC[16,5] (Sku, Stock);
            LOCAL dateCur = DATE();    
        
            dateCur() <- dateFrom;
            quantity(Sku sku, Stock stock) <- balanceB(sku, stock, dateFrom) WHERE include(snapshot, stock) AND include(snapshot, sku) AND balanceB(sku, stock, dateFrom);
            daysOn(Sku sku, Stock stock) <- NULL;
            
            WHILE dateCur() <= dateTo DO {
                daysOn(Sku sku, Stock stock) <- daysOn(sku, stock) (+) (1 IF ((quantity(sku, stock) > 0) OR (quantity(sku, stock, dateCur()) > 0))) 
                           WHERE include(snapshot, stock) AND include(snapshot, sku) AND 
                           (daysOn(sku, stock) (+) (1 IF ((quantity(sku, stock) > 0) OR (quantity(sku, stock, dateCur()) > 0))));
                quantity(Sku sku, Stock stock) <- quantity(sku, stock) (+) signedQuantity(sku, stock, dateCur()) 
                           WHERE include(snapshot, stock) AND include(snapshot, sku) AND
                                 signedQuantity(sku, stock, dateCur());    
                dateCur() <- sum(dateCur(), 1);
            }
        
            daysOnStock(Sku sku, Stock stock, snapshot) <- daysOn(sku, stock);
        }
    }
    
    IF turnoverSku(snapshot) AND dateFrom IS DATE AND dateTo IS DATE THEN {
        cumBalance (Sku sku, Stock stock, snapshot) <- NULL;
        cumBalance (SkuGroup skuGroup, Stock stock, snapshot) <- NULL;
        IF isSum(snapshot) AND isBalanceA(snapshot) THEN
            cumBalance (Sku sku, Stock stock, snapshot) <- NUMERIC[18,4](calcDataCumBalance(sku, stock, snapshot, dateFrom, dateTo)) WHERE include(snapshot, stock) AND include(snapshot, sku) AND calcDataCumBalance(sku, stock, snapshot, dateFrom, dateTo); 
        ELSE
            cumBalance (Sku sku, Stock stock, snapshot) <- NUMERIC[18,4](calcCumBalance(sku, stock, dateFrom, dateTo)) WHERE include(snapshot, stock) AND include(snapshot, sku) AND calcCumBalance(sku, stock, dateFrom, dateTo); 
        cumBalance (SkuGroup skuGroup, Stock stock, snapshot) <- NUMERIC[18,4](GROUP SUM cumBalance(Sku sku, stock, snapshot) IF isParent(skuGroup, sku))
            WHERE (GROUP SUM cumBalance(Sku sku, stock, snapshot) IF isParent(skuGroup, sku));
        
        overCalcSaleSkuParamsInterval(snapshot, dateFrom, dateTo);        
    }                                    
} TOOLBAR;

overTakeFromTo(Snapshot snapshot, DATE dateFrom, DATE dateTo) +  {  calcSaleSkuParamsInterval(snapshot, dateFrom, dateTo); }

daysOnStock 'Дней на складе' = DATA INTEGER (Batch, Stock, Snapshot);
cumBalance 'Накопленный остаток' = DATA NUMERIC[16,2] (Batch, Stock, Snapshot);

averageSold 'Продаж в день' (Batch batch, Stock stock, Snapshot snapshot) =  
    saleQuantity(batch, stock, snapshot) /
    daysOnStock(batch, stock, snapshot);

turnover 'Товарооборачиваемость, дн.' (Batch batch, Stock stock, Snapshot snapshot) = NUMERIC[12,3](cumBalance(batch, stock, snapshot) /
    saleSum(batch, stock, snapshot));
    
//-- По поставщикам   
cumBalance 'Накопленный остаток' (supplier, Snapshot snapshot) =
    GROUP SUM cumBalance(Batch batch, Stock stock, snapshot) BY supplier(batch);  
    
turnover 'Товарооборачиваемость, дн.' (LegalEntity supplier, Snapshot snapshot) = NUMERIC[12,3](cumBalance(supplier, snapshot) /
    saleCostSumBatch(supplier, snapshot));      
    

overTakeBatchFromTo(Snapshot snapshot, DATE dateFrom, DATE dateTo) +  { 
    IF turnoverSku(snapshot) AND dateFrom IS DATE AND dateTo IS DATE THEN {
    
        LOCAL daysOn = INTEGER (Batch, Stock);
        LOCAL balance = NUMERIC[16,2] (Batch, Stock);
        LOCAL cumBalance = NUMERIC[16,2] (Batch, Stock);
        LOCAL dateCur = DATE();    
    
        dateCur() <- dateTo;
        balance(Batch batch, Stock stock) <- balanceA(batch, stock, dateTo)*cost(batch) WHERE include(snapshot, stock) 
                                AND include(snapshot, sku(batch)) AND balanceA(batch, stock, dateTo);
        daysOn(Batch batch, Stock stock) <- NULL;
        
        WHILE dateCur() >= dateFrom DO {
            daysOn(Batch batch, Stock stock) <- daysOn(batch, stock) (+) (1 IF ((balance(batch, stock) > 0) OR (signedQuantity(batch, stock, dateCur())))) 
                                WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND 
                                (daysOn(batch, stock) (+) (1 IF ((balance(batch, stock) > 0) OR (signedQuantity(batch, stock, dateCur())))));
            balance(Batch batch, Stock stock) <- balance(batch, stock) (-) signedQuantity(batch, stock, dateCur()) * cost(batch) 
                                WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND 
                                (balance(batch, stock) OR signedQuantity(batch, stock, dateCur()));                                
            cumBalance(Batch batch, Stock stock) <- cumBalance(batch, stock) (+) balance(batch, stock)
                                WHERE include(snapshot, stock) AND include(snapshot, sku(batch)) AND (cumBalance(batch, stock) OR balance(batch, stock));
    
            dateCur() <- sum(dateCur(), - 1);
        }
    
        daysOnStock(Batch batch, Stock stock, snapshot) <- daysOn(batch, stock);
        cumBalance(Batch batch, Stock stock, snapshot) <- cumBalance(batch, stock);
    } 
}

//-- SHOWIF
isTurnoverBatch= turnoverSku(Snapshot snapshot) AND isBatch(snapshot);
isDaysOnStockBatch= daysOnStockSku(Snapshot snapshot) AND isBatch(snapshot);

EXTEND FORM snapshot

    PROPERTIES(r)      turnoverSku, daysOnStockSku 
    
//-- По группам                           
    PROPERTIES(sk1,r)  READONLY SHOWIF turnoverSku(r) BACKGROUND hintSaleBackground() AFTER saleNetWeight(sk1,r)          
                       turnover                                       
                       
//-- По складам                           
    PROPERTIES(ts1,r)  READONLY SHOWIF turnoverSku(r) BACKGROUND hintSaleBackground() AFTER saleNetWeight(ts1,r)                          
                       turnover 
    
//--sku  
    PROPERTIES(s,st,r) SHOWIF daysOnStockSku(r) BACKGROUND hintSaleBackground() AFTER saleNetWeight(s,st,r)
                       daysOnStock

    PROPERTIES(s,st,r) SHOWIF turnoverSku(r) BACKGROUND hintSaleBackground() AFTER daysOnStock(s,st,r)
                       averageSold, 
                       turnover,
                       coutDaysToEnd
//-- batch
    PROPERTIES(bt,ss,r) SHOWIF isDaysOnStockBatch(r) BACKGROUND hintSaleBackground() AFTER saleNetWeight(bt,ss,r)
                       daysOnStock
                        
    PROPERTIES(bt,ss,r) SHOWIF isTurnoverBatch(r) BACKGROUND hintSaleBackground() AFTER daysOnStock(bt,ss,r)
                       averageSold, 
                       turnover     
//-- По поставщикам                           
    PROPERTIES(l,r)  READONLY SHOWIF isTurnoverBatch(r) BACKGROUND hintSaleBackground() AFTER  saleNetWeightBatch(l,r)                        
                       turnover                              
                       
;  
                     
DESIGN snapshot {
    row6 {
        MOVE PROPERTY(isSale(r));
        MOVE PROPERTY(turnoverSku(r));                                             
        MOVE PROPERTY(daysOnStockSku(r));                                             
    } 
}  
EXTEND FORM snapshots 
        PROPERTIES(r) READONLY BACKGROUND hintSaleBackground() isSale
        PROPERTIES(r) READONLY turnoverSku, daysOnStockSku
;                   