MODULE SaleLedgerArticle;

REQUIRE SaleLedger, SaleLedgerItemArticle, StockArticle;

NAMESPACE SaleLedger;

//------------------- Продажи по артикулам -------------------------//


nameArticleBalanceB (Stock stock)= name(stock) + ' (остаток на начало)';    
nameArticleSumB (Stock stock)= name(stock) + ' (сумма на начало)';    
nameArticleBalanceA (Stock stock)= name(stock) + ' (остаток на конец)';    
nameArticleSumA (Stock stock)= name(stock) + ' (сумма на конец)';    
nameArticleQuantitySold (Stock stock)= name(stock) + ' (продано кол-во)';    
nameArticleSumSold (Stock stock)= name(stock) + ' (продано сумма)';    
nameArticleDaysOnStock (Stock stock)= name(stock) + ' (дней на складе)';    
nameArticleAverageReportSold (Stock stock)= name(stock) + ' (продаж в день)';    
nameArticleTurnover (Stock stock)= name(stock) + ' (товарооборачиваемость)';

nameArticleContractSumSold (Stock stock)= name(stock) + ' (сумма контр. вал.)';    
nameArticleCostSumSold (Stock stock)= name(stock) + ' (сумма себестоимость)';    
nameArticleMarkupSumSold (Stock stock)= name(stock) + ' (сумма торг. надбавки)';    
nameArticleVATSumSold (Stock stock)= name(stock) + ' (сумма НДС)';    
nameArticleAveragePriceSold (Stock stock)= name(stock) + ' (цена ср.)';    
nameArticleContractSumByrSold (Stock stock)= name(stock) + ' (сумма контр. руб.)';    
nameArticleAverageMarkupSold (Stock stock)= name(stock) + ' (ср. % надбавки)';    
    
inArticleReport 'Отм.' = DATA LOCAL BOOLEAN (Stock);

filterBalanceDate 'С остатком' (Article ar,DATE dFrom, DATE dTo) = GROUP
    SUM 1 IF inArticleReport(Stock st) AND (balanceB(ar,st,dFrom) OR balanceA(ar,st,dTo));
filterSoldDate 'С продажей' (Article ar,DATE dFrom,DATE dTo) = GROUP 
    SUM quantitySold(ar,Stock st,dFrom,dTo) IF inArticleReport(st);   

daysOnStock 'Дней на складе' = DATA LOCAL INTEGER (Article, Stock);
averageReportSold 'Продаж в день' = DATA LOCAL NUMERIC[14,3] (Article, Stock);
turnover 'Товарооборачиваемость' = DATA LOCAL NUMERIC[16,4] (Article, Stock);
//-- Итого по всем выделенным складам 
daysOnStock 'Дней на складе (итого)' = DATA LOCAL INTEGER (Article);
averageReportSold 'Продаж в день  (итого)' = DATA LOCAL NUMERIC[14,3] (Article);
turnover 'Товарооборачиваемость  (итого)' = DATA LOCAL NUMERIC[16,4] (Article);

filterBalanceDate 'С остатком' (Sku ks,DATE dFrom, DATE dTo) = GROUP
    SUM 1 IF inArticleReport(Stock st) AND (balanceB(ks,st,dFrom) OR balanceA(ks,st,dTo));
filterSoldDate 'С продажей' (Sku ks,DATE dFrom,DATE dTo) = GROUP 
    SUM quantitySold(ks,Stock st,dFrom,dTo) IF inArticleReport(st); 
      
quantitySoldIn 'Продано за интервал (кол-во)' (Article article, DATE dateFrom, DATE dateTo) = GROUP
        SUM
        quantitySold(article, Stock stock, dateFrom, dateTo) IF inArticleReport(stock);      
      

overCalcSaleArticleParamsInterval  ABSTRACT LIST ( DATE, DATE);

calcSaleArticleParamsInterval 'Рассчитать продажи в день и товарооборачиваемость'(DATE dateFrom, DATE dateTo)  { 
    LOCAL balance = NUMERIC[14,3] (Article, Stock);
    LOCAL cumBalance = NUMERIC[16,3] (Article, Stock);
    LOCAL dateCur = DATE();

    dateCur() <- dateFrom;
    balance(Article a, Stock stock) <- balanceB(a, stock, dateFrom) WHERE inArticleReport(stock);
    daysOnStock(Article a, Stock stock) <- NULL;
    
    daysOnStock(Article a) <- NULL;
    
    WHILE dateCur() <= dateTo DO {
        daysOnStock(Article a, Stock stock) <- daysOnStock(a, stock) (+)
                   (1 IF ((balance(a, stock) > 0) OR (quantity(a, stock, dateCur()) > 0))) WHERE inArticleReport(stock);
        cumBalance(Article a, Stock stock) <- cumBalance(a, stock) (+) balance(a, stock) WHERE inArticleReport(stock);  
        balance(Article a, Stock stock) <- balance(a, stock) (+)
                   signedQuantity(a, stock, dateCur()) WHERE inArticleReport(stock);
        daysOnStock(Article a) <- daysOnStock(a) (+) (1 IF (GROUP SUM 1 IF ((balance(a, Stock stock) > 0) OR (quantity(a, stock, dateCur()) > 0)) AND inArticleReport(stock)));                                                

        dateCur() <- sum(dateCur(), 1);
    }

    averageReportSold(Article a, Stock stock) <- quantitySold (a, stock, dateFrom, dateTo) / daysOnStock(a, stock) WHERE inArticleReport(stock);
    turnover(Article a, Stock stock) <- (IF quantitySold (a, stock, dateFrom, dateTo) != 0 THEN
                                         cumBalance(a, stock) / quantitySold (a, stock, dateFrom, dateTo)
                                      ELSE
                                        9999.99) WHERE inArticleReport(stock);
                                        
    averageReportSold(Article a) <- quantitySoldIn (a, dateFrom, dateTo) / daysOnStock(a);
    turnover(Article a) <- IF quantitySoldIn (a, dateFrom, dateTo) != 0 THEN
                                         (GROUP SUM cumBalance(a, Stock stock) IF inArticleReport(stock)) / quantitySoldIn (a, dateFrom, dateTo)
                                      ELSE
                                        9999.99;                                    
                                        
    overCalcSaleArticleParamsInterval(dateFrom, dateTo);                                        
} TOOLBAR; 


balanceBInReport 'Итого (остаток на начало)' (Article ar, DATE dFrom)= GROUP SUM balanceB(ar,Stock st,dFrom) IF inArticleReport(st);
quantitySoldInReportDate 'Итого (продано кол-во)' (Article ar, DATE dFrom, DATE dTo)= GROUP SUM quantitySold(ar,Stock st,dFrom,dTo) IF inArticleReport(st);
balanceAInReport 'Итого (остаток на конец)' (Article ar, DATE dTo)= GROUP SUM balanceA(ar,Stock st,dTo) IF inArticleReport(st);

sumBInReport 'Итого (сумма на начало)' (Article ar, DATE dFrom)= GROUP SUM sumB(ar,Stock st,dFrom) IF inArticleReport(st);
sumSoldInReportDate 'Итого (продано сумма)' (Article ar, DATE dFrom, DATE dTo)= GROUP SUM sumSold(ar,Stock st,dFrom,dTo) IF inArticleReport(st);
sumAInReport 'Итого (сумма на конец)' (Article ar, DATE dTo)= GROUP SUM sumA(ar,Stock st,dTo) IF inArticleReport(st); 

balanceBInReport 'Итого (остаток на начало)' (Sku ks, DATE dFrom)= GROUP SUM balanceB(ks,Stock st,dFrom) IF inArticleReport(st);
quantitySoldInReportDate 'Итого (продано кол-во)' (Sku ks, DATE dFrom, DATE dTo)= GROUP SUM quantitySold(ks,Stock st,dFrom,dTo) IF inArticleReport(st);
balanceAInReport 'Итого (остаток на конец)' (Sku ks, DATE dTo)= GROUP SUM balanceA(ks,Stock st,dTo) IF inArticleReport(st);

sumBInReport 'Итого (сумма на начало)' (Sku ks, DATE dFrom)= GROUP SUM sumB(ks,Stock st,dFrom) IF inArticleReport(st);
sumSoldInReportDate 'Итого (продано сумма)' (Sku ks, DATE dFrom, DATE dTo)= GROUP SUM sumSold(ks,Stock st,dFrom,dTo) IF inArticleReport(st);
sumAInReport 'Итого (сумма на конец)' (Sku ks, DATE dTo)= GROUP SUM sumA(ks,Stock st,dTo) IF inArticleReport(st); 

FORM saleArticle 'Продажи по артикулам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)
       
    OBJECTS gt = GroupType PANEL
    PROPERTIES(gt) SELECTOR name    
    
    
    TREE skuTree sk = Group PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDERS order(sk), skuTreeName
    FILTERS groupType(sk) == gt
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F6' DEFAULT       
     
    OBJECTS ts = Stock
    PROPERTIES tsTreeName = name(ts) READONLY, nameLegalEntity(ts) READONLY, inArticleReport(ts)
    ORDERS tsTreeName
    FILTERS isCompany(ts)     
    FILTERGROUP inactiveStock FILTER 'Активный' active(ts) 'ctrl F10' DEFAULT
      
    OBJECTS st = Stock      
    FILTERS isCompany(st),
            active(st),
            inArticleReport(st)
            
    OBJECTS ar = Article 
    PROPERTIES(ar) READONLY id, caption,
                   nameSkuGroup3, nameSkuGroup4, nameSkuGroup5, image PANEL, imageArticleGrid=image
    PROPERTIES     READONLY balanceB(ar,st,dFrom)  COLUMNS (st) HEADER nameArticleBalanceB(st), 
                   balanceBInReport(ar,dFrom)
    PROPERTIES     READONLY quantitySold(ar,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleQuantitySold(st),
                   quantitySoldInReportDate(ar,dFrom,dTo)
    PROPERTIES     READONLY balanceA(ar,st,dTo)  COLUMNS (st) HEADER nameArticleBalanceA(st),
                   balanceAInReport(ar,dTo)

    PROPERTIES     READONLY sumB(ar,st,dFrom)  COLUMNS (st) HEADER nameArticleSumB(st),
                   sumBInReport(ar,dFrom)
    PROPERTIES     READONLY sumSold(ar,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleSumSold(st),
                   sumSoldInReportDate(ar,dFrom,dTo)
    PROPERTIES     READONLY sumA(ar,st,dTo)  COLUMNS (st) HEADER nameArticleSumA(st),    
                   sumAInReport(ar,dTo)
                   
    PROPERTIES     READONLY daysOnStock(ar, st) COLUMNS (st) HEADER nameArticleDaysOnStock(st),
                   daysOnStock(ar)
    PROPERTIES     READONLY averageReportSold(ar, st) COLUMNS (st) HEADER nameArticleAverageReportSold(st),
                   averageReportSold(ar)
    PROPERTIES     READONLY turnover(ar, st) COLUMNS (st) HEADER nameArticleTurnover(st),
                   turnover(ar) 

    PROPERTIES(dFrom, dTo) calcSaleArticleParamsInterval DRAW ar
                
    FILTERS           isParent(sk, ar)                
                            
    FILTERGROUP filtersSold
        FILTER 'С движением' filterSoldDate(ar,dFrom,dTo) OR filterBalanceDate(ar,dFrom,dTo) 'F11' DEFAULT
        FILTER 'С продажей' filterSoldDate(ar,dFrom,dTo) 'F10'
        FILTER 'С остатком' filterBalanceDate(ar,dFrom,dTo) 'F9'      
             
    OBJECTS sts = Stock      
    FILTERS isCompany(sts),
            inArticleReport(sts)                             
    FILTERGROUP inactiveStock2 FILTER 'Активный' active(sts) 'ctrl F10' DEFAULT                         
    OBJECTS ks = Sku 
    PROPERTIES(ks) READONLY idBarcode, name, nameSkuGroup3, nameSkuGroup4, nameSkuGroup5                            
    PROPERTIES     READONLY balanceB(ks,st,dFrom)  COLUMNS (st) HEADER nameArticleBalanceB(st),
                   balanceBInReport(ks,dFrom)
    PROPERTIES     READONLY quantitySold(ks,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleQuantitySold(st),
                   quantitySoldInReportDate(ks,dFrom,dTo)
    PROPERTIES     READONLY balanceA(ks,st,dTo)  COLUMNS (st) HEADER nameArticleBalanceA(st),
                   balanceAInReport(ks,dTo) 
    
    PROPERTIES     READONLY sumB(ks,st,dFrom)  COLUMNS (st) HEADER nameArticleSumB(st),
                   sumBInReport(ks,dFrom)
    PROPERTIES     READONLY sumSold(ks,st,dFrom,dTo)  COLUMNS (st) HEADER nameArticleSumSold(st),
                   sumSoldInReportDate(ks,dFrom,dTo)
    PROPERTIES     READONLY sumA(ks,st,dTo)  COLUMNS (st) HEADER nameArticleSumA(st),
                   sumAInReport(ks,dTo)                  
                             
    FILTERS           article(ks) == ar  
              
    FILTERGROUP filtersSold1
        FILTER 'С движением' filterSoldDate(ks,dFrom,dTo) OR filterBalanceDate(ks,dFrom,dTo) 'F11' DEFAULT
        FILTER 'С продажей' filterSoldDate(ks,dFrom,dTo) 'F10'
        FILTER 'С остатком' filterBalanceDate(ks,dFrom,dTo) 'F9'      
                      
    OBJECTS s = SaleLedger
    PROPERTIES(s) READONLY dateTime, 
                           nameStock, nameCustomer, 
                           nameSku,
                           quantity,
                           averagePrice,
                           sum 
    ORDERS nameStock(s)
                           
    FILTERS active(s),
            date(s) >= dFrom, date(s) <= dTo,                      
            inArticleReport(stock(s)),
            article(sku(s)) == ar
    
    EVENTS ON INIT {
        SEEK saleArticle.gt = defaultGroupType() IF defaultGroupType();
    }                                   
;

EXTEND FORM saleArticle FILTERS (ts IS Stock AND NOT limitAccess(currentUser())) OR accessCompany(currentUser(),ts);

DESIGN saleArticle {
    NEW top {
        horizontal = TRUE;
        MOVE BOX(dates) {
            horizontal = TRUE;
        }
        MOVE BOX(gt);
    }
    REMOVE BOX(st);
    REMOVE BOX(sts);
    NEW article {
        horizontal = TRUE;
        fill = 1;
        NEW skuFilters {
            fill = 1;
            NEW column{
                fill = 1.5;
                MOVE BOX(ts);
                MOVE BOX(TREE skuTree) { caption = 'Группы SKU'; }
            }    
            NEW imageBox {
                fill = 1;
                caption = 'Изображение';                     
                MOVE PROPERTY(image(ar)) {
                    caption = '';
                    fill = 1;
                }
            }
        }
        NEW row {
            fill = 2.5;
            MOVE BOX(ar) {  fill = 2;}           
            NEW row1 {
                fill = 1;
                tabbed = TRUE;
                MOVE BOX(ks) { caption = 'Товар';} 
                MOVE BOX(s) { caption = 'Регистр продаж';}
            }    
        }     
    } 
    MOVE TOOLBARBOX;
    PROPERTY(balanceB(ar,st,dFrom)) { background = #FFEEEE; charWidth = 2;}
    PROPERTY(sumB(ar,st,dFrom)) { background = #FFEEEE; }
    PROPERTY(quantitySold(ar,st,dFrom,dTo)) { background = #CCFFCC; charWidth = 2;}
    PROPERTY(sumSold(ar,st,dFrom,dTo)) { background = #CCFFCC; }
    PROPERTY(balanceA(ar,st,dTo)) { background = #BDE3FF; charWidth = 2;}
    PROPERTY(sumA(ar,st,dTo)) { background = #BDE3FF; }        

    PROPERTY(balanceBInReport(ar,dFrom)) { charWidth = 4;}
    PROPERTY(quantitySoldInReportDate(ar,dFrom,dTo)) { charWidth = 4;}
    PROPERTY(balanceAInReport(ar,dTo)) { charWidth = 4;}
   
    PROPERTY(balanceB(ks,st,dFrom)) { background = #FFEEEE; charWidth = 2;}
    PROPERTY(sumB(ks,st,dFrom)) { background = #FFEEEE; }
    PROPERTY(quantitySold(ks,st,dFrom,dTo)) { background = #CCFFCC; charWidth = 2;}
    PROPERTY(sumSold(ks,st,dFrom,dTo)) { background = #CCFFCC; }
    PROPERTY(balanceA(ks,st,dTo)) { background = #BDE3FF; charWidth = 2;}
    PROPERTY(sumA(ks,st,dTo)) { background = #BDE3FF; }

    PROPERTY(balanceBInReport(ks,dFrom)) { charWidth = 4;}
    PROPERTY(quantitySoldInReportDate(ks,dFrom,dTo)) { charWidth = 4;}
    PROPERTY(balanceAInReport(ks,dTo)) { charWidth = 4;}
    
    PROPERTY(quantity(s)) { background = #CCFFCC; }
    PROPERTY(sum(s)) { background = #CCFFCC; }
    
}

NAVIGATOR {                                              
    salesReports{
        NEW saleArticle;
    }
}
