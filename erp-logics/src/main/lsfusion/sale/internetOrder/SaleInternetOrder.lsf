MODULE SaleInternetOrder;

REQUIRE Integration, Document, Historizable, LegalEntity, Stock, Sku, StockTax, PriceListType, SaleOperation, OrderLedger, 
        SaleInvoice, SaleShipment, WarehouseSkuLedger, DiscountCard, Store;

NAMESPACE Sale;

//Статус строки заказа
CLASS StatusInternetOrder 'Статус' {
    new 'Новый',
    isPicking 'В комплектации',
    picked 'Собран',
    agreed 'Согласован', // Принят
    delivery 'Доставка',
    delivered 'Доставлен',
    completed 'Завершен',
    closed 'Отмена покупателем до доставки'
}
TABLE statusInternetOrder (StatusInternetOrder);
overName = DATA STRING[100] (StatusInternetOrder);
name 'Наименование' (StatusInternetOrder s) = OVERRIDE overName(s), staticCaption(s);
order 'Порядок' = DATA INTEGER (StatusInternetOrder);

FORM statusInternetOrder 'Статус'
    OBJECTS o = StatusInternetOrder
    PROPERTIES(o) READONLY name, order
    ORDERS order(o)
    
    LIST StatusInternetOrder OBJECT o 
;   

DESIGN statusInternetOrder {
    PROPERTY(order(o)){
        hide = TRUE;
    }
}

status = DATA StatusInternetOrder (InternetOrder) INDEXED;
nameStatus 'Статус' (InternetOrder o) = name(status(o));

status(InternetOrder o) <- StatusInternetOrder.new WHEN SET(o IS InternetOrder);
isAgreed(InternetOrder o) = status(o) == StatusInternetOrder.agreed;

CLASS InternetOrder 'Интернет-заказ' : Document;
CLASS InternetOrderDetail 'Строка интернет-заказа' : DocumentDetail;

@defineExternalizable(internetOrder, STRING[100]);

@defineExternalizable(internetOrderDetail, STRING[100]);

@defineDocumentTables(internetOrder);
TABLE sessioInternetOrder(Session, InternetOrder);
TABLE sessionInternetOrderDetail(Session, InternetOrderDetail);

@defineDocumentRelation(internetOrder);

@defineDocumentDetailIndex(internetOrder);

@defineDocumentHeaderTimePrefix(InternetOrder, , ' документа');

@defineDocumentDetailTimePrefix(internetOrder, InternetOrderDetail, , ' документа');

@deriveDocumentHeaderTimePrefix(InternetOrder, );                    

@defineDocumentHeaderPosted(InternetOrder);
@defineDocumentHeaderClosed(InternetOrder);
INDEX isOpened(InternetOrder o), o;

@defineDocumentDetailPosted(internetOrder);

isClosed '{documents.is.closed}' (InternetOrderDetail d) = isClosed(internetOrder(d));
isOpened '{documents.is.opened}' (InternetOrderDetail d) = isPosted(d) AND isOpened(internetOrder(d)) MATERIALIZED;

@defineDocumentHeaderNumber(InternetOrder, BPSTRING[2]);

@defineDocumentDetailNumber(internetOrder, InternetOrderDetail);

@defineNumeratedDefault(InternetOrder, 'Интернет-заказы', 'ИЗ');

@defineDocumentHeaderStockInner (InternetOrder, stock, Stock, 'Склад поставщика' , supplier);
@defineDocumentDialogStocks(internetOrder, supplierStock, company, , );

dataSupplierStock  = DATA Stock(InternetOrderDetail);
supplierStock(InternetOrderDetail d) = OVERRIDE dataSupplierStock(d), supplierStock(internetOrder(d)) MATERIALIZED;

nameSupplierStock 'Склад поставщика' (InternetOrderDetail idetail) = name(Sale.supplierStock[InternetOrderDetail](idetail)) CHARWIDTH 10;
fullNameSupplierStock 'Склад поставщика' (InternetOrderDetail idetail) = fullName(Sale.supplierStock[InternetOrderDetail](idetail)) CHARWIDTH 10;      
addressSupplierStock 'Адрес' (InternetOrderDetail idetail) = address(Sale.supplierStock[InternetOrderDetail](idetail)) CHARWIDTH 10;       
countrySupplierStock (InternetOrderDetail idetail) = country(Sale.supplierStock[InternetOrderDetail](idetail));
legalEntitySupplierStock (InternetOrderDetail idetail) = legalEntity(Sale.supplierStock[InternetOrderDetail](idetail));

inStockInternetOrder = GROUP SUM 1 BY Sale.supplierStock[InternetOrderDetail](InternetOrderDetail detail), internetOrder(detail); 
supplierStocks 'Склады поставщика' (InternetOrder order) = GROUP  
                                                                        CONCAT name(Stock stock) IF inStockInternetOrder(stock, order), ', ' 
                                                                        ORDER name(stock) CHARWIDTH 30;

changeSupplierStock(InternetOrderDetail o)  { 
    DIALOG stocksCompany OBJECTS s = Sale.supplierStock[InternetOrderDetail](o) CHANGE;
}

selectSupplierStock 'Выбрать' (InternetOrderDetail d, Stock s)  { 
    Sale.supplierStock[InternetOrderDetail](d) <- s;
} TOOLBAR;
                                 
     
@defineDocumentHeaderNote(InternetOrder);

@defineDocumentIs(InternetOrder, InternetOrderDetail);

@defineDocumentHeaderCreated(InternetOrder);

@defineDocumentDetailActions(internetOrder, InternetOrderDetail);

@defineDocumentHeaderDescription(InternetOrder, 'Интернет-заказ');

@defineDocumentDetailDescription(internetOrder, InternetOrderDetail);

@defineDocumentHeaderCurrency(internetOrder);

@defineDocumentDetailCurrency(internetOrder, internetOrderDetail);

currency (InternetOrder internetOrder) <- defaultCurrency() WHEN SET(internetOrder IS InternetOrder);

@defineDocumentDetailSkuCustomPrefix(internetOrderDetail, sku, , );

INDEX supplierStock(InternetOrderDetail d), sku(d);

@defineDocumentDetailQuantityCustomPrefix (internetOrderDetail, , );

@defineDocumentDetailPriceCustomPrefix(internetOrderDetail, , );

@defineDocumentDetailPriceCustomPrefix(internetOrderDetail, discount, ' со скидкой');
discountPrice(InternetOrderDetail d) <- price(d) WHEN SET(price(d));
CONSTRAINT isPosted(InternetOrderDetail d) AND price(d) < discountPrice(d)
    MESSAGE 'Цена со скидкой не может быть больше цены без скидки';

@defineDocumentDetailDataSumCustomPrefix(internetOrderDetail, discount, ' со скидкой');
@deriveDocumentDetailSumCustomPrefix(internetOrderDetail, discount, currency, quantity);
discountSumInternetOrderDetail 'Сумма со скидкой' (internetOrder) = GROUP SUM discountSum(InternetOrderDetail idetail) BY internetOrder(idetail) MATERIALIZED IN documentSum;

//discountPercent 'Процент скидки' (InternetOrderDetail d)= round2((price(d) - discountPrice(d)) * 100.0 / price(d));
discountPercent 'Процент скидки' (InternetOrderDetail d)= DATA NUMERIC[8,3] (InternetOrderDetail);
backgroundDiscount (InternetOrder o) = RGB(204, 255, 204) IF o IS InternetOrder;

useOwn = ABSTRACT BOOLEAN ();
overChangeDiscountPrice  ABSTRACT LIST ( InternetOrderDetail, NUMERIC[16,4]);
changeDiscountPrice(InternetOrderDetail detail)  { 
    INPUT n = NUMERIC[16,4] DO {
        IF NOT useOwn() THEN {
            discountPrice(detail) <- n;
            discountPercent(detail) <- round2((price(detail) - discountPrice(detail)) * 100.0 / price(detail));           
        } ELSE {
            overChangeDiscountPrice(detail,n);
        }

    }    
} 
overChangeDiscountPercent  ABSTRACT LIST ( InternetOrderDetail, NUMERIC[8,3]);
changeDiscountPercent(InternetOrderDetail detail)  { 
    INPUT n = NUMERIC[8,3] DO {
        IF NOT useOwn() THEN {
            discountPercent(detail) <- n;
            discountPrice(detail) <- round2(price(detail)*(1.0 - discountPercent(detail)/100.0));  
        } ELSE {
            overChangeDiscountPercent(detail,n);
        }  
        
    }    
} 

@defineDocumentDetailDataSumCustomPrefix(internetOrderDetail, , );
@deriveDocumentDetailSum(internetOrder, quantity);

@defineDocumentHeaderQuantity(internetOrder);

@defineDocumentHeaderSkuQuantity(internetOrder, sku);

@defineDocumentHeaderSum(internetOrder);

quantity(InternetOrderDetail detail) <- 1 WHEN SET(detail IS InternetOrderDetail);
CONSTRAINT quantity(InternetOrderDetail detail) < 0
    MESSAGE 'Количество в строке интернет-заказа должно быть не отрицательным';

prevAvailableQuantity 'Доступное кол-во' (InternetOrderDetail d, Stock st) = prevAvailableQuantity(sku(d), st); 
prevCurrentBalance 'Текущий остаток' (InternetOrderDetail d, Stock st) = prevCurrentBalance(sku(d), st); 
prevCurrentReserve 'Текущий резерв' (InternetOrderDetail d, Stock st) = prevCurrentReserve(sku(d), st); 

reviewReserve 'Резерв' (InternetOrderDetail d, Stock st)  { 
    IF dateTime(d) THEN {
        FOR t == dateTime(d) AND sk == sku(d) DO
            NEWSESSION SHOW orderSkuLedger OBJECTS t = t, st = st, sk = sk ;
    } ELSE {
        FOR sk == sku(d) DO
            NEWSESSION SHOW orderSkuLedgerNotDate OBJECTS st = st, sk = sk ;
    }
} 

background 'Цвет' = ABSTRACT CASE COLOR (InternetOrderDetail);

deliveryDate 'Дата доставки' = DATA DATE (InternetOrder) INDEXED;

discountCard = DATA DiscountCard (InternetOrder);
numberDiscountCard 'Номер дисконтной карты'(InternetOrder o) = number(discountCard(o));
issueCard 'Оформить карту' = DATA BOOLEAN (InternetOrder);

original 'Файл XML' = DATA FILE (InternetOrder);
openOriginal 'Файл XML'(InternetOrder o)  { open(original(o)); }

discountCard (InternetOrderDetail detail) = discountCard(internetOrder(detail));  
numberDiscountCard 'Номер дисконтной карты'(InternetOrderDetail detail) = numberDiscountCard(internetOrder(detail));

nameInternetCustomer 'Покупатель интернет магазина' = DATA STRING[255] (InternetOrder) CHARWIDTH 50;
//nameInternetCustomer(InternetOrder o) <- nameLegalEntity(discountCard(o)) WHEN SET(discountCard(o)) AND nameLegalEntity(discountCard(o));

areaInternetCustomer 'Район' = DATA STRING[255] (InternetOrder) CHARWIDTH 50;
indexInternetCustomer 'Индекс доставки' = DATA STRING[6] (InternetOrder);
cityInternetCustomer 'Город доставки' = DATA STRING[255] (InternetOrder) CHARWIDTH 50;
addressInternetCustomer 'Адрес доставки' = DATA STRING[400] (InternetOrder) CHARWIDTH 50;
//addressInternetCustomer(InternetOrder o) <- addressLegalEntity(discountCard(o)) WHEN SET(discountCard(o)) AND addressLegalEntity(discountCard(o));

phoneInternetCustomer 'Телефон покупателя' = DATA STRING[100] (InternetOrder) CHARWIDTH 50;
//phoneInternetCustomer(InternetOrder o) <- phoneLegalEntity(discountCard(o)) WHEN SET(discountCard(o)) AND phoneLegalEntity(discountCard(o));
emailCustomer 'e-mail' = DATA STRING[255] (InternetOrder) CHARWIDTH 50;

areaInternetCustomer 'Район' (InternetOrderDetail d) = areaInternetCustomer(internetOrder(d)) CHARWIDTH 10;
nameInternetCustomer 'Покупатель интернет магазина' (InternetOrderDetail d) = nameInternetCustomer(internetOrder(d)) CHARWIDTH 10;
indexInternetCustomer 'Индекс доставки' (InternetOrderDetail d) = indexInternetCustomer(internetOrder(d)) CHARWIDTH 10;
cityInternetCustomer 'Город доставки' (InternetOrderDetail d) = cityInternetCustomer(internetOrder(d)) CHARWIDTH 10;
addressInternetCustomer 'Адрес доставки' (InternetOrderDetail d) = addressInternetCustomer(internetOrder(d)) CHARWIDTH 10;
phoneInternetCustomer 'Телефон покупателя' (InternetOrderDetail d) = phoneInternetCustomer(internetOrder(d)) CHARWIDTH 10;

fullNumber 'Полный номер' = DATA STRING[10] (InternetOrder);

CLASS PaymentTypeInternetOrder 'Тип оплаты' {
    prepayment 'Картой',
    inFact 'Наличными',
    erip 'ЕРИП'
}

FORM paymentTypeInternetOrder 'Тип оплаты'
    OBJECTS o = PaymentTypeInternetOrder
    PROPERTIES(o) READONLY staticCaption
    
    LIST PaymentTypeInternetOrder OBJECT o 
; 

imported 'Импортирован' = DATA BOOLEAN (InternetOrder);
paymentTypeInternetOrder = DATA PaymentTypeInternetOrder (InternetOrder);
namePaymentTypeInternetOrder 'Тип оплаты' (InternetOrder o) = staticCaption(paymentTypeInternetOrder(o));
paymentTypeInternetOrder(InternetOrderDetail d) = paymentTypeInternetOrder(internetOrder(d));
namePaymentTypeInternetOrder 'Тип оплаты' (InternetOrderDetail d) = staticCaption(paymentTypeInternetOrder(d));
paymentCashSumInternetOrder 'Сумма оплаты (нал)' = DATA NUMERIC[18,4] (InternetOrder); 
paymentCardSumInternetOrder 'Сумма оплаты (безнал)' = DATA NUMERIC[18,4] (InternetOrder); 
paymentERIPSumInternetOrder 'Сумма оплаты (ЕРИП)' = DATA NUMERIC[18,4] (InternetOrder); 
paymentDateInternetOrder 'Дата оплаты' = DATA DATE (InternetOrder);
numberPaymentDocumentInternetOrder 'Номер документа оплаты' = DATA STRING[100] (InternetOrder);
deliverySumInternetOrder 'Стоимость доставки' = DATA NUMERIC[18,4] (InternetOrder);
customerComment 'Комментарий покупателя' = DATA TEXT (InternetOrder);
//deliveryIntervalInternetOrder 'Период доставки' = DATA STRING[100] (InternetOrder);
//deliveryIntervalInternetOrder 'Период доставки' (InternetOrderDetail d)= deliveryIntervalInternetOrder(internetOrder(d));

deliveryTimeFromInternetOrder 'Время доставки с' = DATA TIME (InternetOrder);
deliveryTimeFromInternetOrder 'Время доставки с' (InternetOrderDetail d)= deliveryTimeFromInternetOrder(internetOrder(d));

deliveryTimeToInternetOrder 'Время доставки по' = DATA TIME (InternetOrder);
deliveryTimeToInternetOrder 'Время доставки по' (InternetOrderDetail d)= deliveryTimeToInternetOrder(internetOrder(d));

WHEN SET(imported(InternetOrder o)) AND NOT deliveryDate(o) DO {
    deliveryDate(o) <- sum(currentDate(), 1);
}

WHEN SET(imported(InternetOrder o)) AND NOT deliveryTimeFromInternetOrder(o) DO {
    deliveryTimeFromInternetOrder(o) <- 10:00;
}

WHEN SET(imported(InternetOrder o)) AND NOT deliveryTimeToInternetOrder(o) DO {
    deliveryTimeToInternetOrder(o) <- 21:00;
}
           
isPrepayment (InternetOrder o) = paymentTypeInternetOrder(o) == PaymentTypeInternetOrder.prepayment;          
isInFact (InternetOrder o) = paymentTypeInternetOrder(o) == PaymentTypeInternetOrder.inFact;          
isErip (InternetOrder o) = paymentTypeInternetOrder(o) == PaymentTypeInternetOrder.erip;


DESIGN options {
    pane {
        NEW internetOrder {
            caption = 'Интернет-заказы';
            NEW topInternetOrder {
                lines = 2;
            }            
        }
    }
}

useCustomChangeStatus = ABSTRACT BOOLEAN ();
customChangeStatus ABSTRACT (InternetOrder);

changeStatus(InternetOrder i) {
    IF NOT useCustomChangeStatus() THEN {
        DIALOG statusInternetOrder OBJECTS o = status(i) CHANGE;
    } ELSE {
        customChangeStatus(i);
    }
}
isInternetOrder (InternetOrder o) = TRUE IF o IS InternetOrder;

useCustomShowPersonalInfo 'Ограничить видимость персональных данных' = DATA BOOLEAN ();
EXTEND FORM options
    PROPERTIES useCustomShowPersonalInfo()
;

DESIGN options{
    topInternetOrder{
        NEW dataPrivacy{
            caption = 'ЗПД';
            MOVE PROPERTY (useCustomShowPersonalInfo());
        }
        
    }
}

showPersonalInfo = ABSTRACT BOOLEAN (CustomUser);
showPersonalInfoUser = IF useCustomShowPersonalInfo() THEN showPersonalInfo(currentUser()) ELSE TRUE;
showPersonalInfoUser (InternetOrder o) = CASE 
    WHEN NOT useCustomShowPersonalInfo() AND isInternetOrder(o) THEN TRUE 
    WHEN useCustomShowPersonalInfo() AND showPersonalInfoUser() AND isInternetOrder(o) THEN TRUE 
    WHEN useCustomShowPersonalInfo() AND NOT showPersonalInfoUser() AND NOT isClosed(o) THEN TRUE 
    WHEN useCustomShowPersonalInfo() AND NOT showPersonalInfoUser() AND isClosed(o) THEN NULL
;
    
background = ABSTRACT COLOR (InternetOrder);
readOnly = ABSTRACT CASE BOOLEAN (InternetOrderDetail);
useCustomFilterStocks = ABSTRACT BOOLEAN ();
customFilterStocks = ABSTRACT BOOLEAN (InternetOrderDetail, Stock);

FORM internetOrder 'Интернет-заказ'
    OBJECTS o = InternetOrder PANEL
    PROPERTIES (o) isPosted, nameStatus ON CHANGE changeStatus(o), 
                   nameNumerator, number, series, date, time, nameCurrency, note,
                   deliveryDate, issueCard, nameInternetCustomer SHOWIF showPersonalInfoUser(o), addressInternetCustomer SHOWIF showPersonalInfoUser(o), 
                   areaInternetCustomer, indexInternetCustomer, cityInternetCustomer, phoneInternetCustomer SHOWIF showPersonalInfoUser(o), emailCustomer SHOWIF showPersonalInfoUser(o)
    PROPERTIES (o) numberDiscountCard BACKGROUND background(o)
    PROPERTIES (o) READONLY countInternetOrderDetail, quantityInternetOrderDetail, sumInternetOrderDetail, discountSumInternetOrderDetail BACKGROUND backgroundDiscount(o)
    
    PROPERTIES (o) namePaymentTypeInternetOrder, paymentCashSumInternetOrder, paymentCardSumInternetOrder, paymentERIPSumInternetOrder, paymentDateInternetOrder,
                   numberPaymentDocumentInternetOrder, deliverySumInternetOrder, deliveryTimeFromInternetOrder, deliveryTimeToInternetOrder, customerComment,
                   openOriginal

    OBJECTS d = InternetOrderDetail
    PROPERTIES (d) BACKGROUND background(d) index 
    PROPERTIES (d) READONLYIF readOnly(d) BACKGROUND background(d) idBarcodeSku, idSku, nameSku, shortNameUOMSku
    PROPERTIES (d) BACKGROUND background(d) quantity, price, discountPrice BACKGROUND backgroundDiscount(o) ON CHANGE changeDiscountPrice(d), 
                   discountPercent BACKGROUND backgroundDiscount(o) ON CHANGE changeDiscountPercent(d),
                   sum, discountSum READONLY BACKGROUND backgroundDiscount(o),
                   nameSupplierStock ON CHANGE changeSupplierStock(d)
                   
    PROPERTIES (d)  NEW READONLYIF readOnly(d), deleteod = DELETE
                   
    ORDERS index(d)

    PROPERTIES(o) DRAW d deleteInternetOrderDetail
    FILTERS internetOrder(d) == o
    
    OBJECTS st = Stock
    PROPERTIES(st) READONLY name
    PROPERTIES(d, st) READONLY prevAvailableQuantity, prevCurrentBalance
    PROPERTIES(d, st) prevCurrentReserve ON CHANGE reviewReserve(d,st)
    PROPERTIES(d, st) selectSupplierStock
    FILTERS (prevCurrentBalance(d, st) AND NOT useCustomFilterStocks()) OR (customFilterStocks(d, st) AND useCustomFilterStocks())
    EVENTS
        ON OK prePost(o)

    EDIT InternetOrder OBJECT o
;

DESIGN internetOrder {

    BOX {
        size = (1024, 768);

        NEW headerBox {
            horizontal = TRUE;

            NEW headerRow1 {
                fill = 3;

                MOVE GROUP(documentHeader,o) {
                    lines = 1;
                    NEW first {
                        horizontal = TRUE;
                        MOVE PROPERTY(isPosted(o));
                        MOVE PROPERTY(nameStatus(o)) { charWidth = 40; }
                        MOVE PROPERTY(openOriginal(o));
                    }
                    NEW second { 
                        horizontal = TRUE;
                        MOVE PROPERTY(nameNumerator(o));
                        MOVE PROPERTY(number(o));
                        MOVE PROPERTY(series(o));
                        MOVE PROPERTY(date(o));
                        MOVE PROPERTY(time(o));
                    }
                    NEW third {
                        horizontal = TRUE;
                        MOVE PROPERTY(nameCurrency(o));
                        MOVE PROPERTY(note(o));
                    }
                }                    
                
                NEW internetCustomer {
                    horizontal = TRUE;
                    caption = 'Интернет покупатель';
                    NEW firstCol {
                        MOVE PROPERTY(numberDiscountCard(o));
                        MOVE PROPERTY(nameInternetCustomer(o)){charWidth = 35;}
                        MOVE PROPERTY(areaInternetCustomer(o));
                        MOVE PROPERTY(indexInternetCustomer(o));
                        MOVE PROPERTY(cityInternetCustomer(o));
                        MOVE PROPERTY(addressInternetCustomer(o));
                        MOVE PROPERTY(customerComment(o));
                    }
                    NEW secondCol {
                        MOVE PROPERTY(issueCard(o));
                        MOVE PROPERTY(phoneInternetCustomer(o)){charWidth = 35;}
                        MOVE PROPERTY(emailCustomer(o));
                        MOVE PROPERTY(deliveryDate(o));
                        MOVE PROPERTY(deliveryTimeFromInternetOrder(o));
                        MOVE PROPERTY(deliveryTimeToInternetOrder(o));
                    }
                }
            }
            
            NEW rightContainer{
                fill = 1;
                MOVE GROUP(documentSum,o) {
                    lines = 1;
                }                
                NEW payment {
                    caption = 'Оплата и доставка';
                    MOVE PROPERTY(namePaymentTypeInternetOrder(o)){charWidth = 30;}
                    MOVE PROPERTY(paymentCashSumInternetOrder(o));     
                    MOVE PROPERTY(paymentCardSumInternetOrder(o));                                                      
                    MOVE PROPERTY(paymentERIPSumInternetOrder(o));                                                      
                    MOVE PROPERTY(paymentDateInternetOrder(o));
                    MOVE PROPERTY(numberPaymentDocumentInternetOrder(o)){charWidth = 20;}
                    MOVE PROPERTY(deliverySumInternetOrder(o));
                }                   
            }
        }
        NEW tabbedBox {
            tabbed = TRUE;
            fill = 1;
            NEW specificationBox {
                fill = 1;
                horizontal = TRUE;
                caption = 'Спецификация';
                MOVE BOX(d) {
                    fill = 3;
                    caption = 'Спецификация';
                    GRID(d) {
                        height = 30;                
                    }
                }
                MOVE BOX(st) {
                    fill = 1;
                    caption = 'Склады';     
                    GRID(st) {
                        height = 30;
                    }  
                    PROPERTY(prevAvailableQuantity(d, st)){ 
                        background = #F4FFBD; 
                    }
                    PROPERTY(prevCurrentBalance(d, st)){
                        background = #FFEEEE;
                    }
                    PROPERTY(prevCurrentReserve(d, st)){
                        background = #CCFFCC;
                    }
                }
            }
        }
        MOVE TOOLBARBOX;

        PROPERTY(formOk()) {
            caption = 'Провести';
        }                        
    }
}

//-- Копирование строк     

copy 'Копировать'(InternetOrderDetail detail)  { 
    NEW d = InternetOrderDetail {          
        internetOrder(d) <- internetOrder(detail);
        sku(d) <- sku(detail);
        quantity(d) <- quantity(detail);
        price(d) <- price(detail);
        discountPrice(d) <- discountPrice(detail);
        Sale.supplierStock[InternetOrderDetail](d) <- Sale.supplierStock[InternetOrderDetail](detail);
    }
} CHANGEKEY 'F6' TOOLBAR;

EXTEND FORM internetOrder PROPERTIES(d) copy ;
DESIGN internetOrder { PROPERTY(copy(d)) { focusable = FALSE; } }

edit (InternetOrderDetail d) + {  DIALOG internetOrder OBJECTS o = internetOrder(d), d = d DOCKED; }

overCopy  ABSTRACT LIST ( InternetOrder, InternetOrder);
copy 'Копировать'(InternetOrder internetOrder)  { 
	NEWSESSION {
	    NEW o = InternetOrder {
	        currency(o) <- currency(internetOrder);
	        note(o) <- note(internetOrder);
	        overCopy(internetOrder, o);
	
	        FOR internetOrder(InternetOrderDetail detail) == internetOrder DO {
	            NEW d=InternetOrderDetail {
	                internetOrder(d) <- o;
	                sku(d) <- sku(detail);
	                quantity(d) <- quantity(detail);
	                Sale.supplierStock[InternetOrderDetail](d) <- Sale.supplierStock[InternetOrderDetail](detail);
	            }
	        }
	
	        SHOW internetOrder OBJECTS o = o DOCKED;
	    }
	}
} TOOLBAR;

backgroundInternetOrder (InternetOrder o) = ABSTRACT CASE COLOR (InternetOrder);
hideEdit(InternetOrder o) = ABSTRACT BOOLEAN (InternetOrder);

FORM internetOrders 'Интернет-заказы'

    OBJECTS o = InternetOrder LAST
    PROPERTIES (o) READONLYIF isReadonly() BACKGROUND backgroundInternetOrder(o) isClosed
    PROPERTIES (o) READONLYIF isReadonly() BACKGROUND backgroundInternetOrder(o) isPosted, nameStatus ON CHANGE changeStatus(o), fullNumber, number, series, date, time
    PROPERTIES (o) READONLYIF isReadonly() BACKGROUND backgroundInternetOrder(o) nameCurrency,
                                           deliveryDate, numberDiscountCard, issueCard, nameInternetCustomer SHOWIF showPersonalInfoUser(), 
                                           areaInternetCustomer, indexInternetCustomer, cityInternetCustomer, 
                                           addressInternetCustomer SHOWIF showPersonalInfoUser(), phoneInternetCustomer SHOWIF showPersonalInfoUser(), 
                                           emailCustomer SHOWIF showPersonalInfoUser()
    PROPERTIES (o) READONLY BACKGROUND backgroundInternetOrder(o) countInternetOrderDetail, quantityInternetOrderDetail, sumInternetOrderDetail, 
                            discountSumInternetOrderDetail BACKGROUND backgroundDiscount(o), note
    PROPERTIES (o) READONLY BACKGROUND backgroundInternetOrder(o) namePaymentTypeInternetOrder, paymentCashSumInternetOrder, paymentCardSumInternetOrder, 
                            paymentERIPSumInternetOrder, paymentDateInternetOrder,
                            numberPaymentDocumentInternetOrder, deliverySumInternetOrder, deliveryTimeFromInternetOrder, deliveryTimeToInternetOrder                            

    PROPERTIES (o) READONLY PANEL createdNameUser[InternetOrder], createdTime, createdHostnameComputer, 
                                        postedNameUser, postedTime, postedHostnameComputer

    PROPERTIES (o) NEWSESSION NEW, EDIT SHOWIF (isOpened(o) AND NOT hideEdit(o)) 
    PROPERTIES(o)             copy
    PROPERTIES (o) close SHOWIF isOpened(o), open SHOWIF isClosed(o)
    PROPERTIES     SHOWIF isOpened(o) NEWSESSION deleteo=DELETE(o) 
    FILTERGROUP open
        FILTER 'Открыт' isOpened(o) 'F6' DEFAULT 

    OBJECTS d=InternetOrderDetail
    PROPERTIES (d) READONLY BACKGROUND background(d) index, idBarcodeSku, idSku, nameSku, shortNameUOMSku
    PROPERTIES (d) READONLY BACKGROUND background(d) quantity, price, discountPrice BACKGROUND backgroundDiscount(o), 
                                                     discountPercent  BACKGROUND backgroundDiscount(o), sum, 
                                                     discountSum BACKGROUND backgroundDiscount(o), nameSupplierStock
    ORDERS index(d)

    FILTERS internetOrder(d) == o                          
    
    LIST InternetOrder OBJECT o

    EVENTS ON SCHEDULE PERIOD 60 formRefresh()
;

DESIGN internetOrders {
    NEW documentContainer BEFORE TOOLBARBOX {
        fill = 1;

        NEW filtersBox {                       
            fill = 1;
            MOVE BOX(o) {
                fill = 1;
            }
        }
        NEW documentDetail {
            fill = 1;
            tabbed = TRUE;

            MOVE BOX(d) {
                fill = 1;
                caption = 'Спецификация';
            }
            NEW documentHistory {
                caption = 'История';
                MOVE GROUP(created,o);
                MOVE GROUP(posted,o);
            }
            NEW printTab {
                caption = 'Печатные формы';
                NEW printContainer {
                    caption = 'Печать';
                }
            }
            NEW actionContainer {
                caption = 'Действия';
                horizontal = TRUE;
                NEW createdContainer {
                    caption = 'Создание на основе';
                    MOVE PROPERTY(copy(o)) { caption = 'Интернет-заказ'; alignment = STRETCH; }
                }
            }
        }
    }
}


NAVIGATOR {
    dashboardNavigator {
        NEW FOLDER eShop 'Интернет-магазин' {
            NEW internetOrders;
        }
    }
}

isClosed[Document](InternetOrder o) += isClosed(o);
isPosted[Document](InternetOrder o) += isPosted(o);
number[Document](InternetOrder o) += number(o);
series[Document](InternetOrder o) += series(o);
date[Document](InternetOrder o) += date(o);

supplier[Document](InternetOrder o) += legalEntity(supplierStock(o));
supplierStock[Document](InternetOrder o) += supplierStock(o);

index[DocumentDetail](InternetOrderDetail detail) += index(detail);
sku[DocumentDetail](InternetOrderDetail detail) += sku(detail);
quantity[DocumentDetail](InternetOrderDetail detail) += quantity(detail);
price[DocumentDetail](InternetOrderDetail detail) += price(detail);

document[DocumentDetail](InternetOrderDetail detail) += internetOrder(detail);

@defineDocumentLogForm(internetOrders, o);
@defineDocumentLogForm(internetOrder, o, tabbedBox);
DESIGN internetOrder { historyTabs { caption = 'История'; } }

FORM internetCatalogs 'Справочники интернет магазина'
    OBJECTS sio = StatusInternetOrder
    PROPERTIES(sio) name, order, staticCaption READONLY     
;

DESIGN internetCatalogs {
    NEW tabContainer {        
        fill = 1;
        tabbed = TRUE;
        MOVE BOX(sio){
            caption = 'Статусы интернет заказа';
        }
    }
    MOVE TOOLBARBOX;
}

NAVIGATOR {
    eShop {
        NEW internetCatalogs;
    }    
}

//------------- Партии ---------- //
@defineDocumentDetailBatchCustom(internetOrderDetail, batch);

idBatch 'Код партии' (InternetOrderDetail d) = id(batch(d));
cost 'Себестоимость' (InternetOrderDetail d) = cost(batch(d));
overFillBatch  ABSTRACT LIST ( InternetOrderDetail); 
overFillBatchPicking  ABSTRACT LIST ( InternetOrderDetail); 

fillBatch 'Проставить партию'(InternetOrderDetail d)   {    
    batch(d) <- prevFirstOrderBatchBalance(sku(d), Sale.supplierStock[InternetOrderDetail](d), quantity(d)) WHERE isItem(sku(d)); 
    overFillBatch(d);
} ASON CONTEXTMENU nameBatch[InternetOrderDetail];

fillAllBatch 'Проставить партии для всех'(InternetOrderDetail detail)  { 
   FOR internetOrder(detail) == internetOrder(InternetOrderDetail d) AND NOT batch(d) DO
       fillBatch(d);
} ASON CONTEXTMENU nameBatch[InternetOrderDetail];

//WHEN LOCAL DROPPED (Sale.supplierStock[InternetOrderDetail](InternetOrderDetail detail)) AND isItem(sku(detail)) DO {
//    batch(detail) <- NULL;
//}
//WHEN LOCAL SETCHANGED(Sale.supplierStock[InternetOrderDetail](InternetOrderDetail detail)) AND isItem(sku(detail)) DO {
//    batch(detail) <- firstOrderBatchBalance(sku(detail), Sale.supplierStock[InternetOrderDetail](detail), dateTime(detail), quantity(detail)); 
//    overFillBatch(detail);
//}

WHEN LOCAL (CHANGED(Sale.supplierStock[InternetOrderDetail](InternetOrderDetail detail)) OR CHANGED (sku(detail))) AND isItem(sku(detail)) AND NOT CHANGED (batch(detail)) DO {
    batch(detail) <- prevFirstOrderBatchBalance(sku(detail), Sale.supplierStock[InternetOrderDetail](detail), quantity(detail)); 
    overFillBatch(detail);
}

changeBatch(InternetOrderDetail d)  { 
    DIALOG dialogBatchStockOut OBJECTS st = Sale.supplierStock[InternetOrderDetail](d),
                                 t = dateTime(d),
                                 sk = sku(d),
                                 bt = batch(d) CHANGE NOCONSTRAINTFILTER NEWSESSION DO {
    }
}

EXTEND FORM internetOrder
    PROPERTIES (d) AFTER shortNameUOMSku(d) BACKGROUND background(d) nameBatch ON CHANGE changeBatch(d)
;
EXTEND FORM internetOrders PROPERTIES (d) READONLY AFTER shortNameUOMSku(d) nameBatch BACKGROUND background(d);

in 'Отм'= DATA LOCAL BOOLEAN (InternetOrder);
skip = DATA LOCAL BOOLEAN (InternetOrderDetail);
full 'Количество из заказа' = DATA LOCAL BOOLEAN();

diffDiscountSum 'Сумма скидки' (InternetOrderDetail d) = sum(d) (-) discountSum(d);

FORM  internetOrderPrint 'Интернет-заказ'
    OBJECTS o = InternetOrder SUBREPORT
    PROPERTIES (o) isPosted, nameStatus, shortNameCurrency,
                   nameNumerator, seriesNumber, number, series, date, time, nameCurrency, note,
                   deliveryDate, numberDiscountCard, issueCard, nameInternetCustomer, addressInternetCustomer, 
                   areaInternetCustomer, indexInternetCustomer, cityInternetCustomer, phoneInternetCustomer, emailCustomer
    PROPERTIES () full              
    PROPERTIES (o) READONLY countInternetOrderDetail, quantityInternetOrderDetail, sumInternetOrderDetail, discountSumInternetOrderDetail BACKGROUND backgroundDiscount(o)
    
    PROPERTIES (o) namePaymentTypeInternetOrder, paymentCashSumInternetOrder, paymentCardSumInternetOrder, paymentERIPSumInternetOrder, paymentDateInternetOrder,
                   numberPaymentDocumentInternetOrder, deliverySumInternetOrder, deliveryTimeFromInternetOrder, deliveryTimeToInternetOrder, customerComment
    
    FILTERS in(o)
    
    OBJECTS d=InternetOrderDetail
    PROPERTIES (d) READONLY  index, idBarcodeSku, idSku, nameSku, shortNameUOMSku
    PROPERTIES (d) READONLY quantity, price, discountPrice, discountPercent, sum, discountSum, diffDiscountSum, fullNameSupplierStock, nameSupplierStock, addressSupplierStock
                
    ORDERS index(d)

    FILTERS internetOrder(d) == o,
            NOT skip(d)   

;
internetOrderPrint 'Счет-заказ' (InternetOrder o)  { 
    in(InternetOrder order) <- NULL;
    skip(InternetOrderDetail d) <- NULL;   
     
    full() <- TRUE ;   
    in(o) <- TRUE;    
     
    PRINT internetOrderPrint;
} IMAGE 'print.png' IN print;

EXTEND FORM internetOrders
    PROPERTIES (o) internetOrderPrint
;
DESIGN internetOrders {
    printContainer {
        MOVE PROPERTY (internetOrderPrint(o));
    }
}

priceListType (internetOrder) = DATA PriceListType (InternetOrder);
namePriceListType 'Вид цен' (InternetOrder o)= name(priceListType(o)) IN documentPrm CHARWIDTH 10;
priceListType =  DATA PriceListType (InternetOrderDetail);
namePriceListType 'Вид цен' (InternetOrderDetail d) = name(priceListType(d)) CHARWIDTH 10;

defaultPriceListTypeInternetOrder = DATA PriceListType ();
nameDefaultPriceListTypeInternetOrder 'Вид цены ИМ' = name(defaultPriceListTypeInternetOrder());


EXTEND FORM options
    PROPERTIES () nameDefaultPriceListTypeInternetOrder
;
DESIGN options {
    topInternetOrder {
        MOVE PROPERTY (nameDefaultPriceListTypeInternetOrder());
    }
}
WHEN LOCAL SET(InternetOrder o IS InternetOrder) DO {
    IF o IS InternetOrder AND NOT priceListType(o) THEN priceListType(o) <- defaultPriceListTypeInternetOrder();
};
    
CONSTRAINT currency(InternetOrder o) != currency(priceListType(o))
           CHECKED BY priceListType[InternetOrder]
           MESSAGE 'Валюта документа должна совпадать с валютой вида цены';

CONSTRAINT currency(InternetOrderDetail d) != currency(priceListType(d))
           CHECKED BY priceListType[InternetOrderDetail]
           MESSAGE 'Валюта документа должна совпадать с валютой вида цены';
WHEN LOCAL
    (CHANGED(priceListType(internetOrder(InternetOrderDetail d)))) AND NOT CHANGED(priceListType(d)) DO {
        priceListType(d) <-  priceListType(internetOrder(d));                                         
    }
    
@defineDocumentSkuStock(internetOrder, sku, supplier);

ledgerPrice 'Цена (базовая)' (Sku sku, Stock stock, InternetOrder internetOrder) = prevPriceB(ledgerPriceListType(priceListType(internetOrder)), sku, stock, dateTime(internetOrder));
                                  
viewPrice 'Цена' (sku, stock, internetOrder) = DATA LOCAL NESTED NUMERIC[16,4] (Sku, Stock, InternetOrder);

price 'Цена' (Sku sku, Stock stock, InternetOrder internetOrder) = viewPrice(sku, stock, internetOrder);

updateViewPrice (Sku sku, Stock stock, InternetOrder internetOrder)  { 
    FOR PriceListType pt == priceListType(internetOrder) AND sku IS Sku AND stock IS Stock NOINLINE (pt) DO
        viewPrice(sku, stock, internetOrder) <- prevPriceB(pt, sku, stock, dateTime(internetOrder));
}

EXTEND FORM internetOrder

    PROPERTIES (o) nameSupplierStock ON CHANGE changeSupplierStockCompany(o), namePriceListType
    PROPERTIES (d) namePriceListType AFTER nameBatch(d)

    TREE skuTree sk = SkuGroup PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk)
    ORDERS order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F6' DEFAULT

    OBJECTS           sts=(ts=Stock, ks=Sku) GRID
    PROPERTIES        READONLY BACKGROUND background(ks, o, ts) name(ks) ON CONTEXTMENU showMovementSku(ks, ts) ON CONTEXTMENU showMovementPriceSku(ks, ts), idBarcode(ks), id(ks) SHOWIF showIDs(), shortNameUOM(ks)
    PROPERTIES        READONLY stockName = name(ts) 
    PROPERTIES        addSku() DRAW sts, EDIT(ks) NEWSESSION, copy(ks)

    FILTERS           isParent(sk, ks),
                      ts == supplierStock(o)

    FILTERS           name(ks)
    ORDERS          name(ks)

    PROPERTIES        quantitySupplier(ks, o, ts) ON CHANGE changeQuantity(ks, o, ts) 
                            BACKGROUND backgroundQuantity(ks, o, ts)
                            QUICKFILTER name(ks),
                      prevCurrentBalance(ks, ts) READONLY,
                      allQuantityUserOrder(ks, ts) ON CHANGE changeAllQuantity(ks, o, ts),
                      price(ks, ts, o) READONLY
    FILTERGROUP activeSku FILTER 'Активные' active(ks) 'F6' DEFAULT
    FILTERGROUP balance 
        FILTER 'С остатком' prevCurrentBalance(ks, ts) 'F10' DEFAULT   
        FILTER 'В документе ' quantitySupplier(ks, o, ts) 'F9'
    
;

DESIGN internetOrder {
    first {
        MOVE PROPERTY(nameSupplierStock(o)) BEFORE PROPERTY(openOriginal(o));
    }
    third {
        MOVE PROPERTY(namePriceListType(o));
    }
    NEW tab BEFORE TOOLBARBOX {
        fill = 1;
        tabbed = TRUE;
        NEW tab1 {
            fill = 1;
            caption = 'Заказ';
            MOVE headerBox;
            MOVE tabbedBox;
        }
        NEW itemBox {
            caption = 'Подбор';
            horizontal = TRUE;
            fill = 1;
            NEW skuFilters {
                fill = 1;
                tabbed = TRUE;
                MOVE BOX(TREE skuTree) { caption = 'Группы SKU'; }
            }
            NEW skuMainPane {
                fill = 2.5;
                NEW skuSelectPane {
                    fill = 1;
                    MOVE BOX(sts) {
                        caption = 'Товары';
                    }
                    
                }
            }
        }
    }
    PROPERTY(prevCurrentBalance(ks, ts)) { background = #FFEEEE; }
    PROPERTY(quantitySupplier(ks, o, ts)) { background = #D4FFD4; }
}

    
currentInternetOrderInternetOrder() = DATA LOCAL NESTED Object ();
setCurrentInternetOrderInternetOrder(Object o)  { currentInternetOrderInternetOrder() <- o; }

EXTEND FORM internetOrder
    EVENTS ON CHANGE o setCurrentInternetOrderInternetOrder(o)
;

WHEN LOCAL FORMS internetOrder (SET([ VIEW internetOrder.sts](Stock stock, Sku sku)) AND currentInternetOrderInternetOrder() == Object o) OR 
                        ((CHANGED(dateTime[UserOrder](o)) OR
                          CHANGED(priceListType[UserOrder](o))) AND [ VIEW internetOrder.sts](stock, sku)) DO 
    updateViewPrice[Sku,Stock,InternetOrder](sku, stock, o);

skipChangePriceStock = ABSTRACT BOOLEAN (InternetOrderDetail);
overChangePrice ABSTRACT LIST (InternetOrderDetail);

WHEN LOCAL FORMS internetOrder 
    (CHANGED(sku(InternetOrderDetail detail)) OR
    (CHANGED(batch(detail)) AND NOT skipChangePriceStock(detail)) OR     
    CHANGED(priceListType(detail)) OR
    (CHANGED(Sale.supplierStock[InternetOrderDetail](detail)) AND NOT skipChangePriceStock(detail)) OR
    (CHANGED (dateTime(detail)) AND NOT isPosted(detail))) AND NOT CHANGED (price(detail)) AND sku(detail) AND PriceListType pt == priceListType(detail) NOINLINE  (pt) DO {
    
    price (detail)  <- IF batch(detail)
                    THEN prevPriceB(pt, batch(detail), Sale.supplierStock[InternetOrderDetail](detail), dateTime(detail))
                    ELSE prevPriceB(pt, sku(detail), Sale.supplierStock[InternetOrderDetail](detail), dateTime(detail)); 
    discountPrice (detail)  <- price(detail);   
    overChangePrice(detail);                     
}

CLASS Carrier 'Перевозчик';
TABLE carrier(Carrier); 

@defineExternalizable(carrier, STRING[100]);

name 'Наименование' = DATA STRING[255] (Carrier) IN id;

departmentStore = DATA DepartmentStore (Carrier);
nameDepartmentStore 'Интернет магазин(отдел магазина)' (Carrier c) = name(departmentStore(c));

carrier = GROUP AGGR (Carrier carrier) BY departmentStore(carrier);

FORM carrier 'Перевозчик'
    OBJECTS c = Carrier PANEL 
    PROPERTIES(c) id, name, nameDepartmentStore
    EDIT Carrier OBJECT c
;

FORM carriers 'Перевозчики'
    OBJECTS c = Carrier
    PROPERTIES(c) READONLY id, name, nameDepartmentStore
    LIST Carrier OBJECT c
;

EXTEND FORM internetCatalogs
    OBJECTS carrier = Carrier
    PROPERTIES(carrier) READONLY id, name, nameDepartmentStore  
    PROPERTIES(carrier) NEWSESSION NEW, EDIT, DELETE
;

DESIGN internetCatalogs {
    tabContainer {        
        MOVE BOX(carrier) {
            caption = 'Перевозчики';
        }
    }
}

defaultCarrier = DATA Carrier ();
nameDefaultCarrier 'Перевозчик по умолчанию' = name(defaultCarrier());

EXTEND FORM options
    PROPERTIES nameDefaultCarrier()
;

DESIGN options {
    internetOrder{
        MOVE PROPERTY(nameDefaultCarrier());
    }
}

carrier = DATA Carrier (InternetOrder);
nameCarrier 'Перевозчик' (InternetOrder o) = name(carrier(o)) CHARWIDTH 10;

EXTEND FORM internetOrder
    PROPERTIES(o) nameCarrier 
;

DESIGN internetOrder {
    payment{
        MOVE PROPERTY(nameCarrier(o));
    }    
}

EXTEND FORM internetOrders
    PROPERTIES(o) READONLY nameCarrier
;

EXTEND CLASS TypeChange{
    changeStatus 'Изменение статуса'
}

WHEN (CHANGED(status(InternetOrder o)) AND PREV(status(o)) AND o IS Document) IF NOT disableDocumentLog() DO {
    NEW d = DocumentLog {
        documentId(d) <- LONG(o);
        typeDocument(d) <- objectClassName(o);
        numberDocument(d) <- number(o);  
        seriesDocument(d) <- series(o); 
        dateDocument(d) <- date(o);   
        typeChange(d) <- TypeChange.changeStatus;
        note(d) <- STRING[255]('Предыдущее значение: '+ PREV(nameStatus(o)));      
        hostnameComputer(d) <- hostnameCurrentComputer();
        userLogin(d) <- login(currentUser()); 
        nameContact(d) <- STRING[100](name(currentUser()));
        dateTimeSession(d) <- currentDateTime();                 
        supplierStock(d) <- supplierStock(o);
        customerStock(d) <- customerStock(o);
    }
}
//замены
useReplaseInterntetOrder 'Использовать замены в интернет-заказах' = DATA BOOLEAN ();
EXTEND FORM options
    PROPERTIES useReplaseInterntetOrder()
;
DESIGN options{
    internetOrder{
        MOVE PROPERTY (useReplaseInterntetOrder());
    }
}

changeDetail = DATA InternetOrderDetail (InternetOrderDetail);
nameSkuChangeDetail 'Замена' (InternetOrderDetail d) = nameSku(changeDetail(d));
idSkuChangeDetail 'Код замены' (InternetOrderDetail d) = idSku(changeDetail(d));
changedDetail = GROUP AGGR InternetOrderDetail d BY changeDetail(d);
idSkuChangedDetail 'Заменяемый товар' (InternetOrderDetail d) = idSku(changedDetail(d));
countChangeDetail 'Замены' (InternetOrder o) = GROUP SUM 1 IF changeDetail(InternetOrderDetail dd) AND internetOrder(dd) = o;

EXTEND FORM internetOrder
    PROPERTIES (d) nameSkuChangeDetail SHOWIF useReplaseInterntetOrder()
;

EXTEND FORM internetOrders
    PROPERTIES (o) countChangeDetail SHOWIF useReplaseInterntetOrder()
    PROPERTIES (d) READONLY nameSkuChangeDetail SHOWIF useReplaseInterntetOrder()
;
