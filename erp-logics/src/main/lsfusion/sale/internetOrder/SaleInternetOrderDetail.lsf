MODULE SaleInternetOrderDetail;

REQUIRE SaleInternetOrder;

NAMESPACE Sale;

CLASS StatusInternetOrderDetail 'Статус' {
    new 'Новый',
    picked 'Собрано',
//    partlyPicked 'Частично собран', убрал по просьбе MC
    notAvailable 'Нет в наличии',
    assigned 'Назначено',
    canceled 'Отмена покупателем после доставки',
    delivery 'Доставка',
    delivered 'Доставлен',
    return 'Возврат через магазин',
    completed 'Завершен',
    closed 'Отмена покупателем до доставки'
}

order 'Порядок' = DATA INTEGER (StatusInternetOrderDetail);

FORM statusInternetOrderDetail 'Статус'
    OBJECTS o = StatusInternetOrderDetail
    PROPERTIES(o) READONLY staticCaption, order
    ORDERS order(o)
    
    LIST StatusInternetOrderDetail OBJECT o 
;    

DESIGN statusInternetOrderDetail {
    PROPERTY(order(o)){
        hide = TRUE;
    }
}

status = DATA StatusInternetOrderDetail (InternetOrderDetail);
status (InternetOrderDetail d) <- StatusInternetOrderDetail.new WHEN SET(d IS InternetOrderDetail);
nameStatus 'Статус' (InternetOrderDetail d) = staticCaption(status(d));

isNew(InternetOrderDetail d) = status(d) == StatusInternetOrderDetail.new;
isPicked(InternetOrderDetail d) = status(d) == StatusInternetOrderDetail.picked;
//isPartlyPicked(InternetOrderDetail d) = status(d) == StatusInternetOrderDetail.partlyPicked;
isNotAvailable(InternetOrderDetail d) = status(d) == StatusInternetOrderDetail.notAvailable;
isAssigned(InternetOrderDetail d) = status(d) == StatusInternetOrderDetail.assigned;
isCanceled(InternetOrderDetail d) = status(d) == StatusInternetOrderDetail.canceled;

// События по изменению статусов

WHEN LOCAL SET(Sale.supplierStock[InternetOrderDetail](InternetOrderDetail d)) DO
    status(d) <- StatusInternetOrderDetail.assigned;
WHEN LOCAL DROPPED(Sale.supplierStock[InternetOrderDetail](InternetOrderDetail d)) DO
    status(d) <- StatusInternetOrderDetail.new;

WHEN SET([ GROUP SUM 1 IF status(InternetOrderDetail d) == StatusInternetOrderDetail.new BY internetOrder(d)](InternetOrder o)) DO
    status(o) <- StatusInternetOrder.new;
  
countCompletedDetail = GROUP SUM 1 IF status(InternetOrderDetail d) == StatusInternetOrderDetail.notAvailable OR 
                                              status(d) == StatusInternetOrderDetail.canceled OR 
                                              status(d) == StatusInternetOrderDetail.completed 
                              BY internetOrder(d);  
                              
CONSTRAINT isPicked(InternetOrderDetail d) AND NOT Sale.supplierStock[InternetOrderDetail](d) OR 
           isAssigned(d) AND NOT Sale.supplierStock[InternetOrderDetail](d) MESSAGE 'Должен быть выбран склад поставщика';
                             
EXTEND FORM internetOrder
    PROPERTIES (d) BACKGROUND background(d) nameStatus
;
EXTEND FORM internetOrders
    PROPERTIES (d) READONLY BACKGROUND background(d) nameStatus
;

EXTEND FORM internetCatalogs
    OBJECTS siod = StatusInternetOrderDetail
    PROPERTIES(siod) staticCaption READONLY, order    
;
DESIGN internetCatalogs {
    tabContainer {
        MOVE BOX(siod){
            caption = 'Статусы строки интернет заказа';
        }
    }
    MOVE TOOLBARBOX;
}

acceptedDate 'Дата принято' = DATA DATETIME (InternetOrderDetail); 
deliveryDateTime 'Дата доставки' = DATA DATETIME (InternetOrderDetail);
returnDate 'Дата возврата' = DATA DATETIME (InternetOrderDetail);
paymentDate 'Дата оплаты' = DATA DATE (InternetOrderDetail);