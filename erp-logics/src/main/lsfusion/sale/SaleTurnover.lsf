MODULE SaleTurnover;

REQUIRE SaleLedger;

NAMESPACE SaleLedger;


TABLE cumBalance (LegalEntity, Stock, DATE);

cumBalance 'Остаток (накопленная сумма остатка в ценах себестоимости)' = DATA NUMERIC[16,2] (LegalEntity, Stock, DATE);
soldSum 'Продано (в ценах себестоимости)' = DATA NUMERIC[16,2] (LegalEntity, Stock, DATE);
turnover 'Товарооборачиваемость, дн.' (LegalEntity su, Stock st, DATE dt) = NUMERIC[12,3](cumBalance(su, st, dt) /
    soldSum(su, st, dt));     
    
cumBalance 'Остаток (накопленная сумма остатка в ценах себестоимости)' (LegalEntity su,DATE date)= GROUP SUM cumBalance(su, Stock st, date);
soldSum 'Продано (в ценах себестоимости)' (LegalEntity su,DATE date)= GROUP SUM soldSum(su, Stock st, date);
turnover 'Товарооборачиваемость, дн.' (LegalEntity su,  DATE date) = NUMERIC[12,3](cumBalance(su, date) /
    soldSum(su, date));     
    
cumBalance 'Остаток (накопленная сумма остатка в ценах себестоимости)' (LegalEntity su,DATE df,DATE dt)= GROUP SUM cumBalance(su, Stock st, DATE date) IF df <= date AND date <= dt;
soldSum 'Продано (в ценах себестоимости)' (LegalEntity su,DATE df,DATE dt)= GROUP SUM soldSum(su, Stock st, DATE date) IF df <= date AND date <= dt;
turnover 'Товарооборачиваемость, дн.' (LegalEntity su,  DATE df, DATE dt) = NUMERIC[12,3](cumBalance(su, df, dt) /
    soldSum(su, df, dt));     
       
daysToTurnover 'За сколько дней пересчитывать товарооборачиваемость' = DATA INTEGER (); 
EXTEND FORM options
    PROPERTIES () daysToTurnover
;
DESIGN options {
    sale{
        MOVE PROPERTY (daysToTurnover());
    }
}

takeSupplier 'Рассчитать товарооборачиваемость (дата по)' (DATE date)   { 
    IF daysToTurnover() THEN {
        APPLY {
            LOCAL balance = NUMERIC[16,2] (LegalEntity, Stock);
            LOCAL cumBalance = NUMERIC[16,2] (LegalEntity, Stock);
            LOCAL dateCur = DATE();  
                
            dateCur() <- sum(date, -1);
    
            balance(LegalEntity su, Stock st) <- NUMERIC[16,2]( [ GROUP SUM balanceA(Batch batch, st, DATE dt)*cost(batch) BY supplier(batch),dt](su,dateCur())) 
                WHERE isCompany(st) AND active(st) AND isSupplier(su) AND [ GROUP SUM balanceA(Batch batch, st, DATE dt)*cost(batch) BY supplier(batch),dt](su,dateCur());
                
            soldSum (LegalEntity su, Stock st, DATE dt) <- NULL WHERE soldSum(su, st, dt) AND dt >= sum(date, -daysToTurnover()) AND dt <= sum(date, -1);
            cumBalance (LegalEntity su, Stock st, DATE dt) <- NULL WHERE cumBalance(su, st, dt) AND dt >= sum(date, -daysToTurnover()) AND dt <= sum(date, -1);                
            
            WHILE dateCur() >= sum(date, -daysToTurnover()) DO {
                      
    
                                            
                soldSum (LegalEntity su, Stock st, DATE dt) <- NUMERIC[16,2]( [ GROUP SUM costSumSold(Batch batch, st, dt) BY supplier(batch)](su)) 
                                            WHERE isCompany(st) AND active(st) AND isSupplier(su) AND dt == dateCur() AND [ GROUP SUM sumSold(Batch batch, st, dt) BY supplier(batch)](su);                 
                
                
                balance(LegalEntity su, Stock st) <- balance(su, st) (-)
                                                     NUMERIC[16,2]( [ GROUP SUM signedQuantity(Batch batch, st, DATE dt)*cost(batch) BY supplier(batch),dt](su,dateCur())) 
                                            WHERE isCompany(st) AND active(st) AND isSupplier(su) AND [ GROUP SUM signedQuantity(Batch batch, st, DATE dt)*cost(batch) BY supplier(batch),dt](su,dateCur()); 
                                                       
                cumBalance (LegalEntity su, Stock st, DATE dt) <- balance(su, st)
                                            WHERE isCompany(st) AND active(st) AND isSupplier(su) AND dt == dateCur() AND balance(su, st);                                                   
                
                dateCur() <- sum(dateCur(), -1);
            }
        }
    }
};
//takeSupplierStock 'Рассчитать товарооборачиваемость (дата по)' (DATE date, Stock st) = NEWSESSION { // для теста
//    IF daysToTurnover() THEN {
//        LOCAL balance = NUMERIC[16,2] (LegalEntity, Stock);
//        LOCAL cumBalance = NUMERIC[16,2] (LegalEntity, Stock);
//        LOCAL dateCur = DATE();  
//            
//        dateCur() <- sum(date, -1);
//
//        balance(LegalEntity su, st) <- NUMERIC[16,2]( [ GROUP SUM balanceA(Batch batch, Stock stock, DATE dt)*cost(batch) BY supplier(batch),stock,dt](su,st,dateCur())) WHERE isCompany(st) AND active(st) AND isSupplier(su);
//        
//        WHILE dateCur() >= sum(date, -daysToTurnover()) DO {
//                  
//
//                                        
//            soldSum (LegalEntity su, st, DATE dt) <- NUMERIC[16,2]( [ GROUP SUM sumSold(Batch batch, Stock stock, DATE dt) BY supplier(batch),stock,dt](su,st,dt)) 
//                                        WHERE isCompany(st) AND active(st) AND isSupplier(su) AND dt == dateCur();                 
//            
//            
//            balance(LegalEntity su, st) <- balance(su, st) (-)
//                                                 NUMERIC[16,2]( [ GROUP SUM signedQuantity(Batch batch, Stock stock, DATE dt)*cost(batch) BY supplier(batch),stock,dt](su,st,dateCur())) 
//                                        WHERE isCompany(st) AND active(st) AND isSupplier(su); 
//                                                   
//            cumBalance (LegalEntity su, st, DATE dt) <- balance(su, st)
//                                        WHERE isCompany(st) AND active(st) AND isSupplier(su) AND dt == dateCur();                                                   
//            
//            dateCur() <- sum(dateCur(), -1);
//        }
//        apply();
//    }
//};

caption (DATE dt) = toDateDDMMYY(dt)+' '+'Оборачиваемость, днях';

FORM turnover 'Товарооборачиваемость по поставщикам'
    OBJECTS dates = (df=DATE,dt=DATE) PANEL 
    PROPERTIES valFrom = VALUE (df), valTo = VALUE (dt)
       
    PROPERTIES takeSupplier(dt)
    
    OBJECTS su1 = LegalEntity
    PROPERTIES (su1) READONLY name   
    FILTERS isSupplier(su1) 
    PROPERTIES (su1,df,dt) READONLY cumBalance, soldSum, turnover
    
    FILTERGROUP filters1 FILTER 'С товарооборачиваемостью' turnover(su1,df,dt) 'F10' DEFAULT  

    OBJECTS date = DATE 
    FILTERS iterate(date,df,dt)
    
    OBJECTS su = LegalEntity
    PROPERTIES (su) READONLY name   
    FILTERS isSupplier(su) 
    PROPERTIES  READONLY turnover (su,date) COLUMNS (date) HEADER caption(date),
                turnover(su,df,dt) 
    
    FILTERGROUP filters2 FILTER 'С товарооборачиваемостью' turnover(su,df,dt) 'F10' DEFAULT   

;
DESIGN turnover {
    BOX {
        MOVE BOX(dates);
        NEW top {
            tabbed = TRUE;
            fill = 1;
            MOVE BOX(su1) { caption = 'За период';}
            MOVE BOX(su)  { caption = 'На дату';}           
            PROPERTY (turnover(su,df,dt)) {background =RGB(255,238,238);}
        }
        REMOVE BOX(date);
    }
    MOVE TOOLBARBOX;
}

NAVIGATOR {
    salesReports  {
        NEW turnover;
    }    
}
