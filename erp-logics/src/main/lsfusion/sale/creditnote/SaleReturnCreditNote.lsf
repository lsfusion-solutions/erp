MODULE SaleReturnCreditNote;

REQUIRE CreditNote, SaleReturnShipment, SaleCreditNote, SaleReturnInvoice;

PRIORITY Sale, Operation;

NAMESPACE SaleReturn;

//----------------------------------------------- Акт ---------------------------------------------------//

@defineCreditNote(' (продажа-возврат)', supplier, supplier, company, customer, SaleReturn);
@defineCreditNotePaymentCondition(' (продажа-возврат)');
@extendFormFilterAccessStock(CreditNote, c, creditNotes, supplierStock, company);

@defineCreditNoteBatch(supplier, supplier);

@defineCreditNoteBatchDialog();

//------------------------------ Ограничение на выбор контрагентов -----------------------------//

CONSTRAINT supplier(UserCreditNote userCreditNote) AND NOT isCompany(supplier(userCreditNote))
    CHECKED BY supplier[UserCreditNote] MESSAGE 'Для акта расхождения выбрано в качестве поставщика организация, не являющаяся компанией';
CONSTRAINT customer(UserCreditNote userCreditNote) AND NOT isCustomer(customer(userCreditNote))
    CHECKED BY customer[UserCreditNote] MESSAGE 'Для акта расхождения выбрано в качестве покупателя организация, не являющаяся покупателем';

//------------------------------ Автоматическое проставление свойств -----------------------------//

@deriveDocumentLegalEntityDefaultStock(UserCreditNote, customer, userCreditNote);

@defineDocumentLegalEntityStockAccess(UserCreditNote, supplier, company, userCreditNote);

// -- Операция
@defineDocumentOperationContainer(creditNote ,c, overName);
@extendFormFilterRoleAccess(creditNote, c, creditNotes);
@defineDocumentOperationConstraint(creditNote, 'акт расхождения (продажа-возврат)', SaleReturn);
@defineDocumentOperationRole(userCreditNote);
@deriveDocumentOperationProperty(UserInvoice, createCreditNote);

checkDateTimeCreditNote 'Акт расхождения (польз.) должен быть создан позже даты поставки в накладной' (UserCreditNoteDetail d) = checkDateTimeCreditNote(operation(d));
CONSTRAINT (SETCHANGED (invoiceDetail(UserCreditNoteDetail d)) OR SETCHANGED (operation(d)) OR SETCHANGED (dateTime(d)) OR SET(isPosted(d)))
    AND isPosted(d) AND checkDateTimeCreditNote(d) AND dateTime(d) <= shipmentDateTime(invoiceDetail(d))
    MESSAGE 'Акт расхождения (польз.) должен быть создан позже даты поставки в накладной';

@defineDocumentOperationLegalEntity(userCreditNote, supplier, 'Поставщик');
@deriveDocumentOperationLegalEntity(userCreditNote, supplier, userCreditNote);
@defineDocumentOperationLegalEntity(userCreditNote, customer, 'Покупатель');
@deriveDocumentOperationLegalEntity(userCreditNote, customer, userCreditNote);
@defineDocumentOperationStock(userCreditNote, supplier, 'Склад поставщика');
@deriveDocumentOperationStock(userCreditNote, supplier, userCreditNote);
@defineDocumentOperationStock(userCreditNote, customer, 'Склад покупателя');
@deriveDocumentOperationStock(userCreditNote, customer, userCreditNote);

operation(InvoiceCreditNote creditNote) += operation(invoice(creditNote));

//------------------------------ Расширение формы -----------------------------//

// Фильтры
EXTEND FORM userCreditNote

    FILTERGROUP filter
        FILTER 'С остатком ' currentBalance(ks, st) 'F10' 
        FILTER 'В документе ' quantitySupplier(ks, c, st) 'F9'

;

EXTEND FORM userCreditNote

    FILTERGROUP filter3
        FILTER 'С остатком ' prevCurrentBalance(b, sto) 'F10' DEFAULT
        FILTER 'В документе ' quantitySupplier(b, c, sto) 'F9'
;

NAVIGATOR {
    saleReturnNavigator {
        NEW creditNotes;
    }
}
