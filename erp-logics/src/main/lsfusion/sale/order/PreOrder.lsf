MODULE PreOrder;

REQUIRE OrderLedger, SaleOrder, WriteOff;

CLASS PreOrder 'Резерв' : Document;
CLASS PreOrderDetail 'Строка резерва' : DocumentDetail;

@defineDocument(preOrder);
@deriveDocumentHeaderTimePrefix(PreOrder, );

@defineDocumentHeaderNumber(PreOrder, BPSTRING[2]);
@defineNumeratedDefault(PreOrder, 'Резерв', 'РО');

@defineDocumentDataStock(preOrder, stock, 'Склад поставщика', supplier);
@defineDocumentDialogStocks(preOrder, supplierStock, company, , );

@defineDocumentDescription (preOrder, 'Резерв');

@defineDocumentDetailSkuCustomPrefix(preOrderDetail, sku, , );
INDEX preOrder(PreOrderDetail d), sku(d);

@defineDocumentDetailBatchCustomPrefix(preOrderDetail, batch, );

@defineDocumentHeaderPosted(PreOrder);
@defineDocumentDetailPosted(preOrder);
@defineDocumentHeaderClosed(PreOrder);
@defineDocumentDetailClosed(preOrder);

@defineDocumentDetailQuantityCustomPrefix (preOrderDetail, , );
@defineDocumentHeaderQuantity(preOrder);

@defineAddDetailDialogSkuStock(preOrder, sku, supplierStock, dialogSku);
@defineAddDetailDialogBarcode(preOrder, sku);

disablePosted 'Запретить проведение' = ABSTRACT BOOLEAN (PreOrder); 
overPrePost 'Провести' (PreOrder o)  { 
    IF NOT disablePosted(o) THEN {
        isPosted(o) <- TRUE;
    } 
}

operation = DATA Sale.Operation (PreOrder);
nameOperation 'Операция' (PreOrder o) = name(operation(o));
idOperation 'ID операции' (PreOrder o) = id(operation(o));

operation 'Операция' (PreOrderDetail d) = operation(preOrder(d));
nameOperation 'Операция' (PreOrderDetail d) = name(operation(d));

TABLE preOrderOperation (PreOrder, Sale.Operation);
in 'Вкл.' = DATA BOOLEAN (PreOrder, Sale.Operation);
includeOperations 'Дополнительные операции' (PreOrder o) = GROUP CONCAT name(Sale.Operation op) IF in(o,op), ', ' ORDER op CHARWIDTH 30;

TABLE preOrderDetailOperation (PreOrderDetail, Sale.Operation);
in 'Вкл.' (PreOrderDetail d, Sale.Operation op) = in(preOrder(d),op) MATERIALIZED;

FORM preOrderOperations
    OBJECTS o = PreOrder PANEL
    
    OBJECTS op = Sale.Operation
    PROPERTIES(o,op) in
    PROPERTIES(op) READONLY name, id
    FILTERS NOT op == operation(o)
;

changeIncludeOperations(PreOrder o)  { 
    DIALOG preOrderOperations OBJECTS o = o;
}

@defineDocumentDataTimePrefix(preOrder, from, ' с') ;

fromDate(PreOrder order) <- date(order) WHEN CHANGED(date(order));
fromTime(PreOrder order) <- time(order) WHEN CHANGED(time(order));

isClosed[Document](PreOrder preOrder) += isClosed(preOrder);
isPosted[Document](PreOrder preOrder) += isPosted(preOrder);
number[Document](PreOrder preOrder) += number(preOrder);
series[Document](PreOrder preOrder) += series(preOrder);
date[Document](PreOrder preOrder) += date(preOrder);

index[DocumentDetail](PreOrderDetail detail) += index(detail);
sku[DocumentDetail](PreOrderDetail detail) += sku(detail);
quantity[DocumentDetail](PreOrderDetail detail) += quantity(detail);

document[DocumentDetail](PreOrderDetail detail) += preOrder(detail);

supplierStock[Document](PreOrder o) += supplierStock(o);

FORM preOrder 'Резерв'

    OBJECTS o = PreOrder PANEL
    PROPERTIES (o) isPosted, nameSupplierStock ON CHANGE changeSupplierStockCompany(o),
                   nameOperation, includeOperations ON CHANGE changeIncludeOperations(o),
                   nameNumerator, number, series, date, time, note, fromDate, fromTime

    PROPERTIES (o) READONLY quantityPreOrderDetail, countPreOrderDetail 
    PROPERTIES (o) READONLY PANEL createdNameUser, createdTime, createdHostnameComputer                        

    OBJECTS d = PreOrderDetail
    PROPERTIES (d) index
    PROPERTIES (d) idBarcodeSku, idSku, nameSku, shortNameUOMSku//, nameBatch
    PROPERTIES (d) quantity                
                
    PROPERTIES (d) NEW, deleteid=DELETE GRID
    
    ORDERS index(d)
    
    FILTERS preOrder(d) == o
    
    PROPERTIES(o) DRAW d addDetailDialogSkuStockPreOrderDetail,
                           addDetailInputBarcodePreOrderDetail, deletePreOrderDetail    

    EDIT PreOrder OBJECT o
    
    EVENTS
        ON OK overPrePost(o)
;

DESIGN preOrder {
    BOX {
        size = (1024, 768);
        NEW headerBox {
            type = CONTAINERH;

            NEW headerParams {
                fill = 1;
                type = CONTAINERV;
                MOVE GROUP(documentHeader,o) {
                    columns = 1;
                    type = CONTAINERV;
                    NEW first {
                        type = CONTAINERH;
                        MOVE PROPERTY (isPosted(o));         
                        MOVE PROPERTY (nameOperation(o));
                        MOVE PROPERTY (includeOperations(o));       
                        MOVE PROPERTY(nameSupplierStock(o));                                 
                    }
                    NEW second { 
                        type = CONTAINERH;
                        MOVE PROPERTY(nameNumerator(o));
                        MOVE PROPERTY(number(o));
                        MOVE PROPERTY(series(o));
                        MOVE PROPERTY(date(o));
                        MOVE PROPERTY(time(o));
                    } 
                                                                                                                     
                }
                NEW ship1 {
                    caption = 'Действие';
                    type = CONTAINERH;
                    MOVE PROPERTY (fromDate(o));
                    MOVE PROPERTY (fromTime(o));                     
                }                   
                  
                MOVE GROUP(documentPrm,o);
            }
            MOVE GROUP(documentSum,o) {
                columns = 1;
            }
        }        
        NEW specificationBox {
            fill = 1;
            MOVE BOX(d) {
                caption = 'Спецификация';
            }
        }
        MOVE TOOLBARBOX;
        PROPERTY(formOk()) {
            caption = 'Провести';
        } 
    }
}

overShowEdit = ABSTRACT BOOLEAN (PreOrder);
overShowDelete = ABSTRACT BOOLEAN (PreOrder);
skipShowEdit = ABSTRACT BOOLEAN (PreOrder);
skipShowDelete = ABSTRACT BOOLEAN (PreOrder);

FORM preOrders 'Резервы'

    OBJECTS o = PreOrder 
    PROPERTIES (o) READONLY isClosed, isPosted, nameSupplierStock, nameOperation, includeOperations,
                   number, series, date, time, note
                
    PROPERTIES (o) READONLY countPreOrderDetail
    PROPERTIES (o) NEWSESSION NEW, editr = EDIT SHOWIF overShowEdit(o), deleter=DELETE  SHOWIF overShowDelete(o)
    PROPERTIES (o) READONLY PANEL createdNameUser, createdTime, createdHostnameComputer 
    PROPERTIES (o) close SHOWIF isOpened(o), open SHOWIF isClosed(o)
        
    OBJECTS d = PreOrderDetail
    PROPERTIES (d) READONLY index
    PROPERTIES (d) READONLY idBarcodeSku, idSku, nameSku, shortNameUOMSku//, nameBatch                   
    PROPERTIES (d) READONLY quantity     
    ORDERS index(d)

    FILTERS preOrder(d) == o
    
    FILTERGROUP open
        FILTER 'Открыт' NOT isClosed(o) DEFAULT
                
    LIST PreOrder OBJECT o
;
DESIGN preOrders {
    BOX {
        size = (1024, 768);

        NEW documentContainer BEFORE TOOLBARBOX {
            fill = 1;

            type = SPLITV;
            MOVE BOX(o);    

            NEW documentDetail {
                fill = 1;
                type = TABBED;

                MOVE BOX(d) {
                    fill = 1;
                    caption = 'Спецификация';
                }
                NEW documentHistory {
                    caption = 'История';
                    type = CONTAINERV;

                    MOVE GROUP(created,o);                       
                }
                NEW printTab {
                    caption = 'Печатные формы';
                    NEW printContainer {
                        caption = 'Печать';
                        type = CONTAINERV;
                    }
                }
            }
        }
    }
}

@defineDocumentLogForm(preOrders, o);

NAVIGATOR {
    saleSaleNavigator {
        NEW preOrders BEFORE orders;
    }
}

@defineDocumentOperationStock(preOrder, supplier, 'Склад поставщика');
@deriveDocumentOperationStock(preOrder, supplier, preOrder);

//---------------------- Проведение по регистру ------------------------//

preOrderDetail 'Резерв' = DATA PreOrderDetail (Sale.OrderDetail) INDEXED;
seriesNumberPreOrderDetail 'Резерв' (Sale.OrderDetail d) = seriesNumber(preOrder(preOrderDetail(d)));

CONSTRAINT preOrderDetail(Sale.OrderDetail d) AND (NOT sku(d) == sku(preOrderDetail(d)) OR dateTime(d) < fromDateTime(preOrderDetail(d)) 
    OR NOT supplierStock(preOrderDetail(d)) == supplierStock(d) OR NOT (operation(preOrderDetail(d)) == operation(d) OR in(preOrderDetail(d), operation(d))))
    CHECKED BY preOrderDetail[Sale.OrderDetail] MESSAGE 'Товар строки резерва должен совпадать с товаром строки накладной';

preOrderDetail 'Резерв' = DATA PreOrderDetail (WriteOffDetail) INDEXED;
seriesNumberPreOrderDetail 'Резерв' (WriteOffDetail d) = seriesNumber(preOrder(preOrderDetail(d)));

CONSTRAINT preOrderDetail(WriteOffDetail d) AND (NOT sku(d) == sku(preOrderDetail(d)) OR dateTime(d) < fromDateTime(preOrderDetail(d)) 
    OR NOT supplierStock(preOrderDetail(d)) == stock(d))
    CHECKED BY preOrderDetail[WriteOffDetail] MESSAGE 'Товар строки резерва должен совпадать с товаром строки списания';

EXTEND FORM writeOffs
    PROPERTIES(d) READONLY seriesNumberPreOrderDetail
;

EXTEND FORM userWriteOff
    PROPERTIES(d) seriesNumberPreOrderDetail
;

edit(PreOrderDetail d) + {  DIALOG preOrder OBJECTS o = preOrder(d), d = d DOCKED; }

orderedOrderDetail 'Израсходовано' (PreOrderDetail pd) = GROUP
    SUM quantity(Sale.OrderDetail d) IF isPosted(d) AND preOrderDetail(d) == pd;
orderedOrderDetail 'Израсходовано' (PreOrderDetail pd, so) = GROUP SUM quantity(Sale.OrderDetail d) 
    IF isPosted(d) AND preOrderDetail(d) == pd BY Sale.order(d);    
orders 'Заказы' (PreOrderDetail d) = GROUP
                                       CONCAT seriesNumber(Sale.Order so) IF orderedOrderDetail(d, so) , ', '
                                       ORDER Sale.dateTime(so), so CHARWIDTH 20;

orderedWriteOffDetail 'Израсходовано' (PreOrderDetail pd) = GROUP
    SUM quantity(WriteOffDetail d) IF isPosted(d) AND preOrderDetail(d) == pd;
orderedWriteOffDetail 'Израсходовано' (PreOrderDetail pd, wo) = GROUP SUM quantity(WriteOffDetail d) 
    IF isPosted(d) AND preOrderDetail(d) == pd BY writeOff(d);
writeOffs 'Списания' (PreOrderDetail d) = GROUP
                                       CONCAT seriesNumber(WriteOff wo) IF orderedWriteOffDetail(d, wo) , ', '
                                       ORDER dateTime(wo), wo CHARWIDTH 20;

extraOrdered = ABSTRACT NUMERIC[16,5] (PreOrderDetail);
ordered 'Израсходовано' (PreOrderDetail pd) = orderedOrderDetail(pd) (+) orderedWriteOffDetail(pd) (+) extraOrdered(pd);
inventory 'Списано инвентаризацией' = DATA NUMERIC[16,5] (PreOrderDetail);
calcQuantity 'Доступно' (PreOrderDetail pd) = IF  (quantity(pd) (-) ordered(pd) (-) inventory(pd)) >0 
    THEN (quantity(pd) (-) ordered(pd) (-) inventory(pd)) ELSE 0.0;

FORM dialogPreOrderDetail 'Резерв'
    OBJECTS s = UserOrderDetail PANEL 
    PROPERTIES (s) READONLY idBarcodeSku, nameSku, shortNameUOMSku
    
    OBJECTS d = PreOrderDetail
    PROPERTIES (d) READONLY descriptionIndex, calcQuantity
    FILTERS sku(d) == sku(s), operation(s) == operation(d) OR in(preOrder(d), operation(s))
    
    FILTERGROUP q FILTER 'Доступно' calcQuantity(d) > 0 DEFAULT 
;

changePreOrder (UserOrderDetail od) {
    DIALOG dialogPreOrderDetail OBJECTS s = od, d INPUT DO {
        preOrderDetail(od) <- d; 
    }
}

EXTEND FORM orders
    PROPERTIES(d) READONLY seriesNumberPreOrderDetail
;

EXTEND FORM userOrder
    PROPERTIES(d) seriesNumberPreOrderDetail ON CHANGE changePreOrder(d)
;

EXTEND FORM preOrder
    PROPERTIES (d) READONLY BEFORE deleteid ordered, orders, writeOffs, calcQuantity
    PROPERTIES (d) inventory AFTER ordered(d)
;
EXTEND FORM preOrders
    PROPERTIES (d) READONLY ordered, inventory, orders, writeOffs, calcQuantity
;

batchReserve 'Резерв по партиям' = DATA BOOLEAN ();
customReserve = ABSTRACT BOOLEAN ();
WHEN (SETCHANGED(sku(Sale.OrderDetail d)) OR SETCHANGED(supplierStock(d)) OR SETCHANGED(quantity(d))) AND NOT (batchReserve() OR customReserve())  DO {
    preOrderDetail(d) <- NULL;
    preOrderDetail(d) <- GROUP LAST PreOrderDetail pd IF calcQuantity(pd) >= quantity(d) 
                               AND sku(d) == sku(pd) AND dateTime(d) >= fromDateTime(pd)
                               AND supplierStock(d) == supplierStock(pd) AND (operation(pd) == operation(d) OR in(pd,operation(d)))
                               ORDER DESC fromDate(pd), pd;
}

WHEN FORMS userWriteOff (SETCHANGED(sku(WriteOffDetail d)) OR SETCHANGED(stock(d)) OR SETCHANGED(quantity(d))) DO {
    preOrderDetail(d) <- NULL;
    preOrderDetail(d) <- GROUP LAST PreOrderDetail pd IF calcQuantity(pd) >= quantity(d) 
                                   AND sku(d) == sku(pd) AND dateTime(d) >= fromDateTime(pd)
                                   AND stock(d) == supplierStock(pd) AND NOT operation(pd) ==  Sale.operation('saleWarehouseStore')
                                   ORDER DESC fromDate(pd), pd;
    preOrderDetail(d) <- [ GROUP LAST PreOrderDetail pd IF calcQuantity(pd) >= quantity(d) 
                                   AND sku(d) == sku(pd) AND dateTime(d) >= fromDateTime(pd)
                                   AND stock(d) == supplierStock(pd) AND operation(pd) ==  Sale.operation('saleWarehouseStore')
                                   ORDER DESC fromDate(pd), pd]() WHERE NOT preOrderDetail(d);
}

fillPreOrderDetailOver ABSTRACT();
fillPreOrderDetail 'Проставить в заказы на продажу ссылки на резерв' ()  { 
    IF NOT customReserve() THEN {    
        FOR Sale.Order o IS Sale.Order AND dateTime(o) >= [ GROUP MIN fromDateTime(PreOrder po)]() DO {
            preOrderDetail(Sale.OrderDetail d) <- [ GROUP LAST PreOrderDetail pd IF calcQuantity(pd) >= quantity(d) //prevCalcQuantity(d,pd) >= quantity(d) 
                                                           AND sku(d) == sku(pd) AND dateTime(d) >= fromDateTime(pd)
                                                           AND supplierStock(d) == supplierStock(pd) AND (operation(pd) == operation(d) OR in(pd,operation(d)))
                                                           ORDER DESC fromDate(pd), pd]() WHERE order(d) == o AND NOT preOrderDetail(d);
            IF [ GROUP SUM 1 IF CHANGED(preOrderDetail(Sale.OrderDetail d))]() THEN APPLY;
        }
    } ELSE {
        fillPreOrderDetailOver();
    }
}

EXTEND FORM preOrder
    OBJECTS od = Sale.OrderDetail
    PROPERTIES(od) READONLY seriesNumber, date, idBarcodeSku, idSku, nameSku, shortNameUOMSku, quantity
    PROPERTIES(od) seriesNumberPreOrderDetail
    FILTERS preOrder(preOrderDetail(od)) == o AND isPosted(od)
    
    OBJECTS wd = WriteOffDetail
    PROPERTIES(wd) READONLY seriesNumber, date, idBarcodeSku, idSku, nameSku, shortNameUOMSku, quantity
    PROPERTIES(wd) seriesNumberPreOrderDetail
    FILTERS preOrder(preOrderDetail(wd)) == o AND isPosted(wd)
;
DESIGN preOrder {
    specificationBox {
        type = TABBED;
        MOVE BOX(od) {
            caption = 'Заказы';
        }
        MOVE BOX(wd) {
            caption = 'Списания';
        }
        NEW documentHistory {
            caption = 'История';
            type = CONTAINERV;

            MOVE GROUP(created,o);                       
        }
    }
}

@defineDocumentLogForm(preOrder, o);

EXTEND FORM preOrders
    OBJECTS od = Sale.OrderDetail
    PROPERTIES(od) READONLY seriesNumber, date, idBarcodeSku, idSku, nameSku, shortNameUOMSku, quantity, seriesNumberPreOrderDetail
    FILTERS preOrder(preOrderDetail(od)) == o AND isPosted(od)
    
    OBJECTS wd = WriteOffDetail
    PROPERTIES(wd) READONLY seriesNumber, date, idBarcodeSku, idSku, nameSku, shortNameUOMSku, quantity, seriesNumberPreOrderDetail
    FILTERS preOrder(preOrderDetail(wd)) == o AND isPosted(wd)
;
DESIGN preOrders {
    documentDetail {
        MOVE BOX(od) AFTER BOX(d) {
            caption = 'Заказы';
        }
        MOVE BOX(wd) AFTER BOX(od) {
            caption = 'Списания';
        }
    }
}


EXTEND FORM options
    PROPERTIES() fillPreOrderDetail
;

EXTEND CLASS PreOrderDetail : OrderLedger;

dateTime (PreOrderDetail ledger) +=  dateTime(ledger);
isPosted (PreOrderDetail ledger) += isPosted(ledger);
isClosed (PreOrderDetail ledger) += isClosed(ledger);
sku[OrderLedger] (PreOrderDetail ledger) += sku(ledger);
batch[OrderLedger] (PreOrderDetail ledger) += batch(ledger);
stock (PreOrderDetail ledger) += supplierStock(ledger);
description (PreOrderDetail ledger) += description(ledger);
note (PreOrderDetail ledger) += note(preOrder(ledger));
quantity[OrderLedger] (PreOrderDetail ledger) += calcQuantity(ledger);
toShipQuantity (PreOrderDetail ledger) += calcQuantity(ledger);
//contact (PreOrderDetail ledger) += legalEntityCustomerStock(ledger);
//contactStock (PreOrderDetail ledger) += customerStock(ledger);   
operation[OrderLedger](PreOrderDetail ledger) += operation(ledger);
show 'Просмотреть' (PreOrderDetail d)   { 
    NEWSESSION{
        SHOW preOrder OBJECTS o = preOrder(d), d = d DOCKED READONLY;
    }
    
}TOOLBAR;
show[OrderLedger](PreOrderDetail ledger) + { show(ledger);};

TABLE operationStockSku (Sale.Operation,Stock,Sku);

quantityPreOrder 'Резерв операции' (o,st,s) = GROUP SUM calcQuantity(PreOrderDetail d) 
    IF isPosted(d) AND NOT isClosed(d) AND (operation(d) == Sale.Operation op OR in(d,op)) 
    BY op, sku(d), supplierStock(d) MATERIALIZED;
prevQuantityPreOrder 'Резерв операции' (Sale.Operation o, Sku s, Stock st) = PREV(quantityPreOrder(o, s, st));
    
prevQuantityPreOrder 'Резерв операции' (Sku s, Stock st, UserOrder o) = prevQuantityPreOrder(operation(o), s, st);  

TABLE operationStockBatch (Sale.Operation,Stock,Batch);

quantityPreOrder 'Резерв операции' (o,st,s) = GROUP SUM calcQuantity(PreOrderDetail d) 
    IF isPosted(d) AND NOT isClosed(d) AND (operation(d) == Sale.Operation op OR in(d,op))
    BY op, batch(d), supplierStock(d) MATERIALIZED;
prevQuantityPreOrder 'Резерв операции' (Sale.Operation o, Batch b, Stock st) = PREV(quantityPreOrder(o, b, st));
    
prevQuantityPreOrder 'Резерв операции' (Batch b, Stock st, UserOrder o) = prevQuantityPreOrder(operation(o), b, st);  

EXTEND FORM userOrder
    PROPERTIES READONLY prevQuantityPreOrder(ks, st, o) AFTER prevCurrentReserveSale(ks,st)
;

//------------------------- Значения по умолчанию ------------------------

preOrderRetailOperation 'Операция (розница)' = DATA Sale.Operation ();
namePreOrderRetailOperation 'Операция (розница)' () = name(preOrderRetailOperation());
inPreOrderRetail 'Розница' = DATA BOOLEAN (Sale.Operation);

preOrderWholesaleOperation 'Операция (опт)' = DATA Sale.Operation ();
namePreOrderWholesaleOperation 'Операция (опт)' () = name(preOrderWholesaleOperation());
inPreOrderWholesale 'Опт' = DATA BOOLEAN (Sale.Operation);

preOrderProductionOperation 'Операция (производство)' = DATA Sale.Operation ();
namePreOrderProductionOperation 'Операция (производство)' () = name(preOrderProductionOperation());
inPreOrderProduction 'Производство' = DATA BOOLEAN (Sale.Operation);

EXTEND FORM options
    PROPERTIES() namePreOrderRetailOperation, namePreOrderWholesaleOperation, namePreOrderProductionOperation, batchReserve
    OBJECTS sop = Sale.Operation
    PROPERTIES(sop) READONLY name, id
    PROPERTIES(sop) inPreOrderRetail, inPreOrderWholesale, inPreOrderProduction
;

DESIGN options {
    pane {
        NEW preOrder  {
            type = CONTAINERV;
            caption = 'Резерв';
            MOVE PROPERTY(namePreOrderRetailOperation());
            MOVE PROPERTY(namePreOrderWholesaleOperation());
            MOVE PROPERTY(namePreOrderProductionOperation());
            MOVE PROPERTY(batchReserve());
            MOVE PROPERTY(fillPreOrderDetail());
            MOVE BOX(sop);
        }
    }
}

//-- Запрет на изменение документа другим пользователем
@defineOperationChangesDocument(preOrder, PreOrder, preventChangesDocument, created);

overShowEdit (PreOrder i) += showEditDeleteUser(i) AND isOpened(i) AND NOT skipShowEdit(i);
overShowDelete (PreOrder i) += showEditDeleteUser(i) AND isOpened(i) AND NOT skipShowDelete(i); 

//skipShowEdit(PreOrder i)+= documentsClosedDate(supplierStock(i)) > date(i);

show 'Просмотреть' (PreOrder o)   { 
    NEWSESSION{
        SHOW preOrder OBJECTS o = o DOCKED READONLY;
    }
    
}TOOLBAR;
    
showToShow (PreOrder o) = is(o) AND NOT overShowEdit(o);
EXTEND FORM preOrders 
    PROPERTIES show(o) SHOWIF showToShow(o) BEFORE editr

;