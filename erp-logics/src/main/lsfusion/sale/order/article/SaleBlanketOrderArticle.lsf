MODULE SaleBlanketOrderArticle;

REQUIRE SaleBlanketOrder, OrderLedgerArticle, SaleLedgerItemArticle;

NAMESPACE Sale;

quantitySupplier 'Кол-во товара в документе' (article, BlanketOrder blanketOrder, Stock supplierStock) = GROUP SUM quantitySupplier(Item sku, blanketOrder, supplierStock)
    BY article(sku);    
    
quantitySupplierCustomer 'Кол-во товара в документе' (article, BlanketOrder blanketOrder, Stock supplierStock, Stock customerStock) = GROUP SUM quantitySupplierCustomer(Item sku, blanketOrder, supplierStock, customerStock)      
    BY article(sku); 
    
availableQuantity 'Доступное к-во (всего)' (article, Stock stock)= GROUP SUM availableQuantity(Item sku, stock) BY article(sku); 
    
prevAvailableQuantity 'Доступное к-во (всего)' (article, Stock stock)= GROUP SUM prevAvailableQuantity(Item sku, stock) BY article(sku) CHARWIDTH 7; 
prevAvailableQuantity 'Доступное к-во ' (article, Stock stock, BlanketOrder order)= GROUP SUM prevAvailableQuantity(Item sku, stock, shipmentDateTime(order)) BY article(sku);           
                     
prevAvailableQuantity 'Доступное к-во (всего)' (Article article, BlanketOrder order, Stock stock) = prevAvailableQuantity(article, stock) (+) (PREV(quantitySupplier(article, order, stock)) IF isPosted(order));
prevAvailableQuantity 'Доступное к-во (всего)' (Batch batch, BlanketOrder order, Stock stock) = prevAvailableQuantity(batch, stock) (+) (PREV(quantitySupplier(batch, order, stock)) IF isPosted(order));
prevAvailableQuantity 'Доступное к-во (всего)' (Sku sku, BlanketOrder order, Stock stock) = prevAvailableQuantity(sku, stock) (+) (PREV(quantitySupplier(sku, order, stock)) IF isPosted(order));

prevAvailableQuantity 'Доступное к-во (всего)' (Batch batch, BlanketOrder order, Stock supplierStock, Stock customerStock) =
    prevAvailableQuantity(batch, order, supplierStock) (-)
    [ GROUP SUM quantity(BlanketOrderDetail d) IF customerStock(d) != customerStock  
             BY batch(d), blanketOrder(d), supplierStock(d)](batch, order, supplierStock);
//    prevAvailableQuantityBatchStock(batch, stock) (+) (PREV(quantityBatchBlanketOrderSupplierStock(batch, order, stock)) IF isPostedBlanketOrder(order));

//quantitySoldArticleStockBlanketOrderOneWeek 'Продано за последнюю неделю (кол-во)' (article, stock, blanketOrder)= quantitySoldArticleStockDateFromTo(article, stock, subtractDate(dateBlanketOrder(blanketOrder),7), dateBlanketOrder(blanketOrder));        
//quantitySoldArticleStockBlanketOrderTwoWeek 'Продано за предпоследнюю неделю (кол-во)' (article, stock, blanketOrder)= quantitySoldArticleStockDateFromTo(article, stock, subtractDate(dateBlanketOrder(blanketOrder),14), subtractDate(dateBlanketOrder(blanketOrder),7));      

//quantitySoldSkuStockBlanketOrderOneWeek 'Продано за последнюю неделю (кол-во)' (sku, stock, blanketOrder)= quantitySoldSkuStockDateFromTo(sku, stock, subtractDate(dateBlanketOrder(blanketOrder),7), dateBlanketOrder(blanketOrder));        
//quantitySoldSkuStockBlanketOrderTwoWeek 'Продано за предпоследнюю неделю (кол-во)' (sku, stock, blanketOrder)= quantitySoldSkuStockDateFromTo(sku, stock, subtractDate(dateBlanketOrder(blanketOrder),14), subtractDate(dateBlanketOrder(blanketOrder),7));

backgroundQuantity 'Цвет'  (article, blanketOrder, stock)= ABSTRACT CASE COLOR (Article, BlanketOrder, Stock);
@extendFormDocumentArticleStockOrderLedger(blanketOrder);
backgroundBalanceStock (BlanketOrder order)= RGB(255,238,238) IF order IS BlanketOrder;   
backgroundBalanceCustomerStock (BlanketOrder order)= RGB(204,204,255) IF order IS BlanketOrder;
backgroundPrice (BlanketOrder order)= RGB(45,225,255) IF order IS BlanketOrder;    
  
//nameSoldCustomerStockOneWeek (stock)= nameStock(stock) + ' (р-ия посл.нед.)' CHARWIDTH 15;
//nameSoldCustomerStockTwoWeek (stock)= nameStock(stock) + ' (р-ия предпосл.нед.)' CHARWIDTH 15;    
//balanceSoldCustomerStockWeek (stock)= nameStock(stock) + ' /тек.ост./р-ия посл.нед./р-ция предпосл.нед.' CHARWIDTH 15;   
nameSoldCustomerDateFromTo (Stock stock)= name(stock) + ' (р-ия за период)' CHARWIDTH 15;
  
//concatBalanceSoldSkuStockBlanketOrder (sku, stock, blanketOrder)= CONCAT '/', round0(OVERRIDE (0.0 IF sku IS Sku AND stock IS Stock), prevCurrentBalanceSkuStock(sku,stock)),
//                                                                              round0(OVERRIDE (0.0 IF sku IS Sku AND stock IS Stock AND blanketOrder IS BlanketOrder), quantitySoldSkuStockBlanketOrderOneWeek(sku, stock, blanketOrder)),
//                                                                              round0(OVERRIDE (0.0 IF sku IS Sku AND stock IS Stock AND blanketOrder IS BlanketOrder), quantitySoldSkuStockBlanketOrderTwoWeek(sku, stock, blanketOrder));           
       
// Ввод количества по товару
changeBatchQuantityCustomer (Sku sku, BlanketOrder blanketOrder, Stock supplierStock, Stock customerStock)  { 
    INPUT n = NUMERIC[16,5] DO {
        LOCAL left = NUMERIC[16,5] ();
        left() <- n;
        FOR sku(Batch batch) == sku ORDER dateTime(batch) DO {
            
            LOCAL taken = NUMERIC[16,5] ();
            taken() <- min(left(), prevAvailableQuantity(batch, blanketOrder, supplierStock, customerStock)) IF prevAvailableQuantity(batch, blanketOrder, supplierStock, customerStock) > 0;
            left() <- left() (-) taken();
            
            IF NOT quantitySupplierCustomer(batch, blanketOrder, supplierStock, customerStock) == taken() THEN {
                IF blanketOrderDetailSupplierCustomer(batch, blanketOrder, supplierStock, customerStock) THEN {
                    IF taken() THEN {
                        quantity(BlanketOrderDetail blanketOrderDetail) <- taken() WHERE blanketOrderDetail == blanketOrderDetailSupplierCustomer(batch, blanketOrder, supplierStock, customerStock);
                    } ELSE {
                        FOR blanketOrderDetailSupplierCustomer(batch, blanketOrder, supplierStock, customerStock) == BlanketOrderDetail blanketOrderDetail DO
                            DELETE blanketOrderDetail;
                    }
                } ELSE {
                    IF taken() THEN {
                        NEW d = BlanketOrderDetail {
                           blanketOrder(d) <- blanketOrder;
                           sku(d) <- sku(batch);
                           batch(d) <- batch;
                           customerStock(d) <- customerStock;
                           quantity (d) <- taken();
                        }
                    }
                }
            } 
        }
    }
}            
     
        
EXTEND FORM blanketOrder

    OBJECTS params = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES objFrom = VALUE(dFrom), objTo = VALUE(dTo)
                 
    OBJECTS ddd = Stock GRID
    FILTERGROUP inactiveStock3 FILTER 'Активный' active(ddd) 'ctrl F10' DEFAULT
    FILTERS in(o,ddd)
    
    OBJECTS bta=(btk=Stock, br=Article)
    PROPERTIES READONLY id(br) SHOWIF showIDs(), caption(br), 
                      stockNameB = name(btk) SHOWIF notSupplierStock(o)//, imageArticle(br) PANEL 
    FILTERS           isParent(sk, br),
                      (btk == ts AND sg IS StockGroup OR isParent(sg, btk) AND NOT ts OR btk IS Stock AND NOT sg AND NOT ts) AND NOT supplierStock(o) OR
                      btk == supplierStock(o) AND NOT sg AND NOT ts,
                      legalEntity(btk) == supplier(o),
                      active(btk)

    PROPERTIES READONLY quantitySupplier(br,o,btk) BACKGROUND backgroundQuantity(br,o,btk)  
    PROPERTIES prevAvailableQuantity(br,o,btk) ON CHANGE  reviewReserve(br,btk,o), 
               prevAvailableQuantity(br,btk,o) ON CHANGE  reviewReserve(br,btk,o)
             
    PROPERTIES READONLY prevCurrentBalance(br,btk) BACKGROUND backgroundBalanceStock(o)            
    PROPERTIES READONLY prevCurrentBalance(br,ddd) COLUMNS 'astock' (ddd) HEADER nameBalanceCustomer(ddd) BACKGROUND backgroundBalanceCustomerStock(o)   
 
    ORDERS          id(br), stockNameB
    
    FILTERGROUP filter1
        FILTER 'С остатком' prevCurrentBalance(br) 'F10' 
        FILTER 'С остатком скл.пост-ка' prevCurrentBalance(br,btk) 'F8' DEFAULT
        FILTER 'С остатком скл.пок-ля' prevCurrentBalance(br,ddd) 'F7'
        FILTER 'В заказе' quantitySupplier(br, o, btk) 'F9'      

    OBJECTS bsa=(bs=Sku, dd=Stock)
    PROPERTIES(bs) READONLY name, nameCol=nameColor , originalSize 
    PROPERTIES     READONLY stockNameD = name(dd) SHOWIF notSupplierStock(o),  image(bs) PANEL
    ORDERS nameCol, name(bs), name(bs)
    
    FILTERGROUP articleItemFilter  
            FILTER 'По артикулу' article(bs)==br 'ctrl F8' DEFAULT    
            FILTER 'По группе' isParent(sk, bs) 'ctrl F7'   
            
    FILTERS           (dd == ts AND sg IS StockGroup OR isParent(sg, dd) AND NOT ts OR dd IS Stock AND NOT sg AND NOT ts) AND NOT supplierStock(o) OR
                      dd == supplierStock(o) AND NOT sg AND NOT ts
    FILTERGROUP inactiveStock2 FILTER 'Активный' active(dd) 'ctrl F10' DEFAULT                  

    PROPERTIES READONLY quantitySupplier(bs,o,dd) BACKGROUND backgroundQuantity(bs,o,dd)    
    PROPERTIES READONLY prevAvailableQuantity(bs,o,dd)
      
    PROPERTIES READONLY prevCurrentBalance(bs,dd) BACKGROUND backgroundBalanceStock(o)                            
    PROPERTIES quantitySupplierCustomer(bs, o, dd, ddd) COLUMNS 'stock' (ddd) HEADER nameQuantityCustomer(ddd) 
                    ON CHANGE changeBatchQuantityCustomer(bs, o, dd, ddd)

    PROPERTIES READONLY prevCurrentBalance(bs,ddd) COLUMNS 'stock' (ddd) HEADER nameBalanceCustomer(ddd) BACKGROUND backgroundBalanceCustomerStock(o)
//    PROPERTIES READONLY quantitySoldSkuStockBlanketOrderOneWeek(bs,ddd,o) COLUMNS (ddd) HEADER nameSoldCustomerStockOneWeek(ddd)    
//    PROPERTIES READONLY quantitySoldSkuStockBlanketOrderTwoWeek(bs,ddd,o) COLUMNS (ddd) HEADER nameSoldCustomerStockTwoWeek(ddd)  
    PROPERTIES READONLY quantitySold(bs,ddd,dFrom, dTo) COLUMNS 'stock' (ddd) HEADER nameSoldCustomerDateFromTo(ddd)    
    
    PROPERTIES READONLY prevAvailableQuantity(ks,o,st) BEFORE prevAvailableQuantity(ks, st, o)
    PROPERTIES READONLY prevAvailableQuantity(b,o,sto) BEFORE  prevAvailableQuantity(b, sto, o)    

    FILTERGROUP filtr2
        FILTER 'С остатком' prevCurrentBalance(bs) 'F10' 
        FILTER 'С остатком скл.пост-ка' prevCurrentBalance(bs,dd) 'F8' DEFAULT
        FILTER 'С остатком скл.пок-ля' prevCurrentBalance(bs,ddd) 'F7'
        FILTER 'В заказе' quantitySupplier(bs, o, dd) 'F9'                                                                                                                                   
                                                       
    OBJECTS bbk=(bbb=Batch, stk=Stock)
    PROPERTIES(bbb) READONLY   id SHOWIF showIDs(), nameSku, shortNameUOM, name
    PROPERTIES(stk) READONLY stkName = name SHOWIF notSupplierStock(o)                                                                                                    
    
    FILTERS sku(bbb) == bs,
            (stk == ts AND sg IS StockGroup OR isParent(sg, stk) AND NOT ts OR stk IS Stock AND NOT sg AND NOT ts) AND NOT supplierStock(o) OR
            stk == supplierStock(o) AND NOT sg AND NOT ts,
            legalEntity(stk) == supplier(o),
            active(stk)
                                            
    PROPERTIES quantitySupplier(bbb, o, stk) READONLY BACKGROUND backgroundQuantity(bbb, o, stk)
    PROPERTIES READONLY prevAvailableQuantity(bbb,o,stk)
    PROPERTIES READONLY prevCurrentBalance(bbb,stk)
    PROPERTIES quantitySupplierCustomer(bbb, o, stk, ddd) COLUMNS 'bstock' (ddd) HEADER nameQuantityCustomer(ddd) ON CHANGE changeQuantityCustomer(bbb, o, stk, ddd)
    FILTERGROUP filtr3   
        FILTER 'С остатком' prevCurrentBalance(bbb) 'F10'                                                      
        FILTER 'С остатком скл.пост-ка' prevCurrentBalance(bbb,stk) 'F8' DEFAULT
        FILTER 'С остатком скл.пок-ля' prevCurrentBalance(bbb,ddd) 'F7'        
        FILTER 'В заказе' quantitySupplier(bbb, o, stk) 'F9'
;

DESIGN blanketOrder {
    skuMainPane {
        NEW filterBox BEFORE skuSelectPane{
            caption = 'Фильтры';
            horizontal = TRUE;
            NEW filter1 {
                caption = 'Поставщик';
                MOVE PROPERTY(nameFilterSupplier(o));
            }
            MOVE BOX(params) {
                caption = 'Реализация за период'; 
            };  
        }
        
        skuSelectPane {
            NEW articleContainer {
                caption = 'Артикулы';
                horizontal = FALSE;
                
                NEW topArticle {
                    fill = 1;
                    type = SPLITH;
                    MOVE BOX(bta) {caption = 'Артикул';fill = 3;}
                    NEW imageBox {
                        fill = 2;
                        caption = 'Изображение';                     
                        MOVE PROPERTY(image(bs)) {
                            caption = '';
                            fill = 1;
                        }
                    } 
                }   
                NEW footerContainer {
                    horizontal = FALSE;
                    fill = 2;
                    MOVE BOX(bsa) { fill = 1.5;}  
                    MOVE BOX(bbk) {fill = 1;}               
                } 
                                                              
                PROPERTY(nameCol) { charWidth = 10;}
            }
            MOVE BOX(stb);  
        }  
    }     
 
    PROPERTY(prevAvailableQuantity(br,o,btk)) { background = #F4FFBD; }
    PROPERTY(prevAvailableQuantity(br,btk,o)) { background = #F4FFBD; }
    PROPERTY(prevAvailableQuantity(ks,o,st)) { background = #F4FFBD; }   
    PROPERTY(prevAvailableQuantity(b,o,sto)) { background = #F4FFBD; }       
    
    PROPERTY(prevAvailableQuantity(bs,o,dd)) { background = #F4FFBD; }
                  
    PROPERTY(quantitySold(bs,ddd,dFrom, dTo)) { background = #FFBBFF; }
}

    
        