MODULE SaleStatisticsStore;

REQUIRE SaleStatistics, ZReport;

NAMESPACE Sale;

//---------------------------------------------- Магазин 1 торг стат. отчетов -------------------------------------//

isInternet 'Интернет-магазин' = DATA BOOLEAN (Store);
skipCorporate = ABSTRACT BOOLEAN (DepartmentStore);
isCorporate 'Фирменный магазин' = DATA BOOLEAN (Store);
isCorporate 'Фирменный магазин' (DepartmentStore ds) = isCorporate(store(ds)) AND NOT skipCorporate(ds);
skipInternet = ABSTRACT BOOLEAN (DepartmentStore);
isInternet 'Интернет-магазин' (DepartmentStore ds) = isInternet(store(ds)) AND NOT skipInternet(ds);
isCatering 'Общественное питание' = DATA BOOLEAN (DepartmentStore);

EXTEND FORM store PROPERTIES(s) isCorporate, isInternet;

DESIGN store {
    header {
        NEW header1Torg {
            caption = 'Параметры статистических отчетов';
            lines = 4;
            MOVE PROPERTY(isCorporate(s));
            MOVE PROPERTY(isInternet(s));
        }
    }
}

EXTEND FORM departmentStore PROPERTIES(d) isCorporate READONLY, isInternet READONLY, isCatering;

DESIGN departmentStore {
    header {
        NEW headerStat {
            caption = 'Параметры статистических отчетов';
            lines = 4;
            MOVE PROPERTY(isCorporate(d));
            MOVE PROPERTY(isInternet(d));
            MOVE PROPERTY(isCatering(d));
        }
    }
}
// quantity
// Stock
cateringQuantitySoldBy 'Продано, шт' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcQuantitySoldBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM quantitySoldStatistic (Sku sku, stock, dateFrom, dateTo) * factor(group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);
cateringNetWeightSoldBy 'Продано, кг' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcNetWeightSoldBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM netWeightSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF isParent(group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);
cateringVolumeSoldBy 'Продано, л' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcVolumeSoldBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM volumeSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF isParent(group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);
cateringRetailSumSoldBy 'Продано, сум.' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcRetailSumSoldBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM sumSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF isParent(group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);

cateringValueBy 'Продано' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo) =
    CASE
        WHEN (unitMeasure(group)==GroupStatic.statisticThing OR
            unitMeasure(group)==GroupStatic.statisticLinearMeters OR
            unitMeasure(group)==GroupStatic.statisticPair OR
            unitMeasure(group)==GroupStatic.statisticConditionalPiece OR
            unitMeasure(group)==GroupStatic.statisticSquareMeters OR
            unitMeasure(group)==GroupStatic.statisticCubicMeters)
        THEN cateringQuantitySoldBy(group, stock, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticPounds
        THEN cateringNetWeightSoldBy(group, stock, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticLiter
        THEN cateringVolumeSoldBy(group, stock, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticSum
        THEN cateringRetailSumSoldBy(group, stock, dateFrom, dateTo)
        ELSE 0 IF group IS StatisticGroup AND stock IS Stock
;

// LegalEntity
cateringQuantitySoldBy 'Продано, шт' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM quantitySoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) * factor(group, sku) IF isCatering (stock) AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringNetWeightSoldBy 'Продано, кг' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM netWeightSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku)  AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringVolumeSoldBy 'Продано, л' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM volumeSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringRetailSumSoldBy 'Продано, руб.' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringValueBy 'Продано всего' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo) =
    CASE
        WHEN (unitMeasure(group) == GroupStatic.statisticThing OR
            unitMeasure(group) == GroupStatic.statisticLinearMeters OR
            unitMeasure(group) == GroupStatic.statisticPair OR
            unitMeasure(group) == GroupStatic.statisticConditionalPiece OR
            unitMeasure(group) == GroupStatic.statisticSquareMeters OR
            unitMeasure(group) == GroupStatic.statisticCubicMeters)
        THEN cateringQuantitySoldBy(group, legalEntity, dateFrom, dateTo)
        WHEN unitMeasure(group) == GroupStatic.statisticPounds
        THEN cateringNetWeightSoldBy(group, legalEntity, dateFrom, dateTo)
        WHEN unitMeasure(group) == GroupStatic.statisticLiter
        THEN cateringVolumeSoldBy(group, legalEntity, dateFrom, dateTo)
        WHEN unitMeasure(group) == GroupStatic.statisticSum
        THEN cateringRetailSumSoldBy(group, legalEntity, dateFrom, dateTo);

// Region
cateringQuantitySoldBy 'Продано, шт' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM quantitySoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) * factor(group, sku) IF isCatering (stock) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringNetWeightSoldBy 'Продано, кг' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM netWeightSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku)  AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringVolumeSoldBy 'Продано, л' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM volumeSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringRetailSumSoldBy 'Продано, руб.' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringValueBy 'Продано всего' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo) =
    CASE
        WHEN (unitMeasure(group) == GroupStatic.statisticThing OR
            unitMeasure(group) == GroupStatic.statisticLinearMeters OR
            unitMeasure(group) == GroupStatic.statisticPair OR
            unitMeasure(group) == GroupStatic.statisticConditionalPiece OR
            unitMeasure(group) == GroupStatic.statisticSquareMeters OR
            unitMeasure(group) == GroupStatic.statisticCubicMeters)
        THEN cateringQuantitySoldBy(group, legalEntity, region, dateFrom, dateTo)
        WHEN unitMeasure(group) == GroupStatic.statisticPounds
        THEN cateringNetWeightSoldBy(group, legalEntity, region, dateFrom, dateTo)
        WHEN unitMeasure(group) == GroupStatic.statisticLiter
        THEN cateringVolumeSoldBy(group, legalEntity, region, dateFrom, dateTo)
        WHEN unitMeasure(group) == GroupStatic.statisticSum
        THEN cateringRetailSumSoldBy(group, legalEntity, region, dateFrom, dateTo);

// Resident Stock
cateringQuantitySoldResidentBy 'Продано, шт' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcQuantitySoldResidentBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM quantitySoldStatistic (Sku sku, stock, dateFrom, dateTo) * factor(group, sku) IF resident (group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);
cateringNetWeightSoldResidentBy 'Продано, кг' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcNetWeightSoldResidentBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM netWeightSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF resident (group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);
cateringVolumeSoldResidentBy 'Продано, л' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcVolumeSoldResidentBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM volumeSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF resident (group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);
cateringRetailSumSoldResidentBy 'Продано, сум.' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (IF useCalcData() THEN (GROUP
        SUM calcRetailSumSoldResidentBy(group, stock, DATE date) IF date >= dateFrom AND date <= dateTo)
    ELSE (GROUP
        SUM sumSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF resident (group, sku))/
        (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup)) IF isCatering (stock);
cateringValueResidentBy 'Продано, бел. пр-ва' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo) =
    CASE
        WHEN (unitMeasure(group)==GroupStatic.statisticThing OR
            unitMeasure(group)==GroupStatic.statisticLinearMeters OR
            unitMeasure(group)==GroupStatic.statisticPair OR
            unitMeasure(group)==GroupStatic.statisticConditionalPiece OR
            unitMeasure(group)==GroupStatic.statisticSquareMeters OR
            unitMeasure(group)==GroupStatic.statisticCubicMeters)
        THEN cateringQuantitySoldResidentBy(group, stock, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticPounds
        THEN cateringNetWeightSoldResidentBy(group, stock, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticLiter
        THEN cateringVolumeSoldResidentBy(group, stock, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticSum
        THEN cateringRetailSumSoldResidentBy(group, stock, dateFrom, dateTo)
        ELSE 0 IF group IS StatisticGroup AND stock IS Stock
;

// Resident Region
cateringQuantitySoldResidentBy 'Продано, шт' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM quantitySoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) * factor(group, sku) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringNetWeightSoldResidentBy 'Продано, кг' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM netWeightSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringVolumeSoldResidentBy 'Продано, л' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM volumeSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringRetailSumSoldResidentBy 'Продано, руб.' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock)]
        (legalEntity, region) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringValueResidentBy 'Продано отеч. пр-ва' (StatisticGroup group, LegalEntity legalEntity, Region region, DATE dateFrom, DATE dateTo) =
    CASE
        WHEN (unitMeasure(group)==GroupStatic.statisticThing OR
            unitMeasure(group)==GroupStatic.statisticLinearMeters OR
            unitMeasure(group)==GroupStatic.statisticPair OR
            unitMeasure(group)==GroupStatic.statisticConditionalPiece OR
            unitMeasure(group)==GroupStatic.statisticSquareMeters OR
            unitMeasure(group)==GroupStatic.statisticCubicMeters)
        THEN cateringQuantitySoldResidentBy(group, legalEntity, region, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticPounds
        THEN cateringNetWeightSoldResidentBy(group, legalEntity, region, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticLiter
        THEN cateringVolumeSoldResidentBy(group, legalEntity, region, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticSum
        THEN cateringRetailSumSoldResidentBy(group, legalEntity, region, dateFrom, dateTo)
        ELSE 0 IF group IS StatisticGroup AND legalEntity IS LegalEntity AND region IS Region
;

// Resident LegalEntity
cateringQuantitySoldResidentBy 'Продано, шт' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM quantitySoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) * factor(group, sku) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringNetWeightSoldResidentBy 'Продано, кг' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM netWeightSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringVolumeSoldResidentBy 'Продано, л' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM volumeSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringRetailSumSoldResidentBy 'Продано, руб.' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo)=
    [ GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND resident (group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock)]
        (legalEntity) / (OVERRIDE conversionFactor(group), 1 IF group IS StatisticGroup);

cateringValueResidentBy 'Продано отеч. пр-ва' (StatisticGroup group, LegalEntity legalEntity, DATE dateFrom, DATE dateTo) =
    CASE
        WHEN (unitMeasure(group)==GroupStatic.statisticThing OR
            unitMeasure(group)==GroupStatic.statisticLinearMeters OR
            unitMeasure(group)==GroupStatic.statisticPair OR
            unitMeasure(group)==GroupStatic.statisticConditionalPiece OR
            unitMeasure(group)==GroupStatic.statisticSquareMeters OR
            unitMeasure(group)==GroupStatic.statisticCubicMeters)
        THEN cateringQuantitySoldResidentBy(group, legalEntity, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticPounds
        THEN cateringNetWeightSoldResidentBy(group, legalEntity, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticLiter
        THEN cateringVolumeSoldResidentBy(group, legalEntity, dateFrom, dateTo)
        WHEN unitMeasure(group)==GroupStatic.statisticSum
        THEN cateringRetailSumSoldResidentBy(group, legalEntity, dateFrom, dateTo)
        ELSE 0 IF group IS StatisticGroup AND legalEntity IS LegalEntity
;

// sum
totalSumCorporateSoldBy 'В фирменных магазинах, руб.' (StatisticGroup group, legalEntity, region, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCorporate(stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock);
totalSumCorporateSoldBy 'В фирменных магазинах, руб.' (StatisticGroup group, legalEntity, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCorporate(stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock);

totalSumInternetSoldBy 'В интернет-магазинах, руб.' (StatisticGroup group, legalEntity, region, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isInternet (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock);
totalSumInternetSoldBy 'В интернет-магазинах, руб.' (StatisticGroup group, legalEntity, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isInternet (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock);

totalSumCateringSoldBy 'В общепите, руб.' (StatisticGroup group, legalEntity, region, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock);
totalSumCateringSoldBy 'В общепите, руб.' (StatisticGroup group, legalEntity, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering (stock) AND isParent(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock);

totalSumCateringResidentSoldBy 'В общепите, руб.' (StatisticGroup group, legalEntity, region, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering(stock) AND resident(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock), region(stock);
totalSumCateringResidentSoldBy 'В общепите, руб.' (StatisticGroup group, legalEntity, DATE dateFrom, DATE dateTo)=
    GROUP SUM sumSoldStatistic (Sku sku, Stock stock, dateFrom, dateTo) IF isCatering(stock) AND resident(group, sku) AND NOT skipSale(stock)
    BY legalEntity(stock);
//
totalSumCorporateSoldBy 'В фирменных магазинах, руб.' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    GROUP
        SUM sumSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF isCorporate(stock) AND isParent(group, sku);

totalSumInternetSoldBy 'В интернет-магазинах' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    GROUP
        SUM sumSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF isInternet(stock) AND isParent(group, sku);

totalSumCateringSoldBy 'В общепите' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    GROUP
        SUM sumSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF isCatering(stock) AND isParent(group, sku);

totalSumCateringResidentSoldBy 'В общепите отеч., руб.' (StatisticGroup group, Stock stock, DATE dateFrom, DATE dateTo)=
    (GROUP SUM sumSoldStatistic (Sku sku, stock, dateFrom, dateTo) IF isCatering(stock) AND resident(group, sku));

// было вот так - переделал на Z-отчет
//sumCard 'Продано с использованием банк. карточек' (departmentStore, dateFrom, dateTo) = GROUP SUM sum(Payment payment) IF paymentMeans(payment)==PaymentMeans.paymentMeansCard
//    AND date(receipt(payment)) >= DATE dateFrom AND date(receipt(payment)) <= DATE dateTo AND isPosted(receipt(payment))
//        BY departmentStore(receipt(payment)), dateFrom, dateTo;
//     
//sumSale 'Продано по кассе' (departmentStore, dateFrom, dateTo) = GROUP SUM sumReceiptDetail(Receipt receipt)
//    IF date(receipt) >= DATE dateFrom AND date(receipt) <= DATE dateTo AND isPosted(receipt)
//        BY departmentStore(receipt), dateFrom, dateTo;

sumCard 'Продано с использованием банк. карточек' (DATE dateFrom, DATE dateTo) =
    GROUP
        SUM sumCard (ZReport z) IF inStat(departmentStore(z)) AND dateFrom <= date(z) AND dateTo >= date(z) AND isPosted(z);

extraSumSale = ABSTRACT NUMERIC[18,4](DATE, DATE);

sumSale 'Продано по кассе' (DATE dateFrom, DATE dateTo) =
    (GROUP
        SUM sumReceiptDetail (ZReport z) IF inStat(departmentStore(z)) AND dateFrom <= date(z) AND dateTo >= date(z) AND isPosted(z)) // вся сумма, с учетом проданных сертификатов
        (+) extraSumSale(dateFrom, dateTo);

EXTEND FORM statisticalReportStockSelect
    PROPERTIES sumCard(dFrom, dTo),
        sumSale(dFrom, dTo) // вся сумма, с учетом проданных сертификатов

;

DESIGN statisticalReportStockSelect {
    printContainer {
        NEW summa {
            caption = 'По выбранным складам';
            MOVE PROPERTY(sumCard(dFrom, dTo));
            MOVE PROPERTY(sumSale(dFrom, dTo));
        }
    }
}