MODULE ArticleStatisticGroupDashboard;

REQUIRE ItemArticle, ArticleTranslateDashboard, SaleStatisticsArticle;

NAMESPACE Item;

statisticGroupTypeProcessesGroup = DATA StatisticGroupType ();
nameStatisticGroupTypeProcessesGroup 'Статистический классификатор' () = name(statisticGroupTypeProcessesGroup());

EXTEND FORM options
    PROPERTIES nameStatisticGroupTypeProcessesGroup()
;

DESIGN options {
    items {
        MOVE PROPERTY(nameStatisticGroupTypeProcessesGroup());
    }
}

completedStatisticGroup 'Обработан' = DATA BOOLEAN (Item);
notCompletedStatisticGroup 'Не обработан' (article) = GROUP SUM 1 IF Item i IS Item AND NOT completedStatisticGroup(i) BY article(i);
completedStatisticGroup 'Обработан' = Article a IS Article AND NOT notCompletedStatisticGroup(a);

changeCompletedStatisticGroup (Article article)  { 
    INPUT b = BOOLEAN DO
        completedStatisticGroup(Item item) <- b WHERE article(item) == article; 
}

// Подсчет непереведенных артикулов для групп
countNotCompletedStatisticGroupArticles 'Не обработано (к-во)' (group) = 
    GROUP SUM 1 IF completedTranslate(Article article) AND notCompletedStatisticGroup(article) AND ((inPurchaseInvoices(currentUser()) AND quantityInvoiceDetail(article, currentUser())) OR NOT inPurchaseInvoices(currentUser())) BY itemGroup(article);
recCountNotCompletedStatisticGroupArticles 'Не обработано (к-во)' (ItemGroup parent) = GROUP SUM countNotCompletedStatisticGroupArticles(ItemGroup child) IF isParent(child, parent);

// Не заполнены атрибуты

nullStatisticGroup (Item item)= item IS Item AND NOT completedStatisticGroup(item) AND NOT statistic(statisticGroupTypeProcessesGroup(), item);  
nullStatisticGroup (article)= GROUP SUM 1 IF nullStatisticGroup(Item item) AND NOT completedStatisticGroup(item) BY article(item);    

filterStatisticInvoice = DATA LOCAL Purchase.Invoice ();
descriptionFilterStatisticInvoice 'Накладная' = description(filterStatisticInvoice());

FORM articleStatisticGroupDashboard 'Статистическая группа'
    PROPERTIES seriesNumberDateInvoicesCurrentUser() READONLY, selectPurchaseInvoicesCurrentUser()
    
    OBJECTS ct = StatisticGroupType PANEL

    TREE groupTree g=ItemGroup PARENT parent(g)
    PROPERTIES READONLY order(g), name(g), recCountNotCompletedStatisticGroupArticles(g)
    ORDERS order(g), name(g)
    FILTERS active(g)
    FILTERGROUP notGroupsFilters
        FILTER 'Не обработан' recCountNotCompletedStatisticGroupArticles(g) 'F6'

    OBJECTS a=Article
    PROPERTIES(a) READONLY nameBrand, id, caption, nameUOM, canonicalNameItemGroup
    PROPERTIES BACKGROUND hintEditableBackground() canonicalName(ct, a) 
    PROPERTIES(a) completedStatisticGroup ON CHANGE changeCompletedStatisticGroup(a), in BEFORE nameBrand(a)
    PROPERTIES(a) NEWSESSION EDIT
    
    FILTERGROUP attributesFilters
        FILTER 'Без атрибутов' nullStatisticGroup(a) 'F7'                   
        FILTER 'С атрибутами' NOT nullStatisticGroup(a) 'F6'
                           
    FILTERGROUP stickerFilters
        FILTER 'Переведены' completedTranslate(a) 'F10' DEFAULT
        
    FILTERGROUP articleFilters
        FILTER 'Не обработан' notCompletedStatisticGroup(a) 'F8' DEFAULT
        FILTER 'Обработан' completedStatisticGroup(a) 'F9'   

    FILTERGROUP inArticleFilter
        FILTER 'Отмеченные' in(a) 'F11'                      

    FILTERS isParent(g, a) OR (g IS ItemGroup AND NOT itemGroup(a))

    OBJECTS i=Item
    PROPERTIES(i) READONLY descriptionDefaultPurchaseInvoice, idBarcode, id, caption, nameUOM, image PANEL, canonicalNameItemGroup
    PROPERTIES    BACKGROUND hintEditableBackground() canonicalName(ct, i)
    PROPERTIES(i) completedStatisticGroup
    PROPERTIES(i) NEWSESSION EDIT SHOWIF enableEditing(i)
    
    FILTERGROUP attributesFilters2
        FILTER 'Без атрибутов' nullStatisticGroup(i) 'F7'
        FILTER 'С атрибутами' NOT nullStatisticGroup(i) 'F6'
          
    FILTERGROUP itemFilters
        FILTER 'По артикулам' article(i) == a 'F4' DEFAULT
        FILTER 'По группам (не обработан)' completedTranslate(i) AND NOT completedStatisticGroup(i) AND isParent(g,i) 'shift F4'
        FILTER 'По группам ' isParent(g,i) 'ctrl F4'
        
    FILTERS quantityInvoiceDetail(a, currentUser()) OR (a IS Article AND NOT countInvoices(currentUser()))
        
;

DESIGN articleStatisticGroupDashboard {
    NEW filter {
        caption = 'Фильтр';
        horizontal = TRUE;
        MOVE PROPERTY(seriesNumberDateInvoicesCurrentUser());
        MOVE PROPERTY(selectPurchaseInvoicesCurrentUser());
    }
    NEW pane {
        horizontal = TRUE;
        fill = 1;
        NEW tree4{
            fill = 1;
            MOVE BOX(TREE groupTree) {fill = 2;}
            NEW imageBox4 {
                fill = 3;
                caption = 'Изображение';                     
                MOVE PROPERTY(image(i)) {                           
                    caption = '';
                    fill = 1;
                }
            }
        }
        NEW row511 {
            fill = 3;
            MOVE BOX(a) {
                defaultComponent = TRUE;                   
                fill = 2;                    
                PROPERTY(canonicalName(ct,a)) {caption = 'Статистическая группа';}
            }
            MOVE BOX(i) {
                PROPERTY(canonicalName(ct,i)) {caption = 'Статистическая группа';}
            };
        }
    }
    
    MOVE TOOLBARBOX;
}

completeArticleStatisticGroupDashboard 'Подтвердить все'()  {   
    LOCAL k = INTEGER ();
    k() <- 0;
    
    FOR [ FILTER articleStatisticGroupDashboard.a](Article article) AND nullStatisticGroup(article) DO{   
        k() <- k() + 1;              
    }    
    IF k() > 0 THEN {
        MESSAGE 'Для артикула не задана статистическая группа ('+k()+' шт.)';
    } ELSE {
        FOR [ FILTER articleStatisticGroupDashboard.a](Article article) DO {
            completedStatisticGroup(Item item) <- TRUE WHERE article(item) ==article;
        }
    }      
} TOOLBAR CONFIRM;

EXTEND FORM  articleStatisticGroupDashboard
    PROPERTIES() DRAW a completeArticleStatisticGroupDashboard 
;

// Автоматически проставляем нужные классификаторы
seekDefaultStatisticGroupType  { SEEK articleStatisticGroupDashboard.ct = statisticGroupTypeProcessesGroup(); }

EXTEND FORM articleStatisticGroupDashboard
    EVENTS ON INIT seekDefaultStatisticGroupType()
;

NAVIGATOR {
    customsDashboardNavigator {
        NEW articleStatisticGroupDashboard AFTER articleTranslateDashboard;
    }
}
