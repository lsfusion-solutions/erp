MODULE SaleReportsRu;

REQUIRE SaleReports, SaleInvoice, SaleReturnInvoice, SaleOperation, PricingSum, SaleFullPrice, 
        SaleShipment, TaxItem, ZReport, Warehouse, PurchaseOrder, WriteOff, SaleLedgerWeek;

NAMESPACE SaleReports;

articleRu = ABSTRACT ISTRING[20](Sku);
priceSku 'Учетная цена' = ABSTRACT NUMERIC[16,4](Sku, Stock);
supplierSku 'Поставщик товара' = ABSTRACT LegalEntity (Sku);
nameSupplierSku 'Наименование поставщика' (Sku s) = name(supplierSku(s));
idSupplierSku 'Код поставщика' (Sku s) = id(supplierSku(s));

inSessionSku 'Отм.' (Sku s) = OVERRIDE in(s), TRUE IF (GROUP SUM 1 IF inSession(group(GroupType t, s)));
printInSessionSku 'Товары' () =
    GROUP CONCAT name(Sku s) IF inSessionSku(s) ,', ' ORDER s CHARWIDTH 100;

inSaleReportLegalEntities 'Покупатели' () =
    GROUP CONCAT name(LegalEntity le) IF in(le) ,', ' ORDER le CHARWIDTH 30;

FORM dialogLegalEntitiesSaleReport 'Выбор покупателя'
    TREE legalEntityGroupTree lg = LegalEntityGroup PARENT parent(lg)
    PROPERTIES READONLY lgTreeName = name(lg)

    OBJECTS l = LegalEntity
    PROPERTIES(l) in
    PROPERTIES(l) READONLY name, id SHOWIF showIDs(), fullName, nameLegalEntityGroup
    ORDERS name(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    FILTERGROUP include FILTER 'Отмеченные' in(l) 'F9'
    FILTERS isParent(legalEntityGroup(l), lg) OR
        l IS LegalEntity AND NOT lg IS LegalEntityGroup OR
        l IS LegalEntity AND lg IS LegalEntityGroup AND NOT legalEntityGroup(l)
;

DESIGN dialogLegalEntitiesSaleReport {
    BOX {
        NEW topContainer {
            horizontal = TRUE;
            fill = 1;

            MOVE BOX(TREE legalEntityGroupTree){
                caption = 'Группы организаций';
            }
            MOVE BOX(l) {
                fill = 3;
                GRID(l) {
                    defaultComponent = TRUE;
                }
            }
        }
        MOVE TOOLBARBOX;
    }
}

changeStocksSalesReport(GroupType gt, DATE df, DATE dt)  {
    DIALOG dialogStocksSaleReport DO {
        fillSaleReportFromTo(gt, df, dt);
    }
}


inSupplier 'Отм.' = DATA LOCAL BOOLEAN (LegalEntity);
inSaleReportSupplier 'Поставщики' () =
    GROUP CONCAT name(LegalEntity le) IF inSupplier(le) ,', ' ORDER le CHARWIDTH 30;

FORM dialogLegalEntitiesSupplier 'Выбор поставщика'
    TREE legalEntityGroupTree lg = LegalEntityGroup PARENT parent(lg)
    PROPERTIES READONLY lgTreeName = name(lg)

    OBJECTS l = LegalEntity
    PROPERTIES(l) inSupplier
    PROPERTIES(l) READONLY name, id SHOWIF showIDs(), fullName, nameLegalEntityGroup
    ORDERS name(l)
    FILTERGROUP inactiveLegalEntity FILTER 'Активная' active(l) 'shift F10' DEFAULT
    FILTERGROUP include FILTER 'Отмеченные' in(l) 'F9'
    FILTERS isParent(legalEntityGroup(l), lg) OR
        l IS LegalEntity AND NOT lg IS LegalEntityGroup OR
        l IS LegalEntity AND lg IS LegalEntityGroup AND NOT legalEntityGroup(l)
;

DESIGN dialogLegalEntitiesSupplier {
    BOX {
        NEW topContainer {
            horizontal = TRUE;
            fill = 1;

            MOVE BOX(TREE legalEntityGroupTree){
                caption = 'Группы организаций';
            }
            MOVE BOX(l) {
                fill = 3;
                GRID(l) {
                    defaultComponent = TRUE;
                }
            }
        }
        MOVE TOOLBARBOX;
    }
}

inSaleOperation 'Отм.' = DATA LOCAL BOOLEAN (Sale.Operation);
nameInOperations 'Операции' = GROUP CONCAT name(Sale.Operation o) IF inSaleOperation(o), ', ' ORDER name(o), o;

FORM selectOperations 'Выберите операции'
    OBJECTS o = Sale.Operation
    PROPERTIES (o) inSaleOperation, name READONLY
    ORDERS name(o)
;

quantitySold(Stock sk, DATE df, DATE dt) = GROUP SUM quantity[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk  AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
shipmentSum(Stock sk,  DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](shipmentPrice[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF stock(d) = sk  AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sum(Stock sk, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](price[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF stock(d) = sk  AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sumVAT(Stock sk, DATE df, DATE dt) = GROUP SUM VATSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sumNoVAT(Stock sk, DATE df, DATE dt) = GROUP SUM NUMERIC[18,4](invoiceSum[Sale.InvoiceDetail](SaleLedger d) (-) VATSum[Sale.InvoiceDetail](d))
    IF stock(d) = sk AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
discountSum(Stock sk, DATE df, DATE dt) = GROUP SUM discountSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
costSum(Stock sk, DATE df, DATE dt) = GROUP SUM costSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
profitSum(Stock sk, DATE df, DATE dt) =
    GROUP SUM NUMERIC[18,4](sum(sk,df,dt) (-) shipmentSum(sk,df,dt) );

quantity(Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM quantity[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l  AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
shipmentSum(Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](shipmentPrice[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF stock(d) = sk AND customer(d) = l  AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sum(Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](price[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF stock(d) = sk AND customer(d) = l  AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sumVAT(Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM VATSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sumNoVAT(Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[18,4](invoiceSum[Sale.InvoiceDetail](SaleLedger d) (-) VATSum[Sale.InvoiceDetail](d))
    IF stock(d) = sk AND customer(d) = l AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
discountSum(Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM discountSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
costSum(Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM costSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
profitSum(Stock sk, LegalEntity l, DATE df, DATE dt) =
    GROUP SUM NUMERIC[18,4](sum(sk,l,df,dt) (-) shipmentSum(sk,l,df,dt));

quantity(Sku s,Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM quantity[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
shipmentPrice(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP MAX shipmentPrice[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
shipmentSum(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](shipmentPrice[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sum(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](price[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sumVAT(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM VATSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
sumNoVAT(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[18,4](invoiceSum[Sale.InvoiceDetail](SaleLedger d) (-) VATSum[Sale.InvoiceDetail](d))
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
discountSum(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM discountSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
costSum(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM costSum[Sale.InvoiceDetail](SaleLedger d)
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());
profitSum(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = 
    GROUP SUM NUMERIC[18,4](sum(s,sk,l,df,dt) (-) shipmentSum(s,sk,l,df,dt) );
valueVAT(Sku s, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP MAX valueVAT(sku(SaleLedger d))
    IF stock(d) = sk AND customer(d) = l AND sku(d) = s AND date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations());

quantity (NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM quantity[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);
shipmentSum(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](shipmentPrice[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);
sum(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](price[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);
sumVAT(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM VATSum[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);
sumNoVAT(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[18,4](invoiceSum[Sale.InvoiceDetail](SaleLedger d) (-) VATSum[Sale.InvoiceDetail](d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);
discountSum(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM discountSum[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);
costSum(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM costSum[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);
profitSum(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) =
    GROUP SUM NUMERIC[18,4](sum(n,sk,l,df,dt) (-) shipmentSum(n,sk,l,df,dt) );
valueVAT(NUMERIC[10,5] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP MAX valueVAT(sku(SaleLedger d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY valueVAT(sku(d)), stock(d), customer(d);

shortNameUOMIdeal(Sku s) = OVERRIDE shortNameUOM(s), '-';

quantity (STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM quantity[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);
shipmentSum(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](shipmentPrice[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);
sum(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[16,4](price[Sale.InvoiceDetail](SaleLedger d)*quantity(d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);
sumVAT(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM VATSum[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);
sumNoVAT(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM NUMERIC[18,4](invoiceSum[Sale.InvoiceDetail](SaleLedger d) (-) VATSum[Sale.InvoiceDetail](d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);
discountSum(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM discountSum[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);
costSum(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP SUM costSum[Sale.InvoiceDetail](SaleLedger d)
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);
profitSum(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) =
    GROUP SUM NUMERIC[18,4](sum(n,sk,l,df,dt) (-) shipmentSum(n,sk,l,df,dt) );
shortNameUOM(STRING[100] n, Stock sk, LegalEntity l, DATE df, DATE dt) = GROUP MAX shortNameUOMIdeal(sku(SaleLedger d))
    IF date(d) >= df AND date(d) <= dt AND inSessionSku(sku(d)) AND (inSaleOperation(operation(d)) OR NOT nameInOperations()) BY shortNameUOMIdeal(sku(d)), stock(d), customer(d);

FORM skuSaleReport 'Отчет по реализации'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        inSaleReportLegalEntities(), nameInOperations()
    
    OBJECTS st = Stock
    PROPERTIES name(st)
    PROPERTIES(st,df,dt) quantitySold, shipmentSum, sum, sumVAT, sumNoVAT, discountSum, costSum, profitSum
    FILTERS inSaleReportDialog(st), quantitySold(st,df,dt)

    OBJECTS l = LegalEntity
    PROPERTIES name(l)
    PROPERTIES(st,l,df,dt) quantity, shipmentSum, sum, sumVAT, sumNoVAT, discountSum, costSum, profitSum
    FILTERS in(l) OR NOT inSaleReportLegalEntities(),
        quantity(st,l,df,dt)
    
    OBJECTS s = Sku
    PROPERTIES(s) idBarcode, name, shortNameUOMIdeal
    PROPERTIES(s,st,l,df,dt) quantity, shipmentSum, valueVAT, sum, sumVAT, sumNoVAT, discountSum, costSum, profitSum, shipmentPrice
    FILTERS quantity(s,st,l,df,dt), inSessionSku(s)

    OBJECTS n = NUMERIC[10,5]
    PROPERTIES(n,st,l,df,dt) quantity, shipmentSum, valueVAT, sum, sumVAT, sumNoVAT, discountSum, costSum, profitSum
    FILTERS quantity(n,st,l,df,dt)

    OBJECTS uom = STRING[100]
    PROPERTIES(uom,st,l,df,dt) quantity, shipmentSum, shortNameUOM, sum, sumVAT, sumNoVAT, discountSum, costSum, profitSum
    FILTERS quantity(uom,st,l,df,dt)
    
    ORDERS idBarcode(s), name(s), valueVAT(s,st,l,df,dt)
;

printSkuSaleReport 'Отчет по реализации' (DATE df, DATE dt) {
    PRINT skuSaleReport OBJECTS df = df, dt = dt;
} IMAGE 'print.png';

printSkuSaleReportXLS 'Отчет по реализации (XLS)' (DATE df, DATE dt) {
    PRINT skuSaleReport OBJECTS df = df, dt = dt XLSX;
} IMAGE 'apply.png';

EXTEND FORM salesReport
    PROPERTIES inSaleReportLegalEntities() ON CHANGE {DIALOG dialogLegalEntitiesSaleReport; }
    PROPERTIES inSaleReportSupplier() ON CHANGE {DIALOG dialogLegalEntitiesSupplier; }
    PROPERTIES nameInOperations() ON CHANGE {DIALOG selectOperations; }
    
    PROPERTIES(df,dt) printSkuSaleReport, printSkuSaleReportXLS
;

DESIGN salesReport {
    top {
        NEW legalEntity {
            caption = 'Покупатели';
            horizontal = TRUE;
            MOVE PROPERTY(inSaleReportLegalEntities());
        }
        NEW supplier {
            caption = 'Поставщики';
            horizontal = TRUE;
            MOVE PROPERTY(inSaleReportSupplier());
        }
        NEW operation {
            caption = 'Операции';
            horizontal = TRUE;
            MOVE PROPERTY(nameInOperations());
        }
        salesContainer  {
             NEW customsSalesContainer {
                 caption = 'Собственные отчеты';
                 lines = 2;
                 MOVE PROPERTY(printSkuSaleReport(df, dt));
                 MOVE PROPERTY(printSkuSaleReportXLS(df, dt));
            }
        }
    }
}

/////// --------- по классификатору

filterSaleLeger = DATA LOCAL BOOLEAN (SaleLedger);
namePrint = DATA LOCAL STRING ();

quantity(Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM quantity(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
sum(Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
fullSum(Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM sum(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
valProfit(Sku s, Stock st, DATE df, DATE dt) = sum(s,st,df,dt) (-) fullSum(s,st,df,dt);
marga(Sku s, Stock st, DATE df, DATE dt) = valProfit(s,st,df,dt)*100/sum(s,st,df,dt);
netWeight(Sku s, Stock st, DATE df, DATE dt) = quantity(s,st,df,dt) * netWeight(s);
volume(Sku s, Stock st, DATE df, DATE dt) = quantity(s,st,df,dt) * volume(s);
balanceBDepartmentStore(Sku s, DATE dt) = GROUP SUM balanceA(s,Stock st,dt) IF st IS DepartmentStore;
balanceBStock(Sku s, DATE dt) = GROUP SUM balanceA(s, Stock st, dt) IF st IS Warehouse;

balanceSumDepartmentStore(Sku s, DATE dt) = GROUP SUM sumA(s,Stock st,dt) IF st IS DepartmentStore;
balanceSumStock(Sku s, DATE dt) = GROUP SUM sumA(s, Stock st, dt) IF st IS Warehouse;
sumVAT(Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM sumVAT(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
buxCost(Sku s, Stock st, DATE df, DATE dt) =
    GROUP MAX price(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
buxCostSum(Sku s, Stock st, DATE df, DATE dt) =
    GROUP MAX (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumSku 'Учетная сумма ' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
profit(Sku s, Stock st, DATE df, DATE dt) = sum(s,st,df,dt) (-) sumSku(s,st,df,dt);

FORM groupSaleLedgerReport 'Отчет по классификатору'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(), namePrint()

    OBJECTS st = Stock
    PROPERTIES name(st)
    FILTERS inSaleReportDialog(st)

    OBJECTS s = Sku
    PROPERTIES(s) nameSkuGroup4, nameSkuGroup2, nameSkuGroup3, idBarcode,
        name, articleRu, shortNameUOM, netWeight, volume, valueVAT
    FILTERS inSessionSku(s)

    PROPERTIES(s,st,df,dt) quantity, fullSum, sum, valProfit, marga, netWeight,
        volume, sumVAT, buxCost, buxCostSum, profit, sumSku
    PROPERTIES(s,dt) balanceBDepartmentStore, balanceBStock,
        balanceSumDepartmentStore, balanceSumStock
    ORDERS idBarcode(s), name(s)

    FILTERS quantity(s,st,df,dt)

;

printGroupReceiptSaleLedgerReport 'Отчет по классификатору(розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS ReceiptDetail;
    namePrint() <- '(розничные продажи)';
    PRINT groupSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printGroupSaleLedgerReport 'Отчет по классификатору(опт)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS Sale.InvoiceDetail;
    namePrint() <- '(опт)';
    PRINT groupSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printGroupSaleLedgerAllReport 'Отчет по классификатору(опт+розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    namePrint() <- '(розничные продажи + опт)';
    PRINT groupSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

///////// ----- итоги

sumRetailPrice(Stock st, DATE df, DATE dt) =
    GROUP SUM NUMERIC[30,2](price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumSku'Учетная сумма' (Stock st, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND st = stock(l) AND filterSaleLeger(l) AND inSessionSku(sku(l));
profit(Stock st, DATE df, DATE dt) = NUMERIC[30,2](sumRetailPrice(st,df,dt) (-) sumSku(st,df,dt));
rentSku(Stock st, DATE df, DATE dt) = NUMERIC[30,2](profit(st,df,dt)*100/sumRetailPrice(st,df,dt));
markup(Stock st, DATE df, DATE dt) = NUMERIC[30,2](profit(st,df,dt)*100/sumSku(st,df,dt));
balanceBDepartmentStore(Stock st, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceA(Sku s,st,dt)*priceSku(sku(SaleLedger l),stock(l))) IF st IS DepartmentStore AND sku(l) = s;
balanceBStock(Stock st, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceA(Sku s,st,dt)*priceSku(sku(SaleLedger l),stock(l))) IF st IS Warehouse AND sku(l) = s;
turnover(Stock st, DATE df, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceBDepartmentStore(st,dt)*daysBetweenDates(df,dt)/sumSku(st,df,dt));

inReturn 'Вкл. возвраты' = DATA LOCAL BOOLEAN ();

FORM groupItogSaleLedgerReport 'Итоговый отчет по продажам'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt),
        inSaleReportStocks(), namePrint(), inReturn()

    OBJECTS st = Stock
    PROPERTIES(st) name, id
    PROPERTIES(st,df,dt) sumRetailPrice, sumSku,
        profit, rentSku, markup, turnover
    PROPERTIES(st,dt) balanceBDepartmentStore, balanceBStock
    ORDERS name(st)
    
    FILTERS sumRetailPrice(st,df,dt), inSaleReportDialog(st)
    
;

printItogGroupReceiptSaleLedgerReport 'Итоговый отчет по продажам(розница)' (DATE dateFrom, DATE dateTo) {
    IF inReturn() THEN {
        filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS ReceiptDetail;
    }ELSE {
        filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS ReceiptSaleDetail;
    }    
    namePrint() <- '(розничные продажи)';
    PRINT groupItogSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printItogGroupSaleLedgerReport 'Итоговый отчет по продажам(опт)' (DATE dateFrom, DATE dateTo) {
    IF inReturn() THEN {
        filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS Sale.InvoiceDetail OR l IS SaleReturn.InvoiceDetail;
    }ELSE {
        filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS Sale.InvoiceDetail;
    }
    namePrint() <- '(опт)';
    PRINT groupItogSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printItogGroupSaleLedgerAllReport 'Итоговый отчет по продажам(опт+розница)' (DATE dateFrom, DATE dateTo) {
    IF inReturn() THEN {
        filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    }ELSE {
        filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS Sale.InvoiceDetail OR l IS ReceiptSaleDetail;
    }
    namePrint() <- '(розничные продажи + опт)';
    PRINT groupItogSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

/////// ---- суммовые продажи по классификатору

sumSkuRetailPrice(Stock st, DATE df, DATE dt) =
    GROUP SUM NUMERIC[30,2](price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND st = stock(l) 
        AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumInSku 'Учетная сумма' (Stock st, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND st = stock(l) 
        AND filterSaleLeger(l) AND inSessionSku(sku(l));
profitSku(Stock st, DATE df, DATE dt) = 
    NUMERIC[30,2](sumSkuRetailPrice(st,df,dt) (-) sumInSku(st,df,dt));
rentInSku(Stock st, DATE df, DATE dt) = 
    NUMERIC[30,2](profitSku(st,df,dt)*100/sumSkuRetailPrice(st,df,dt));
markupSku(Stock st, DATE df, DATE dt) = 
    NUMERIC[30,2](profitSku(st,df,dt)*100/sumInSku(st,df,dt));
balanceBDepartmentStoreSku(Stock st, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceA(Sku s,st,dt)*priceSku(sku(SaleLedger l),stock(l))) IF st IS DepartmentStore 
        AND sku(l) = s AND inSessionSku(sku(l));
balanceBStockSku(Stock st, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceA(Sku s,st,dt)*priceSku(sku(SaleLedger l),stock(l))) IF st IS Warehouse 
        AND sku(l) = s AND inSessionSku(sku(l));
turnoverSku(Stock st, DATE df, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceBDepartmentStoreSku(st,dt)*daysBetweenDates(df,dt)/sumInSku(st,df,dt));

FORM groupSkuSaleLedgerReport 'Суммовые продажи по классификатору'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt),
        inSaleReportStocks(), namePrint(), printInSessionSku()

    OBJECTS st = Stock
    PROPERTIES(st) name, id
    PROPERTIES(st,df,dt) sumSkuRetailPrice, sumInSku,
        profitSku, rentInSku, markupSku, turnoverSku
    PROPERTIES(st,dt) balanceBDepartmentStoreSku, balanceBStockSku
    ORDERS name(st)
    
    FILTERS sumSkuRetailPrice(st,df,dt), inSaleReportDialog(st)
;

printSkutSaleLedgerReport 'Суммовые продажи по классификатору(розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS ReceiptDetail;
    namePrint() <- '(розничные продажи)';
    PRINT groupSkuSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printSkuGroupSaleLedgerReport 'Суммовые продажи по классификатору(опт)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS Sale.InvoiceDetail;
    namePrint() <- '(опт)';
    PRINT groupSkuSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printSkuGroupSaleLedgerAllReport 'Суммовые продажи по классификатору(опт+розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    namePrint() <- '(розничные продажи + опт)';
    PRINT groupSkuSaleLedgerReport OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

EXTEND FORM salesReport
    PROPERTIES() inReturn 
    PROPERTIES (df,dt) printGroupReceiptSaleLedgerReport, printGroupSaleLedgerReport, printGroupSaleLedgerAllReport,
        printItogGroupReceiptSaleLedgerReport, printItogGroupSaleLedgerReport, printItogGroupSaleLedgerAllReport,
        printSkutSaleLedgerReport, printSkuGroupSaleLedgerReport, printSkuGroupSaleLedgerAllReport
;

DESIGN salesReport {
    salesContainer  {
        NEW customsSalesReportContainer {
            caption = 'Собственные отчеты';
            lines = 3;
            MOVE PROPERTY(printGroupReceiptSaleLedgerReport(df, dt));
            MOVE PROPERTY(printGroupSaleLedgerReport(df, dt));
            MOVE PROPERTY(printGroupSaleLedgerAllReport(df, dt));
        }
        NEW skuSalesReportItogContainer {
            caption = 'Суммовые продажи';
            lines = 3;
            MOVE PROPERTY(printSkutSaleLedgerReport(df, dt));
            MOVE PROPERTY(printSkuGroupSaleLedgerReport(df, dt));
            MOVE PROPERTY(printSkuGroupSaleLedgerAllReport(df, dt));           
        }
        NEW customsSalesReportItogContainer {
            caption = 'Итоговые отчеты';
            MOVE PROPERTY(inReturn());
            NEW printItog {
                lines = 3;
                MOVE PROPERTY(printItogGroupReceiptSaleLedgerReport(df, dt));
                MOVE PROPERTY(printItogGroupSaleLedgerReport(df, dt));
                MOVE PROPERTY(printItogGroupSaleLedgerAllReport(df, dt));
            }
        }
    }
}

//// ------ розничные продажи и остатки

datePriceSupplier 'Дата цены и остатков' = DATA DATE ();

idSupplierLastOrderBatch 'Поставщик' (Sku sk, Stock st) = id(supplierLastOrderBatch(sk, st));
dateSupplierLastOrderBatch 'Дата последнего прихода' (Sku sk, Stock st) = DATE(dateTime(lastOrderBatch(sk, st)));
pricePurchase 'Цена поставщика' (Sku sku, Stock st) =
    NUMERIC[15,2](priceA(SystemLedgerPriceListType.supplierPricingPriceListType, sku, st, currentDateTime()));

quantitySupplier(Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM quantity(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND s = sku(l) AND st = stock(l) 
        AND filterSaleLeger(l) AND inSessionSku(sku(l)) AND (inSupplier(supplierSku(sku(l))) OR NOT inSaleReportSupplier());
fullSumSupplier(Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l)
        AND filterSaleLeger(l) AND inSessionSku(sku(l)) AND (inSupplier(supplierSku(sku(l))) OR NOT inSaleReportSupplier());
sumSupplier 'Учетная сумма ' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND sku(l) = s AND st = stock(l)
        AND filterSaleLeger(l) AND inSessionSku(sku(l)) AND (inSupplier(supplierSku(sku(l))) OR NOT inSaleReportSupplier());
valProfitSupplier(Sku s, Stock st, DATE df, DATE dt) = 
    sumSupplier(s,st,df,dt) (-) fullSumSupplier(s,st,df,dt);
margaSupplier(Sku s, Stock st, DATE df, DATE dt) = 
    valProfitSupplier(s,st,df,dt)*100/sumSupplier(s,st,df,dt);

quantitySupplier(Sku s, DATE df, DATE dt) =
    GROUP SUM quantity(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND s = sku(l)
        AND filterSaleLeger(l) AND inSessionSku(sku(l)) AND (inSupplier(supplierSku(sku(l))) OR NOT inSaleReportSupplier());
fullSumSupplier(Sku s, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND sku(l) = s
        AND filterSaleLeger(l) AND inSessionSku(sku(l)) AND (inSupplier(supplierSku(sku(l))) OR NOT inSaleReportSupplier());
sumSupplier 'Учетная сумма ' (Sku s, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND sku(l) = s
        AND filterSaleLeger(l) AND inSessionSku(sku(l)) AND (inSupplier(supplierSku(sku(l))) OR NOT inSaleReportSupplier());
valProfitSupplier(Sku s, DATE df, DATE dt) =
    sumSupplier(s,df,dt) (-) fullSumSupplier(s,df,dt);
margaSupplier(Sku s,DATE df, DATE dt) =
    valProfitSupplier(s,df,dt)*100/sumSupplier(s,df,dt);

lastInvoice 'Дата последней продажи' = GROUP LAST SaleLedger ledger
    ORDER date(ledger), ledger
    WHERE date(ledger) <= DATE date AND filterSaleLeger(ledger)
    BY sku(ledger), stock(ledger), date;

lastPurchase 'Дата последнего прихода' = GROUP LAST PurchaseLedger ledger
ORDER date(ledger), ledger
WHERE date(ledger) <= DATE date 
BY sku(ledger), stock(ledger), date;

FORM saleLedgerReportSupplier 'Продажи и остатки'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(), 
        namePrint(), datePriceSupplier()

    OBJECTS st = Stock
    PROPERTIES name(st)
    FILTERS inSaleReportDialog(st)

    OBJECTS s = Sku
    PROPERTIES(s) idSkuGroup2, nameSkuGroup2, idSkuGroup3, nameSkuGroup3, idSkuGroup4, nameSkuGroup4, idSupplierSku, nameSupplierSku, idBarcode,
        name, articleRu, shortNameUOM, valueVAT, Sale.amountPack
    //PROPERTIES(s,df,dt) quantitySupplier, fullSumSupplier, sumSupplier, valProfitSupplier, margaSupplier
    PROPERTIES(s,st) idSupplierLastOrderBatch, nameSupplierLastOrderBatch, pricePurchase, dateSupplierLastOrderBatch
    PROPERTIES lastDateInvoice = date(lastInvoice(s,st,dt))
    PROPERTIES balanceB = balanceB(s,st,datePriceSupplier()) 
    PROPERTIES(s,st,df,dt) quantitySupplier, fullSumSupplier, sumSupplier, valProfitSupplier, margaSupplier
    ORDERS idBarcode(s), name(s)

    FILTERS inSessionSku(s), quantitySupplier(s,st,df,dt)
;

printSkuGroupSaleLedgerSupplier 'Розничные продажи и остатки(розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS ReceiptSaleDetail;
    namePrint() <- '(опт)';
    PRINT saleLedgerReportSupplier OBJECTS df = dateFrom, dt= dateTo XLSX;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printSkuGroupSaleLedgerAllSupplier 'Розничные продажи и остатки(опт+розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    namePrint() <- '(розничные продажи + опт)';
    PRINT saleLedgerReportSupplier OBJECTS df = dateFrom, dt= dateTo XLSX;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

quantitySupplierSku(Stock st, LegalEntity le, DATE df, DATE dt) =
    GROUP SUM quantity(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND supplierSku(sku(l)) = le AND st = stock(l)
        AND filterSaleLeger(l) AND inSessionSku(sku(l));
fullSumSupplierSku(Stock st, LegalEntity le, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND supplierSku(sku(l)) = le AND st = stock(l)
        AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumSupplierSku 'Учетная сумма ' (Stock st, LegalEntity le, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND supplierSku(sku(l)) = le AND st = stock(l)
        AND filterSaleLeger(l) AND inSessionSku(sku(l));
valProfitSupplier(Stock st, LegalEntity le, DATE df, DATE dt) =
    sumSupplierSku(st,le,df,dt) (-) fullSumSupplierSku(st,le,df,dt);
margaSupplier(Stock st, LegalEntity le, DATE df, DATE dt) =
    valProfitSupplier(st,le,df,dt)*100/sumSupplierSku(st,le,df,dt);
sumBalanceB(Stock st, LegalEntity le) = 
    GROUP SUM (balanceB(Sku s, st, datePriceSupplier())*priceSku(s,st)) IF inSessionSku(s) AND supplierSku(s) = le;
margaBalanceB(Stock st, LegalEntity le, DATE df, DATE dt) =
    valProfitSupplier(st,le,df,dt)*100/sumBalanceB(st,le);
turnoverDays 'Количество дней запаса' (Stock st, LegalEntity le, DATE df, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceB(Sku s, st, datePriceSupplier())*quantitySupplierSku(st,le,df,dt)/(daysBetweenDates(df,dt) + 1));

FORM saleLedgerReportSupplierSku 'Продажи и остатки по поставщику'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        datePriceSupplier()
       
    OBJECTS st = Stock

    OBJECTS l = LegalEntity
    PROPERTIES(l) id, name
    FILTERS GROUP SUM 1 IF supplierSku(Sku s) = l
    
    PROPERTIES sumSupplierSku(st,l,df,dt) COLUMNS 'st' (st) HEADER 'Сумма продаж по учетной цене',
               fullSumSupplierSku(st,l,df,dt) COLUMNS 'st' (st) HEADER 'Сумма продаж по отпускной цене',
               valProfitSupplier(st,l,df,dt) COLUMNS 'st' (st) HEADER 'Валовый доход',
               margaSupplier(st,l,df,dt) COLUMNS 'st' (st) HEADER 'Маржа,%',
               sumBalanceB(st,l) COLUMNS 'st' (st) HEADER 'Сумма остатка в учетных ценах',
               turnoverDays(st,l,df,dt) COLUMNS 'st' (st) HEADER 'Количество дней запаса',
               margaBalanceB(st,l,df,dt) COLUMNS 'st' (st) HEADER 'Маржа,% остатка'
    PROPERTIES sk = sumSupplierSku(st,l,df,dt) COLUMNS 'st' (st) HEADER (name(st))
    FILTERS inSaleReportDialog(st)
;

printSkuGroupSaleLedgerSupplierSku 'Розничные продажи и остатки по пост.' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    PRINT saleLedgerReportSupplierSku OBJECTS df = dateFrom, dt= dateTo XLSX;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

turnoverDays 'Оборачиваемость' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM NUMERIC[30,2](balanceB(s, st, datePriceSupplier())*quantity(s,st,df,dt)/(daysBetweenDates(df,dt) + 1));
quantityPurchse 'Кол-во заказа' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM quantity(Purchase.OrderDetail d) IF date(d) >= df AND date(d) <= dt AND sku(d) = s AND customerStock(d) = st;

FORM saleLedgerReportTurnover 'Продажи и остатки(оборачиваемость)'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        datePriceSupplier()

    OBJECTS st = Stock
    PROPERTIES name(st)
    FILTERS inSaleReportDialog(st)

    OBJECTS s = Sku
    PROPERTIES(s) idSkuGroup2, nameSkuGroup2, idSkuGroup3, nameSkuGroup3, idSkuGroup4, nameSkuGroup4, id, name, articleRu, idBarcode

    PROPERTIES balanceB = balanceB(s,st,datePriceSupplier()) COLUMNS 'st' (st) HEADER 'Остаток',
               quantity(s,st,df,dt) COLUMNS 'st' (st) HEADER 'Количество продаж',
               priceSku(s,st) COLUMNS 'st' (st) HEADER 'Учетная цена',
               price = priceSku(s,st) COLUMNS 'st' (st) HEADER 'Отп.цена на дату расчета остатков',
               turnoverDays(s,st,df,dt) COLUMNS 'st' (st) HEADER 'Оборачиваемость(дни)',
               quantityPurchse(s,st,df,dt) COLUMNS 'st' (st) HEADER 'Количество заказа',
               number = number(lastPurchase(s,st,dt)) COLUMNS 'st' (st) HEADER 'Номер заказа',
               lastDatePurchse = date(lastPurchase(s,st,dt)) COLUMNS 'st' (st) HEADER 'Дата последнего прихода',
               lastDateInvoice = date(lastInvoice(s,st,dt)) COLUMNS 'st' (st) HEADER 'Дата последней продажи'
    PROPERTIES sk = priceSku(s,st) COLUMNS 'st' (st) HEADER (name(st))
    ORDERS idBarcode(s), name(s)

    FILTERS inSessionSku(s), quantity(s,st,df,dt)
;

printSkuGroupSaleLedgerTurnover 'Розничные продажи и остатки(оборач.)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    PRINT saleLedgerReportTurnover OBJECTS df = dateFrom, dt= dateTo XLSX;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

EXTEND FORM salesReport
    PROPERTIES datePriceSupplier()
    PROPERTIES (df,dt) printSkuGroupSaleLedgerSupplier, printSkuGroupSaleLedgerAllSupplier,
        printSkuGroupSaleLedgerSupplierSku, printSkuGroupSaleLedgerTurnover
;

DESIGN salesReport {
    salesContainer {
        NEW supplierSalesReportContainer {
            MOVE PROPERTY(datePriceSupplier());
            caption = 'Продажи и остатки';
            NEW printSupplier {
                lines = 2;
                MOVE PROPERTY(printSkuGroupSaleLedgerSupplier(df, dt));
                MOVE PROPERTY(printSkuGroupSaleLedgerAllSupplier(df, dt));
                MOVE PROPERTY(printSkuGroupSaleLedgerSupplierSku(df, dt));
                MOVE PROPERTY(printSkuGroupSaleLedgerTurnover(df, dt));
            }
        }
    }
}

/////// ----- сравнение по периодам

fullSumSupplierCompare 'Отпускная сумма' (Group g, Stock st, LegalEntity le, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND supplierSku(sku(l)) = le AND st = stock(l)
        AND skuGroup2(sku(l)) = g AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumSupplierCompare 'Учетная сумма ' (Group g, Stock st, LegalEntity le, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND supplierSku(sku(l)) = le AND st = stock(l)
        AND skuGroup2(sku(l)) = g AND filterSaleLeger(l) AND inSessionSku(sku(l));
valProfitCompare 'Валовый доход' (Group g, Stock st, LegalEntity le, DATE df, DATE dt) =
    sumSupplierCompare(g,st,le,df,dt) (-) fullSumSupplierCompare(g,st,le,df,dt);
margaSupplierCompare 'Маржа,%' (Group g, Stock st, LegalEntity le, DATE df, DATE dt) =
    valProfitCompare(g,st,le,df,dt)*100/sumSupplierCompare(g,st,le,df,dt);
sumBalanceACompareDS(Group g, Stock st, LegalEntity le, DATE dt) =
    GROUP SUM (balanceA(Sku s, st, dt)*priceSku(s,st)) IF inSessionSku(s)
        AND skuGroup2(s) = g AND supplierSku(s) = le AND st IS DepartmentStore;
sumBalanceACompareW(Group g, Stock st, LegalEntity le, DATE dt) =
    GROUP SUM (balanceA(Sku s, st, dt)*priceSku(s,st)) IF inSessionSku(s)
        AND skuGroup2(s) = g AND supplierSku(s) = le AND st IS Warehouse;

FORM saleReportSupplierCompare 'Свод поставщики'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        datePriceSupplier(), compare()

    OBJECTS datesCompare = (dfc = DATE, dtc = DATE) PANEL
    PROPERTIES dfc 'Дата с' = VALUE(dfc), dtc 'Дата по' = VALUE(dtc)

    OBJECTS st = Stock
    PROPERTIES id(st), name(st)
    
    TREE skuTree sk = Group PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk), id(sk), nameGroup3(sk), nameGroup4(sk)
    ORDERS order(sk), skuTreeName

    OBJECTS l = LegalEntity
    PROPERTIES(l) id, name
    FILTERS GROUP SUM 1 IF supplierSku(Sku s) = l
    
    PROPERTIES(sk,st,l,df,dt) fullSumSupplierCompare, sumSupplierCompare, valProfitCompare, margaSupplierCompare
    PROPERTIES(sk,st,l,dfc,dtc) fullSumSupplierCompare, sumSupplierCompare, valProfitCompare, margaSupplierCompare
    PROPERTIES (sk,st,l,dtc) sumBalanceACompareDS, sumBalanceACompareW
    FILTERS inSaleReportDialog(st), (GROUP SUM 1 IF fullSumSupplierCompare(sk,st,l,df,dt) OR fullSumSupplierCompare(sk,st,l,dfc,dtc))
;

printSaleReportSupplierCompare 'Свод поставщики' (DATE dateFrom, DATE dateTo, DATE dateFromC, DATE dateToC) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    PRINT saleReportSupplierCompare OBJECTS df = dateFrom, dt= dateTo, dfc = dateFromC, dtc = dateToC XLSX;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

fullSumGroupCompare 'Отпускная сумма' (Group g, Stock st, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND st = stock(l)
        AND skuGroup2(sku(l)) = g AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumGroupCompare 'Учетная сумма ' (Group g, Stock st, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND st = stock(l)
        AND skuGroup2(sku(l)) = g AND filterSaleLeger(l) AND inSessionSku(sku(l));
valProfitGroupCompare 'Валовый доход' (Group g, Stock st, DATE df, DATE dt) =
    sumGroupCompare(g,st,df,dt) (-) fullSumGroupCompare(g,st,df,dt);
margaGroupCompare 'Маржа,%' (Group g, Stock st, DATE df, DATE dt) =
    valProfitGroupCompare(g,st,df,dt)*100/sumGroupCompare(g,st,df,dt);

FORM saleReportSkuGroupCompare 'Свод классификатор'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        datePriceSupplier(), compare()

    OBJECTS datesCompare = (dfc = DATE, dtc = DATE) PANEL
    PROPERTIES dfc 'Дата с' = VALUE(dfc), dtc 'Дата по' = VALUE(dtc)

    OBJECTS st = Stock
    PROPERTIES id(st), name(st)

    TREE skuTree sk = Group PARENT parent(sk)
    PROPERTIES READONLY order(sk), skuTreeName = name(sk), id(sk), nameGroup3(sk), nameGroup4(sk)
    ORDERS order(sk), skuTreeName

    PROPERTIES(sk,st,df,dt) fullSumGroupCompare, sumGroupCompare, valProfitGroupCompare, margaGroupCompare
    PROPERTIES(sk,st,dfc,dtc) fullSumGroupCompare, sumGroupCompare, valProfitGroupCompare, margaGroupCompare
    FILTERS inSaleReportDialog(st), (GROUP SUM 1 IF fullSumGroupCompare(sk,st,df,dt) OR fullSumGroupCompare(sk,st,dfc,dtc))
;

printSaleReportGroupCompare 'Свод классификатор' (DATE dateFrom, DATE dateTo, DATE dateFromC, DATE dateToC) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    PRINT saleReportSkuGroupCompare OBJECTS df = dateFrom, dt= dateTo, dfc = dateFromC, dtc = dateToC XLSX ;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

quantitySkuCompare 'Количество' (Sku s, DATE df, DATE dt) =
    GROUP SUM quantity(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND inSaleReportDialog(stock(l))
        AND sku(l) = s AND filterSaleLeger(l) AND inSessionSku(sku(l));
fullSumSkuCompare 'Отпускная сумма' (Sku s, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND inSaleReportDialog(stock(l))
        AND sku(l) = s AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumSkuCompare 'Учетная сумма ' (Sku s, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt AND inSaleReportDialog(stock(l))
        AND sku(l) = s AND filterSaleLeger(l) AND inSessionSku(sku(l));
valProfitSkuCompare 'Валовый доход' (Sku s, DATE df, DATE dt) =
    sumSkuCompare(s,df,dt) (-) fullSumSkuCompare(s,df,dt);
margaSkuCompare 'Маржа,%' (Sku s, DATE df, DATE dt) =
    valProfitSkuCompare(s,df,dt)*100/sumSkuCompare(s,df,dt);
sumBalanceACompare(Sku s, DATE dt) =
    GROUP SUM (balanceA(s,Stock st, dt)*priceSku(s,st)) IF inSessionSku(s) AND inSaleReportDialog(st);


differenceQuantity(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    NUMERIC[16,2]((quantitySkuCompare(s,df,dt) (-) quantitySkuCompare(s,dfc,dtc))/quantitySkuCompare(s,df,dt)*100);
inCreaseQuantity(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) = 
    IF quantitySkuCompare(s,df,dt) > quantitySkuCompare(s,dfc,dtc) THEN '-'
        ELSE '+';
differenceFullSum(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    NUMERIC[16,2]((fullSumSkuCompare(s,df,dt) (-) fullSumSkuCompare(s,dfc,dtc))/fullSumSkuCompare(s,df,dt)*100);
inCreaseFullSum(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF fullSumSkuCompare(s,df,dt) > fullSumSkuCompare(s,dfc,dtc) THEN '-'
        ELSE '+';
differenceSum(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    NUMERIC[16,2]((sumSkuCompare(s,df,dt) (-) sumSkuCompare(s,dfc,dtc))/sumSkuCompare(s,df,dt)*100);
inCreasesSum(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF sumSkuCompare(s,df,dt) > sumSkuCompare(s,dfc,dtc) THEN '-'
        ELSE '+';
differenceValProfit(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    valProfitSkuCompare(s,df,dt) (-) valProfitSkuCompare(s,dfc,dtc);
inCreasesVal(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF valProfitSkuCompare(s,df,dt) > valProfitSkuCompare(s,dfc,dtc) THEN '-'
        ELSE '+';
differenceMarga(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    margaSkuCompare(s,df,dt) (-) margaSkuCompare(s,dfc,dtc);
inCreasesMarga(Sku s, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF margaSkuCompare(s,df,dt) > margaSkuCompare(s,dfc,dtc) THEN '-'
        ELSE '+';
differenceSumBalance(Sku s, DATE dt, DATE dtc) =
    NUMERIC[16,2]((sumBalanceACompare(s,dt) (-) sumBalanceACompare(s,dtc))/sumBalanceACompare(s,dt)*100);
inCreasesSumBalance(Sku s, DATE dt, DATE dtc) =
    IF sumBalanceACompare(s,dt) > sumBalanceACompare(s,dtc) THEN '-'
        ELSE '+';

FORM saleReportSkuCompare 'Свод оборотов'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        datePriceSupplier(), compare()

    OBJECTS datesCompare = (dfc = DATE, dtc = DATE) PANEL
    PROPERTIES dfc 'Дата с' = VALUE(dfc), dtc 'Дата по' = VALUE(dtc)
    
    OBJECTS sk = Sku
    PROPERTIES (sk) nameSkuGroup1, nameSkuGroup2, nameSkuGroup3, nameSkuGroup4, id, name
    ORDERS name(sk)

    PROPERTIES(sk,df,dt) quantitySkuCompare,fullSumSkuCompare, sumSkuCompare, valProfitSkuCompare, margaSkuCompare
    PROPERTIES(sk,dfc,dtc) quantitySkuCompare, fullSumSkuCompare, sumSkuCompare, valProfitSkuCompare, margaSkuCompare
    PROPERTIES(sk,df,dt,dfc,dtc) differenceQuantity, inCreaseQuantity, differenceFullSum, inCreaseFullSum,
        differenceSum, inCreasesSum, differenceValProfit, inCreasesVal, differenceMarga, inCreasesMarga
    PROPERTIES(sk,dt) sumBalanceACompare
    PROPERTIES(sk,dtc) sumBalanceACompare
    PROPERTIES (sk,dt,dtc) differenceSumBalance, inCreasesSumBalance
    FILTERS (GROUP SUM 1 IF quantitySkuCompare(sk,df,dt) OR quantitySkuCompare(sk,dfc,dtc))
;

printSaleReportSkuCompare 'Свод оборотов' (DATE dateFrom, DATE dateTo, DATE dateFromC, DATE dateToC) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    PRINT saleReportSkuCompare OBJECTS df = dateFrom, dt= dateTo, dfc = dateFromC, dtc = dateToC XLSX ;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

quantitySkuCompare 'Количество' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM quantity(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND stock(l) = st
        AND sku(l) = s AND filterSaleLeger(l) AND inSessionSku(sku(l));
fullSumSkuCompare 'Отпускная сумма' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (price(SaleLedger l)*quantity(l)) IF date(l) >= df AND date(l) <= dt AND stock(l) = st
        AND sku(l) = s AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumSkuCompare 'Учетная сумма ' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (priceSku(sku(SaleLedger l),stock(l))*quantity(l)) IF date(l) >= df AND date(l) <= dt
        AND stock(l) = st AND sku(l) = s AND filterSaleLeger(l) AND inSessionSku(sku(l));
valProfitSkuCompare 'Валовый доход' (Sku s, Stock st, DATE df, DATE dt) =
    sumSkuCompare(s,st,df,dt) (-) fullSumSkuCompare(s,st,df,dt);
margaSkuCompare 'Маржа,%' (Sku s, Stock st, DATE df, DATE dt) =
    valProfitSkuCompare(s,st,df,dt)*100/sumSkuCompare(s,st,df,dt);
sumBalanceACompare(Sku s, Stock st, DATE dt) =
    GROUP SUM (balanceA(s,st, dt)*priceSku(s,st)) IF inSessionSku(s);


differenceQuantity(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    NUMERIC[16,2]((quantitySkuCompare(s,st,df,dt) (-) quantitySkuCompare(s,st,dfc,dtc))/quantitySkuCompare(s,st,df,dt)*100);
inCreaseQuantity(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF quantitySkuCompare(s,st,df,dt) > quantitySkuCompare(s,st,dfc,dtc) THEN '-'
    ELSE '+';
differenceFullSum(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    NUMERIC[16,2]((fullSumSkuCompare(s,st,df,dt) (-) fullSumSkuCompare(s,st,dfc,dtc))/fullSumSkuCompare(s,st,df,dt)*100);
inCreaseFullSum(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF fullSumSkuCompare(s,st,df,dt) > fullSumSkuCompare(s,st,dfc,dtc) THEN '-'
    ELSE '+';
differenceSum(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    NUMERIC[16,2]((sumSkuCompare(s,st,df,dt) (-) sumSkuCompare(s,st,dfc,dtc))/sumSkuCompare(s,st,df,dt)*100);
inCreasesSum(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF sumSkuCompare(s,st,df,dt) > sumSkuCompare(s,st,dfc,dtc) THEN '-'
    ELSE '+';
differenceValProfit(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    valProfitSkuCompare(s,st,df,dt) (-) valProfitSkuCompare(s,st,dfc,dtc);
inCreasesVal(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF valProfitSkuCompare(s,st,df,dt) > valProfitSkuCompare(s,st,dfc,dtc) THEN '-'
    ELSE '+';
differenceMarga(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    margaSkuCompare(s,st,df,dt) (-) margaSkuCompare(s,st,dfc,dtc);
inCreasesMarga(Sku s, Stock st, DATE df, DATE dt, DATE dfc, DATE dtc) =
    IF margaSkuCompare(s,st,df,dt) > margaSkuCompare(s,st,dfc,dtc) THEN '-'
    ELSE '+';
differenceSumBalance(Sku s, Stock st, DATE dt, DATE dtc) =
    NUMERIC[16,2]((sumBalanceACompare(s,st,dt) (-) sumBalanceACompare(s,st,dtc))/sumBalanceACompare(s,st,dt)*100);
inCreasesSumBalance(Sku s, Stock st, DATE dt, DATE dtc) =
    IF sumBalanceACompare(s,st,dt) > sumBalanceACompare(s,st,dtc) THEN '-'
    ELSE '+';

FORM saleReportSkuStockCompare 'Свод оборотов(подробный)'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        datePriceSupplier(), compare()

    OBJECTS datesCompare = (dfc = DATE, dtc = DATE) PANEL
    PROPERTIES dfc 'Дата с' = VALUE(dfc), dtc 'Дата по' = VALUE(dtc)
    
    OBJECTS st = Stock
    PROPERTIES(st) id, name
    FILTERS inSaleReportDialog(st)

    OBJECTS sk = Sku
    PROPERTIES (sk) nameSkuGroup1, nameSkuGroup2, nameSkuGroup3, nameSkuGroup4, id, name
    ORDERS name(sk)
    
    PROPERTIES(sk,st,df,dt) quantitySkuCompare,fullSumSkuCompare, sumSkuCompare, valProfitSkuCompare, margaSkuCompare
    PROPERTIES(sk,st,dfc,dtc) quantitySkuCompare, fullSumSkuCompare, sumSkuCompare, valProfitSkuCompare, margaSkuCompare
    PROPERTIES(sk,st,df,dt,dfc,dtc) differenceQuantity, inCreaseQuantity, differenceFullSum, inCreaseFullSum,
        differenceSum, inCreasesSum, differenceValProfit, inCreasesVal, differenceMarga, inCreasesMarga
    PROPERTIES(sk,st,dt) sumBalanceACompare
    PROPERTIES(sk,st,dtc) sumBalanceACompare
    PROPERTIES (sk,st,dt,dtc) differenceSumBalance, inCreasesSumBalance
    FILTERS (GROUP SUM 1 IF quantitySkuCompare(sk,st,df,dt) OR quantitySkuCompare(sk,st,dfc,dtc))
;

printSaleReportSkuStockCompare 'Свод оборотов(подробный)' (DATE dateFrom, DATE dateTo, DATE dateFromC, DATE dateToC) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    PRINT saleReportSkuStockCompare OBJECTS df = dateFrom, dt= dateTo, dfc = dateFromC, dtc = dateToC XLSX ;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

EXTEND FORM salesReport
    PROPERTIES(df,dt,dfc,dtc) printSaleReportSupplierCompare, printSaleReportGroupCompare, 
        printSaleReportSkuCompare, printSaleReportSkuStockCompare
;

quantityWriteOff 'Списания кол-во' (Sku s, Stock st, DATE df, DATE dt) = 
    GROUP SUM quantity(WriteOffDetail d) IF date(d) >= df AND date(d) <= dt AND sku(d) = s AND stock(d) = st 
        AND inSessionSku(s);
sumWriteOff 'Списания сумма по учетной цене' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (quantity(WriteOffDetail d)*priceSku(sku(d),stock(d))) IF date(d) >= df AND date(d) <= dt
        AND sku(d) = s AND stock(d) = st AND inSessionSku(s);
quantityReturn 'Возвраты поставщику кол-во' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM quantity(SaleReturn.InvoiceDetail d) IF date(d) >= df AND date(d) <= dt AND inSessionSku(s)
        AND sku(d) = s AND customerStock(d) = st;
sumReturn 'Возвраты поставщику по учетной цене' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (quantity(SaleReturn.InvoiceDetail d)*priceSku(sku(d),customerStock(d))) IF date(d) >= df AND date(d) <= dt
        AND sku(d) = s AND customerStock(d) = st AND inSessionSku(s);
quantitySale 'Количество' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM quantity(SaleLedger l) IF date(l) >= df AND date(l) <= dt AND stock(l) = st
        AND sku(l) = s AND filterSaleLeger(l) AND inSessionSku(sku(l));
sumSale 'Выручка' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (quantity(SaleLedger d)*priceSku(sku(d),stock(d))) IF date(d) >= df AND date(d) <= dt
        AND inSessionSku(s) AND filterSaleLeger(d) AND sku(d) = s AND stock(d) = st;
sumOptSale 'Выручка' (Sku s, Stock st, DATE df, DATE dt) =
    GROUP SUM (quantity(SaleLedger d)*price(d)) IF date(d) >= df AND date(d) <= dt
        AND inSessionSku(s) AND filterSaleLeger(d) AND sku(d) = s AND stock(d) = st;
marginProfit 'Маржинальная прибыль' (Sku s, Stock st, DATE df, DATE dt) = 
    sumOptSale(s,st,df,dt) - sumSale(s,st,df,dt);
marginProfitWriteOff 'Маржинальная прибыль за минусом списаний и возвратов' (Sku s, Stock st, DATE df, DATE dt) =
    marginProfit(s,st,df,dt) - sumWriteOff(s,st,df,dt) - sumReturn(s,st,df,dt);
valueWriteOff '% списаний/возвратов от поставки' (Sku s, Stock st, DATE df, DATE dt) =
    (quantityWriteOff(s,st,df,dt) + quantityReturn(s,st,df,dt))
        /(quantityWriteOff(s,st,df,dt) + quantityReturn(s,st,df,dt) + quantitySale(s,st,df,dt))*100;

FORM saleReportSkuStockWriteOff 'Продажи и списания-возвраты '
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks()

    OBJECTS st = Stock
    PROPERTIES(st) id, name
    FILTERS inSaleReportDialog(st)

    OBJECTS sk = Sku
    PROPERTIES (sk) id, name, articleRu, nameSupplierSku, shortNameUOM
    ORDERS name(sk)

    PROPERTIES(sk,st,df,dt) quantityWriteOff, sumWriteOff, quantityReturn, sumReturn, quantitySale,
        sumSale, sumOptSale, marginProfit, marginProfitWriteOff, valueWriteOff
    FILTERS quantitySale(sk,st,df,dt)
;

printSaleReportSkuStockWriteOff 'Анализ продаж и списаний-возвратов' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS ReceiptDetail;
    PRINT saleReportSkuStockWriteOff OBJECTS df = dateFrom, dt = dateTo XLSX;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

EXTEND FORM salesReport
    PROPERTIES(df,dt) printSaleReportSkuStockWriteOff
;

DESIGN salesReport {
    salesContainer {
        NEW supplierSalesReportCompare {
            caption = 'Сравнение периодов';
            lines = 2;
            MOVE PROPERTY(printSaleReportSupplierCompare(df,dt,dfc,dtc));
            MOVE PROPERTY(printSaleReportGroupCompare(df,dt,dfc,dtc));
            MOVE PROPERTY(printSaleReportSkuCompare(df,dt,dfc,dtc));
            MOVE PROPERTY(printSaleReportSkuStockCompare(df,dt,dfc,dtc));
        }
        
        NEW saleWriteOff {
            caption = 'Анализ продаж и списаний -возвратов';
            lines = 2;
            MOVE PROPERTY(printSaleReportSkuStockWriteOff(df,dt));
        }
    }
}

quantitySkuSold 'Продано за неделю (кол-во)' (Stock st, INTEGER week, DATE dateFrom, DATE dateTo) = GROUP SUM
    quantity(SaleLedger l) IF date(l) >= dateFrom AND date(l) <= dateTo AND stock(l) = st AND filterSaleLeger(l)
        BY extractWeek(date(l));
sumSold 'Продано за неделю (сумма)' (Stock st, INTEGER week, DATE dateFrom, DATE dateTo) = GROUP SUM
    sum(SaleLedger l) IF date(l) >= dateFrom AND date(l) <= dateTo AND stock(l) = st AND filterSaleLeger(l)
        BY extractWeek(date(l));
sumSoldPrice 'Продано за неделю (сумма)' (Stock st, INTEGER week, DATE dateFrom, DATE dateTo) = GROUP SUM
    round2(quantity(SaleLedger l)*priceSku(sku(l),st)) IF date(l) >= dateFrom AND date(l) <= dateTo AND stock(l) = st AND filterSaleLeger(l)
        BY extractWeek(date(l));
valProfit 'Валовый доход' (Stock st, INTEGER w, DATE df, DATE dt) =
    sumSoldPrice(st,w,df,dt) (-) sumSold(st,w,df,dt);
marga 'Маржа,%' (Stock st, INTEGER w, DATE df, DATE dt) =
    valProfit(st,w,df,dt)*100/sumSoldPrice(st,w,df,dt);
countWeek 'Кол-во недель' (DATE df, DATE dt) = INTEGER(daysInclBetweenDates(df,dt) / 7);

year = DATA LOCAL INTEGER();

// при переходе на 6.1 нужно удалить
dateFromYearWeekDay = FORMULA DATE r!'to_date($1 || ' ' || $2 || ' $3', 'IYYY IW ID')'!;

FORM saleReportWeek 'Продажи по неделям'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES df 'Дата с' = VALUE(df), dt 'Дата по' = VALUE(dt), inSaleReportStocks(),
        namePrint(), year()
    
    PROPERTIES countWeek(df,dt)
    OBJECTS st = Stock
    PROPERTIES(st) id, name
    FILTERS inSaleReportDialog(st)

    OBJECTS w = INTEGER GRID
    PROPERTIES toString4(w)
    PROPERTIES getWeekStart = dateFromYearWeekDay(year(), w, 1)
    PROPERTIES getWeekEnd = dateFromYearWeekDay(year(), w, 7)
    FILTERS quantitySkuSold(st,w,df,dt)
    PROPERTIES(st,w,df,dt) quantitySkuSold, sumSold, sumSoldPrice, valProfit, marga
;

printSaleReportReceiptWeek 'Динамика продаж по неделям(розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS ReceiptDetail;
    namePrint() <- '(розничные продажи)';
    year() <- extractYear(dateFrom);
    PRINT saleReportWeek OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printSaleReportInvoiceWeek 'Динамика продаж по неделям(розница)(опт)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS Sale.InvoiceDetail;
    namePrint() <- '(опт)';
    year() <- extractYear(dateFrom);
    PRINT saleReportWeek OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

printSaleReportWeek 'Динамика продаж по неделям(опт+розница)' (DATE dateFrom, DATE dateTo) {
    filterSaleLeger(SaleLedger l) <- TRUE WHERE l IS SaleLedger;
    namePrint() <- '(розничные продажи + опт)';
    year() <- extractYear(dateFrom);
    PRINT saleReportWeek OBJECTS df = dateFrom, dt= dateTo XLS;
    filterSaleLeger(SaleLedger l) <- NULL;
}   IMAGE 'print.png' IN print;

EXTEND FORM salesReport
    PROPERTIES(df,dt) printSaleReportReceiptWeek, printSaleReportInvoiceWeek, printSaleReportWeek
;

DESIGN salesReport {
    salesContainer {
        NEW weelSale {
            caption = 'Продажи по неделям';
            lines = 2;
            MOVE PROPERTY(printSaleReportReceiptWeek(df,dt));
            MOVE PROPERTY(printSaleReportInvoiceWeek(df,dt));
            MOVE PROPERTY(printSaleReportWeek(df,dt));
        }
    }
}