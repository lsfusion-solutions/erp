MODULE LogTools;

REQUIRE Tools, Utils;

NAMESPACE Tools;

CLASS LogRotate 'Log Rotate' : StaticObject;

rotate 'Количество хранимых файлов' = ABSTRACT CASE INTEGER (LogRotate);

CLASS RotareType {
    daily,
    weekly,
    monthly
}

rotateType 'Производить ротацию раз в' = ABSTRACT CASE RotareType(LogRotate);
nameRotateType 'Производить ротацию раз в' (LogRotate l) = staticCaption(rotateType(l));

META defineLogRotate(name, count, type, caption)
    EXTEND CLASS LogRotate {name caption}
    rotate(LogRotate l) += WHEN l == LogRotate.name THEN count;
    rotateType(LogRotate l) += WHEN l == LogRotate.name THEN RotareType.type;
END
META defineLogRotate(name, count, type)
    @defineLogRotate(name, count, type, );
END

// (Linux only)
dataLogsPath = DATA STRING ();

logsPath 'Путь к логам' () = OVERRIDE dataLogsPath(), '/usr/lsfusion/logs/'; 

logString'Тескст'(LogRotate l) = logsPath() + staticCaption(l) + '.log \{' +
                          '\n   rotate ' + rotate(l) +
                          '\n   ' + staticCaption(rotateType(l)) +
                          '\n   compress' +
                          '\n   missingok' +
                          '\n   notifempty' +
                          '\n\}';
                          
showLogRotate 'Отобразить запись для logrotate.d'() {
    MESSAGE GROUP CONCAT logString(LogRotate r) ,'\n' ORDER r;
}
                          
makeLogRotate 'Создать запись в logrotate.d'() {
    stringToFile(GROUP CONCAT logString(LogRotate r) ,'\n' ORDER r);
    
    WRITE resultFile() TO '/etc/logrotate.d/lsfusion';
}
//
downloadStdout 'Stdout' () { downloadFiles('logs/stdout*'); }
downloadStderr 'Stderr' () { downloadFiles('logs/stderr*'); }
downloadExplain 'Explain' () { downloadFiles('logs/explain*'); }
downloadHttp 'Http' () { downloadFiles('logs/http*'); }
downloadMemory 'Memory' () { downloadFiles('logs/memory*'); }
downloadAllocatedBytes 'Allocated Bytes' () { downloadFiles('logs/allocatedbytes*'); }
downloadStart 'Start' () { downloadFiles('logs/start*'); }
                          
EXTEND FORM tools
    PROPERTIES() downloadStdout, downloadStderr, downloadExplain, downloadHttp, downloadMemory, downloadAllocatedBytes, downloadStart

    OBJECTS l =  LogRotate
    PROPERTIES (l) READONLY staticName, staticCaption, rotate, nameRotateType, logString
    PROPERTIES () logsPath, showLogRotate, makeLogRotate
;

DESIGN tools{
    pane {
        NEW logMain{
            caption = 'Логи';
            MOVE BOX (l);
            NEW download {
                caption = 'Download';
                type = CONTAINERH;
                MOVE PROPERTY(downloadStdout());
                MOVE PROPERTY(downloadStderr());
                MOVE PROPERTY(downloadExplain());
                MOVE PROPERTY(downloadHttp());
                MOVE PROPERTY(downloadMemory());
                MOVE PROPERTY(downloadAllocatedBytes());
                MOVE PROPERTY(downloadStart());
            }
            NEW linux {
                caption = 'Linux';
                MOVE PROPERTY (logsPath());
                MOVE PROPERTY (showLogRotate());
                MOVE PROPERTY (makeLogRotate());
            } 
        }
    }
}
