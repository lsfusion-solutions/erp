MODULE Warehouse;

REQUIRE System,
        Stock,
        EmployeeStock,
        Hierarchy,
        LegalEntity;

// ----------------------------------------- Группы складов ------------------------------ //
CLASS WarehouseGroup 'Группа складов' : StockGroup;
TABLE warehouseGroup (WarehouseGroup);

@defineExternalizable(warehouseGroup, STRING[100]);

name 'Наименование' = DATA ISTRING[100](WarehouseGroup);

id(WarehouseGroup g) += id(g);
name(WarehouseGroup group) += name(group) IF group IS WarehouseGroup;

TABLE warehouseGroupWarehouseGroup(WarehouseGroup, WarehouseGroup);
@defineHierarchy(warehouseGroup);
parent (WarehouseGroup stockGroup) += parent (stockGroup);

FORM warehouseGroup 'Группа складов'

    OBJECTS w = WarehouseGroup PANEL
    PROPERTIES(w) id SHOWIF showIDs(),name, nameParent

    EDIT WarehouseGroup OBJECT w
;

FORM warehouseGroups 'Группы складов'

    TREE warehouseGroupTree wg = WarehouseGroup PARENT parent(wg)
    PROPERTIES READONLY wgTreeName = name(wg)
    PROPERTIES(wg) NEWSESSION NEW, EDIT, DELETE 
    ORDERS wgTreeName

    LIST WarehouseGroup OBJECT wg
;

// ----------------------------------------- Склады ------------------------------ //

CLASS Warehouse 'Склад' : Stock, TaxUnit;
TABLE warehouse(Warehouse);

isWarehouse (Stock s) = s IS Warehouse;

@defineExternalizable(warehouse, STRING[100]);
id (Warehouse s) += id(s);

name 'Наименование' = DATA ISTRING[150](Warehouse) INDEXED;
prevName 'Наименование' (Warehouse w) = PREV(name(w));

fullName 'Наименование полное' = DATA ISTRING[150](Warehouse) INDEXED CHARWIDTH 20;
phone 'Телефон' = DATA ISTRING[100](Warehouse);
phone(Warehouse st) += phone(st);
name(Warehouse stock) += name(stock) IF stock IS Warehouse;
fullName(Warehouse stock) += (OVERRIDE fullName(stock), name(stock)) IF stock IS Warehouse;

warehouseGroup (warehouse) = DATA WarehouseGroup (Warehouse) INDEXED AUTOSET;
nameWarehouseGroup 'Группа складов' (Warehouse warehouse) = name(warehouseGroup(warehouse)) IN base CHARWIDTH 20;
isParent (WarehouseGroup warehouseGroup, Warehouse warehouse) =
    isParent(warehouseGroup(warehouse), warehouseGroup) MATERIALIZED;
stockGroup (Warehouse stock) += warehouseGroup (stock);

legalEntity (warehouse) = DATA LegalEntity (Warehouse) INDEXED NONULL DELETE;
nameLegalEntity 'Организация' (Warehouse warehouse) = name(legalEntity(warehouse)) IN base CHARWIDTH 20;
legalEntity (Warehouse stock) += legalEntity(stock);

address 'Адрес' = DATA STRING[150] (Warehouse);
address(Warehouse stock) += address(stock);

email 'E-mail для заказов' = DATA STRING[300] (Warehouse) CHARWIDTH 30;
email(Warehouse stock) += email(stock);

latitude 'Координата X' = DATA NUMERIC[10,5](Warehouse);
longitude 'Координата Y' = DATA NUMERIC[10,5](Warehouse);

latitude (Warehouse warehouse) += latitude(warehouse);
longitude (Warehouse warehouse) += longitude(warehouse);

quantityDaysClose 'Срок автоматического закрытия заказов' = DATA INTEGER(Warehouse);
autoCloseOrders 'Автоматически закрывать заказы' = DATA BOOLEAN (Warehouse); 

quantityDaysCloseOrders(Warehouse stock) += quantityDaysClose(stock);
autoCloseOrders (Warehouse stock) += autoCloseOrders(stock); 

region = DATA Region (Warehouse);
region(Warehouse warehouse) += region(warehouse);

// Неактивный
inactive 'Неактивный' = DATA BOOLEAN (Warehouse);
inactive(Warehouse st) += inactive(st);

// -------------------------------------------------- Формы ----------------------------------------- //
extraIn = ABSTRACT VALUE BOOLEAN (Warehouse, Employee);
FORM warehouse 'Склад'

    OBJECTS           w=Warehouse PANEL
    PROPERTIES(w)     name, fullName, phone, id SHOWIF showIDs(), nameWarehouseGroup, address, 
                      email, nameLegalEntity,
                      latitude, longitude, showOnMap, calculateCoordinates, quantityDaysClose SHOWIF isCompany(w), autoCloseOrders SHOWIF isCompany(w), 
                      nameRegion SHOWIF isCompany(w), inactive,
                      default
    ORDERS          name(w)

    OBJECTS           e = Employee GRID
    PROPERTIES(e)     SHOWIF isCompany(w) READONLY firstName, lastName
    PROPERTIES(e)     SHOWIF isCompany(w) NEWEDIT, EDIT, deletee = DELETE GRID
    FILTERS           in(w, e) OR extraIn(w,e)
    FILTERGROUP active FILTER 'Активные' active(e) 'F5'  DEFAULT 
    EDIT Warehouse OBJECT w
;

DESIGN warehouse {
    OBJECTS {
        NEW headerParams {
            type = CONTAINERH;
            NEW headerLeft {
                type = CONTAINERV;
                NEW headerMainParams {
                    caption = 'Основные параметры';
                    type = COLUMNS;
                    columns = 3;
                    MOVE PROPERTY(name(w));  
                    MOVE PROPERTY(fullName(w));
                    MOVE PROPERTY(phone(w));
                    MOVE PROPERTY(id(w));
                    MOVE PROPERTY(nameWarehouseGroup(w));
                    MOVE PROPERTY(nameLegalEntity(w));
                    MOVE PROPERTY(inactive(w));
                    MOVE PROPERTY(default(w));
                }
                NEW headerLocationParams {
                    caption = 'Координаты';
                    type = CONTAINERV;
                    NEW firstRowHeaderLocationParams {
                        type = CONTAINERH;
                        MOVE PROPERTY(address(w));
                        MOVE PROPERTY(email(w));                
                    }
                    NEW secondRowHeaderLocationParams {
                        type = CONTAINERH;
                        MOVE PROPERTY(latitude(w));
                        MOVE PROPERTY(longitude(w));
                        MOVE PROPERTY(showOnMap(w));
                        MOVE PROPERTY(calculateCoordinates(w));
                    }
                }
                NEW headerExtraParams {
                    caption = 'Дополнительные параметры';
                    type = COLUMNS;
                    columns = 4;
                    MOVE PROPERTY(nameRegion(w));
                    MOVE PROPERTY(quantityDaysClose(w));
                    MOVE PROPERTY(autoCloseOrders(w));
                }
            }
            NEW headerRight;
        }
        MOVE BOX(e);
    }
}

FORM warehousesCompany 'Собственные склады'

    TREE warehouseTree b=BPSTRING[3], wg = WarehouseGroup PARENT parent(wg)
    PROPERTIES READONLY VALUE(b), wgTreeName = name(wg)
    ORDERS wgTreeName
    FILTERS stringEqualsAll(b)

    OBJECTS w=Warehouse
    PROPERTIES(w) READONLYIF isReadonly() name, fullName, id SHOWIF showIDs(), nameWarehouseGroup, 
                  address, email, nameLegalEntity, nameRegion, latitude[POI], longitude[POI]
    ORDERS name(w)
    FILTERS isParent(wg, w) OR (w IS Warehouse AND wg IS WarehouseGroup AND NOT warehouseGroup(w)) OR (w IS Warehouse AND NOT wg),
            isCompany(w)
;

DESIGN warehousesCompany {
    BOX{
        size = (1024, 768);    
        NEW mainContainer{
            fill = 1;
            type = SPLITH;
    
            MOVE BOX(TREE warehouseTree) {caption = 'Группы складов';}
            MOVE BOX(w) {
                fill = 3;
                GRID(w) {
                    defaultComponent = TRUE;
                }
            }
        }
        MOVE TOOLBARBOX;
    }    
}

FORM dialogWarehouses 'Склады'

    TREE warehouseTree b=BPSTRING[3], wg = WarehouseGroup PARENT parent(wg)
    PROPERTIES READONLY VALUE(b), wgTreeName = name(wg)
    ORDERS wgTreeName
    FILTERS stringEqualsAll(b)

    OBJECTS w=Warehouse
    PROPERTIES(w) READONLYIF isReadonly() name, fullName, id SHOWIF showIDs(), nameWarehouseGroup, 
                  address, email, nameLegalEntity, nameRegion, latitude[POI], longitude[POI]
    ORDERS name(w)
    FILTERS isParent(wg, w) OR (w IS Warehouse AND wg IS WarehouseGroup AND NOT warehouseGroup(w)) OR (w IS Warehouse AND NOT wg)

    LIST Warehouse OBJECT w
;

DESIGN dialogWarehouses {
    BOX{
        size = (1024, 768);   
        NEW mainContainer{
            fill = 1;
            type = SPLITH;
    
            MOVE BOX(TREE warehouseTree) {caption = 'Группы складов';}
            MOVE BOX(w) {
                fill = 3;
                GRID(w) {
                    defaultComponent = TRUE;
                }
            }
        }
        MOVE TOOLBARBOX;
    }    
}

FORM warehouses 'Склады'

    TREE warehouseTree b=BPSTRING[3], wg = WarehouseGroup PARENT parent(wg)
    PROPERTIES READONLY VALUE(b), wgTreeName = name(wg)
    PROPERTIES(wg) NEWSESSION NEW, EDIT, DELETE 
    ORDERS wgTreeName
    FILTERS stringEqualsAll(b)

    OBJECTS w=Warehouse
    PROPERTIES(w) READONLYIF isReadonly() inactive, name, fullName, id SHOWIF showIDs(), nameWarehouseGroup, 
                  address, email, nameLegalEntity, nameRegion, latitude[POI], longitude[POI]
    PROPERTIES(w) NEWSESSION NEW, EDIT, deletew=DELETE 
    ORDERS name(w)
    FILTERS isParent(wg, w) OR (w IS Warehouse AND wg IS WarehouseGroup AND NOT warehouseGroup(w)) OR (w IS Warehouse AND NOT wg)
;

DESIGN warehouses {

    NEW mainContainer{
        fill = 1;
        type = SPLITH;

        MOVE BOX(TREE warehouseTree) {caption = 'Группы складов';}
        MOVE BOX(w) {
            fill = 3;
            GRID(w) {
                defaultComponent = TRUE;
            }
        }
    }
    MOVE TOOLBARBOX;
}
@extendFormEditable(warehouses);

overAddWarehouse  ABSTRACT LIST ( Warehouse);
addWarehouse 'Добавить склад'(LegalEntity legalEntity)  { 
	NESTEDSESSION {
	    NEW wr = Warehouse {
	        legalEntity(wr) <- legalEntity;
	        overAddWarehouse(wr);
	        SHOW warehouse OBJECTS w = wr DOCKED;
	    }
	}
}

allWarehouseGroup = DATA WarehouseGroup ();
nameAllWarehouseGroup 'Группа складов по умолчанию ' = name(allWarehouseGroup());

EXTEND FORM options PROPERTIES() nameAllWarehouseGroup;
DESIGN options {
    stock1 {
        MOVE PROPERTY(nameAllWarehouseGroup());
    }
}


defaultWarehouse (LegalEntity legalEntity)= GROUP MIN Warehouse stock IF in(legalEntity, stock) AND stock IS Warehouse; 
addressDefaultWarehouse 'Адрес основного склада' (LegalEntity legalEntity) = address(defaultWarehouse(legalEntity)) IN law;

changeWarehouse(LegalEntity legalEntity)  { 
    INPUT s = STRING[150] DO {
        IF defaultWarehouse(legalEntity) THEN {
            address(Warehouse w) <- s WHERE w == defaultWarehouse(legalEntity);        
        } ELSE {
            NEW w = Warehouse {
                legalEntity(w) <- legalEntity;
                warehouseGroup(w) <- allWarehouseGroup();                
                address(w) <- s;    
                name(w) <- ISTRING[150]('Склад '+(name(legalEntity(w))));    
            }
        }
    }
}

EXTEND FORM legalEntity
    PROPERTIES(l) addressDefaultWarehouse ON CHANGE changeWarehouse(l)
    PROPERTIES addWarehouse(l) DRAW st TOOLBAR
;

DESIGN legalEntity {
    row11 {
        MOVE PROPERTY(addressDefaultWarehouse(l));
    }
}

NAVIGATOR {
    stockMasterData {
        NEW warehouses;
    }
}