MODULE LotPriceLabel;

REQUIRE LotPrice, ComPrinter;

NAMESPACE Lot;

CLASS LotLabelType 'Тип шаблона марки';
TABLE lotLabelType (LotLabelType);

name '{master.data.name}' = DATA ISTRING[100] (LotLabelType) CHARWIDTH 15;

defaultLotLabelType = GROUP MIN t AS LotLabelType;

@defineItemDefaultValueCustom(template, 'Шаблон', TEXT, lotLabelType);

FORM lotLabelType 'Тип шаблона марки'
    OBJECTS o = LotLabelType PANEL
    PROPERTIES(o) name

    TREE skuTree sk = SkuGroup PARENT parent(sk)
    PROPERTIES order(sk), skuTreeName = name(sk) READONLY
    ORDERS order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F5' DEFAULT
    
    PROPERTIES(o,sk) dataTemplate PANEL
    
    EDIT LotLabelType OBJECT o
;

DESIGN lotLabelType {
    OBJECTS {
        NEW pane {
            fill = 1;
            type = CONTAINERH;
            MOVE BOX(TREE skuTree);
            MOVE PROPERTY(dataTemplate(o,sk)) { fill = 1; panelCaptionVertical = TRUE; }
        }
    }
}

FORM lotLabelTypes 'Типы шаблона марки'
    OBJECTS o = LotLabelType
    PROPERTIES(o) READONLY name
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
;

FORM dialogLotLabelTypes 'Тип шаблона марки'
    OBJECTS o = LotLabelType
    PROPERTIES(o) READONLY name
    
    LIST LotLabelType OBJECT o
;

NAVIGATOR {
    lotNavigator {
        NEW lotLabelTypes;
    }
}

// computer
lotLabelType = DATA LotLabelType (Computer);
nameLotLabelType 'Тип шаблона марки' (Computer c) = name(lotLabelType(c));

EXTEND FORM computer PROPERTIES(c) nameLotLabelType;
DESIGN computer {
    comPrinter {
        MOVE PROPERTY(nameLotLabelType(c)) { alignment = STRETCH; }
    }
}

lotLabelType () = OVERRIDE lotLabelType(currentComputer()), defaultLotLabelType();
template (ItemGroup i) = template(lotLabelType(), i);

labelNameSku = ABSTRACT VALUE TEXT (Lot);
labelNameSku (Lot l) += nameSku(l);

labelText = DATA LOCAL TEXT();
processLabelText ABSTRACT LIST (Lot);

processLabelText(Lot l) + {
    labelText() <- replace(labelText(), '@NAME@', labelNameSku(l));
    labelText() <- replace(labelText(), '@BARCODE@', id(l));
    labelText() <- replace(labelText(), '@PRICE@', '' + INTEGER(price(l)));
    labelText() <- replace(labelText(), '@DATE@', toDateDDMMYY(currentDate()));
}

printLabel 'Печать' (Lot l) {
    labelText() <- template(itemGroup(sku(l)));
    processLabelText(l);
    
    printComPort(labelText());
}

//^XA
//^CI28
//^FO 20,20
//^FB400,2,10,C,0
//^AQN,40,40^FD@NAME@^FS
//^FO 20,60
//^FB400,2,10,C,0
//^AQN,40,40^FDЦена @PRICE@ руб.^FS
//^FO 20,180
//^BY2
//^BCN,70,Y,N,N 
//^FD@BARCODE@^FS 
//^XZ
