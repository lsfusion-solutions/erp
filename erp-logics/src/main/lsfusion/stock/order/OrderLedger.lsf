MODULE OrderLedger;

REQUIRE System, SkuLedger, StockSkuDocument, Operation;

CLASS ABSTRACT OrderLedger 'Резерв товара';
TABLE orderLedger(OrderLedger);

dateTime 'Дата/время' = ABSTRACT DATETIME (OrderLedger) MATERIALIZED INDEXED;
date 'Дата' (OrderLedger ledger) = toDate(dateTime(ledger)) MATERIALIZED INDEXED;

isPosted 'Проведен' = ABSTRACT BOOLEAN (OrderLedger) MATERIALIZED;
isClosed 'Закрыт' = ABSTRACT BOOLEAN (OrderLedger) MATERIALIZED;
isOpened 'Открыт' (OrderLedger ledger) = ledger IS OrderLedger AND NOT isClosed(ledger) MATERIALIZED;

sku (ledger) = ABSTRACT Sku (OrderLedger) MATERIALIZED;
nameSku 'SKU' (OrderLedger ledger) = name(sku(ledger));

countOrderLedger = GROUP SUM 1 BY sku(OrderLedger ledger);

batch (ledger) = ABSTRACT Batch (OrderLedger) MATERIALIZED;

stock (ledger) = ABSTRACT Stock (OrderLedger) MATERIALIZED INDEXED;
nameStock 'Склад' (OrderLedger ledger) = name(stock(ledger));

INDEX batch(OrderLedger l), stock(l), dateTime(l);
INDEX sku(OrderLedger l), stock(l), dateTime(l);

description 'Название документа' (ledger) = ABSTRACT STRING[200] (OrderLedger) MATERIALIZED;

note 'Примечание' (ledger) = ABSTRACT ISTRING[500] (OrderLedger) CHARWIDTH 50;// MATERIALIZED;

quantity 'Кол-во (заказано)' (ledger) = ABSTRACT NUMERIC[16,5] (OrderLedger) CHARWIDTH 7 MATERIALIZED;
toShipQuantity 'Кол-во (не выполнено)' (ledger) = ABSTRACT NUMERIC[16,5] (OrderLedger) CHARWIDTH 7 MATERIALIZED;

isPurchase 'Закупка' (ledger) = ABSTRACT BOOLEAN (OrderLedger) MATERIALIZED;
statusReserve 'Статус резерва' (OrderLedger ledger) = IF isPurchase(ledger) THEN 'Закупка' ELSE 'Продажа' CHARWIDTH 8;               
backgroundReserve 'Статус резерва' (OrderLedger ledger) = IF isPurchase(ledger) THEN RGB(204,255,204) ELSE RGB(189,227,255);               

operation  (ledger) = ABSTRACT Operation (OrderLedger) MATERIALIZED;
nameOperation 'Операция' (OrderLedger ledger) = name(operation(ledger)) CHARWIDTH 15;

contact (ledger) = ABSTRACT LegalEntity (OrderLedger) MATERIALIZED INDEXED;
nameContact 'Контрагент' (OrderLedger ledger) = name(contact(ledger));

contactStock (ledger) = ABSTRACT Stock (OrderLedger) MATERIALIZED INDEXED;
nameContactStock 'Склад контрагента' (OrderLedger ledger) = name(contactStock(ledger));

background 'Цвет' (OrderLedger ledger,DATETIME dateTime) = RGB(212,255,212) IF dateTime(ledger) > dateTime;

// active table
TABLE activeOrderLedger (OrderLedger);

skip = ABSTRACT VALUE BOOLEAN (OrderLedger);
active (OrderLedger ledger) = isPosted(ledger) AND isOpened(ledger) AND NOT skip(ledger) MATERIALIZED TABLE activeOrderLedger;

activePurchase (OrderLedger ledger) = active(ledger) AND isPurchase(ledger) MATERIALIZED TABLE activeOrderLedger;
activeSale (OrderLedger ledger) = active(ledger) AND NOT isPurchase(ledger) MATERIALIZED TABLE activeOrderLedger;

activeToShipQuantity (OrderLedger l) = toShipQuantity(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;

activeDate (OrderLedger l) = date(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;
INDEX activeDate(OrderLedger l);

activeDateTime (OrderLedger l) = dateTime(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;
INDEX activeDateTime(OrderLedger l);

activeStock (OrderLedger l) = stock(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;

activeSku (OrderLedger l) = sku(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;
INDEX activeSku(OrderLedger l), activeStock(l), activeDateTime(l);

activeBatch (OrderLedger l) = batch(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;
INDEX activeBatch(OrderLedger l), activeStock(l), activeDateTime(l);

activeContact (OrderLedger l) = contact(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;
activeContactStock (OrderLedger l) = contactStock(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;
activeOperation (OrderLedger l) = operation(l) IF active(l) MATERIALIZED TABLE activeOrderLedger;

show 'Просмотреть'  ABSTRACT MULTI ( OrderLedger) TOOLBAR;
//-------------------------------Продажа----------------------------------//

//по SKU
currentReserveSale 'Резерв продажа (всего)' (sku, stock) = GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger) 
    BY activeSku(ledger), activeStock(ledger) CHARWIDTH 7 MATERIALIZED;
prevCurrentReserveSale 'Резерв продажа (всего)' (Sku sku, Stock stock) = PREV(currentReserveSale(sku, stock)) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBSale 'Резерв продажи на начало дня' (Sku sku, Stock stock, DATE date) = (currentReserveSale(sku, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDate(ledger) >= date
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;

// с учетом текущей даты/времени
reserveASale 'Резерв продажи на конец дня' (Sku sku, Stock stock, DATE date) = (currentReserveSale(sku, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDate(ledger) > date
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBSale 'Резерв продажи (до)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReserveSale(sku, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDateTime(ledger) >= dateTime
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;
prevReserveBSale 'Резерв продажи (до)' (Sku sku, Stock stock, DATETIME dateTime) = PREV(reserveBSale(sku, stock, dateTime)) CHARWIDTH 7;

// с учетом текущей даты/времени
reserveASale 'Резерв продажи (после)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReserveSale(sku, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDateTime(ledger) > dateTime
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;

//по партиям
currentReserveSale 'Резерв продажа (всего)' (batch, stock) = GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger) 
    BY activeBatch(ledger), activeStock(ledger) CHARWIDTH 7 MATERIALIZED;
prevCurrentReserveSale 'Резерв продажа (всего)' (Batch batch, Stock stock) = PREV(currentReserveSale(batch, stock)) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBSale 'Резерв продажи на начало дня' (Batch batch, Stock stock, DATE date) = (currentReserveSale(batch, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDate(ledger) >= date
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;

// с учетом текущей даты/времени
reserveASale 'Резерв продажи на конец дня' (Batch batch, Stock stock, DATE date) = (currentReserveSale(batch, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDate(ledger) > date
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBSale 'Резерв продажи (до)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReserveSale(batch, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDateTime(ledger) >= dateTime
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;
prevReserveBSale 'Резерв продажи (до)' (Batch batch, Stock stock, DATETIME dateTime) = PREV(reserveBSale(batch, stock, dateTime));

// с учетом текущей даты/времени
reserveASale 'Резерв продажи (после)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReserveSale(batch, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activeSale(ledger)  AND activeDateTime(ledger) > dateTime
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;


//-------------------------------Закупка----------------------------------//

//по SKU
currentReservePurchase 'Резерв закупка (всего)' (sku, stock) = GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) 
    BY activeSku(ledger), activeStock(ledger) CHARWIDTH 7 MATERIALIZED;
prevCurrentReservePurchase 'Резерв закупка (всего)' (Sku sku, Stock stock) = PREV(currentReservePurchase(sku, stock)) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки на начало дня' (Sku sku, Stock stock, DATE date) = (currentReservePurchase(sku, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDate(ledger) >= date
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки на конец дня' (Sku sku, Stock stock, DATE date) = (currentReservePurchase(sku, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDate(ledger) > date
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки (до)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReservePurchase(sku, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDateTime(ledger) >= dateTime
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;
prevReserveBPurchase 'Резерв закупки (до)' (Sku sku, Stock stock, DATETIME dateTime) = PREV(reserveBPurchase(sku, stock, dateTime)) CHARWIDTH 7;

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки (после)' (Sku sku, Stock stock, DATETIME dateTime) = (currentReservePurchase(sku, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDateTime(ledger) > dateTime
        BY activeSku(ledger), activeStock(ledger)](sku, stock) CHARWIDTH 7;
prevReserveAPurchase 'Резерв закупки (после)' (Sku sku, Stock stock, DATETIME dateTime) = PREV(reserveAPurchase(sku, stock, dateTime)) CHARWIDTH 7;

//по партиям
currentReservePurchase 'Резерв закупка (всего)'(batch, stock) = GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger)
    BY activeBatch(ledger), activeStock(ledger) CHARWIDTH 7 MATERIALIZED;
prevCurrentReservePurchase 'Резерв закупка (всего)'(Batch batch, Stock stock) = PREV(currentReservePurchase(batch, stock)) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки на начало дня' (Batch batch, Stock stock, DATE date) = (currentReservePurchase(batch, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDate(ledger) >= date
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки на конец дня' (Batch batch, Stock stock, DATE date) = (currentReservePurchase(batch, stock) IF date IS DATE) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDate(ledger) > date
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;

// без учета текущей даты/времени
reserveBPurchase 'Резерв закупки (до)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReservePurchase(batch, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDateTime(ledger) >= dateTime
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;
prevReserveBPurchase 'Резерв закупки (до)' (Batch batch, Stock stock, DATETIME dateTime) = PREV(reserveBPurchase(batch, stock, dateTime)) CHARWIDTH 7;

// с учетом текущей даты/времени
reserveAPurchase 'Резерв закупки (после)' (Batch batch, Stock stock, DATETIME dateTime) = (currentReservePurchase(batch, stock) IF dateTime IS DATETIME) (-)
    [ GROUP SUM activeToShipQuantity(OrderLedger ledger) IF activePurchase(ledger) AND activeDateTime(ledger) > dateTime
        BY activeBatch(ledger), activeStock(ledger)](batch, stock) CHARWIDTH 7;

//-------------------------------Общий----------------------------------//

//по Sku
currentReserve 'Текущий резерв' (Sku sku, Stock stock) = currentReservePurchase (sku, stock) (-) currentReserveSale (sku, stock) CHARWIDTH 7;
prevCurrentReserve 'Текущий резерв' (Sku sku, Stock stock) = prevCurrentReservePurchase (sku, stock) (-) prevCurrentReserveSale (sku, stock) CHARWIDTH 7;

reserveB 'Резерв на начало дня' (Sku sku, Stock stock, DATE date) = reserveBPurchase (sku, stock, date) (-) reserveBSale (sku, stock, date) CHARWIDTH 7;
reserveA 'Резерв на конец дня' (Sku sku, Stock stock, DATE date) = reserveAPurchase (sku, stock, date) (-) reserveASale (sku, stock, date) CHARWIDTH 7;

reserveB 'Резерв (до)' (Sku sku, Stock stock, DATETIME dateTime) = reserveBPurchase (sku, stock, dateTime) (-) reserveBSale (sku, stock, dateTime) CHARWIDTH 7;
reserveA 'Резерв (после)' (Sku sku, Stock stock, DATETIME dateTime) = reserveAPurchase (sku, stock, dateTime) (-) reserveASale (sku, stock, dateTime) CHARWIDTH 7;

prevReserveB 'Резерв (до)' (Sku sku, Stock stock, DATETIME dateTime) = PREV(reserveB(sku, stock, dateTime)) CHARWIDTH 7;
//по партиям
currentReserve 'Текущий резерв' (Batch batch, Stock stock) = currentReservePurchase (batch, stock) (-) currentReserveSale (batch, stock) CHARWIDTH 7;
prevCurrentReserve 'Текущий резерв' (Batch batch, Stock stock) = prevCurrentReservePurchase (batch, stock) (-) prevCurrentReserveSale (batch, stock) CHARWIDTH 7;

reserveB 'Резерв на начало дня' (Batch batch, Stock stock, DATE date) = reserveBPurchase (batch, stock, date) (-) reserveBSale (batch, stock, date) CHARWIDTH 7;
reserveA 'Резерв на конец дня' (Batch batch, Stock stock, DATE date) = reserveAPurchase (batch, stock, date) (-) reserveASale (batch, stock, date) CHARWIDTH 7;

reserveB 'Резерв (до)' (Batch batch, Stock stock, DATETIME dateTime) = reserveBPurchase (batch, stock, dateTime) (-) reserveBSale (batch, stock, dateTime) CHARWIDTH 7;
reserveA 'Резерв (после)' (Batch batch, Stock stock, DATETIME dateTime) = reserveAPurchase (batch, stock, dateTime) (-) reserveASale (batch, stock, dateTime) CHARWIDTH 7;

prevReserveB 'Резерв (до)' (Batch batch, Stock stock, DATETIME dateTime) = PREV(reserveB(batch, stock, dateTime)) CHARWIDTH 7;

// ----------------------- Доступное к-во -------------------------- //
availableQuantity 'Доступное к-во (всего)' (Sku sku, Stock stock) = currentBalance(sku, stock) (+) currentReserve(sku, stock) CHARWIDTH 7;
availableQuantity 'Доступное к-во (всего)' (Batch batch, Stock stock) = currentBalance(batch, stock) (+) currentReserve(batch, stock) CHARWIDTH 7;

prevAvailableQuantity 'Доступное к-во (всего)' (Sku sku, Stock stock) = prevCurrentBalance(sku, stock) (+) prevCurrentReserve(sku, stock) CHARWIDTH 7;
prevAvailableQuantity 'Доступное к-во (всего)' (Batch batch, Stock stock) = prevCurrentBalance(batch, stock) (+) prevCurrentReserve(batch, stock) CHARWIDTH 7;

prevAvailableQuantity 'Доступное к-во' (Sku sku, Stock stock, DATETIME dateTime) = (prevCurrentBalance(sku, stock) IF dateTime IS DATETIME) (+) prevReserveB(sku, stock, dateTime) CHARWIDTH 7;
prevAvailableQuantity 'Доступное к-во' (Batch batch, Stock stock, DATETIME dateTime) = (prevCurrentBalance(batch, stock) IF dateTime IS DATETIME) (+) prevReserveB(batch, stock, dateTime) CHARWIDTH 7;

//---------------------------------------------- Формы продаж -------------------------------------//

overShowEdit = ABSTRACT BOOLEAN (OrderLedger);
skipShowEdit = ABSTRACT BOOLEAN (OrderLedger);
showToShow (OrderLedger o) = o IS OrderLedger AND NOT overShowEdit(o);

FORM orderSkuLedgerStocksNotDate 'Резерв товара'

    OBJECTS sk = Sku PANEL
    PROPERTIES  SELECTOR name(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve
    PROPERTIES(s) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description, note, nameStock,
                  toShipQuantity, quantity
    PROPERTIES show(s) SHOWIF showToShow(s)
    PROPERTIES(s) NEWSESSION EDIT SHOWIF overShowEdit(s)
    ORDERS statusReserve(s), dateTime(s)
    FILTERS activeSku(s) = sk

    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
;

DESIGN orderSkuLedgerStocksNotDate {
    BOX {
        type = CONTAINERV;
        MOVE BOX(sk){ MOVE PROPERTY (name(sk)) { fill = 1; } }
        MOVE BOX(s);
    }
    MOVE TOOLBARBOX;
}
@extendFormFilterAccessStock(OrderLedger, s, orderSkuLedgerStocksNotDate, stock, company);

FORM orderSkuLedgerNotDate 'Резерв товара по складу'

    OBJECTS st = Stock PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS sk = Sku PANEL
    PROPERTIES  SELECTOR name(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve
    PROPERTIES(s) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description, note,
                  toShipQuantity, quantity
    PROPERTIES show(s) SHOWIF showToShow(s)                  
    PROPERTIES(s) NEWSESSION EDIT SHOWIF overShowEdit(s)
    ORDERS statusReserve(s), dateTime(s)
    FILTERS activeStock(s) = st,
            activeSku(s) = sk

    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
;

DESIGN orderSkuLedgerNotDate {
    BOX {
        type = CONTAINERV;
        NEW row{
            alignment = STRETCH;
            type = CONTAINERH;            
            MOVE BOX(sk) { fill = 1; MOVE PROPERTY (name(sk)) { fill = 1; } }
            MOVE BOX(st) { fill = 1; MOVE PROPERTY (name(st)) { fill = 1; } }
        }
        MOVE BOX(s);
    }
    MOVE TOOLBARBOX;
}
@extendFormFilterStockAccess(st, orderSkuLedgerNotDate);
 
META defineReserveSku(detail, stockProp, skuProp, nameSkuProp)
    showReserve###skuProp##Stock 'Показать резерв товара по складу' (###detail detail)  { 
        FOR sk == skuProp(detail) AND st == stockProp(detail) DO
            NEWSESSION SHOW orderSkuLedgerNotDate OBJECTS sk = sk, st = st; } 
    ASON CONTEXTMENU nameSkuProp[###detail];
    
    showReserve###skuProp 'Показать резерв товара' (###detail detail)  { 
        FOR sk == skuProp(detail) DO
            NEWSESSION SHOW orderSkuLedgerStocksNotDate OBJECTS sk = sk; } 
    ASON CONTEXTMENU nameSkuProp[###detail];
END
META defineReserveSku(detail, stockProp)
    @defineReserveSku(detail, stockProp, sku, nameSku);
END


META defineReserveSku(detail, skuProp, nameSkuProp)
    showReserve###skuProp##Stock 'Показать резерв товара по складу' (###detail detail) {
         FOR sk == skuProp(detail) DO 
             NEWSESSION SHOW orderSkuLedgerNotDate OBJECTS sk = sk;  
    } ASON CONTEXTMENU nameSkuProp[###detail];
    
    showReserve###skuProp 'Показать резерв товара' (###detail detail) {
        FOR sk == skuProp(detail) DO 
            NEWSESSION SHOW orderSkuLedgerStocksNotDate OBJECTS sk = sk;    
    } ASON CONTEXTMENU nameSkuProp[###detail];
END
META defineReserveSku(detail)
    @defineReserveSku(detail, sku, nameSku);
END
    
showReserveSku 'Показать резерв' (Sku sku)  { NEWSESSION SHOW orderSkuLedgerStocksNotDate OBJECTS sk = sku; }  ASON CONTEXTMENU name[Sku];

showReserveSku 'Показать резерв товара по складу' (Sku sku, Stock stock)  { NEWSESSION SHOW orderSkuLedgerNotDate OBJECTS sk = sku, st = stock; }
showBalanceReserveSku(Sku sku, Stock stock) + {  showReserveSku(sku, stock); } 
  
FORM orderSkuLedger 'Резерв по позициям на дату'

    OBJECTS t = DATETIME PANEL
    PROPERTIES  dVal=VALUE(t)

    OBJECTS st = Stock PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS sk = Sku PANEL
    PROPERTIES  SELECTOR name(sk)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve
    PROPERTIES(s) READONLY BACKGROUND background(s,t) date, 
                  dateTime, nameContact, nameContactStock, description,
                  toShipQuantity, quantity
    PROPERTIES show(s) SHOWIF showToShow(s)                  
    PROPERTIES(s) NEWSESSION EDIT SHOWIF overShowEdit(s)
    ORDERS statusReserve(s)
    FILTERS activeStock(s) = st,
            activeSku(s) = sk

    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT

    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
        FILTER 'Резерв (закупки) на дату' dateTime(s) < t AND isPurchase(s) 'F9'
        FILTER 'Резерв (продажи) на дату' dateTime(s)< t AND NOT isPurchase(s) 'F8'
        FILTER 'На дату' dateTime(s) < t 'F7'
;

DESIGN orderSkuLedger {
    BOX {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;
            MOVE BOX(t);            
            MOVE BOX(sk);
            MOVE BOX(st);
        }
        MOVE BOX(s);
    }
    MOVE TOOLBARBOX;
}

@extendFormFilterStockAccess(st, orderSkuLedger);
FORM orderBatchLedgerNotDate 'Резерв по партиям'

    OBJECTS st = Stock PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS bt = Batch PANEL
    PROPERTIES SELECTOR name(bt)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve     
    PROPERTIES(s) READONLY date, 
                  dateTime, nameContact, nameContactStock, description,
                  toShipQuantity, quantity
    PROPERTIES show(s) SHOWIF showToShow(s)                  
    PROPERTIES(s) NEWSESSION EDIT SHOWIF overShowEdit(s)
    ORDERS statusReserve(s), dateTime(s)
    FILTERS activeStock(s) = st,
            activeBatch(s) = bt

    FILTERS active(s)
    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT
        
    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
;

DESIGN orderBatchLedgerNotDate {
    BOX {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;          
            MOVE BOX(st);
            MOVE BOX(bt);
        }
        MOVE BOX(s);
    }
    MOVE TOOLBARBOX;
}

FORM orderBatchLedger 'Резерв по партиям'

    OBJECTS t = DATETIME PANEL
    PROPERTIES  dVal=VALUE(t)

    OBJECTS st = Stock PANEL
    PROPERTIES  SELECTOR name(st)

    OBJECTS bt = Batch PANEL
    PROPERTIES SELECTOR name(bt)

    OBJECTS s = OrderLedger
    PROPERTIES(s) READONLY BACKGROUND backgroundReserve(s) statusReserve     
    PROPERTIES(s) READONLY BACKGROUND background(s,t) date, 
                  dateTime, nameContact, nameContactStock, description,
                  toShipQuantity, quantity
    PROPERTIES show(s) SHOWIF showToShow(s)                  
    PROPERTIES(s) NEWSESSION EDIT SHOWIF overShowEdit(s)
    ORDERS statusReserve(s)
    FILTERS activeStock(s) = st,
            activeBatch(s) = bt

    FILTERGROUP toShipQuantityFilters
        FILTER 'Не выполнено' toShipQuantity(s) > 0 'F7' DEFAULT
        
    FILTERGROUP stockTimesFilters
        FILTER 'Резерв (закупки) всего' isPurchase(s) 'F11'
        FILTER 'Резерв (продажи) всего' TRUE AND NOT isPurchase(s) 'F10'
        FILTER 'Резерв (закупки) на дату' dateTime(s) < t AND isPurchase(s) 'F9'
        FILTER 'Резерв (продажи) на дату' dateTime(s)< t AND NOT isPurchase(s) 'F8'
        FILTER 'На дату' dateTime(s) < t 'F7'


;

DESIGN orderBatchLedger {
    BOX {
        type = CONTAINERV;
        NEW row{
            type = CONTAINERH;
            MOVE BOX(t);
            MOVE BOX(st);
            MOVE BOX(bt);
        }
        MOVE BOX(s);
    }
    MOVE TOOLBARBOX;
}

@addRoleApplicationSetting(allowNegativeAvailableSku, 'Разрешить расходовать в минус', BOOLEAN);

//-- Запрет на расходование товаров по партиям больше чем есть в остатке

// по товарам

banNegativeSku 'Запретить расходовать больше чем в остатке по товару' = DATA BOOLEAN ();
banNegativeSku 'Запретить расходовать больше чем в остатке по товару' = DATA BOOLEAN (Stock);
overBanNegativeSku (Stock st) = (banNegativeSku() AND isCompany(st)) OR banNegativeSku(st);
allowNegativeAvailableSku = ABSTRACT BOOLEAN (Sku, Stock);

EXTEND FORM options
    PROPERTIES() banNegativeSku 
    PROPERTIES banNegativeSku(s)
;

DESIGN options {
    stock1 {
        MOVE PROPERTY(banNegativeSku());
    }
}

skipCheckNegativeAvailableSku = DATA LOCAL NESTED BOOLEAN (Sku);

CONSTRAINT SETCHANGED(availableQuantity(Sku sk, Stock st)) AND availableQuantity(sk, st) < 0.0 AND NOT availableQuantity(sk, st) >= PREV(availableQuantity(sk, st)) AND 
           overBanNegativeSku(st) AND NOT allowNegativeAvailableSku(mainRole(currentUser())) AND NOT skipCheckNegativeAvailableSku(sk) AND NOT allowNegativeAvailableSku(sk, st)
    MESSAGE 'Текущий резерв по товарам превышает текущий остаток';

// по партия

banNegativeBatch 'Запретить расходовать больше чем в остатке по партии' = DATA BOOLEAN ();
banNegativeBatch 'Запретить расходовать больше чем в остатке по партии' = DATA BOOLEAN (Stock);
overBanNegativeBatch(Stock st) = (banNegativeBatch() AND isCompany(st)) OR banNegativeBatch(st);
allowNegativeAvailableBatch = ABSTRACT BOOLEAN (Batch, Stock);

EXTEND FORM options 
    PROPERTIES() banNegativeBatch 
    PROPERTIES banNegativeBatch(s)
;

DESIGN options {
    stock1 {
        MOVE PROPERTY(banNegativeBatch());
    }
}

CONSTRAINT SETCHANGED(availableQuantity(Batch bt, Stock st)) AND availableQuantity(bt, st) < 0.0 AND NOT availableQuantity(bt, st) >= PREV(availableQuantity(bt, st)) AND
           overBanNegativeBatch(st) AND NOT allowNegativeAvailableSku(mainRole(currentUser())) AND NOT allowNegativeAvailableBatch(bt, st)
    MESSAGE 'Текущий резерв по партиям превышает текущий остаток';

//---------------------------------------------- Макросы для имплементаций Продажа-------------------------------------//

META implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTime (concrete##Detail ledger) += dateTimeProp(ledger);
    isPosted (concrete##Detail ledger) += isPosted(ledger);
    isClosed (concrete##Detail ledger) += isClosed(ledger);
    skuProp[concrete##Ledger] (concrete##Detail ledger) += skuProp(ledger);
    batch[concrete##Ledger] (concrete##Detail ledger) += batch(ledger);
    stock (concrete##Detail ledger) += stockProp(ledger);
    description (concrete##Detail ledger) += description(ledger);
    quantity[concrete##Ledger] (concrete##Detail ledger) += quantity(ledger);
    contact (concrete##Detail ledger) += contactProp(ledger);
    contactStock (concrete##Detail ledger) += contactProp##Stock(ledger);    
END
META implementSaleOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementSaleOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

//---------------------------------------------- Макросы для имплементаций Покупка-------------------------------------//

META implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    dateTime (concrete##Detail ledger) += dateTimeProp(ledger);
    isPosted (concrete##Detail ledger) += isPosted(ledger);
    isClosed (concrete##Detail ledger) += isClosed(ledger);
    skuProp[concrete##Ledger] (concrete##Detail ledger) += skuProp(ledger);
    batch[concrete##Ledger] (concrete##Detail ledger) += batch(ledger);
    stock (concrete##Detail ledger) += stockProp(ledger);
    description (concrete##Detail ledger) += description(ledger);
    quantity[concrete##Ledger] (concrete##Detail ledger) += quantity(ledger);
    isPurchase (concrete##Detail ledger) += ledger IS concrete##Detail;
    contact (concrete##Detail ledger) += contactProp(ledger);
    contactStock (concrete##Detail ledger) += contactProp##Stock(ledger);
END
META implementPurchaseOrderLedger(concrete, skuProp, dateTimeProp, stockProp, contactProp)
    EXTEND CLASS concrete##Detail : OrderLedger;
    @implementPurchaseOrderLedgerCustom(concrete, skuProp, dateTimeProp, stockProp, contactProp);
END

// ----------------------- Расширение формы подбора товаров (диалоговой) --------------------- //

META defineDialogSkuReserve (form)

    dialogSaleReserve 'Резерв (продажи)' (Sku sku) = currentReserveSale(sku, form##Stock());
    dialogPurchaseReserve 'Резерв (закупки)' (Sku sku) = currentReservePurchase(sku, form##Stock());

    EXTEND FORM form
        PROPERTIES(s) READONLY  AFTER dialogBalance(s) SHOWIF form##Stock() dialogPurchaseReserve, dialogSaleReserve
    ;
END

@defineDialogSkuReserve(dialogSku);

// ----------------------- Расширение формы текущих остатков --------------------- //

//--Sku
EXTEND FORM currentBalanceSkuStock
    PROPERTIES(s, st) READONLY AFTER currentBalance(s,st) currentReserve, availableQuantity

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity
    PROPERTIES show(l) SHOWIF showToShow(l)                   
    PROPERTIES(l) NEWSESSION EDIT SHOWIF overShowEdit(l)
    FILTERS activeStock(l) = st,
            activeSku(l) = s

    FILTERS activePurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description, note,
                   quantity, toShipQuantity
    PROPERTIES show(ll) SHOWIF showToShow(ll)                   
    PROPERTIES(ll) NEWSESSION EDIT SHOWIF overShowEdit(ll)

    FILTERS activeStock(ll) = st,
            activeSku(ll) = s

    FILTERS activeSale(ll)

;
DESIGN currentBalanceSkuStock {

    ledgerBox {
        MOVE BOX(l) { caption = 'Резерв (закупки)'; }
        MOVE BOX(ll) { caption = 'Резерв (продажи)'; }
    }
}

//--Batch
EXTEND FORM currentBalanceBatchStock
    PROPERTIES(bt, st) BACKGROUND backgroundBatch(st, bt) AFTER currentBalance(bt,st) READONLY currentReserve, availableQuantity 

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity
    PROPERTIES show(l) SHOWIF showToShow(l)                   
    PROPERTIES(l) NEWSESSION EDIT SHOWIF overShowEdit(l)
    FILTERS activeStock(l) = st,
            activeBatch(l) = bt

    FILTERS activePurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                   quantity, toShipQuantity
    PROPERTIES show(ll) SHOWIF showToShow(ll)                   
    PROPERTIES(ll) NEWSESSION EDIT SHOWIF overShowEdit(ll)

    FILTERS activeStock(ll) = st,
            activeBatch(ll) = bt

    FILTERS activeSale(ll)

;
DESIGN currentBalanceBatchStock {

    ledgerBox {
        MOVE BOX(l) { caption = 'Резерв (закупки)'; }
        MOVE BOX(ll) { caption = 'Резерв (продажи)'; }
    }
}




// ----------------------- Расширение формы текущих остатков на дату --------------------- //

//-- Sku
EXTEND FORM balanceSkuStock
    PROPERTIES(s, st, t) READONLY AFTER balanceB(s,st,t) reserveA , prevAvailableQuantity 

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity
    PROPERTIES show(l) SHOWIF showToShow(l)                   
    PROPERTIES(l) NEWSESSION EDIT SHOWIF overShowEdit(l)
    FILTERS activeStock(l) = st,
            activeSku(l) = s,
            activeDateTime(l) <= t

    FILTERS activePurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                   quantity, toShipQuantity
    PROPERTIES show(ll) SHOWIF showToShow(ll)                   
    PROPERTIES(ll) NEWSESSION EDIT SHOWIF overShowEdit(ll)

    FILTERS activeStock(ll) = st,
            activeSku(ll) = s,
            activeDateTime(ll) <= t

    FILTERS activeSale(ll)

;
DESIGN balanceSkuStock {

    ledgerBox {
        MOVE BOX(l) { caption = 'Резерв (закупки)'; }
        MOVE BOX(ll) { caption = 'Резерв (продажи)'; }
    }
}

//-- Batch
EXTEND FORM balanceBatchStock
    PROPERTIES(bt, st, t) reserveA READONLY AFTER balanceB(bt,st,t)

    OBJECTS l = OrderLedger
    PROPERTIES(l) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                  quantity, toShipQuantity
    PROPERTIES show(l) SHOWIF showToShow(l)                   
    PROPERTIES(l) NEWSESSION EDIT SHOWIF overShowEdit(l)
    FILTERS activeStock(l) = st,
            activeBatch(l) = bt,
            activeDateTime(l) <= t

    FILTERS activePurchase(l)

    OBJECTS ll = OrderLedger
    PROPERTIES(ll) READONLY date, dateTime, nameOperation, nameContact, nameContactStock, description,
                   quantity, toShipQuantity
    PROPERTIES show(ll) SHOWIF showToShow(ll)                   
    PROPERTIES(ll) NEWSESSION EDIT SHOWIF overShowEdit(ll)

    FILTERS activeStock(ll) = st,
            activeBatch(ll) = bt,
            activeDateTime(ll) <= t

    FILTERS activeSale(ll)

;
DESIGN balanceBatchStock {

    ledgerBox {
        MOVE BOX(l) { caption = 'Резерв (закупки)'; }
        MOVE BOX(ll) { caption = 'Резерв (продажи)'; }
    }
}

// ----------- Подбор (товар / один склад)---------------//

META extendFormDocumentSkuOrderLedgerOver(object, form, concrete, stockProp)

    prevAvailableQuantity 'Доступное к-во' (Sku sku, ###object object)= prevAvailableQuantity(sku, stockProp(object), dateTime(object));
    prevCurrentAvailableQuantity 'Доступное кол-во (всего)' (Sku sku, ###object object) = prevAvailableQuantity(sku, stockProp(object));

    prevReserveBPurchase 'Резерв закупка' (Sku sku, ###object object) = prevReserveBPurchase(sku, stockProp(object), dateTime(object));
    prevCurrentReservePurchase 'Резерв закупка (всего)' (Sku sku, ###object object) = prevCurrentReservePurchase(sku, stockProp(object));

    prevReserveBSale 'Резерв продажа' (Sku sku, ###object object) = prevReserveBSale(sku, stockProp(object), dateTime(object));
    prevCurrentReserveSale 'Резерв продажа (всего)' (Sku sku, ###object object) = prevCurrentReserveSale(sku, stockProp(object));

    reviewReserve 'Резерв' (Sku sku, ###object object)  { 
        IF dateTime(object) THEN {
            FOR t == dateTime(object) AND st == stockProp(object) DO
                NEWSESSION SHOW orderSkuLedger OBJECTS t = t, st = st, sk = sku ;
        } ELSE {
            FOR st == stockProp(object) DO
                NEWSESSION SHOW orderSkuLedgerNotDate OBJECTS st = st, sk = sku;
        }
    }     
    @defineReserveSku(object###Detail, stockProp);     
    EXTEND FORM form
        PROPERTIES BEFORE prevCurrentBalance(ks, concrete) 
                   prevCurrentAvailableQuantity(ks, concrete) ON CHANGE reviewReserve(ks,concrete)

        PROPERTIES AFTER prevCurrentBalance(ks, concrete)
                   prevCurrentReservePurchase(ks,concrete) ON CHANGE reviewReserve(ks,concrete),
                   prevCurrentReserveSale(ks,concrete) ON CHANGE reviewReserve(ks,concrete)
        
        PROPERTIES prevAvailableQuantity(ks, concrete) ON CHANGE reviewReserve(ks,concrete),
                   prevReserveBPurchase(ks, concrete) ON CHANGE reviewReserve(ks,concrete),
                   prevReserveBSale(ks, concrete) ON CHANGE reviewReserve(ks,concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(ks, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentAvailableQuantity(ks, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSale(ks, concrete)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(ks, concrete)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSale(ks, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(ks, concrete)) { background = #CCFFCC; }
    }
END

META extendFormDocumentSkuOrderLedger(object, form, concrete, stockProp)
    @extendFormDocumentSkuOrderLedgerOver(user###object,form, concrete, stockProp);
    @defineReserveSku(object###Detail, stockProp);     
END 

META extendFormDocumentSkuOrderLedgerAll(object, form, concrete)

    allAvailable 'Доступное кол-во' = DATA LOCAL BOOLEAN (Sku, ###object);
    changeAllAvailable(Sku sku, ###object object)  { 
        INPUT b = BOOLEAN DO {
            allAvailable (sku,object) <- b;
            changeQuantityValue(sku, object, prevAvailableQuantity(sku, object) IF b);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantity(ks, concrete) allAvailable (ks,concrete) ON CHANGE changeAllAvailable(ks,concrete)
    ;
END

// ----------- Подбор (партия / один склад)---------------//

META extendFormDocumentBatchOrderLedger(object, form, concrete, stockProp)

    prevAvailableQuantity 'Доступное к-во' (Batch batch, ###object object) = prevAvailableQuantity(batch, stockProp(object), dateTime(object));

    prevReserveBPurchase 'Резерв закупка' (Batch batch, ###object object) = prevReserveBPurchase(batch, stockProp(object), dateTime(object));
    prevCurrentReservePurchase 'Резерв закупка (всего)' (Batch batch, ###object object) = prevCurrentReservePurchase(batch, stockProp(object));

    prevReserveBSale 'Резерв продажа' (Batch batch, ###object object) = prevReserveBSale(batch, stockProp(object), dateTime(object));
    prevCurrentReserveSale 'Резерв продажа (всего)' (Batch batch, ###object object) = prevCurrentReserveSale(batch, stockProp(object));

    reviewReserve 'Резерв' (Batch batch, ###object object)  { 
        IF dateTime(object) THEN {
            SHOW orderBatchLedger OBJECTS t=dateTime(object), st=stockProp(object), bt = batch ;
        } ELSE {
            SHOW orderBatchLedgerNotDate OBJECTS st=stockProp(object), bt = batch ;
        }
    }         

    EXTEND FORM form
        PROPERTIES SHOWIF showBatch(concrete) BEFORE prevCurrentBalance(b, concrete) 
                   prevAvailableQuantity(b, concrete) ON CHANGE reviewReserve(b,concrete)

        PROPERTIES SHOWIF showBatch(concrete) AFTER prevCurrentBalance(b, concrete)
                   prevReserveBPurchase(b, concrete) ON CHANGE reviewReserve(b,concrete),
                   prevReserveBSale(b, concrete) ON CHANGE reviewReserve(b,concrete),
                   prevCurrentReservePurchase(b,concrete) ON CHANGE reviewReserve(b,concrete),
                   prevCurrentReserveSale(b,concrete) ON CHANGE reviewReserve(b,concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(b, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSale(b, concrete)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(b, concrete)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSale(b, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(b, concrete)) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchOrderLedgerAll(object, form, concrete)

    allAvailable 'Доступное кол-во' = DATA LOCAL BOOLEAN (Batch, ###object);
    changeAllAvailable(Batch batch, ###object object) { 
        INPUT b = BOOLEAN DO {
            allAvailable (batch,object) <- b;
            changeQuantityValue(batch, object, prevAvailableQuantity(batch, object) IF b);
        }
    }

    EXTEND FORM form
        PROPERTIES SHOWIF showBatch(concrete) AFTER prevAvailableQuantity(b, concrete) allAvailable (b,concrete) ON CHANGE changeAllAvailable(b,concrete)
    ;
END

// ----------- Подбор (товар / несколько складов)---------------//

META extendFormDocumentSkuStockOrderLedgerOver(object, form, concrete, stockProp)

    prevAvailableQuantity 'Доступное к-во' (Sku sku, Stock stock, ###object object) = prevAvailableQuantity(sku, stock, shipmentDateTime(object));

    prevReserveBPurchase 'Резерв закупка' (Sku sku, Stock stock, ###object object) = prevReserveBPurchase(sku, stock, shipmentDateTime(object));
    prevReserveBSale 'Резерв продажа' (Sku sku, Stock stock, ###object object) = prevReserveBSale(sku, stock, shipmentDateTime(object));

    reviewReserve 'Резерв' (Sku sku, Stock stock, ###object object)  { 
        IF shipmentDateTime(object) THEN {
            FOR t == shipmentDateTime(object) DO
                NEWSESSION SHOW orderSkuLedger OBJECTS t = t, st = stock, sk = sku ;
        } ELSE {
            NEWSESSION SHOW orderSkuLedgerNotDate OBJECTS st = stock, sk = sku ;
        }        
    }  
    @defineReserveSku(object###Detail, stockProp); 
    EXTEND FORM form
        PROPERTIES AFTER prevCurrentBalance(ks, st)
                   prevCurrentReservePurchase(ks,st) ON CHANGE reviewReserve(ks,st,concrete),
                   prevCurrentReserveSale(ks,st) ON CHANGE reviewReserve(ks,st,concrete)

        PROPERTIES prevReserveBPurchase(ks, st, concrete) ON CHANGE reviewReserve(ks,st,concrete),
                   prevReserveBSale(ks, st, concrete) ON CHANGE reviewReserve(ks,st,concrete),
                   prevAvailableQuantity(ks, st, concrete) ON CHANGE reviewReserve(ks,st,concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(ks, st, concrete)) { background = #F4FFBD; }
        PROPERTY(prevReserveBSale(ks, st, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(ks, st, concrete)) { background = #CCFFCC; }
        PROPERTY(prevCurrentReserveSale(ks, st)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(ks, st)) { background = #CCFFCC; }
    }

END
META extendFormDocumentSkuStockOrderLedger(object, form, concrete, stockProp)
    @extendFormDocumentSkuStockOrderLedgerOver(user###object,form, concrete, stockProp);
    @defineReserveSku(object###Detail, stockProp);    
END 

META extendFormDocumentSkuStockOrderLedgerAll(object, form, concrete)

    allAvailable###object 'Доступное кол-во' = DATA LOCAL BOOLEAN (Sku, Stock);
    changeAllAvailable(Sku sku, ###object object, Stock stock) { 
        INPUT b = BOOLEAN DO {
            allAvailable###object (sku,stock) <- b;
            changeQuantityValue(sku, object, stock, prevAvailableQuantity(sku, stock, object) IF b);
        }
    }

    EXTEND FORM form
        PROPERTIES AFTER prevAvailableQuantity(ks, st, concrete) allAvailable###object (ks,st) ON CHANGE changeAllAvailable(ks,concrete,st)
    ;
END

// ----------- Подбор (партия / несколько складов)---------------//

META extendFormDocumentBatchStockOrderLedger(object, form, concrete)

    prevAvailableQuantity 'Доступное к-во' (Batch batch, Stock stock, ###object object) = prevAvailableQuantity(batch, stock, shipmentDateTime(object));

    prevReserveBPurchase 'Резерв закупка' (Batch batch, Stock stock, ###object object) = prevReserveBPurchase(batch, stock, shipmentDateTime(object));
    prevReserveBSale 'Резерв продажа' (Batch batch, Stock stock, ###object object) = prevReserveBSale(batch, stock, shipmentDateTime(object));

    reviewReserve 'Резерв' (Batch batch, Stock stock, ###object object)  { 
        IF shipmentDateTime(object) THEN {
            SHOW orderBatchLedger OBJECTS t=shipmentDateTime(object), st=stock, bt = batch ;
        } ELSE {
            SHOW orderBatchLedgerNotDate OBJECTS st=stock, bt = batch ;                                                         
        }
    }    

    EXTEND FORM form
        PROPERTIES SHOWIF showBatch(concrete) BEFORE prevCurrentBalance(b, sto) 
                   prevAvailableQuantity(b, sto, concrete) ON CHANGE reviewReserve(b, sto, concrete)

        PROPERTIES SHOWIF showBatch(concrete) AFTER prevCurrentBalance(b, sto)
                   prevReserveBPurchase(b, sto, concrete) ON CHANGE reviewReserve(b, sto, concrete),
                   prevReserveBSale(b, sto, concrete) ON CHANGE reviewReserve(b, sto, concrete),
                   prevCurrentReservePurchase(b, sto) ON CHANGE reviewReserve(b, sto, concrete),
                   prevCurrentReserveSale(b, sto) ON CHANGE reviewReserve(b, sto, concrete)
    ;
    DESIGN form {
        PROPERTY(prevAvailableQuantity(b, sto, concrete)) { background = #F4FFBD; }
        PROPERTY(prevCurrentReserveSale(b, sto)) { background = #BDE3FF; }
        PROPERTY(prevCurrentReservePurchase(b, sto)) { background = #CCFFCC; }
        PROPERTY(prevReserveBSale(b, sto, concrete)) { background = #BDE3FF; }
        PROPERTY(prevReserveBPurchase(b, sto, concrete)) { background = #CCFFCC; }
    }

END
META extendFormDocumentBatchStockOrderLedgerAll(object, form, concrete)

    allAvailable###object 'Доступное кол-во' = DATA LOCAL BOOLEAN (Batch, Stock);
    changeAllAvailable(Batch batch, ###object object, Stock stock)  { 
        INPUT b = BOOLEAN DO {
            allAvailable###object (batch,stock) <- b;
            changeQuantityValue(batch, object, stock, prevAvailableQuantity(batch, stock, object) IF b);
        }
    }

    EXTEND FORM form
        PROPERTIES SHOWIF sh##concrete##wBatch(concrete) AFTER prevAvailableQuantity(b, sto, concrete) allAvailable###object (b, sto) ON CHANGE changeAllAvailable(b, concrete, sto)
    ;
END

//-- Запрет на изменение документа другим пользователем
@defineOperationChangesDocument(orderLedger, OrderLedger, preventChangesDocument, created);

overShowEdit (OrderLedger i) += showEditDeleteUser(i) AND isOpened(i) AND NOT skipShowEdit(i);