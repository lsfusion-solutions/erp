MODULE StockReserve;

REQUIRE System,
        Utils,
        Historizable,
        Stock,
        Document,
        Currency,
        SaleLedger,
        Barcode,
        PriceListType,
        Dashboard;

TABLE StockSkuDate(Stock, Sku, DATE);

dataStockReserve 'Страховой запас (кол-во)' = DATA NUMERIC[14,3] (Stock, Sku, DATE) TABLE StockSkuDate IN base;

stockReserve 'Страховой запас (кол-во)' (Stock stock, Sku sku, DATE date) = 
    GROUP LAST  dataStockReserve(stock, sku, DATE dateIn)
          ORDER dateIn
          WHERE dataStockReserve(stock, sku, dateIn) AND dateIn <= (date AS DATE) IN base;

extraStockReserv 'Страховой запас (кол-во)' = ABSTRACT NUMERIC[14,3] (Stock, Sku);
extraStockReserv 'Страховой запас (кол-во)' = ABSTRACT NUMERIC[14,3] (Stock, Sku, DATE);

overStockReserve 'Страховой запас (кол-во)' = OVERRIDE dataStockReserve(Stock stock, Sku sku, DATE date), extraStockReserv(stock, sku, date),  stockReserve(stock, sku, date), extraStockReserv(stock, sku);

stockReserve 'Страховой запас (кол-во)' (Stock stock, Sku sku) = stockReserve(stock, sku, currentDate()) IN base;

FORM addStockReserveStockSku 'Страховой запас (кол-во)'
    OBJECTS a=Stock PANEL, b=Sku PANEL, d=DATE PANEL
    PROPERTIES name(a) READONLY, name(b) READONLY, VALUE(d), dataStockReserve(a, b, d)
;
DESIGN addStockReserveStockSku {
    PROPERTY(name(a)) { focusable = FALSE; }
    PROPERTY(name(b)) { focusable = FALSE; }
}

addStockReserve '{historizable.add}' (Stock stock, Sku sku)  { SHOW addStockReserveStockSku OBJECTS a = stock, b = sku; }  TOOLBAR IMAGE 'add.png' CHANGEKEY 'INSERT';

FORM dialogStockReserveStockSku 'Страховой запас (кол-во)'
    OBJECTS a=Stock PANEL, b=Sku PANEL, d=DATE
    PROPERTIES name(a) READONLY, name(b) READONLY, addStockReserve(a, b) DRAW d , VALUE(d) READONLY, dataStockReserve(a, b, d)
    FILTERS dataStockReserve(a, b, d)
;
DESIGN dialogStockReserveStockSku {
    PROPERTY(name(a)) { focusable = FALSE; }
    PROPERTY(name(b)) { focusable = FALSE; }
}

dialogStockReserve 'Страховой запас (кол-во)' (Stock stock, Sku sku)  { SHOW dialogStockReserveStockSku OBJECTS a = stock, b = sku; }  ASON CONTEXTMENU stockReserve[Stock,Sku] ASON CHANGE stockReserve[Stock,Sku];
overDialogStockReserveDate 'Страховой запас (кол-во)' (Stock stock, Sku sku)  { SHOW dialogStockReserveStockSku OBJECTS a = stock, b = sku; }  ASON CONTEXTMENU overStockReserve[Stock,Sku,DATE];
dataStockReserveDays 'Страховой запас (дн.)' = DATA NUMERIC[14,3] (Stock, SkuGroup);
dataStockReserveDays 'Страховой запас (дн.)' = DATA NUMERIC[14,3] (Stock, Sku) TABLE extraSkuStock;
extraStockReservDays 'Страховой запас (дн.)' = ABSTRACT NUMERIC[14,3] (Stock, Sku);

levelParent (Stock stock, SkuGroup skuGroup) = GROUP
                                                               MIN level(skuGroup, SkuGroup parent) IF dataStockReserveDays(stock, parent) MATERIALIZED;
nearestParent (Stock stock, SkuGroup skuGroup) = skuGroup(skuGroup, levelParent(stock, skuGroup));
nearestStockReserveDays (Stock stock, SkuGroup skuGroup) =
    dataStockReserveDays(stock, nearestParent(stock, skuGroup));

stockReserveDays 'Страховой запас (дн.)' (Stock stock, SkuGroup skuGroup) = OVERRIDE
    dataStockReserveDays(stock, skuGroup),
    nearestStockReserveDays (stock, skuGroup);

stockReserveDays 'Страховой запас (дн.)' (Stock stock, Sku sku) = OVERRIDE
    dataStockReserveDays(stock, sku),
    extraStockReservDays(stock, sku),
    stockReserveDays(stock, skuGroup(sku));

fillReserveFromTo 'Проставить кол-во исходя из продаж в день и запаса(дн.) '(Stock stock, DATE date)  { 
    FOR stockReserveDays(stock, Sku sku) AND averageSold(sku,stock) DO {
        dataStockReserve(stock, sku, date) <- averageSold(sku,stock)*stockReserveDays(stock,sku);
    }
} TOOLBAR CONFIRM;

// Вид цены
filterPriceListTypeStock = DATA LOCAL PriceListType ();
nameFilterPriceListTypeStock 'Вид цены' () = name(filterPriceListTypeStock());

defaultStockReservePriceListType = DATA PriceListType();
nameDefaultStockReservePriceListType 'Вид цены для страховых запасов' = name(defaultStockReservePriceListType());
EXTEND FORM options
    PROPERTIES() nameDefaultStockReservePriceListType
;
DESIGN options {
    stock1 {
        MOVE PROPERTY(nameDefaultStockReservePriceListType());
    }
}
setDefaultPriceListType()  { filterPriceListTypeStock() <- defaultStockReservePriceListType(); }

filterPriceListType (Sku sku, Stock stock, DATE date, TIME time) =
    prevPriceB (filterPriceListTypeStock(), sku, stock, dateTimeToDateTime(date, time)) OR
    (sku IS Sku AND stock IS Stock AND date IS DATE AND time IS TIME AND NOT filterPriceListTypeStock());

FORM stockReserve 'Страховые запасы'
    OBJECTS dt = DATE PANEL
    PROPERTIES valDt = VALUE(dt) BACKGROUND dateDiffersCurrent(dt)
    OBJECTS t = TIME PANEL
    PROPERTIES valT = VALUE(t)

    OBJECTS st = Stock PANEL
    PROPERTIES SELECTOR nameSt = name(st)
    FILTERS isCompany(st)

    PROPERTIES()  nameFilterPriceListTypeStock

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)

    TREE skuTree sk = SkuGroup PARENT parent(sk)
    PROPERTIES order(sk) READONLY, skuTreeName = name(sk) READONLY, stockReserveDays(st,sk)
    ORDERS order(sk), skuTreeName
    FILTERGROUP inactive FILTER 'Активные' active(sk) 'F6' DEFAULT

    OBJECTS s = Sku
    PROPERTIES READONLY name(s), id(s) SHOWIF showIDs(), idBarcode(s), shortNameUOM(s), nameBrand(s)
    PROPERTIES overStockReserve(st,s,dt), stockReserveDays(st,s), quantitySold(s,st,dFrom,dTo) READONLY, averageSold(s,st) READONLY
    PROPERTIES fillReserveFromTo(st,dt) DRAW s
    ORDERS          name(s)
    FILTERS           isParent(sk, s),
                      filterPriceListType(s,st,dt,t)

    FILTERGROUP active
        FILTER 'Активные' active(s) 'F11' DEFAULT
            
    FILTERGROUP soldFilter
        FILTER 'Только с реализацией' quantitySold(s,st,dFrom,dTo) 'F10'     
    
    EVENTS ON INIT 
        setDefaultPriceListType();
;

@extendFormFilterStockAccess(st, stockReserve);

DESIGN stockReserve {
    BOX {
        NEW row1 {
            type = CONTAINERH;
            MOVE BOX(st);
            MOVE BOX(dt);
            MOVE BOX(t);
            MOVE BOX(dates) { caption = 'Интервал для реализации'; }
            NEW filterContainer {
                caption = ' Фильтр';
                MOVE PROPERTY(nameFilterPriceListTypeStock());
            }
        }
        NEW row2  {
            type = SPLITH;
            fill = 1;
            MOVE BOX(TREE skuTree) { caption = 'Товарные группы'; }
            NEW tabContainer{
                fill = 4;
                tabbed = TRUE;
                MOVE BOX(s) {caption='Товары';};
            }            
        }
        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    stockDashboardNavigator {
        NEW stockReserve;
    }
}

countDaysClearStockReserve 'За сколько дней хранить страховые запасы' = DATA INTEGER () PREREAD;

EXTEND FORM options PROPERTIES countDaysClearStockReserve();
DESIGN options { log { MOVE PROPERTY(countDaysClearStockReserve());} }

clearApplicationLog () + {
    NEWSESSION {
        IF countDaysClearStockReserve() THEN {
            dataStockReserve(Stock st, Sku sk, DATE dt) <- NULL WHERE dataStockReserve(st, sk, dt) AND dt <= subtract(currentDate(), countDaysClearStockReserve()) AND dt != (GROUP LAST DATE dateIn ORDER dateIn WHERE dataStockReserve(st, sk, dateIn) AND dateIn < subtract(currentDate(), min(30, countDaysClearStockReserve()))); 
            APPLY;
        }
    }
}   
