MODULE StockMovement;

REQUIRE SkuLedger, EmployeeStock, PriceListLedger, PriceListAccount, StockDocumentSkuLedger;

NAMESPACE Stock;

// -------------------------------- Движение товара -------------------------- //

@defineOption(filterSkuLedgerInterval, 'Показывать движения за последние N дней', INTEGER, stock1);

currentAccountPriceA 'Цена учетная (текущая)' (Sku sku, Stock stock) = prevAccountPriceA(sku, stock, currentDateTime());
accountPriceA 'Цена учетная (после)' (Sku sku, Stock stock, SkuLedger ledger) = prevAccountPriceA(sku, stock, dateTime(ledger));
accountPriceA 'Цена учетная (после)' (Sku sku, SkuLedger ledger)= prevAccountPriceA(sku, stock(ledger), dateTime(ledger));

filterSkuLedgerDateFrom 'Дата с' = DATA LOCAL DATE ();
filterDateFrom (SkuLedger i) = dateTime(i) >= DATETIME(filterSkuLedgerDateFrom()) OR (i IS SkuLedger AND NOT filterSkuLedgerDateFrom());      

filterSkuLedgerDateTo 'Дата по' = DATA LOCAL DATE ();
filterDateTo (SkuLedger i) = dateTime(i) < DATETIME(sum(filterSkuLedgerDateTo(),1)) OR (i IS SkuLedger AND NOT filterSkuLedgerDateTo());

backgroundPosted 'Цвет' = ABSTRACT CASE COLOR (SkuLedger);
backgroundPosted (SkuLedger bil) += WHEN bil IS SkuLedger AND NOT isPosted(bil) THEN RGB(255,204,204);

FORM movementSku 'Движение товара'
    OBJECTS s = Sku PANEL
    PROPERTIES(s) READONLY name
    PROPERTIES () filterSkuLedgerDateFrom, filterSkuLedgerDateTo
    
    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY BACKGROUND backgroundPosted(bil) isPosted, numberDocument, seriesDocument, date, dateTime, description, nameOperationDocument, nameStock,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice, 
                             signedSum, balanceA
    PROPERTIES(s,bil) READONLY BACKGROUND backgroundPosted(bil) accountPriceA   
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil)                  
    ORDERS dateTime(bil) DESC
    FILTERS sku(bil) == s,            
            isCompanyStock(bil),
            filterDateFrom(bil),
            filterDateTo(bil)
            
    FILTERGROUP posted FILTER 'Проведенные' isPosted(bil) 'F9' DEFAULT
    
    EVENTS ON INIT {
        IF filterSkuLedgerInterval() THEN
            filterSkuLedgerDateFrom() <- subtract(currentDate(), filterSkuLedgerInterval()); 
    } 
;
DESIGN movementSku {
    BOX {
        NEW header {
            alignment = STRETCH;
            horizontal = TRUE;
            MOVE BOX(s){ fill = 1; MOVE PROPERTY (name(s)){ fill = 1; } }
            NEW filter {
                caption = 'Фильтры';
                horizontal = TRUE;
                MOVE PROPERTY (filterSkuLedgerDateFrom());
                MOVE PROPERTY (filterSkuLedgerDateTo());
            }
        }
        MOVE BOX(bil);
    }
    MOVE TOOLBARBOX;
}

@extendFormFilterAccessStock(SkuLedger, bil, movementSku, stock, company);

FORM movementSkuStock 'Движение товара по складу'
    OBJECTS s = Sku PANEL
    PROPERTIES(s) READONLY name

    OBJECTS st = Stock PANEL
    PROPERTIES(st) SELECTOR name

    PROPERTIES () filterSkuLedgerDateFrom, filterSkuLedgerDateTo
    
    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY BACKGROUND backgroundPosted(bil) isPosted, numberDocument, seriesDocument, date, dateTime, description, nameOperationDocument,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice,
                             signedSum , balanceA, priceA, sumA
    PROPERTIES(s,st,bil) READONLY BACKGROUND backgroundPosted(bil) accountPriceA                           
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil)
    ORDERS dateTime(bil) DESC
    FILTERS sku(bil) == s,            
            stock(bil)==st,
            isCompany(st),
            filterDateFrom(bil),
            filterDateTo(bil)         
    FILTERGROUP posted FILTER 'Проведенные' isPosted(bil) 'F9' DEFAULT                

    EVENTS ON INIT {
        IF filterSkuLedgerInterval() THEN
            filterSkuLedgerDateFrom() <- subtract(currentDate(), filterSkuLedgerInterval()); 
    } 
;
DESIGN movementSkuStock {
    NEW topContainer{
        alignment = STRETCH;
        horizontal = TRUE;
        MOVE BOX(s) { fill = 1; MOVE PROPERTY(name(s)) { fill = 1; } }
        MOVE BOX(st) { fill = 1; MOVE PROPERTY(name(st)) { fill = 1; }  }
        NEW filter {
            caption = 'Фильтры';
            horizontal = TRUE;
            MOVE PROPERTY (filterSkuLedgerDateFrom());
            MOVE PROPERTY (filterSkuLedgerDateTo());
        }
    }
    MOVE BOX(bil);
    MOVE TOOLBARBOX;
}
@extendFormFilterStockAccess(st, movementSkuStock);

META defineMovementSku(detail, stockProp, skuProp, nameSkuProp)
    showMovement###skuProp##Stock 'Показать движение товара по складу' (###detail detail)  { 
        FOR s == skuProp(detail) AND st == stockProp(detail) DO
            NEWSESSION SHOW movementSkuStock OBJECTS s = s, st = st; } 
    ASON CONTEXTMENU nameSkuProp[###detail];
    
    showMovement###skuProp 'Показать движение товара' (###detail detail)  { 
        FOR s == skuProp(detail) DO
            NEWSESSION SHOW movementSku OBJECTS s = s; } 
    ASON CONTEXTMENU nameSkuProp[###detail];
END
META defineMovementSku(detail, skuProp, nameSkuProp)
    showMovement###skuProp##Stock 'Показать движение товара по складу' (###detail detail)  { 
        FOR s == skuProp(detail) DO
            NEWSESSION SHOW movementSkuStock OBJECTS s = s; } 
    ASON CONTEXTMENU nameSkuProp[###detail];
    
    showMovement###skuProp 'Показать движение товара' (###detail detail)  { 
        FOR s == skuProp(detail) DO
            NEWSESSION SHOW movementSku OBJECTS s = s; } 
    ASON CONTEXTMENU nameSkuProp[###detail];
END

META defineMovementSku(detail, stockProp)
    @defineMovementSku(detail, stockProp, sku, nameSku);
END
META defineMovementSku(detail)
    @defineMovementSku(detail, sku, nameSku);
END


FORM balancesSkuStock 'Остатки'
    OBJECTS s = Sku PANEL
    PROPERTIES(s) READONLY name

    OBJECTS st = Stock
    PROPERTIES(st) READONLY id, name
    PROPERTIES READONLY currentBalance(s,st), currentAccountPriceA(s,st)
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    ORDERS id(st)
    FILTERS currentBalance(s,st),
            isCompany(st)
;

DESIGN balancesSkuStock {
    BOX (s) { MOVE PROPERTY (name(s)) { fill = 1; } }
}

@extendFormFilterStockAccess(st, balancesSkuStock);

META defineBalancesSku(detail, skuProp, nameSkuProp)
    showBalances###skuProp###Stock 'Показать остатки товара' (###detail detail)  { 
        FOR s == skuProp(detail) DO
            NEWSESSION SHOW balancesSkuStock OBJECTS s = s; } 
    ASON CONTEXTMENU nameSkuProp[###detail];
END
META defineBalancesSku(detail)
    @defineBalancesSku(detail, sku, nameSku);
END


showMovementSku'Показать движение товара' (Sku sku)  { NEWSESSION SHOW movementSku OBJECTS s = sku; }  ASON CONTEXTMENU name[Sku];
showBalancesSku 'Показать остатки товара' (Sku sku)  { NEWSESSION SHOW balancesSkuStock OBJECTS s = sku; }  ASON CONTEXTMENU name[Sku];

// История по правой кнопке (два объекта)
showMovementSku 'Показать движение товара по складу' (Sku sku, Stock stock)  { NEWSESSION SHOW movementSkuStock OBJECTS s = sku, st = stock ; }
showBalanceMovementSku(Sku sku, Stock stock) + {  showMovementSku(sku, stock); } 
showMovementSkuStocks 'Показать движение товара по складу' (Sku sku)  { NEWSESSION SHOW movementSkuStock OBJECTS s = sku ; }

// -------------------------------- Движение по партии -------------------------- //
balanceB 'Остаток (до)' (Batch batch, SkuLedger ledger) = balanceB(batch, stock(ledger), dateTime(ledger));
balanceA 'Остаток (после)' (Batch batch, SkuLedger ledger) = balanceA(batch, stock(ledger), dateTime(ledger));
accountPriceA 'Цена учетная' (Batch batch, Stock stock, SkuLedger ledger)= prevAccountPriceA(batch, stock, dateTime(ledger));
accountPriceA 'Цена учетная' (Batch batch, SkuLedger ledger)= prevAccountPriceA(batch, stock(ledger), dateTime(ledger));

FORM movementBatch 'Движение по партии'
    OBJECTS bt = Batch PANEL
    PROPERTIES(bt) READONLY name, nameSku

    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY BACKGROUND backgroundPosted(bil) isPosted, numberDocument, seriesDocument, dateTime, description, nameStock,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice, signedSum

    PROPERTIES      READONLY BACKGROUND backgroundPosted(bil) balanceB(bt,bil), cost(bil, bt), balanceA(bt,bil), accountPriceA(bt,bil)
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil)        
    ORDERS dateTime(bil) DESC
    FILTERS cost(bil, bt) OR batch(bil)==bt,           
            isCompanyStock(bil)
    FILTERGROUP posted FILTER 'Проведенные' isPosted(bil) 'F9' DEFAULT 
;
FORM movementBatchStock 'Движение по партии'
    OBJECTS bt = Batch PANEL
    PROPERTIES(bt) READONLY name, nameSku

    OBJECTS st = Stock PANEL
    PROPERTIES(st) SELECTOR name

    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY BACKGROUND backgroundPosted(bil) isPosted, numberDocument, seriesDocument, dateTime, description,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity,
                             signedPrice, signedSum
    PROPERTIES      READONLY BACKGROUND backgroundPosted(bil) balanceB(bt,bil), cost(bil, bt),  balanceA(bt,bil), accountPriceA(bt,st,bil)
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil) 
    ORDERS dateTime(bil) DESC
    FILTERS cost(bil, bt) OR batch(bil)==bt,            
            stock(bil)==st,
            isCompany(st)
    FILTERGROUP posted FILTER 'Проведенные' isPosted(bil) 'F9' DEFAULT             
;
DESIGN movementBatchStock {
    NEW topContainer{
        horizontal = TRUE;
        MOVE BOX(bt);
        MOVE BOX(st);
    }
    MOVE BOX(bil);
    MOVE TOOLBARBOX;
}


META defineMovementBatch(detail, batchProp, stockProp)
    showMovement###batchProp##Stock 'Показать движение по партии и складу' (###detail detail)  { 
        FOR bt == batchProp(detail) AND st == stockProp(detail) DO
            NEWSESSION SHOW movementBatchStock OBJECTS bt = bt, st = st; } 
    ASON CONTEXTMENU name###batchProp[###detail];
    
    showMovement###batchProp 'Показать движение по партии' (###detail detail)  { 
        FOR bt == batchProp(detail) DO
            NEWSESSION SHOW movementBatch OBJECTS bt = bt; } 
    ASON CONTEXTMENU name###batchProp[###detail];
END
META defineMovementBatch(detail, stockProp)
    @defineMovementBatch(detail, batch, stockProp);
END

META defineMovementIdBatch(detail, batchProp, stockProp)
    showMovementId###batchProp##Stock 'Показать движение по партии и складу' (###detail detail)  { 
        FOR bt == batchProp(detail) AND st == stockProp(detail) DO
            NEWSESSION SHOW movementBatchStock OBJECTS bt = bt, st = st; } 
    ASON CONTEXTMENU id###batchProp[###detail];
    
    showMovementId###batchProp 'Показать движение по партии' (###detail detail)  { 
        FOR bt == batchProp(detail) DO
            NEWSESSION SHOW movementBatch OBJECTS bt = bt; } 
    ASON CONTEXTMENU id###batchProp[###detail];
END
META defineMovementIdBatch(detail, stockProp)
    @defineMovementIdBatch(detail, batch, stockProp);
END

FORM balancesBatchStock 'Остатки'
    OBJECTS bt = Batch PANEL
    PROPERTIES(bt) READONLY name, nameSku

    OBJECTS st = Stock
    PROPERTIES(st) READONLY id, name
    PROPERTIES READONLY currentBalance(bt,st), accountPriceA(bt,st)
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'ctrl F10' DEFAULT
    ORDERS id(st)
    FILTERS currentBalance(bt,st),
            isCompany(st)
;
META defineBalancesBatch(detail, batchProp)
    showBalances###batchProp##Stock 'Показать остатки по партии' (###detail detail)  { 
        FOR bt == batchProp(detail) DO
            NEWSESSION SHOW balancesBatchStock OBJECTS bt = bt; }  
    ASON CONTEXTMENU name###batchProp[###detail];
END
META defineBalancesBatch(detail)
    @defineBalancesBatch(detail, batch);
END

META defineBalancesIdBatch(detail, batchProp)
    showBalancesId###batchProp##Stock 'Показать остатки по партии' (###detail detail)  { 
        FOR bt == batchProp(detail) DO
            NEWSESSION SHOW balancesBatchStock OBJECTS bt = bt; } 
    ASON CONTEXTMENU id###batchProp[###detail];
END
META defineBalancesIdBatch(detail)
    @defineBalancesIdBatch(detail, batch);
END

showMovementBatchStock 'Показать движение по партии и складу возникновения партии' (Batch batch)  { 
    FOR st == stock(batch) DO
        NEWSESSION SHOW movementBatchStock OBJECTS bt = batch, st = st; }  
ASON CONTEXTMENU name[Batch];
showMovementBatchStocks 'Показать движение по партии и складу' (Batch batch)  { NEWSESSION SHOW movementBatchStock OBJECTS bt = batch; }  ASON CONTEXTMENU name[Batch];
showMovementBatch 'Показать движение по партии' (Batch batch)  { NEWSESSION SHOW movementBatch OBJECTS bt = batch; }  ASON CONTEXTMENU name[Batch];
showBalancesBatchStock 'Показать остатки по партии' (Batch batch)  { NEWSESSION SHOW balancesBatchStock OBJECTS bt = batch; }  ASON CONTEXTMENU name[Batch];

showMovementBatch 'Показать движение по партии и складу' (Batch batch, Stock stock)  { NEWSESSION SHOW movementBatchStock OBJECTS bt = batch, st = stock ; }

showMovementBatchStockId 'Показать движение по партии и складу возникновения партии' (Batch batch)  { 
    FOR st == stock(batch) DO
        NEWSESSION SHOW movementBatchStock OBJECTS bt = batch, st = st; }  
ASON CONTEXTMENU id[Batch];

showMovementBatchStocksId 'Показать движение по партии и складу' (Batch batch)  { NEWSESSION SHOW movementBatchStock OBJECTS bt = batch; }  ASON CONTEXTMENU id[Batch];
showMovementBatchId 'Показать движение по партии' (Batch batch)  { NEWSESSION SHOW movementBatch OBJECTS bt = batch; }  ASON CONTEXTMENU id[Batch];
showBalancesBatchIdStock 'Показать остатки по партии' (Batch batch)  { NEWSESSION SHOW balancesBatchStock OBJECTS bt = batch; }  ASON CONTEXTMENU id[Batch];

showMovementSkuStock 'Показать движение товара по складу возникновения партии' (Batch batch)  { 
    FOR s == sku(batch) AND st == stock(batch) DO
        NEWSESSION SHOW movementSkuStock OBJECTS s = s, st = st; } 
ASON CONTEXTMENU nameSku[Batch];

showMovementSkuStocks 'Показать движение товара по складу' (Batch batch)  { 
    FOR s == sku(batch) DO
        NEWSESSION SHOW movementSkuStock OBJECTS s = s; } 
ASON CONTEXTMENU nameSku[Batch];

showMovementSku 'Показать движение товара' (Batch batch)  { 
    FOR s == sku(batch) DO
        NEWSESSION SHOW movementSku OBJECTS s = s; } 
ASON CONTEXTMENU nameSku[Batch];

showMovementSku 'Показать движение товара по складу' (Batch batch, Stock stock)  { 
    FOR s == sku(batch) DO
        NEWSESSION SHOW movementSkuStock OBJECTS s = s, st = stock ; }

@defineBalancesSku(batch); //-- показываем по нажатию правой клавиши остатки товара

EXTEND FORM currentBalanceSkuStock 
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil)  
;
EXTEND FORM balanceSkuStock 
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil)  
;
EXTEND FORM currentBalanceBatchStock 
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil)  
;
EXTEND FORM balanceBatchStock 
    PROPERTIES(bil) EDIT SHOWIF allowedEdit(bil) NEWSESSION, show SHOWIF allowedShow(bil)  
;
//-- печатная форма
FORM movementSkuStockPrint 'Движение товара по складу'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL SUBREPORT
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)
    
    OBJECTS s = Sku PANEL
    PROPERTIES(s) READONLY name, id, idBarcode

    OBJECTS st = Stock PANEL
    PROPERTIES(st) SELECTOR name

    OBJECTS bil = SkuLedger
    PROPERTIES(bil) READONLY numberDocument, seriesDocument, date, dateTime, description,
                             nameLegalEntityDocument, nameLegalEntityStockDocument, signedQuantity, signedPrice,
                             signedSum , balanceA, balanceB
    PROPERTIES(s,st,bil) READONLY accountPriceA                           

    ORDERS dateTime(bil)
    FILTERS sku(bil) == s,
            isPosted(bil),
            stock(bil)==st,
            isCompany(st),
            date(bil) >=dFrom,
            date(bil) <=dTo
;

FORM dialogPeriod 'Выбор периода'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES objFrom = VALUE(dFrom), objTo = VALUE(dTo)
;

DESIGN dialogPeriod {
    MOVE BOX(dates) { 
        caption = 'Период';
        PROPERTY (objFrom) {caption = 'Дата с'; font = 'bold 64';}
        PROPERTY (objTo) {caption = 'Дата по'; font = 'bold 64';}
    }
    MOVE TOOLBARBOX;
}

movementPrint 'Движение товара' (Sku s, Stock st)  { 
    DIALOG dialogPeriod OBJECTS dFrom INPUT, dTo INPUT DO
        PRINT movementSkuStockPrint OBJECTS dFrom = dFrom, dTo = dTo, s = s, st = st ;
    
} IMAGE 'print.png' IN print;

EXTEND FORM  currentBalanceSkuStock
    PROPERTIES(s,st) movementPrint TOOLBAR DRAW bil
;



