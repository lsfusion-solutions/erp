MODULE SupplierStockReports;

REQUIRE StockReports, SaleLedger, PurchaseLedger, PurchaseShipment;

NAMESPACE StockReports;

inReport 'Вкл.' = DATA LOCAL BOOLEAN (Stock);

//-- закупка
quantityPurchaseSupplierFromTo 'Закуплено за интервал (кол-во)' (Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM quantityPurchaseSupplier (sku, Stock stock, supplierStock, dateFrom, dateTo) IF inReport(stock);
sumPurchaseSupplierFromTo 'Закуплено за интервал (сумма с НДС)' (Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM sumPurchaseSupplier (sku, Stock stock, supplierStock, dateFrom, dateTo) IF inReport(stock);    
supplierSumPurchaseSupplierFromTo 'Закуплено за интервал (сумма без НДС)' (Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
        SUM 
    (sumPurchaseSupplier (sku, Stock stock, supplierStock, dateFrom, dateTo) (-)
    sumVATPurchaseSupplier (sku, stock, supplierStock, dateFrom, dateTo)) IF inReport(stock);       
averagePricePurchaseSupplier 'Средняя цена закупки с НДС' =  sumPurchaseSupplierFromTo(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) /
    quantityPurchaseSupplierFromTo(sku, supplierStock, dateFrom, dateTo);         

quantityPurchaseSupplierFromTo 'Закуплено за интервал (кол-во)' (Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM quantityPurchaseSupplierFromTo(Sku sku, supplierStock, dateFrom, dateTo) IF inSession(skuGroup(sku));
sumPurchaseSupplierFromTo 'Закуплено за интервал (сумма с НДС)' (Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM sumPurchaseSupplierFromTo(Sku sku, supplierStock, dateFrom, dateTo) IF inSession(skuGroup(sku));
supplierSumPurchaseSupplierFromTo 'Закуплено за интервал (сумма без НДС)' (Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM supplierSumPurchaseSupplierFromTo(Sku sku, supplierStock, dateFrom, dateTo) IF inSession(skuGroup(sku));

//-- реализация         
quantitySoldSupplier 'Реализация (кол-во)' (sku, supplierStock, DATE dateFrom, DATE dateTo)= GROUP SUM 
    quantitySold(Batch batch, Stock stock, dateFrom, dateTo) IF inReport(stock)
        BY sku(batch), supplierStock(batch); 
sumSoldSupplier 'Реализация (сумма)' (sku, supplierStock, DATE dateFrom, DATE dateTo)= GROUP SUM 
    sumSold(Batch batch, Stock stock, dateFrom, dateTo) IF inReport(stock)
        BY sku(batch), supplierStock(batch);  
averagePriceSupplier 'Средняя цена реализации' =  sumSoldSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) /
    (quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) IF quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) !=0);

quantitySoldSupplierFromTo 'Реализация (кол-во)' (Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM quantitySoldSupplier(Sku sku, supplierStock, dateFrom, dateTo) IF inSession(skuGroup(sku));
sumSoldSupplierFromTo 'Реализация (сумма)' (Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM sumSoldSupplier(Sku sku, supplierStock, dateFrom, dateTo) IF inSession(skuGroup(sku));

//-- р-ия в ценах поставщика  
sumSaleSupplier 'Продано за интервал (сумма с НДС)' (batch, stock, DATE dateFrom, DATE dateTo)= GROUP SUM 
    quantitySold(Batch bbatch, Stock sstock, DATE date)* invoicePriceInvoiceDetail(bbatch)
    IF date >= dateFrom AND date <= dateTo AND inReport(sstock)
        BY sku(bbatch), supplierStock(bbatch);   
supplierSumSaleSupplier 'Продано за интервал (сумма без НДС)' (batch, stock, DATE dateFrom, DATE dateTo)= GROUP SUM 
    quantitySold(Batch bbatch, Stock sstock, DATE date)* priceInvoiceDetail(bbatch)
    IF date >= dateFrom AND date <= dateTo AND inReport(sstock)
        BY sku(bbatch), supplierStock(bbatch);    
averageSalePriceSupplier 'Средняя цена реализации с НДС' =  sumSaleSupplier(Sku sku, Stock supplierStock, DATE dateFrom, DATE dateTo) /
    (quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) IF quantitySoldSupplier(sku, supplierStock, dateFrom, dateTo) !=0);        

sumSaleSupplierFromTo 'Продано за интервал (сумма с НДС)' (Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM sumSaleSupplier(Sku sku, supplierStock, dateFrom, dateTo) IF inSession(skuGroup(sku));
supplierSumSaleSupplierFromTo 'Продано за интервал (сумма без НДС)' (Stock supplierStock, DATE dateFrom, DATE dateTo) = GROUP
    SUM supplierSumSaleSupplier(Sku sku, supplierStock, dateFrom, dateTo) IF inSession(skuGroup(sku));

// остаток на начало
balanceBSupplierFrom 'Остаток на начало'  =  GROUP SUM balanceB(Batch batch, Stock stock, DATE dateFrom) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom;           
sumBSupplierFrom 'Сумма с НДС начало'  =  GROUP SUM balanceB(Batch batch, Stock stock, DATE dateFrom)*invoicePriceInvoiceDetail(batch) IF inReport(stock)    
        BY sku(batch), supplierStock(batch), dateFrom;   
supplierSumBSupplierFrom 'Сумма без НДС начало'  =  GROUP SUM balanceB(Batch batch, Stock stock, DATE dateFrom)*priceInvoiceDetail(batch) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateFrom;    
                       
balanceBSupplierFrom 'Остаток на начало' (Stock supplierStock, DATE dateFrom) = GROUP
    SUM balanceBSupplierFrom(Sku sku, supplierStock, dateFrom) IF inSession(skuGroup(sku));
sumBSupplierFrom 'Сумма с НДС начало' (Stock supplierStock, DATE dateFrom) = GROUP
    SUM sumBSupplierFrom(Sku sku, supplierStock, dateFrom) IF inSession(skuGroup(sku));                       
supplierSumBSupplierFrom 'Сумма без НДС начало' (Stock supplierStock, DATE dateFrom) = GROUP
    SUM supplierSumBSupplierFrom(Sku sku, supplierStock, dateFrom) IF inSession(skuGroup(sku));   

// остаток на конец
balanceASupplierTo'Остаток на конец'  =  GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateTo;           
sumASupplierTo 'Сумма с НДС конец'  =  GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo)*invoicePriceInvoiceDetail(batch) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateTo;   
supplierSumASupplierTo 'Сумма без НДС конец'  =  GROUP SUM balanceA(Batch batch, Stock stock, DATE dateTo)*priceInvoiceDetail(batch) IF inReport(stock)
        BY sku(batch), supplierStock(batch), dateTo; 

balanceASupplierTo 'Остаток на конец' (Stock supplierStock, DATE dateTo) = GROUP
    SUM balanceASupplierTo(Sku sku, supplierStock, dateTo) IF inSession(skuGroup(sku));
sumASupplierTo 'Сумма с НДС конец' (Stock supplierStock, DATE dateTo) = GROUP
    SUM sumASupplierTo(Sku sku, supplierStock, dateTo) IF inSession(skuGroup(sku));                       
supplierSumASupplierTo 'Сумма без НДС конец' (Stock supplierStock, DATE dateTo) = GROUP
    SUM supplierSumASupplierTo(Sku sku, supplierStock, dateTo) IF inSession(skuGroup(sku));   
       
stocksReport 'Склады' () = GROUP CONCAT name(Stock stock) IF inReport(stock) , ', '                                                 
                                                 ORDER stock CHARWIDTH 30;

quantityPurchaseSupplierFromToLocal 'Закуплено за интервал (кол-во)' = DATA LOCAL NUMERIC[16,5](Sku);
quantitySoldSupplierLocal 'Реализация (кол-во)' = DATA LOCAL NUMERIC[16,5](Sku);
balanceASupplierToLocal'Остаток на конец'  =  DATA LOCAL NUMERIC[16,5](Sku);       
sumPurchaseSupplierFromToLocal 'Закуплено за интервал (сумма с НДС)' =  DATA LOCAL NUMERIC[18,4](Sku);     
sumSoldSupplierLocal 'Реализация (сумма)' = DATA LOCAL NUMERIC[18,4](Sku); 
sumSaleSupplierLocal 'Продано за интервал (сумма с НДС)' = DATA LOCAL NUMERIC[18,4](Sku); 
averagePricePurchaseSupplierLocal 'Средняя цена закупки с НДС' = DATA LOCAL NUMERIC[18,4](Sku);     
averagePriceSupplierLocal 'Средняя цена реализации' = DATA LOCAL NUMERIC[18,4](Sku);     
averageSalePriceSupplierLocal 'Средняя цена реализации с НДС' = DATA LOCAL NUMERIC[18,4](Sku);  
supplierSumPurchaseSupplierFromToLocal 'Закуплено за интервал (сумма без НДС)' =  DATA LOCAL NUMERIC[18,4](Sku);  
supplierSumSaleSupplierLocal 'Продано за интервал (сумма без НДС)' =  DATA LOCAL NUMERIC[18,4](Sku); 
balanceBSupplierFromLocal 'Остаток на начало' = DATA LOCAL NUMERIC[16,5](Sku);
sumBSupplierFromLocal 'Сумма с НДС начало' =  DATA LOCAL NUMERIC[18,4](Sku);  
sumASupplierToLocal 'Сумма с НДС конец' =  DATA LOCAL NUMERIC[18,4](Sku); 
supplierSumBSupplierFromLocal 'Сумма без НДС начало' =  DATA LOCAL NUMERIC[18,4](Sku); 
supplierSumASupplierToLocal 'Сумма без НДС конец' =  DATA LOCAL NUMERIC[18,4](Sku);  
resetLocSupOver ABSTRACT LIST();
resetLocSup()  { 
    quantityPurchaseSupplierFromToLocal(Sku sk) <- NULL;
    quantitySoldSupplierLocal(Sku sk) <- NULL;
    balanceASupplierToLocal(Sku sk) <- NULL;
    sumPurchaseSupplierFromToLocal(Sku sk) <- NULL;
    sumSoldSupplierLocal(Sku sk) <- NULL;
    sumSaleSupplierLocal (Sku sk) <- NULL;
    averagePricePurchaseSupplierLocal(Sku sk) <- NULL;
    averagePriceSupplierLocal(Sku sk) <- NULL;
    averageSalePriceSupplierLocal(Sku sk) <- NULL;
    supplierSumPurchaseSupplierFromToLocal(Sku sk) <- NULL;
    supplierSumSaleSupplierLocal (Sku sk) <- NULL;
    balanceBSupplierFromLocal (Sku sk) <- NULL;
    sumBSupplierFromLocal(Sku sk) <- NULL;
    supplierSumBSupplierFromLocal(Sku sk) <- NULL; 
    sumASupplierToLocal(Sku sk) <- NULL;
    supplierSumASupplierToLocal(Sku sk) <- NULL;   
    resetLocSupOver();
}
inSession (Sku sk) = inSession(skuGroup(sk));       
FORM supplierStockReportPrint 'По поставщикам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL SUBREPORT
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)    
    
    OBJECTS st = Stock PANEL
    PROPERTIES (st) SELECTOR name, fullName, nameLegalEntity, fullNameLegalEntity
    FILTERS isSupplier(st)
    PROPERTIES  DRAW st stocksReport(), currentDate(), sessionConcatSkuGroups()
    
    OBJECTS sk = Sku  
    PROPERTIES(sk) id, idBarcode, name, shortNameUOM
    PROPERTIES (sk) quantityPurchaseSupplierFromToLocal, quantitySoldSupplierLocal, balanceASupplierToLocal
    PROPERTIES (sk) sumPurchaseSupplierFromToLocal, sumSoldSupplierLocal, sumSaleSupplierLocal 
    PROPERTIES (sk) averagePricePurchaseSupplierLocal, averagePriceSupplierLocal, averageSalePriceSupplierLocal

    PROPERTIES (sk)  supplierSumPurchaseSupplierFromToLocal, supplierSumSaleSupplierLocal 
    PROPERTIES (sk) balanceBSupplierFromLocal, sumBSupplierFromLocal, supplierSumBSupplierFromLocal 
    PROPERTIES (sk) sumASupplierToLocal, supplierSumASupplierToLocal          
    ORDERS name(sk)
    
    FILTERS quantityPurchaseSupplierFromToLocal(sk) OR 
            quantitySoldSupplierLocal(sk) OR 
            balanceASupplierToLocal(sk)
    FILTERS inSession(skuGroup(sk)) AND st IS Stock AND dFrom IS DATE 
;
supplierReportPrintOver ABSTRACT LIST(Stock,DATE,DATE);
supplierReportPrint 'Отчет по поставщику (xls)' (Stock st,DATE dFrom,DATE dTo)  { 
    resetLocSup();
    
    quantityPurchaseSupplierFromToLocal (Sku sku) <- GROUP SUM quantityPurchaseSupplier(sku, Stock stock, st, DATE date) IF date >= dFrom AND date <= dTo 
        AND inReport(stock) AND inSession(sku);
    sumPurchaseSupplierFromToLocal (Sku sku) <- GROUP SUM sumPurchaseSupplier(sku, Stock stock, st, DATE date) IF date >= dFrom AND date <= dTo 
        AND inReport(stock) AND inSession(sku);   
    averagePricePurchaseSupplierLocal (Sku sku) <- NUMERIC[18,4](sumPurchaseSupplierFromToLocal(sku) / quantityPurchaseSupplierFromToLocal(sku) IF quantityPurchaseSupplierFromToLocal(sku)!=0.0 AND inSession(sku));         

    quantitySoldSupplierLocal (Sku sku) <- [ GROUP SUM quantitySold(Batch batch, Stock stock, DATE date) IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(sku(batch))  
        BY sku(batch), supplierStock(batch)](sku, st); 
    sumSoldSupplierLocal (Sku sku) <- [ GROUP SUM sumSold(Batch batch, Stock stock, DATE date) IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(sku(batch)) 
        BY sku(batch), supplierStock(batch)](sku, st);    
    averagePriceSupplierLocal (Sku sku) <- NUMERIC[18,4](sumSoldSupplierLocal(sku) / quantitySoldSupplierLocal(sku) IF quantitySoldSupplierLocal(sku) !=0 AND inSession(sku));

    sumSaleSupplierLocal (Sku sku) <- NUMERIC[18,4]([ GROUP SUM quantitySold(Batch batch, Stock stock, DATE date)* invoicePriceInvoiceDetail(batch)
        IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(sku(batch)) BY sku(batch), supplierStock(batch)](sku, st));   
    averageSalePriceSupplierLocal (Sku sku) <-  NUMERIC[18,4](sumSaleSupplierLocal(sku) / quantitySoldSupplierLocal(sku) IF quantitySoldSupplierLocal(sku) !=0 AND inSession(sku));     

    balanceASupplierToLocal(Sku sku)  <- [ GROUP SUM balanceA(Batch batch, Stock stock, dTo) IF inReport(stock) AND inSession(sku(batch)) BY sku(batch), supplierStock(batch)](sku, st);    

    supplierSumPurchaseSupplierFromToLocal(Sku sku) <- (GROUP SUM (sumPurchaseSupplier(sku, Stock stock, st, DATE date) (-)
        sumVATPurchaseSupplier (sku, stock, st, date)) IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(sku));  
    supplierSumSaleSupplierLocal(Sku sku) <- NUMERIC[18,4]([ GROUP SUM quantitySold(Batch batch, Stock stock, DATE date)* priceInvoiceDetail(batch) 
        IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(sku(batch)) BY sku(batch), supplierStock(batch)](sku, st)); 
    balanceBSupplierFromLocal(Sku sku) <- [ GROUP SUM balanceB(Batch batch, Stock stock, dFrom) IF inReport(stock) AND inSession(sku(batch)) BY sku(batch), supplierStock(batch)](sku, st);

    sumBSupplierFromLocal(Sku sku) <- NUMERIC[18,4]([ GROUP SUM balanceB(Batch batch, Stock stock, dFrom) * invoicePriceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(sku(batch)) BY sku(batch), supplierStock(batch)](sku, st)); 
    sumASupplierToLocal(Sku sku) <- NUMERIC[18,4]([ GROUP SUM balanceA(Batch batch, Stock stock, dTo) * invoicePriceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(sku(batch))  BY sku(batch), supplierStock(batch)](sku, st));
    
    supplierSumBSupplierFromLocal(Sku sku) <- NUMERIC[18,4]([ GROUP SUM balanceB(Batch batch, Stock stock, dFrom) * priceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(sku(batch)) BY sku(batch), supplierStock(batch)](sku, st));
    supplierSumASupplierToLocal(Sku sku) <- NUMERIC[18,4]([ GROUP SUM balanceA(Batch batch, Stock stock, dTo) * priceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(sku(batch)) BY sku(batch), supplierStock(batch)](sku, st)); 
    supplierReportPrintOver(st,dFrom,dTo);
}

supplierReportPrintXLS 'Отчет по поставщику (xls)' (Stock st,DATE dFrom,DATE dTo)  { 
    supplierReportPrint(st,dFrom,dTo);
    PRINT supplierStockReportPrint OBJECTS st=st, dFrom = dFrom, dTo=dTo XLS;
}IMAGE 'print.png' IN print;    

supplierReportPrintXLSX 'Отчет по поставщику (xlsx)' (Stock st,DATE dFrom,DATE dTo)  { 
    supplierReportPrint(st,dFrom,dTo);
    PRINT supplierStockReportPrint OBJECTS st=st, dFrom = dFrom, dTo=dTo XLSX;
}IMAGE 'print.png' IN print;    

// склад поставщика 
inSupplierStockReport 'Вкл.' = DATA LOCAL BOOLEAN (Stock);
countInSupplierStockReport = GROUP SUM 1 IF inSupplierStockReport(Stock st) ;    
nameInSupplierStockReport 'Склады' () =
    GROUP CONCAT name(Stock st) IF inSupplierStockReport(st) ,', ' ORDER st CHARWIDTH 30;
FORM dialogSupplierStocks 'Выбор складов поставщика'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL    
    OBJECTS gt = GroupType PANEL
        
    TREE stockTree a = BPSTRING[3], sg = StockGroup PARENT parent(sg)
    PROPERTIES READONLY VALUE(a), name(sg)
    ORDERS name(sg)
    FILTERS stringEqualsAll(a)

    OBJECTS s = Stock
    PROPERTIES(s) READONLY id, name
    PROPERTIES (s) inSupplierStockReport
    ORDERS name(s)
    FILTERS isParent(sg, s) OR (s IS Stock AND NOT sg),
            isSeller(s),
            countCompanyStock(sg) OR countSupplierStock(sg)

    FILTERGROUP inactiveStock FILTER 'Активный' active(s) 'ctrl F10' DEFAULT    
    FILTERGROUP select FILTER 'Отм.' inSupplierStockReport(s) 'F9' 
    FILTERGROUP sold FILTER 'С продажей' quantitySoldSupplierFromTo(s,dFrom,dTo) 'F8'
    
    EVENTS ON INIT {
        SEEK dialogSupplierStocks.gt = defaultGroupType() IF defaultGroupType();
    }
;

DESIGN dialogSupplierStocks {
    BOX {
        size = (1024, 768);        
        NEW topContainer {
            type = SPLITH;
            fill = 1;

            MOVE BOX(TREE stockTree) {
                caption = 'Склады';
            }

            MOVE BOX(s) {
                fill = 3;
                GRID(s) {
                    defaultComponent = TRUE;
                }
                PROPERTY(name(s)){
                    charWidth = 35;
                }
            }
        }

        MOVE TOOLBARBOX;
    }
}
    
quantityPurchaseSupplierFromToLocal 'Закуплено за интервал (кол-во)' = DATA LOCAL NUMERIC[16,5](Stock);     
sumPurchaseSupplierFromToLocal 'Закуплено за интервал (сумма с НДС)' = DATA LOCAL NUMERIC[18,4](Stock);  
supplierSumPurchaseSupplierFromToLocal 'Закуплено за интервал (сумма без НДС)' = DATA LOCAL NUMERIC[18,4](Stock); 
quantitySoldSupplierFromToLocal 'Реализация (кол-во)' = DATA LOCAL NUMERIC[16,5](Stock); 
sumSoldSupplierFromToLocal 'Реализация (сумма)'  = DATA LOCAL NUMERIC[18,4](Stock);  
sumSaleSupplierFromToLocal 'Продано за интервал (сумма с НДС)' = DATA LOCAL NUMERIC[18,4](Stock);
supplierSumSaleSupplierFromToLocal 'Продано за интервал (сумма без НДС)' = DATA LOCAL NUMERIC[18,4](Stock);    
balanceBSupplierFromLocal 'Остаток на начало' = DATA LOCAL NUMERIC[16,5](Stock); 
sumBSupplierFromLocal 'Сумма с НДС начало' = DATA LOCAL NUMERIC[18,4](Stock); 
supplierSumBSupplierFromLocal 'Сумма без НДС начало' = DATA LOCAL NUMERIC[18,4](Stock); 
balanceASupplierToLocal 'Остаток на конец' = DATA LOCAL NUMERIC[16,5](Stock); 
sumASupplierToLocal 'Сумма с НДС конец' = DATA LOCAL NUMERIC[18,4](Stock); 
supplierSumASupplierToLocal 'Сумма без НДС конец' = DATA LOCAL NUMERIC[18,4](Stock);
 
resetSupLoc () { 
    quantityPurchaseSupplierFromToLocal(Stock st) <- NULL; 
    sumPurchaseSupplierFromToLocal(Stock st) <- NULL; 
    supplierSumPurchaseSupplierFromToLocal(Stock st) <- NULL; 
    quantitySoldSupplierFromToLocal(Stock st) <- NULL; 
    sumSoldSupplierFromToLocal(Stock st) <- NULL; 
    sumSaleSupplierFromToLocal(Stock st) <- NULL; 
    supplierSumSaleSupplierFromToLocal(Stock st) <- NULL; 
    balanceBSupplierFromLocal(Stock st) <- NULL; 
    sumBSupplierFromLocal(Stock st) <- NULL; 
    supplierSumBSupplierFromLocal (Stock st) <- NULL;        
    balanceASupplierToLocal(Stock st) <- NULL; 
    sumASupplierToLocal(Stock st) <- NULL; 
    supplierSumASupplierToLocal(Stock st) <- NULL;     
}
FORM supplierStockReportPrintAll 'По поставщикам'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL SUBREPORT
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)    
    
    OBJECTS st = Stock 
    PROPERTIES (st) SELECTOR name, fullName, nameLegalEntity, fullNameLegalEntity
    FILTERS inSupplierStockReport(st) AND dFrom IS DATE
    PROPERTIES  DRAW st stocksReport(), currentDate(), sessionConcatSkuGroups(), nameInSupplierStockReport()
             
    PROPERTIES(st) quantityPurchaseSupplierFromToLocal, sumPurchaseSupplierFromToLocal, supplierSumPurchaseSupplierFromToLocal,
                quantitySoldSupplierFromToLocal,sumSoldSupplierFromToLocal,
                sumSaleSupplierFromToLocal, supplierSumSaleSupplierFromToLocal
    PROPERTIES(st) balanceBSupplierFromLocal,  sumBSupplierFromLocal,  supplierSumBSupplierFromLocal        
    PROPERTIES(st) balanceASupplierToLocal,  sumASupplierToLocal,  supplierSumASupplierToLocal                              
;

supplierReportPrintAllCustom  (Stock st, DATE dFrom, DATE  dTo)  { 
    quantityPurchaseSupplierFromToLocal (st) <- (GROUP SUM quantityPurchaseSupplier(Sku sku, Stock stock, st, DATE date) IF date >= dFrom AND date <= dTo 
        AND inReport(stock) AND inSession(skuGroup(sku)));
    sumPurchaseSupplierFromToLocal (st) <- (GROUP SUM sumPurchaseSupplier(Sku sku, Stock stock, st, DATE date) IF date >= dFrom AND date <= dTo 
        AND inReport(stock) AND inSession(skuGroup(sku)));
    supplierSumPurchaseSupplierFromToLocal (st) <- (GROUP SUM (sumPurchaseSupplier(Sku sku, Stock stock, st, DATE date) (-)
        sumVATPurchaseSupplier (sku, stock, st, date))  IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(skuGroup(sku)));
    quantitySoldSupplierFromToLocal (st) <- [ GROUP SUM quantitySold(Batch batch, Stock stock, DATE date) IF date >= dFrom AND date <= dTo 
        AND inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st);
    sumSoldSupplierFromToLocal (st) <- [ GROUP SUM sumSold(Batch batch, Stock stock, DATE date) IF date >= dFrom AND date <= dTo 
        AND inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st);
    sumSaleSupplierFromToLocal (st) <- NUMERIC[18,4]([ GROUP SUM quantitySold(Batch batch, Stock stock, DATE date)* invoicePriceInvoiceDetail(batch)
        IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st));        
    supplierSumSaleSupplierFromToLocal (st) <- NUMERIC[18,4]([ GROUP SUM quantitySold(Batch batch, Stock stock, DATE date)* priceInvoiceDetail(batch)
        IF date >= dFrom AND date <= dTo AND inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st)); 
    balanceBSupplierFromLocal (st) <- [ GROUP SUM balanceB(Batch batch, Stock stock, dFrom) IF inReport(stock) AND inSession(skuGroup(sku(batch)))
        BY supplierStock(batch)](st);
    sumBSupplierFromLocal (st) <- NUMERIC[18,4]([  GROUP SUM balanceB(Batch batch, Stock stock, dFrom) * invoicePriceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st));        
    supplierSumBSupplierFromLocal (st) <- NUMERIC[18,4]([ GROUP SUM balanceB(Batch batch, Stock stock, dFrom)*priceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st)); 
    balanceASupplierToLocal (st) <- [ GROUP SUM balanceA(Batch batch, Stock stock, dTo) IF inReport(stock) AND inSession(skuGroup(sku(batch)))
        BY supplierStock(batch)](st);
    sumASupplierToLocal (st) <- NUMERIC[18,4]([  GROUP SUM balanceA(Batch batch, Stock stock, dTo) * invoicePriceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st));        
    supplierSumASupplierToLocal (st) <- NUMERIC[18,4]([ GROUP SUM balanceA(Batch batch, Stock stock, dTo)*priceInvoiceDetail(batch) 
        IF inReport(stock) AND inSession(skuGroup(sku(batch))) BY supplierStock(batch)](st)); 
}

supplierReportPrintAll 'Отчет по поставщику итог (xls)' (Stock st, DATE dFrom, DATE  dTo)  { 
    resetSupLoc ();
    supplierReportPrintAllCustom(st,dFrom,dTo);

    inSupplierStockReport(Stock stock) <- NULL;
    inSupplierStockReport(st) <- TRUE;
    PRINT supplierStockReportPrintAll OBJECTS dFrom = dFrom, dTo=dTo XLS;
    inSupplierStockReport(Stock stock) <- NULL;
}IMAGE 'print.png' IN print;

supplierReportPrintAllSelect 'Отчет по поставщикам (xls)' (DATE dFrom, DATE dTo)  { 
    inSupplierStockReport(Stock st) <- NULL;
    resetSupLoc ();
    DIALOG dialogSupplierStocks OBJECTS dFrom = dFrom, dTo = dTo DO {
        FOR inSupplierStockReport(Stock st) DO {
            supplierReportPrintAllCustom(st,dFrom,dTo);
        }        
        PRINT supplierStockReportPrintAll OBJECTS dFrom = dFrom, dTo = dTo XLS;   
    }     

    inSupplierStockReport(Stock st) <- NULL;
}IMAGE 'print.png' IN print; 

FORM supplierStockReport 'По поставщикам'

    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom = VALUE(dFrom), valTo = VALUE(dTo)    
    
    OBJECTS sup=Stock PANEL // склад поставщика
    PROPERTIES (sup) SELECTOR name
    FILTERS isSupplier(sup)
    
    TREE stockGroupTree b=BPSTRING[3], sg = StockGroup PARENT parent(sg)
    PROPERTIES READONLY VALUE(b), name(sg)
    ORDERS name(sg)
    FILTERS stringEqualsAll(b)
    
    OBJECTS st = Stock GRID
    PROPERTIES (st) READONLY name, id SHOWIF showIDs()
    PROPERTIES (st) inReport
    ORDERS name(st)
    FILTERS isParent(stockGroup(st), sg) OR
            st IS Stock AND NOT sg IS StockGroup OR
            st IS Stock AND sg IS StockGroup AND NOT stockGroup(st)   
    FILTERS isCompany(st)
    FILTERGROUP inactiveStock FILTER 'Активный' active(st) 'F10' DEFAULT
    
    TREE treeGroup g=SkuGroup PARENT parent(g)
    PROPERTIES inSession(g) ON CONTEXTMENU resetSelectedGroups()       
    PROPERTIES READONLY order(g), id(g) SHOWIF showIDs(), name(g) 

    ORDERS order(g), name(g)
    FILTERGROUP inactive FILTER 'Активные' active(g) 'F6' DEFAULT        
    PROPERTIES resetSelectedGroups() DRAW g        

    PROPERTIES(sup,dFrom,dTo) supplierReportPrintXLS, supplierReportPrintXLSX
    PROPERTIES  supplierReportPrintAll(sup,dFrom,dTo), supplierReportPrintAllSelect(dFrom,dTo) DRAW sup
;

@extendFormFilterStockAccess(st, supplierStockReport);

DESIGN supplierStockReport {
    NEW top {
        type = CONTAINERH;
        MOVE BOX(dates);
        MOVE BOX(sup) {caption = 'Поставщик';}
        MOVE GROUP(print,sup);
    }
    NEW header {
        fill = 1;
        type = SPLITH;
        NEW leftContainer {
            tabbed = TRUE;
            fill = 1;            
            NEW header1{
                type = SPLITV;
                fill = 1;
                caption = 'Склады компании';
                MOVE BOX(TREE stockGroupTree);
                MOVE BOX(st);            
            }        
        }
        MOVE BOX(TREE treeGroup) { 
            fill = 2;
            caption = 'Группы товаров';
        }            
    }
    MOVE TOOLBARBOX;
}
NAVIGATOR {
    stockReports{
        NEW supplierStockReport;
    }
}