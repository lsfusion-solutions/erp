MODULE InventoryZone;

REQUIRE Inventory, Terminal, EmployeeStock;

NAMESPACE Inventory;

CLASS Zone 'Зона';
TABLE zone(Zone);

name 'Наименование' = DATA ISTRING[100](Zone) IN id CHARWIDTH 15;
@defineExternalizable(zone, STRING[100]);

FORM zone 'Зона'
    OBJECTS z=Zone PANEL
    PROPERTIES(z) name, id SHOWIF showIDs()
    EDIT Zone OBJECT z
;

FORM zones 'Зоны'    
    OBJECTS z = Zone
    PROPERTIES(z) READONLYIF isReadonly() name, id SHOWIF showIDs()  
    PROPERTIES(z) NEWSESSION deleteb=DELETE      
    PROPERTIES(z) NEWSESSION NEW, EDIT

    ORDERS name(z)

    LIST Zone OBJECT z
;
@extendFormEditable(zones);

CLASS Commission 'Комиссия';
TABLE commission(Commission);

name 'Наименование' = DATA ISTRING[100](Commission) IN id;
note 'Примечание' = DATA ISTRING[255](Commission) CHARWIDTH 30;

@defineExternalizable(commission, STRING[100]);

FORM commission 'Комиссия'
    OBJECTS c = Commission PANEL
    PROPERTIES(c) name, id SHOWIF showIDs(), note

    EDIT Commission OBJECT c
;

FORM commissions 'Комиссии'
    OBJECTS c = Commission
    PROPERTIES(c) READONLY name, id SHOWIF showIDs(), note
    PROPERTIES(c)          NEWSESSION NEW, EDIT, DELETE 

    LIST Commission OBJECT c
;

NAVIGATOR {
     inventoryNavigator {
         NEW zones;
         NEW commissions;
     }
} 

zone (TerminalDocument d) = zone(idTerminalHandbookType1(d));
nameZone 'Зона' (TerminalDocument d) = name(zone(d));
commission (TerminalDocument d) = commission(idTerminalHandbookType2(d));
nameCommission 'Комиссия' (TerminalDocument d) = name(commission(d));

TABLE inventoryInventory (Inventory, TerminalDocument);

dataCountCommissions 'Кол-во комиссий для принятия решений' = DATA INTEGER (Inventory);
countCommissions 'Кол-во комиссий для принятия решений' (Inventory in) = OVERRIDE dataCountCommissions(in), 2 IF in IS Inventory;
in 'Вкл.' = DATA BOOLEAN (Inventory, TerminalDocument);
in 'Вкл.' (Inventory i, TerminalDocumentDetail d) = in(i, terminalDocument(d));

skipDelete (TerminalDocument d) += (GROUP SUM 1 IF in(Inventory i, d)) > 0;

zone (TerminalDocumentDetail d) = zone(terminalDocument(d)) MATERIALIZED;
commission (TerminalDocumentDetail d) = commission(terminalDocument(d)) MATERIALIZED;

in = GROUP SUM 1 IF in(Inventory i, TerminalDocument d) BY i, commission(d);
in = GROUP SUM 1 IF in(Inventory i, TerminalDocument d) BY i, zone(d);

TABLE inventoryZoneSku(Inventory, Zone, Sku);
dataQuantity = DATA NUMERIC[14,3](Inventory, Zone, Sku);
quantity = GROUP SUM quantity(TerminalDocumentDetail d) IF in(Inventory i, d) BY i, zone(d), sku(d);

quantity = GROUP SUM quantity(TerminalDocumentDetail d) IF in(Inventory i, d) BY i, zone(d), commission(d), sku(d);
countValue = GROUP SUM 1 BY quantity(Inventory i, Zone z, Commission c, Sku s), i,z,s;
overToQuantity (Inventory i,Zone z,Sku s) = GROUP MIN NUMERIC[14,3] q IF countValue( q, i, z, s) >= countCommissions(i); 
filterCommissionZone = GROUP SUM 1 IF quantity(Inventory i, Zone z, Commission c, Sku s) BY c,z;
toQuantity 'В опись' (Inventory i, Zone z, Sku s) = OVERRIDE  dataQuantity(i,z,s), overToQuantity(i,z,s);

background (Inventory i, Zone z, Sku s) =  CASE
    WHEN dataQuantity(i,z,s) THEN RGB (204,255,204)
    WHEN quantity (i,z,s) AND NOT overToQuantity(i,z,s) THEN RGB(255,153,153)
;
hintSoldBackground 'Зеленого чая'  = RGB(204,255,204) IF TRUE;  

diffQuantityInitial 'Количество расхождений (изначально)' (Inventory i,Zone z) = GROUP SUM 1 IF quantity (i, z, Sku s) 
                                                       AND NOT overToQuantity(i, z, s);     

diffQuantity 'Количество расхождений' (Inventory i,Zone z) = GROUP SUM 1 IF quantity (i, z, Sku s) 
                                                       AND NOT overToQuantity(i, z, s) AND NOT dataQuantity(i, z, s);     
 
diffBackground (Inventory i, Zone z) =  IF diffQuantity(i,z) THEN RGB(255,153,153) ELSE RGB (204,255,204);

filterTerminalDocumentDateFrom 'Дата с' = DATA LOCAL DATE ();
filterDateFrom (TerminalDocument i) = date(i) >= filterTerminalDocumentDateFrom() OR (i IS TerminalDocument AND NOT filterTerminalDocumentDateFrom());      

filterTerminalDocumentDateTo 'Дата по' = DATA LOCAL DATE ();
filterDateTo (TerminalDocument i) = date(i) <= filterTerminalDocumentDateTo() OR (i IS TerminalDocument AND NOT filterTerminalDocumentDateTo());   

countInventories (TerminalDocument td) = GROUP SUM 1 IF in(Inventory in, td); 

FORM searchTerminalDocument 'Документы ТСД'
    OBJECTS in = Inventory PANEL 
    
    PROPERTIES () filterTerminalDocumentDateFrom, filterTerminalDocumentDateTo
    
    OBJECTS td=TerminalDocument
    PROPERTIES (in,td) in
    PROPERTIES(td)  READONLY id, date, time, nameGroupTerminal, nameStock,
                    nameTerminalDocumentType, idTerminalHandbookType1, idTerminalHandbookType2,
                    title, comment, quantity, countTerminalDocumentDetail, 
                    quantityTerminalDocumentDetail, createdNameUser PANEL, createdTime PANEL
    
    OBJECTS tdd=TerminalDocumentDetail
    PROPERTIES(tdd) READONLY id, number, barcode, name, price, quantity, sum, comment, dateTimeScan

    FILTERS terminalDocument(tdd) == td,
            filterDateFrom(td), filterDateTo(td),
            (NOT countInventories(td)) OR (in(in,td))
            
    FILTERGROUP select
        FILTER 'Отм.' in(in,td)  'F10'             
;

@extendFormFilterAccessStock(TerminalDocument, td, searchTerminalDocument, stock, company);

DESIGN searchTerminalDocument {
    BOX {
        size = (1024, 768);
        NEW header {
            horizontal = TRUE;
            caption = 'Фильтры';
            MOVE PROPERTY (filterTerminalDocumentDateFrom());
            MOVE PROPERTY (filterTerminalDocumentDateTo());
        }
        NEW body{
            fill = 1;
            MOVE BOX(td);
            MOVE BOX(tdd);        
        }

    }
    MOVE TOOLBARBOX;
}    

changeTerminalDocument 'Выбрать документы ТСД' (Inventory in)  { 
    filterTerminalDocumentDateFrom() <- sum(date(in),-7);
    filterTerminalDocumentDateTo() <- date(in);
    SHOW searchTerminalDocument OBJECTS in = in  ;
    APPLY;
}
zone = DATA Zone (ListInventory);
nameZone 'Зона' (ListInventory li) = name(zone(li));

zoneDescription (ListInventory li) = CONCAT ' ', name(li), ('('+nameZone(li)+')');

EXTEND FORM inventory
    PROPERTIES zoneDescription = OVERRIDE zoneDescription(li), name(li) AFTER name(li) READONLY
;

DESIGN inventory {
    PROPERTY(name(li)){
        hide = TRUE;
    }
}

nameListInventories 'Описи'  = 
    GROUP CONCAT name(ListInventory li)  , ', ' 
    ORDER name(li), li 
    BY inventory(li), zone(li)
    CHARWIDTH 30;  

commissionDocumentTitles 'Документы ТСД'  =
    GROUP CONCAT title(TerminalDocument td)  , ', ' 
    IF in(Inventory in, zone(td)) AND in(in,td)  
    ORDER date(td), time(td)
    BY in, zone(td), idTerminalHandbookType2(td); 

commissionDocumentTitles 'Документы ТСД'  =
    GROUP CONCAT title(TerminalDocument td)  , ', ' 
    IF in(Inventory in, td) AND diffQuantityInitial(in, zone(td))  
    ORDER date(td), time(td)
    BY in, idTerminalHandbookType2(td); 

showCreateList (Inventory i, Zone z) = NOT diffQuantity(i,z) AND NOT nameListInventories(i, z);    

createListInventoryZone 'Создать опись по зоне' (Inventory in, Zone z)  { 
    
    LOCAL qty = NUMERIC[14,3](Inventory, Zone, Sku);
    qty(in, z, Sku s) <- toQuantity(in, z, s);
    
    IF (GROUP SUM qty(in, z, Sku s)) THEN NEW li = ListInventory {    
        inventory(li) <- in;
        zone(li) <- z;
        stock(li) <- (GROUP MAX Stock st IF include(st, in));
        note(li) <- STRING[100]('Зона '+ name(z));
        
        NEW p = PageInventory {
            listInventory(p) <- li;
            FOR qty(in, z, Sku s) ORDER name(s) NEW pid = PageInventoryDetail  DO {                
                pageInventory(pid) <- p;
                sku(pid) <- s;
                quantity(pid) <- qty(in,z,s);
            }            
        }                                                                                                                                       
    } 
    APPLY;
}

createListInventoryZones 'Создать описи по зонам' (Inventory in)  { 

    LOCAL qty = NUMERIC[14,3](Inventory, Zone, Sku);
    qty(in, Zone z, Sku s) <- toQuantity(in, z, s);
    
    FOR [ GROUP SUM qty(in, Zone z, Sku s) BY z ](Zone z) NEW li = ListInventory DO {
    
        inventory(li) <- in;
        zone(li) <- z;
        stock(li) <- (GROUP MAX Stock st IF include(st, in));
        note(li) <- STRING[100]('Зона '+name(z));
        
        NEW p = PageInventory {
            listInventory(p) <- li;
            FOR qty(in, z, Sku s) ORDER name(s) NEW pid = PageInventoryDetail  DO {                
                pageInventory(pid) <- p;
                sku(pid) <- s;
                quantity(pid) <- qty(in,z,s);
            }            
        }                                                                                                                                       
    } 
    APPLY;
}
    
diffFilter (Inventory i, Zone z, Sku s) =   quantity (i,z,s) AND NOT overToQuantity(i,z,s);
select = DATA LOCAL BOOLEAN (Zone);
overName = DATA LOCAL STRING[500] (Commission);

FORM diffZone 'Расхождения между комиссиями'
    OBJECTS          in=Inventory PANEL SUBREPORT
    PROPERTIES (in)  seriesNumber, number, series,
                     name, nameTypeOfAddition, nameIncludeSkuGroups SHOWIF isPartly(in) ON CHANGE changeSkuGroups(in), date, time,
                     note, isPartly SHOWIF isRemains(in),
                     timeFrom, timeTo, nameHeadMan,
                     nameCommittee, nameChairmanCommittee, nameEmployee

    OBJECTS zz = Zone SUBREPORT
    PROPERTIES (zz) READONLY id, name
    PROPERTIES (in, zz) READONLY nameListInventories
    FILTERS in(in,zz),
            select(zz)
 
    OBJECTS co = Commission SUBREPORT
    FILTERS in(in,co)
 
    OBJECTS ls = Sku GRID     
    PROPERTIES (ls) READONLY id, idBarcode, name, shortNameUOM 
    PROPERTIES READONLY quantity(in,zz,co,ls) COLUMNS (co) HEADER overName(co)
    PROPERTIES toQuantity (in,zz,ls) BACKGROUND background(in,zz,ls)
    
    FILTERS diffFilter (in,zz,ls)    
;

printDiffZone 'Расхождения (зона)' (Inventory in, Zone z)  { 
    select(Zone zz) <- NULL;
    select (z) <- TRUE;
    overName (Commission co) <- name(co) + ' (' + commissionDocumentTitles(in,z,id(co)) + ')';
    PRINT diffZone OBJECTS in = in FILTERS filterCommissionZone(co,z);
} IMAGE 'print.png' IN print;

printDiffZoneXLSX 'Расхождения (зона) XLSX' (Inventory in, Zone z)  { 
    select(Zone zz) <- NULL;
    select (z) <- TRUE;
    overName (Commission co) <- name(co) + ' (' + commissionDocumentTitles(in,z,id(co)) + ')';
    PRINT diffZone OBJECTS in = in FILTERS filterCommissionZone(co,z) XLSX ;
} IMAGE 'print.png' IN print;

printDiffZone 'Расхождения (все)' (Inventory in)  { 
    select(Zone zz) <- NULL;
    select (Zone zz) <- TRUE WHERE in(in,zz);
    overName (Commission co) <- name(co) + ' (' + commissionDocumentTitles(in,id(co)) + ')';
    PRINT diffZone OBJECTS in = in;
} IMAGE 'print.png' IN print;

FORM commissionsInventory 'Комиссии'
    OBJECTS i = Inventory PANEL
    OBJECTS c = Commission
    PROPERTIES(c) READONLY name, id, note
//    FILTERS in(i,c) 
;

changeCommission 'Комиссии' (Inventory i, TerminalDocument td) { 
    DIALOG commissionsInventory OBJECTS i = i, c = commission(idTerminalHandbookType2(td)) CHANGE DO {idTerminalHandbookType2(td) <- id(c);}
}
    
EXTEND FORM inventory
    PROPERTIES countCommissions(in) BACKGROUND hintSoldBackground()
    OBJECTS co = Commission
    FILTERS in(in,co)
    
    OBJECTS zz = Zone
    PROPERTIES (zz) READONLY id, name
    PROPERTIES (in, zz) READONLY nameListInventories 
    PROPERTIES (in,zz) READONLY diffQuantity BACKGROUND diffBackground(in,zz) 
    FILTERS in(in,zz)    
    PROPERTIES (in,zz) TOOLBAR DRAW zz createListInventoryZone SHOWIF showCreateList(in,zz)
    PROPERTIES (in) TOOLBAR DRAW zz changeTerminalDocument
    
    OBJECTS td=TerminalDocument
    PROPERTIES(td)  READONLY id, date, time, nameGroupTerminal, nameStock,
                    nameTerminalDocumentType, idTerminalHandbookType1 
    PROPERTIES(td)  READONLYIF isReadonly() idTerminalHandbookType2 ON CHANGE changeCommission(in,td)
    PROPERTIES(td)  READONLY title, comment, quantity, countTerminalDocumentDetail, 
                    quantityTerminalDocumentDetail, createdNameUser PANEL, createdTime PANEL
    
    OBJECTS tdd=TerminalDocumentDetail
    PROPERTIES(tdd) READONLY id, number, barcode, name, price, quantity, sum, comment, dateTimeScan

    FILTERS in(in,td),
            zone(td)==zz,
            terminalDocument(tdd) == td     
    
    OBJECTS ls = Sku GRID     
    PROPERTIES (ls) READONLY id, idBarcode, name, shortNameUOM    
    PROPERTIES READONLY quantity(in,zz,co,ls) COLUMNS (co) HEADER name(co)
    PROPERTIES toQuantity (in,zz,ls) BACKGROUND background(in,zz,ls)
    
    FILTERS quantity(in,zz,ls)   
    FILTERGROUP diff
        FILTER 'Разногласия' diffFilter (in,zz,ls)  'F10'     
      
    PROPERTIES (in) TOOLBAR DRAW ds createListInventoryZones 
    PROPERTIES TOOLBAR  DRAW ls SHOWIF countCommissions(in)>1 printDiffZone(in,zz) , printDiffZoneXLSX(in,zz), printDiffZone(in)
;
DESIGN inventory {
    topContainer {
        NEW terminalTab AFTER headerBox {
            fill = 1;
            caption = 'Описи';
            tabbed = TRUE;
            NEW terminalTab1 {
                fill = 1;
                caption = 'Зоны/комиссии';
                NEW termin {
                    MOVE PROPERTY (countCommissions(in));
                }
                NEW zls {
                    fill = 1;
                    horizontal = TRUE;
                    MOVE BOX(zz);
                    NEW zoneTab {
                        fill = 2.5;
                        tabbed = TRUE;
                        NEW ddt {
                            fill = 1;
                            caption = 'Документы';
                            MOVE BOX(td);
                            MOVE BOX(tdd);
                        }
                        MOVE BOX(ls);                   
                    }
                    
                }                              
                
                REMOVE BOX(co);
            }
            MOVE zBox;
        }
    }   
}

@extendFormEditable(inventory);

//журнал инвенторизации
idTerminalHandbookType1 'Зона' (TerminalDocumentDetail detail) = idTerminalHandbookType1(terminalDocument(detail));
idTerminalHandbookType2 'Комиссия' (TerminalDocumentDetail detail) = idTerminalHandbookType2(terminalDocument(detail));

EXTEND FORM inventories
    OBJECTS tdd=TerminalDocumentDetail
    PROPERTIES(tdd) READONLY id, number, barcode, name, price, quantity, sum, comment, dateTimeScan, idTerminalHandbookType1, idTerminalHandbookType2    
    FILTERS in(in,terminalDocument(tdd))   
;

DESIGN inventories {
    wor {
        NEW tddLog {
            caption = 'Строки описей';
            MOVE BOX(tdd);
        }
    }
}