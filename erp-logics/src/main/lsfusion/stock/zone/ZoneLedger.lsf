MODULE ZoneLedger;

REQUIRE Zone, Stock, Sku, Barcode, Operation;

NAMESPACE Zone;

CLASS ABSTRACT ZoneLedger 'Изменение остатка по зоне';
TABLE zoneLedger (ZoneLedger);

dateTime 'Дата/время' (ledger) = ABSTRACT DATETIME (ZoneLedger) MATERIALIZED INDEXED;
date 'Дата' (ZoneLedger ledger) = toDate(dateTime(ledger)) MATERIALIZED INDEXED;

number 'Номер' (ledger) = ABSTRACT STRING[48] (ZoneLedger) MATERIALIZED CHARWIDTH 10;

isPosted 'Проведен' (ledger) = ABSTRACT BOOLEAN (ZoneLedger) MATERIALIZED;
skip 'Не проводить' (ledger) = ABSTRACT BOOLEAN (ZoneLedger) MATERIALIZED; 
active (ZoneLedger ledger) = isPosted(ledger) AND NOT skip(ledger);

sku (ledger) = ABSTRACT Sku (ZoneLedger) MATERIALIZED INDEXED;
idSku 'Код' (ZoneLedger l) = id(sku(l));
nameSku 'SKU' (ZoneLedger ledger) = name(sku(ledger));
idBarcodeSku 'Штрихкод' (ZoneLedger l) = idBarcode(sku(l));

canonicalNameSkuGroup 'Группа (полная)' (ZoneLedger ledger) = canonicalName(skuGroup(sku(ledger)));

stock (ledger) = ABSTRACT Stock (ZoneLedger) MATERIALIZED INDEXED;
idStock 'Склад' (ZoneLedger ledger) = id(stock(ledger));
nameStock 'Склад' (ZoneLedger ledger) = name(stock(ledger));

operation (ledger) = ABSTRACT Operation.Operation (ZoneLedger) MATERIALIZED;
nameOperation 'Операция' (ZoneLedger ledger) = name(operation (ledger));

description 'Название документа' (ledger) = ABSTRACT STRING[200] (ZoneLedger) MATERIALIZED CHARWIDTH 20;

quantity 'Кол-во' (ledger) = ABSTRACT NUMERIC[16,5] (ZoneLedger) MATERIALIZED;

fromZone (ledger) = ABSTRACT Zone (ZoneLedger) MATERIALIZED;
nameFromZone 'Зона с' (ZoneLedger ledger) = staticCaption(fromZone(ledger));

INDEX fromZone(ZoneLedger l), stock(l), sku(l), dateTime(l);

toZone (ledger) = ABSTRACT Zone (ZoneLedger) MATERIALIZED INDEXED;
nameToZone 'Зона на' (ZoneLedger ledger) = staticCaption(toZone(ledger));

INDEX toZone(ZoneLedger l), stock(l), sku(l), dateTime(l);

quantityZoneLedgerFrom (st, fz ,s) = 
    GROUP SUM quantity(ZoneLedger d) IF isPosted(d) BY stock(d), fromZone(d), sku(d);
quantityZoneLedgerTo (st, tz, s) = 
    GROUP SUM quantity(ZoneLedger d) IF isPosted(d) BY stock(d), toZone(d), sku(d);    

TABLE stockZoneSku(Stock, Zone, Sku);
currentBalance 'Текущий остаток' (Stock st, Zone z, Sku s) =  quantityZoneLedgerTo(st,z,s) (-) quantityZoneLedgerFrom(st,z,s) MATERIALIZED;
prevCurrentBalance(Stock st, Zone z, Sku s)= PREV(currentBalance(st, z, s));
   
currentBalanceDefectZone 'Зона брака (текущий остаток)' (Stock st, Sku s) = currentBalance(st, Zone.defect, s);    
currentBalanceReturnZone 'Зона возврата (текущий остаток)' (Stock st, Sku s) = currentBalance(st, Zone.return, s);  
currentBalanceDiffZone 'Зона расхождения (текущий остаток)' (Stock st, Sku s) = currentBalance(st, Zone.diff, s);  

currentBalanceZones 'Текущий остаток в зонах' (Stock st, Sku s) = GROUP SUM currentBalance(st, Zone z, s);

prevCurrentBalanceDefectZone 'Зона брака (текущий остаток)'(Stock st, Sku s)= PREV(currentBalanceDefectZone(st, s));
prevCurrentBalanceReturnZone 'Зона возврата (текущий остаток)'(Stock st, Sku s)= PREV(currentBalanceReturnZone(st, s));
prevCurrentBalanceDiffZone 'Зона расхождения (текущий остаток)'(Stock st, Sku s)= PREV(currentBalanceDiffZone(st, s));
prevCurrentBalanceZones 'Текущий остаток' (Stock st, Sku s)= GROUP SUM prevCurrentBalance(st, Zone z, s);

overCurrentBalance 'Остаток без зон' (Sku s, Stock st) = currentBalance(s, st) (-) (currentBalanceZones(st, s) IF currentBalanceZones(st, s) > 0);
overPrevCurrentBalance 'Остаток без зон' (Sku s, Stock st) = prevCurrentBalance(s, st) (-) (prevCurrentBalanceZones(st, s) IF prevCurrentBalanceZones(st, s) > 0);

//-- расчет на дату
quantityZoneLedgerFromB (Zone z, Stock st, Sku s, DATETIME dt) = 
    GROUP SUM quantity(ZoneLedger d) IF isPosted(d) AND dateTime(d) >= dt BY fromZone(d), stock(d), sku(d);

quantityZoneLedgerToB (Zone z, Stock st, Sku s, DATETIME dt) = 
    GROUP SUM quantity(ZoneLedger d) IF isPosted(d) AND dateTime(d) >= dt BY toZone(d), stock(d), sku(d);
    
signedQuantityB (Zone z, Stock st, Sku s, DATETIME dt) = 
    quantityZoneLedgerToB(z, st, s, dt) (-) quantityZoneLedgerFromB(z, st, s, dt);  

balanceB 'Остаток на начало дня' (Stock st, Zone z, Sku s, DATE date) = 
    currentBalance(st, z, s) (-) signedQuantityB(z, st, s, DATETIME(date));
prevBalanceB 'Остаток на начало дня' (Stock st, Zone z, Sku s, DATE date) = PREV(balanceB(st, z, s, date));

balanceBDefectZone 'Зона брака (остаток на начало дня)' (Stock st, Sku s, DATE date) = balanceB(st, Zone.defect, s, date);    
balanceBReturnZone 'Зона возврата (остаток на начало дня)' (Stock st, Sku s, DATE date) = balanceB(st, Zone.return, s, date);  
balanceBDiffZone 'Зона расхождения (остаток на начало дня)' (Stock st, Sku s, DATE date) = balanceB(st, Zone.diff, s, date);  

prevBalanceBDefectZone 'Зона брака (остаток на начало дня)' (Stock st, Sku s, DATE date) = prevBalanceB(st, Zone.defect, s, date);    
prevBalanceBReturnZone 'Зона возврата (остаток на начало дня)' (Stock st, Sku s, DATE date) = prevBalanceB(st, Zone.return, s, date);  
prevBalanceBDiffZone 'Зона расхождения (остаток на начало дня)' (Stock st, Sku s, DATE date) = prevBalanceB(st, Zone.diff, s, date); 

balanceA 'Остаток на конец дня' (Stock st, Zone z, Sku s, DATE date) = 
    currentBalance(st,z,s) (-) signedQuantityB(z, st, s, DATETIME(sum(date, 1)));
prevBalanceA 'Остаток на конец дня' (Stock st, Zone z, Sku s, DATE date) = PREV(balanceA(st, z, s, date));

balanceADefectZone 'Зона брака (остаток на конец дня)' (Stock st, Sku s, DATE date) = balanceA(st, Zone.defect, s, date);    
balanceAReturnZone 'Зона возврата (остаток на конец дня)' (Stock st, Sku s, DATE date) = balanceA(st, Zone.return, s, date);  
balanceADiffZone 'Зона расхождения (остаток на конец дня)' (Stock st, Sku s, DATE date) = balanceA(st, Zone.diff, s, date);  

prevBalanceADefectZone 'Зона брака (остаток на конец дня)' (Stock st, Sku s, DATE date) = prevBalanceA(st, Zone.defect, s, date);    
prevBalanceAReturnZone 'Зона возврата (остаток на конец дня)' (Stock st, Sku s, DATE date) = prevBalanceA(st, Zone.return, s, date);  
prevBalanceADiffZone 'Зона расхождения (остаток на конец дня)' (Stock st, Sku s, DATE date) = prevBalanceA(st, Zone.diff, s, date);  

//-- расчет на дату/время
balanceB 'Остаток на начало' (Stock st, Zone z, Sku s, DATETIME dateTime) = 
    currentBalance(st, z, s) (-) signedQuantityB(z, st, s, dateTime);
prevBalanceB 'Остаток на начало' (Stock st, Zone z, Sku s, DATETIME dateTime) = PREV(balanceB(st, z, s, dateTime)); 
   
// form
skipShowBalanceZone = ABSTRACT BOOLEAN (Stock);

EXTEND FORM currentBalanceSkuStock
    PROPERTIES (s, st) READONLY SHOWIF (NOT skipShowBalanceZone(st)) overCurrentBalance
                                
    PROPERTIES (st, s) READONLY SHOWIF (NOT skipShowBalanceZone(st)) currentBalanceDefectZone, 
                                currentBalanceReturnZone,
                                currentBalanceDiffZone
;

show 'Просмотреть'  ABSTRACT (ZoneLedger) TOOLBAR;
skipEdit = ABSTRACT BOOLEAN (ZoneLedger);
allowedEdit (ZoneLedger z) = (allowedEditClosedDocuments(currentUser())) AND NOT skipEdit(z);
allowedShow  (ZoneLedger z) = z IS ZoneLedger AND NOT allowedEdit(z);

FORM zoneLedger 'Регистр движения по зонам'
    OBJECTS dates = (dFrom = DATE, dTo = DATE) PANEL
    PROPERTIES valFrom 'Дата с' = VALUE(dFrom), valTo 'Дата по' = VALUE(dTo)


    OBJECTS s = ZoneLedger
    PROPERTIES(s) READONLY dateTime, nameStock, nameFromZone, nameToZone,                          
                           canonicalNameSkuGroup, nameSku, idSku, idBarcodeSku, description, number,
                           quantity
    PROPERTIES(s) EDIT SHOWIF allowedEdit(s) NEWSESSION, show SHOWIF allowedShow(s)
    ORDERS dateTime(s)
    
    FILTERS active(s),
            dateTime(s) >= DATETIME(dFrom), dateTime(s) < DATETIME(sum(dTo, 1))
    
;

@extendFormFilterAccessStock(ZoneLedger, s, zoneLedger, stock, company);

NAVIGATOR {
    zoneNavigator  {
        NEW zoneLedger;
    }
}

TABLE zoneStockGroup(Zone, StockGroup); 
TABLE zoneStock(Zone, Stock);

allStocks 'Отм' = DATA BOOLEAN (Zone);
dataInBanNegativeBalance 'Отм' = DATA BOOLEAN (Zone, StockGroup);
dataInBanNegativeBalance 'Отм' = DATA BOOLEAN (Zone, Stock);
levelParent (Zone zone, StockGroup stockGroup) = GROUP
    MIN level(stockGroup, StockGroup parent) IF dataInBanNegativeBalance(zone, parent) MATERIALIZED;
parentInBanNegativeBalance (Zone zone, StockGroup stockGroup) = TRUE IF levelParent (zone, stockGroup) MATERIALIZED;
                                                               
inBanNegativeBalance 'Запрет отрицательного остатка' (Zone zone, StockGroup stockGroup) = OVERRIDE
    dataInBanNegativeBalance(zone, stockGroup),
    parentInBanNegativeBalance (zone, stockGroup),
    allStocks(zone) AND stockGroup IS StockGroup;

inBanNegativeBalance 'Запрет отрицательного остатка' (Zone zone, Stock stock) =
    (OVERRIDE dataInBanNegativeBalance(zone, stock),
              (inBanNegativeBalance(zone, stockGroup(stock)))) MATERIALIZED;

EXTEND FORM zone 
    TREE stockTree a=BPSTRING[3], sg = StockGroup PARENT parent(sg)
    PROPERTIES READONLY VALUE(a), sgTreeName = name(sg)
    PROPERTIES(z) allStocks DRAW a 
    PROPERTIES(z, sg) inBanNegativeBalance
    ORDERS sgTreeName
    FILTERS stringEqualsAll(a)
    FILTERS countCompanyStock(sg)

    OBJECTS ts = Stock
    PROPERTIES(z, ts) inBanNegativeBalance
    PROPERTIES READONLY active(ts), name(ts), nameLegalEntity(ts), nameRegion(ts)
    FILTERS ts IS Stock AND NOT sg IS StockGroup OR isParent(sg, ts),
            isCompany(ts)
    FILTERGROUP filters2
            FILTER 'Выбранные склады' inBanNegativeBalance(z, ts) 'F10'
    FILTERGROUP inactiveStock FILTER 'Активный' active(ts) 'ctrl F10' DEFAULT  
; 

DESIGN zone {
    OBJECTS {
        NEW stockContainer {
            caption = 'Запрет отрицательного остатка';
            type = SPLITH;
            fill = 1;
            NEW stockGroups {
                fill = 1;
                MOVE BOX(TREE stockTree) {
                    caption = 'Группы складов';
                }
            }
            MOVE BOX(ts) {
                fill = 2;
            }
        }                    
    }    
}

CONSTRAINT SET(currentBalance(Stock st, Zone z, Sku s) < 0) AND inBanNegativeBalance(z, st)
    MESSAGE 'На зоне склада не может быть отрицательный остаток по товару';
CONSTRAINT SET(inBanNegativeBalance(Zone z, Stock st)) AND GROUP MAX Sku s IF currentBalance(st, z, s) < 0
    MESSAGE 'На зоне склада не может быть отрицательный остаток по товару';

// meta
META implementZoneLedger(concrete, stockProp, NS)
    EXTEND CLASS concrete##Detail : ZoneLedger;

    dateTime (concrete##Detail ledger) += NS.dateTime(ledger);
    number (concrete##Detail ledger) += NS.number(ledger);
    isPosted (concrete##Detail ledger) += NS.isPosted(ledger);
    sku (concrete##Detail ledger) += NS.sku(ledger);
    stock (concrete##Detail ledger) += NS.stockProp(ledger);
    description (concrete##Detail ledger) += NS.description(ledger);
END

META extendFormZoneLedger (form, skuObject, stockObject, container)

    EXTEND FORM form
        OBJECTS z = Zone
        PROPERTIES READONLY name(z), currentBalance(stockObject, z, skuObject)
        FILTERGROUP zoneBalance
            FILTER 'С остатком' currentBalance(stockObject, z, skuObject) DEFAULT
    
        OBJECTS zl = ZoneLedger
        PROPERTIES(zl) READONLY dateTime, nameFromZone, nameToZone,                          
                               description, number, quantity
        PROPERTIES(zl) NEWSESSION EDIT
        ORDERS dateTime(zl) DESC
        
        FILTERS active(zl),
                sku(zl) = skuObject,
                stock(zl) = stockObject
    
        FILTERGROUP zoneFilter
            FILTER 'По зоне' fromZone(zl) = z OR toZone(zl) = z DEFAULT
    ;
                                           
    DESIGN form {
        container {
            NEW zoneContainer {
                caption = 'Зоны';
                type = SPLITH;
                MOVE BOX(z);            
                MOVE BOX(zl) { fill = 2; }
            }
        }
    }

END

@extendFormZoneLedger(currentBalanceSkuStock, s, st, ledgerBox);

META defineZoneLedger(objectClass)
    CLASS ###objectClass##ZoneLedger : ZoneLedger;
    TABLE ##objectClass###ZoneLedger (###objectClass##ZoneLedger);
    
    ##objectClass##ZoneLedger = AGGR ###objectClass##ZoneLedger WHERE zone(###objectClass ##objectClass) MATERIALIZED INDEXED;
    
    dateTime(###objectClass##ZoneLedger ledger) += dateTime(##objectClass(ledger));
    number(###objectClass##ZoneLedger ledger) += number(##objectClass(ledger));
    isPosted(###objectClass##ZoneLedger ledger) += isPosted(##objectClass(ledger));
    sku(###objectClass##ZoneLedger ledger) += sku(##objectClass(ledger));
    description(###objectClass##ZoneLedger ledger) += description(##objectClass(ledger));
    quantity(###objectClass##ZoneLedger ledger) += quantity(##objectClass(ledger));
    
    show(###objectClass##ZoneLedger ledger)  { 
        NEWSESSION {
            show(##objectClass(ledger));
        }
    }
    show(###objectClass##ZoneLedger ledger) + {  show(ledger); }
    skipEdit(###objectClass##ZoneLedger ledger) += TRUE;
    
END

META defineZoneLedgerIn(objectClass, house)
    @defineZoneLedger(objectClass);
    stock(###objectClass##ZoneLedger ledger) += ##house(##objectClass(ledger));
    toZone(###objectClass##ZoneLedger ledger) += zone(##objectClass(ledger));
END

META defineZoneLedgerOut(objectClass, house)
    @defineZoneLedger(objectClass);
    stock(###objectClass##ZoneLedger ledger) += ##house(##objectClass(ledger));
    fromZone(###objectClass##ZoneLedger ledger) += zone(##objectClass(ledger));
END

META extendFormDocumentSkuZone(objectClass, stockProp, sku, object)
    prevCurrentBalanceDefectZone 'Зона брака' (Sku s, ###objectClass o) = prevCurrentBalanceDefectZone(stockProp(o), s); 
    prevCurrentBalanceReturnZone 'Зона возврата' (Sku s, ###objectClass o) = prevCurrentBalanceReturnZone(stockProp(o), s); 
    prevCurrentBalanceDiffZone 'Зона расхождений' (Sku s, ###objectClass o) = prevCurrentBalanceDiffZone(stockProp(o), s); 

    overPrevCurrentBalance 'Остаток без зон' (Sku s, ###objectClass o) = overPrevCurrentBalance(s, stockProp(o)); 

    EXTEND FORM objectClass
        PROPERTIES (sku, object) READONLY overPrevCurrentBalance, prevCurrentBalanceDefectZone, prevCurrentBalanceReturnZone, prevCurrentBalanceDiffZone 
    ;      
END

META extendFormDocumentSkuZoneStock(objectClass, sku, stock)
    EXTEND FORM objectClass
        PROPERTIES (sku, stock) READONLY overPrevCurrentBalance 
        PROPERTIES (stock, sku) READONLY prevCurrentBalanceDefectZone, prevCurrentBalanceReturnZone, prevCurrentBalanceDiffZone
    ; 
END