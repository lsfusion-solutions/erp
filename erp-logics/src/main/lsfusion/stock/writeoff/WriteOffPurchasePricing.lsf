MODULE WriteOffPurchasePricing;

REQUIRE PricingWriteOff, WriteOffPurchase, PricingPurchase;

PRIORITY Purchase; 

NAMESPACE WriteOff;

// Создание акта расценки
@defineDocumentInterfaceProperty (invoice, createWriteOffPricing, 'Создать акт расценки при списании веревок');
createPricing (ShipmentWriteOff shipmentWriteOff) += createWriteOffPricing(invoice(shipment(shipmentWriteOff)));

@defineDocumentInterfaceOperationPrefix (invoice, shipmentWriteOffPricing, Pricing, ' (расценка при списании веревок)');
pricingOperation (ShipmentWriteOff shipmentWriteOff) += shipmentWriteOffPricingOperation(invoice(shipment(shipmentWriteOff)));

createWriteOffPricing 'Акт расценки при списании веревок' = DATA BOOLEAN (Purchase.Operation);

shipmentWriteOffPricingOperation  = DATA Pricing.Operation (Purchase.Operation);
nameshipmentWriteOffPricingOperation 'Операция (расценка при списании веревок)' (Purchase.Operation operation)=
    name(shipmentWriteOffPricingOperation(operation));

EXTEND FORM Purchase.operation
    PROPERTIES(o) createWriteOffPricing, nameshipmentWriteOffPricingOperation
;
DESIGN Purchase.operation {
    createContainer {
        MOVE PROPERTY(createWriteOffPricing(o));
        MOVE PROPERTY(nameshipmentWriteOffPricingOperation(o)) AFTER PROPERTY(createWriteOffPricing(o));
    }
}

@deriveDocumentOperationProperty(UserInvoice, createWriteOffPricing);
shipmentWriteOffPricingOperation (UserInvoice i) <- shipmentWriteOffPricingOperation(operation(i))
        WHEN CHANGED(operation(i));

WHEN LOCAL FORMS userInvoice CHANGED (createPricing(UserInvoice i)) AND NOT createPricing (i) DO {
    createWriteOffPricing (i) <- NULL;
}

retailMarkup (ShipmentWriteOffDetail d) += retailMarkup(invoiceDetail(shipmentDetail(d)));
supplierPrice (ShipmentWriteOffDetail d) += pricingPrice(invoiceDetail(shipmentDetail(d)));
retailVAT (ShipmentWriteOffDetail d) += retailVAT(invoiceDetail(shipmentDetail(d)));
valueRetailVAT (ShipmentWriteOffDetail d) += valueRetailVAT(invoiceDetail(shipmentDetail(d)));
retailPrice (ShipmentWriteOffDetail d) += retailPrice(invoiceDetail(shipmentDetail(d)));

supplierSumCalc(ShipmentWriteOffDetail d) =  NUMERIC[18,4](round(writeOffQuantity(shipmentDetail(d)) * pricingPrice(invoiceDetail(shipmentDetail(d))), currency(invoiceDetail(shipmentDetail(d)))));
retailSumCalc(ShipmentWriteOffDetail d) =  NUMERIC[18,4](round(writeOffQuantity(shipmentDetail(d)) * retailPrice(invoiceDetail(shipmentDetail(d))), currency(invoiceDetail(shipmentDetail(d)))));
retailVATSumCalc (ShipmentWriteOffDetail d) = NUMERIC[18,4](round([ X*Y/(100+Y)](retailSumCalc(d), valueRetailVAT(invoiceDetail(shipmentDetail(d)))), currency(invoiceDetail(shipmentDetail(d)))));
retailMarkupSumCalc (ShipmentWriteOffDetail d) = retailSumCalc(d) (-) retailVATSumCalc (d) (-) supplierSumCalc(d);

supplierSum(ShipmentWriteOffDetail d) +=  supplierSumCalc(d);
retailSum(ShipmentWriteOffDetail d) +=  retailSumCalc(d);
retailVATSum (ShipmentWriteOffDetail d) += retailVATSumCalc(d);
retailMarkupSum (ShipmentWriteOffDetail d) +=retailMarkupSumCalc(d);

createPurchaseWriteOffAndPricing(UserInvoice i) = createPurchaseWriteOff(i) AND createPricing(i);
createPurchaseWriteOffAndPricingForOperation(UserInvoice i) = createPurchaseWriteOffAndPricing(i) AND createWriteOffPricing(i);

EXTEND FORM userInvoice
    PROPERTIES(i) SHOWIF createPurchaseWriteOffAndPricing(i) createWriteOffPricing
    PROPERTIES(i) SHOWIF createPurchaseWriteOffAndPricingForOperation(i) nameShipmentWriteOffPricingOperation
;
DESIGN userInvoice {
    writeOffHeader {
        MOVE PROPERTY(createWriteOffPricing(i));
        MOVE PROPERTY(nameShipmentWriteOffPricingOperation(i));
    }
}
