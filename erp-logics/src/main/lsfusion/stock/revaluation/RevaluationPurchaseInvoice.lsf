MODULE RevaluationPurchaseInvoice;

REQUIRE RevaluationManufacturingPrice, PurchaseInvoice, PurchaseShipment, PurchaseDeclarationDetail, PurchaseManufacturingPrice, RevaluationOperation;

PRIORITY Purchase;

NAMESPACE Revaluation;

@defineDocumentInterfaceProperty (revaluation, showInvoice, 'Расценка');

invoiceDetail 'Строка накладной' = invoiceDetail(batch(RevaluationDetail detail));
descriptionInvoiceDetail 'Строка накладной' = description(invoiceDetail(RevaluationDetail detail));

contractPrice 'Контрактная цена (после)' = ABSTRACT NUMERIC[16,4] (RevaluationDetail); 

priceInvoiceDetail 'Контрактная цена' (RevaluationDetail detail) = OVERRIDE contractPrice(detail), price(invoiceDetail(detail));
currencyInvoiceDetail 'Валюта контрактной цены' (RevaluationDetail detail) = currency(invoiceDetail(detail));
shortNameCurrencyInvoiceDetail 'Валюта контрактной цены' (RevaluationDetail detail) = shortName(currencyInvoiceDetail(detail));
rateExchangeInvoiceDetail 'Курс обмена' (RevaluationDetail detail) = rateExchange(invoiceDetail(detail));
homePriceInvoiceDetail 'Контрактная цена (конверт.)' = homePrice(invoiceDetail(RevaluationDetail detail));
priceDutyInvoiceDetail 'Пошлина (ед.)' = dutyPrice(invoiceDetail(RevaluationDetail detail));
priceRegistrationInvoiceDetail 'Таможенный сбор (ед.)' = registrationPrice(invoiceDetail(RevaluationDetail detail));
manufacturingMarkupInvoiceDetail 'Надбавка, % (к цене изготовителя)' = manufacturingMarkup(invoiceDetail(RevaluationDetail detail));

rateExchange 'Курс обмена (новый)' = ABSTRACT NUMERIC[15,8] (RevaluationDetail);
rateExchange 'Курс обмена (новый)' = DATA NUMERIC[15,8] (UserRevaluationDetail);
rateExchange(UserRevaluationDetail d) += rateExchange(d);

@defineDocumentInterfaceHeaderPriceListType (revaluation, calcPriceListType, manufacturing, ' (надбавка)');
@defineDocumentDetailPriceListTypePrefix (revaluation, revaluationDetail, calcPriceListType, manufacturing, ' (надбавка)');
@defineDocumentDetailPriceListTypePrefix (userRevaluation, userRevaluationDetail, calcPriceListType, manufacturing, ' (надбавка)');

@defineDocumentInterfaceDetailMarkupCustomPrefix (revaluationDetail, manufacturing, ' (к цене изготовителя)');

manufacturingCalcPriceListType = DATA CalcPriceListType (Revaluation.Operation);
nameManufacturingCalcPriceListType 'Вид цен (надбавка к цене изготовителя)' (Operation operation) = name(manufacturingCalcPriceListType(operation));

manufacturingCalcPriceListType (UserRevaluation revaluation) <- manufacturingCalcPriceListType(operation(revaluation))
    WHEN CHANGED(operation(revaluation));

manufacturingMarkup(UserRevaluationDetail detail) <- markup(manufacturingCalcPriceListType(detail), sku(detail))
    WHEN CHANGED(manufacturingCalcPriceListType(detail)) OR
         CHANGED(sku(detail));

EXTEND FORM Revaluation.operation
    PROPERTIES(o) nameManufacturingCalcPriceListType
;

DESIGN Revaluation.operation{
    showContainer {
        MOVE PROPERTY(nameManufacturingCalcPriceListType(o));
    }
}

typeExchange 'Тип обмена' = DATA TypeExchange (UserRevaluation);
nameTypeExchange 'Тип обмена' = name(typeExchange(UserRevaluation document)) IN documentPrm;
typeExchange = typeExchange(userRevaluation(UserRevaluationDetail detail));

incomeManufacturingPrice (RevaluationDetail detail) = priceInvoiceDetail(detail)*rateExchange(detail);

costManufacturingPrice(RevaluationDetail detail) = priceInvoiceDetail(detail)*rateExchange(detail) (+) 
    extraCostPrice(invoiceDetail(detail)) (+) 
    customCostPrice(invoiceDetail(detail))(+) 
    certificateCostPrice(invoiceDetail(detail));

 addCostPriceToManufacturingPrice 'Учитывать доп. расходы' (invoice) = DATA BOOLEAN (UserRevaluation) IN documentPrm;
 addCostPriceToManufacturingPriceRevaluation 'Учитывать в цене изготовителя доп. расходы' = DATA BOOLEAN (Operation);
 addCostPriceToManufacturingPrice(UserRevaluation revaluation) <- addCostPriceToManufacturingPriceRevaluation(operation(revaluation))
     WHEN CHANGED(operation(revaluation));
                                 
calcBaseManufacturingPrice 'Себестоимость (ед.)' (RevaluationDetail detail)= IF addCostPriceToManufacturingPrice(revaluation(detail)) 
                                    THEN costManufacturingPrice(detail)
                                    ELSE incomeManufacturingPrice(detail);
calcManufacturingPrice (RevaluationDetail detail) = IF roundCondition(manufacturingCalcPriceListType(detail)) THEN
        Utils.round(calcBaseManufacturingPrice (detail) * (100.0 (+) manufacturingMarkup(detail))/100, priceRound(roundCondition(manufacturingCalcPriceListType(detail))))
    ELSE 
        Utils.round(calcBaseManufacturingPrice (detail) * (100.0 (+) manufacturingMarkup(detail))/100,2)
;
        
WHEN LOCAL FORMS userRevaluation
    (CHANGED(rateExchange[UserRevaluationDetail](RevaluationDetail detail)) OR CHANGED (manufacturingMarkup[UserRevaluationDetail](detail)) OR 
     CHANGED(invoiceDetail(detail)) OR CHANGED(addCostPriceToManufacturingPrice(revaluation(detail)))) AND invoiceDetail(detail) DO {
        manufacturingPrice[UserRevaluationDetail](detail) <- NUMERIC[16,4](calcManufacturingPrice(detail));
    }     

overCalcRateExchange = ABSTRACT NUMERIC[15,8](UserRevaluationDetail);

calcRateExchange = OVERRIDE overCalcRateExchange(UserRevaluationDetail detail), rateOn(typeExchange(userRevaluation(detail)),
    currencyInvoiceDetail(detail), toDate(dateTime[RevaluationDetail](detail)));

rateExchange(UserRevaluationDetail detail) <- calcRateExchange(detail)
    WHEN CHANGED(typeExchange(detail)) OR CHANGED(dateTime[RevaluationDetail](detail));

backgroundRetail 'Цвет' (Revaluation revaluation) = RGB(224, 255, 255) IF revaluation IS Revaluation;

EXTEND FORM userRevaluation
    PROPERTIES (p) showInvoice, nameTypeExchange SHOWIF showInvoice(p) BACKGROUND backgroundRetail(p), 
    addCostPriceToManufacturingPrice SHOWIF showInvoice(p), nameManufacturingCalcPriceListType SHOWIF showInvoice(p)
    PROPERTIES (d) BACKGROUND backgroundRetail(p) SHOWIF showInvoice(p) AFTER nameBatch(d) descriptionInvoiceDetail
    PROPERTIES (d) SHOWIF showInvoice(p) BEFORE curManufacturingPrice(d) READONLY priceInvoiceDetail,
                   shortNameCurrencyInvoiceDetail, rateExchangeInvoiceDetail,
                   priceDutyInvoiceDetail, priceRegistrationInvoiceDetail,
                   manufacturingMarkupInvoiceDetail
    PROPERTIES (d) SHOWIF showInvoice(p) BEFORE manufacturingPrice(d) rateExchange, manufacturingMarkup
;

DESIGN userRevaluation{
    PROPERTY(manufacturingMarkup(d)) { background = #FFFFCC; }
    PROPERTY(rateExchange(d)) { background = #FFFFCC; }
    PROPERTY(manufacturingSum(d)) { background = #FFFFCC; }
    PROPERTY(manufacturingPrice(d)) { background = #FFFFCC; }
    PROPERTY(price(d)) { background = #FFFFCC; }
    PROPERTY(sum(d)) { background = #FFFFCC; }
}

in (RevaluationDetail ledger, SystemLedgerPriceListType type) += WHEN rateExchange(ledger) AND type == SystemLedgerPriceListType.rateExchangeStockPriceListType THEN TRUE;
price (RevaluationDetail ledger, SystemLedgerPriceListType type) += WHEN rateExchange(ledger) AND type == SystemLedgerPriceListType.rateExchangeStockPriceListType THEN NUMERIC[16,4](rateExchange(ledger));

@defineOperationProperty(showInvoice, 'Расценка импорта', showContainer);
@deriveDocumentOperationProperty(UserRevaluation, showInvoice);

typeExchange= DATA TypeExchange (Operation);
nameTypeExchange 'Тип обмена' (Operation o) = name(typeExchange(o));
EXTEND FORM operation
    PROPERTIES(o) nameTypeExchange, addCostPriceToManufacturingPriceRevaluation
;
DESIGN operation {
    showContainer {
        MOVE PROPERTY(nameTypeExchange(o));
        MOVE PROPERTY(addCostPriceToManufacturingPriceRevaluation(o));
    }
}

@deriveDocumentOperationProperty(UserRevaluation, typeExchange);

@defineReserveSku(revaluationDetail, stock);

@defineReserveSku(userRevaluationDetail, stock);