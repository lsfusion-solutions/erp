MODULE MarketingInvoiceReverse;

REQUIRE MarketingInvoice, SaleInvoice, SaleReturnInvoice;

NAMESPACE Marketing;


EXTEND CLASS CalcBase {
    customerVAT 'Продажа с НДС',
    customer 'Продажа без НДС'
}

skipMarketing = ABSTRACT BOOLEAN (Sale.UserInvoiceDetail);
skipMarketing = ABSTRACT BOOLEAN (SaleReturn.UserInvoiceDetail);

overQuantityMarketing = ABSTRACT NUMERIC[16,5] (Sale.UserInvoiceDetail);
overSumMarketing = ABSTRACT NUMERIC[18,4] (Sale.UserInvoiceDetail);
overInvoiceSumMarketing = ABSTRACT NUMERIC[18,4] (Sale.UserInvoiceDetail);

quantityMarketing(Sale.UserInvoiceDetail d) = OVERRIDE overQuantityMarketing(d), quantity(d);
sumMarketing(Sale.UserInvoiceDetail d) = OVERRIDE overSumMarketing(d), sum(d);
invoiceSumMarketing(Sale.UserInvoiceDetail d) = OVERRIDE overInvoiceSumMarketing(d), invoiceSum(d);

overQuantityMarketing = ABSTRACT NUMERIC[16,5] (SaleReturn.UserInvoiceDetail);
overSumMarketing = ABSTRACT NUMERIC[18,4] (SaleReturn.UserInvoiceDetail);
overInvoiceSumMarketing = ABSTRACT NUMERIC[18,4] (SaleReturn.UserInvoiceDetail);

quantityMarketing(SaleReturn.UserInvoiceDetail d) = OVERRIDE overQuantityMarketing(d), quantity(d);
sumMarketing(SaleReturn.UserInvoiceDetail d) = OVERRIDE overSumMarketing(d), sum(d);
invoiceSumMarketing(SaleReturn.UserInvoiceDetail d) = OVERRIDE overInvoiceSumMarketing(d), invoiceSum(d);

createDetailSale(MarketingInvoice i, ContractMarketing c, DATE df, DATE dt) + {
    LOCAL in = BOOLEAN (Sale.UserInvoiceDetail);
    in(Sale.UserInvoiceDetail d) <- TRUE WHERE customer(d) == customer(c) AND date(d) >= df AND date(d) <= dt AND isPosted(d) AND NOT skipMarketing(d);

    LOCAL marketingCondition = MarketingCondition (Sale.InvoiceDetail, ConditionType);
    marketingCondition (Sale.InvoiceDetail d, ConditionType t) <- marketingCondition(c, t, supplierStock(d), sku(d), date(d), price(d)) WHERE in(d);

    LOCAL in = BOOLEAN (SaleReturn.UserInvoiceDetail);
    in(SaleReturn.UserInvoiceDetail d) <- TRUE WHERE customer(d) == customer(c) AND date(d) >= df AND date(d) <= dt AND isPosted(d) AND NOT skipMarketing(d);

    LOCAL marketingCondition = MarketingCondition (SaleReturn.InvoiceDetail, ConditionType);
    marketingCondition (SaleReturn.InvoiceDetail d, ConditionType t) <- marketingCondition(c, t, supplierStock(d), sku(d), date(d), price(d)) WHERE in(d);

    LOCAL quantitySale = NUMERIC[16,5] (MarketingCondition, Sku, Stock);
    quantitySale(MarketingCondition mc, Sku sk, Stock st) <- [ GROUP SUM quantityMarketing(Sale.InvoiceDetail d) BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st);

    LOCAL quantitySaleReturn = NUMERIC[16,5] (MarketingCondition, Sku, Stock);
    quantitySaleReturn(MarketingCondition mc, Sku sk, Stock st) <- [ GROUP SUM quantityMarketing(SaleReturn.InvoiceDetail d) BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st);

    FOR (quantitySale(MarketingCondition mc, Sku sk, Stock st) OR quantitySaleReturn(mc, sk, st))
        AND (calcBase(mc) == CalcBase.customer 
        OR calcBase(mc) == CalcBase.customerVAT)
        NEW md = MarketingInvoiceDetail DO {
        marketingInvoice(md) <- i;
        condition(md) <- mc;
        conditionTypeMarketing(md) <- conditionType(mc);
        calcBase(md) <- calcBase(mc);
        sku(md) <- sk;
        stock(md) <- st;
        quantity(md) <- quantitySale(mc, sk, st) (-) quantitySaleReturn(mc, sk, st);
        marketingPercent(md) <- marketingPercent(mc);
        sum (md) <- CASE 
                        WHEN calcBase(mc) == CalcBase.customerVAT THEN 
                            NUMERIC[18,2]([ GROUP SUM invoiceSumMarketing(Sale.InvoiceDetail d) BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st))
                        WHEN calcBase(mc) == CalcBase.customer THEN 
                            NUMERIC[18,2]([ GROUP SUM sumMarketing(Sale.InvoiceDetail d) BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st));
        returnSum(md) <- CASE 
                            WHEN calcBase(mc) == CalcBase.customerVAT THEN 
                                NUMERIC[18,2]([ GROUP SUM invoiceSumMarketing(SaleReturn.InvoiceDetail d) BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st))
                            WHEN calcBase(mc) == CalcBase.customer THEN
                                NUMERIC[18,2]([ GROUP SUM sumMarketing(SaleReturn.InvoiceDetail d) BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st));

        in(md, Sale.InvoiceDetail d) <- TRUE WHERE [GROUP SUM 1 BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st);                 
        in(md, SaleReturn.InvoiceDetail d) <- TRUE WHERE [GROUP SUM 1 BY marketingCondition(d, ConditionType t), sku(d), supplierStock(d)](mc, sk, st);
    }
}
