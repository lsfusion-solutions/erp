MODULE AssemblyAccountPrice;

REQUIRE Assembly, AssemblyCost, AssemblyAccountLedger;

NAMESPACE Assembly;

accountPrice 'Учетная цена (после)' = DATA NUMERIC[16,4] (Assembly);
accountLedgerPrice (Assembly d) += accountPrice(d);

@defineCalcAveragePrice(Assembly, stock);

recalculateCostAccountFirst(DATE dFrom, DATE dTo) +{
    logToFile('cost', 'Начат пересчет цен в сборках (приход)');
    APPLY NESTED LOCAL {
        accountPrice(Assembly d) <- calcAccountPrice(d)
            WHERE date(d) >= dFrom AND date(d) <= dTo AND calcRecalculateCost(sku(d)) AND NOT date(d) < documentsClosedDate(stock(d));
    }
    logToFile('cost', 'Закончен пересчет цен в сборках (приход)');
}
