MODULE DisassemblyLotMachinery;

REQUIRE DisassemblyLot, CashRegisterPriceTransactionCustomLot;

NAMESPACE Disassembly;

EXTEND CLASS Disassembly : Machinery.PriceTransactionDocument;
isDraft[PriceTransactionDocument] (Disassembly document) += Disassembly.isDraft(document);
description[PriceTransactionDocument] (Disassembly document) += STRING[200](description(document));
date[PriceTransactionDocument] (Disassembly document) += Disassembly.date(document);
time[PriceTransactionDocument] (Disassembly document) += Disassembly.time(document);
series[PriceTransactionDocument] (Disassembly document) += Disassembly.series(document);
number[PriceTransactionDocument] (Disassembly document) += Disassembly.number(document);
operation[PriceTransactionDocument] (Disassembly document) += operation(document);

 
createCashRegisterPriceTransactionDocumentLot 'Загрузить в оборудование' (Disassembly d) {
    createMachineryPriceTransactionLot(Lot l) <- NULL;
    createMachineryPriceTransactionLot(Lot l) <- TRUE WHERE quantity(d, l);
    createMachineryPriceTransactionLotDocument() <- d;
    createMachineryPriceTransactionLotComment() <- STRING[100](description(d));
    
    createMachineryPriceTransactionLot(stock(d));
    APPLY;
} CONFIRM;

backgroundCreateMachineryPriceTransaction 'Цвет' (PriceTransactionDocument disassembly) = IF countProcess(disassembly) THEN
                                                                            RGB(255,255,128)
                                                                         ELSE
                                                                            RGB(212,255,212) IF NOT sent(disassembly);

EXTEND FORM disassemblies
    PROPERTIES(a) statusMachinery BACKGROUND backgroundCreateMachineryPriceTransaction(a) READONLY AFTER sumDisassemblyDetail(a),        
                  createCashRegisterPriceTransactionDocumentLot SHOWIF useLot(a) READONLYIF isDraft(a)
;

DESIGN disassemblies {
    actions{
        NEW machinery {                 
            caption = 'Загрузки' ;
            horizontal = FALSE;    
            MOVE PROPERTY (createCashRegisterPriceTransactionDocumentLot(a)) { alignment = STRETCH; }
        }
    }
    PROPERTY(statusMachinery(a)) { charWidth = 15; } 
}

@extendFormDocumentMachineryPriceTransactionError(disassemblies, a, disassembly, tabbedPane);