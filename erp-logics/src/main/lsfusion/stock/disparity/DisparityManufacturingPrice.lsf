MODULE DisparityManufacturingPrice;

REQUIRE Disparity, PurchaseManufacturingPrice;

@defineDocumentInterfaceDetailPricePrefix(disparity, curInputManufacturing, ' изготовителя до');
//@deriveDocumentDetailPriceSystemLedgerPriceListType(disparity, manufacturingPriceStockPriceListType, curInputManufacturing, sku, stock);

overCurInputManufacturingPrice = ABSTRACT VALUE NUMERIC[16,4] (UserDisparityDetail);
curInputManufacturingPrice (UserDisparityDetail detail)  <- OVERRIDE overCurInputManufacturingPrice(detail), round2(prevPriceB(SystemLedgerPriceListType.manufacturingPriceStockPriceListType,
                                                                                                         sku(detail),
                                                                                                         stock(detail),
                                                                                                         dateTime(detail)))
                                                WHEN DO CHANGED(sku(detail)) OR
                                                     CHANGED(stock(detail)) OR
                                                     CHANGED(dateTime(detail)) OR
                                                     CHANGED(batch(detail));

@defineDocumentInterfaceDetailPricePrefix(disparity, afterInputManufacturing, ' изготовителя после');

afterInputManufacturingPrice(UserDisparityDetail detail) <- curInputManufacturingPrice(detail) WHEN CHANGED (curInputManufacturingPrice(detail));

@defineDocumentInterfaceDetailDataSumPrefix(disparity, curInputManufacturing, ' изготовителя до');
@deriveDocumentDetailSumPrefix(userDisparity, curInputManufacturing, currency, inputQuantity);

@defineDocumentInterfaceDetailDataSumPrefix(disparity, afterInputManufacturing, ' изготовителя после');
@deriveDocumentDetailSumPrefix(userDisparity, afterInputManufacturing, currency, inputQuantity);

showIfManufacturingPrice= ABSTRACT CASE BOOLEAN (DisparityDetail);

backgroundCurInputManufacturingPrice= ABSTRACT CASE COLOR (DisparityDetail);
overCurInputManufacturingPrice  ABSTRACT LIST (UserDisparityDetail);
changeCurInputManufacturingPrice(UserDisparityDetail disparityDetail)  { 
    INPUT n = NUMERIC[16,4] DO {
        curInputManufacturingPrice(disparityDetail) <- n;
        overCurInputManufacturingPrice(disparityDetail);
    }
}
//--
backgroundAfterInputManufacturingPrice= ABSTRACT CASE COLOR (DisparityDetail);
overAfterInputManufacturingPrice  ABSTRACT LIST (UserDisparityDetail);
changeAfterInputManufacturingPrice(UserDisparityDetail disparityDetail)  { 
    INPUT n = NUMERIC[16,4] DO {
        afterInputManufacturingPrice(disparityDetail) <- n;
        overAfterInputManufacturingPrice(disparityDetail);
    }
}

EXTEND FORM disparity
    PROPERTIES(d)  AFTER inputSum(d)
                   curInputManufacturingPrice ON CHANGE changeCurInputManufacturingPrice(d) 
                   BACKGROUND backgroundCurInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d),
                   curInputManufacturingSum BACKGROUND backgroundCurInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d),
                   afterInputManufacturingPrice ON CHANGE changeAfterInputManufacturingPrice(d) 
                   BACKGROUND backgroundAfterInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d),
                   afterInputManufacturingSum BACKGROUND backgroundAfterInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d)                   
                   
;
EXTEND FORM disparities
                   
    PROPERTIES(d)  READONLY AFTER inputSum(d) 
                   curInputManufacturingPrice BACKGROUND backgroundCurInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d),
                   curInputManufacturingSum BACKGROUND backgroundCurInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d),  
                   afterInputManufacturingPrice BACKGROUND backgroundAfterInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d),
                   afterInputManufacturingSum BACKGROUND backgroundAfterInputManufacturingPrice(d) SHOWIF showIfManufacturingPrice(d)                   
;