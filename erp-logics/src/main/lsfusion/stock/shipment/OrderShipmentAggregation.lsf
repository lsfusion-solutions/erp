MODULE OrderShipmentAggregation;

REQUIRE InvoiceOrderAggregation;

NAMESPACE Shipment;

META defineInvoiceOrderShipment(sign, NS)
    
    @defineDocumentInterfaceDetailQuantityPrefix (order, shipment, ' (поставлено)');
    @defineDocumentInterfaceDetailPricePrefix(order, shipment, ' (учетная)');
    @defineDocumentInterfaceDetailDataSumPrefix (order, shipment, ' (учетная)');
    @deriveDocumentDetailSumPrefix(userOrder, shipment, currency, shipmentQuantity);  
    @defineDocumentInterfaceHeaderSumPrefix (order, shipment, ' (учетная)'); 
     
    @defineDocumentInterfaceHeaderCreateShipment (order); 
    skipChangedShipmentQuantity = ABSTRACT BOOLEAN (UserOrderDetail);
    shipmentQuantity(UserOrderDetail detail) <- IF invoiceQuantity(detail) 
                                                    THEN invoiceQuantity(detail)
                                                    ELSE quantity(detail) 
        WHEN (CHANGED(quantity(detail)) OR CHANGED(invoiceQuantity(detail))) AND NOT skipChangedShipmentQuantity(detail);
        
    @defineDocumentInterfaceDetailExpiryDate(order);
    @defineDocumentInterfaceDetailManufactureDate(order);
    
    overExpiryDate = ABSTRACT DATE (OrderDetail);
    calcExpiryDate (OrderDetail d) = OVERRIDE 
        overExpiryDate(d),
        (IF expiryMonth(sku[UserOrderDetail](d)) 
            THEN sumMonth(manufactureDate(d), expiryMonth(sku(d)))
            ELSE sum(manufactureDate(d), expiryDays(sku(d))));
        
    WHEN LOCAL FORMS userOrder (CHANGED(manufactureDate(OrderDetail d)) OR CHANGED(sku[UserOrderDetail](d))) AND NOT batch[UserOrderDetail](d) AND manufactureDate(d) DO {
        expiryDate[UserOrderDetail](d) <- calcExpiryDate(d);            
    } 
    overManufactureDate = ABSTRACT DATE (OrderDetail);
    calcManufactureDate (OrderDetail d) = OVERRIDE 
        overManufactureDate(d),
        (IF expiryMonth(sku[UserOrderDetail](d)) 
            THEN sumMonth(expiryDate(d), -expiryMonth(sku(d)))
            ELSE sum(expiryDate(d), -expiryDays(sku(d))));     
           
    WHEN LOCAL FORMS userOrder (CHANGED(expiryDate(OrderDetail d)) OR CHANGED(sku[UserOrderDetail](d))) AND NOT batch[UserOrderDetail](d) AND expiryDate(d) DO {
        manufactureDate[UserOrderDetail](d) <- calcManufactureDate(d);            
    } 
    expiryDate(UserOrderDetail detail) <- prevExpiryDate(batch(detail)) WHEN CHANGED (batch(detail));
    manufactureDate(UserOrderDetail detail) <- prevManufactureDate(batch(detail)) WHEN CHANGED (batch(detail));
        
    backgroundShipped 'Цвет' (Order order) = RGB(255, 224, 255) IF order IS Order;
    notShowShipped(Order o) += createShipment(o);
    EXTEND FORM userOrder

        PROPERTIES(o) BACKGROUND backgroundShipped(o) createShipment 
        PROPERTIES(o) BACKGROUND backgroundShipped(o) SHOWIF createShipment(o) shipmentSumUserOrderDetail
        PROPERTIES(o) BACKGROUND backgroundShipped(o) SHOWIF createShipment(o) shipDate = shipmentDate, shipTime = shipmentTime
        
        PROPERTIES(d) shipmentQuantity AFTER invoiceQuantity(d) SHOWIF createShipment(o) BACKGROUND backgroundShipped(o)
        
        PROPERTIES(d) SHOWIF createShipment(o) BACKGROUND backgroundShipped(o) manufactureDate, expiryDate, 
                      shipmentPrice, shipmentSum              
    ;
    DESIGN userOrder {
        headerCreateDocuments {
            type = CONTAINERV;
            NEW headerShopment {
                horizontal = TRUE;
                caption = 'Поставка';
                MOVE PROPERTY(createShipment(o));
                MOVE PROPERTY(shipDate);
                MOVE PROPERTY(shipTime);
            }
        }
    }    
    EXTEND FORM orders
        PROPERTIES(o) BACKGROUND backgroundShipped(o) shipmentSumOrderDetail
        PROPERTIES(d) READONLY AFTER invoiceQuantity(d) SHOWIF createShipment(o) BACKGROUND backgroundShipped(o) shipmentQuantity
        
        PROPERTIES(d) READONLY SHOWIF createShipment(o) BACKGROUND backgroundShipped(o)  manufactureDate, expiryDate, 
                      shipmentPrice, shipmentSum   
    ;
    
    createShipment(OrderInvoice i) += createShipment(order(i));
    shipmentDate(OrderInvoice i) += shipmentDate(order(i));
    shipmentTime(OrderInvoice i) += shipmentTime(order(i));   
    
    shipmentQuantity(OrderInvoiceDetail d) += shipmentQuantity(orderDetail(d));
    shipmentPrice(OrderInvoiceDetail d) += shipmentPrice(orderDetail(d));
    shipmentSum(OrderInvoiceDetail d) += shipmentSum(orderDetail(d));

    manufactureDate(OrderInvoiceDetail d) += manufactureDate(orderDetail(d));
    expiryDate(OrderInvoiceDetail d) += expiryDate(orderDetail(d));   
     
    overCopy(UserOrder s, UserOrder d) + { 
        createShipment(d) <- createShipment(s);
    }   
    overCopy[UserOrderDetail,UserOrderDetail](UserOrderDetail d, UserOrderDetail detail) + { 
        manufactureDate(d) <- manufactureDate(detail);  
        expiryDate(d) <- expiryDate(detail);       
    } 
     
END