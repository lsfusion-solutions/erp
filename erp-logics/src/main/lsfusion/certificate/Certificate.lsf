MODULE Certificate;

REQUIRE Document, SkuLedger, Dashboard;

DESIGN options {
    pane {
        NEW certificate {
            caption = 'Сертификаты';
        }
    }
}


CLASS ABSTRACT Certificate 'Документ качества';
TABLE certificate(Certificate);

@defineDocumentAbstractHeaderTimePrefix(Certificate, ,' документа');
@defineDocumentAbstractHeaderTimePrefix(Certificate, from, ' с');
@defineDocumentAbstractHeaderTimePrefix(Certificate, to, ' по');

number 'Номер' = ABSTRACT ISTRING[100] (Certificate) IN numbered MATERIALIZED CHARWIDTH 10;
series 'Серия' = ABSTRACT BPSTRING[2] (Certificate) IN numbered MATERIALIZED CHARWIDTH 3 NOFLEX; 

seriesNumber 'Серия/Номер' (Certificate o) = 
    CONCAT '', series(o), number(o) 
    CHARWIDTH 7 MATERIALIZED;

description 'Документ качества' (Certificate certificate) = CONCAT ' ', seriesNumber(certificate), 'от ' + fromDate(certificate), 'по ' + toDate(certificate);

// -------------------------- Подготовка документов под расширение сертификатами -------------------- //

META defineDocumentCertificate(document, object, prefix)

    EXTEND FORM user###document
        OBJECTS dc = User###document##Detail
        PROPERTIES (dc) READONLY index, idBarcodeSku, idSku, nameSku, shortNameUOMSku, nameBatch, quantity
        FILTERS user###document(dc) == object
    ;

    DESIGN user###document{
        specificationBox {
            NEW certificateContainer AFTER BOX(d) {
                caption = 'Сертификаты';
                NEW headerCertificateContainer { horizontal = TRUE; }
                MOVE BOX(dc);
            }
        }
    }

    EXTEND FORM document##s
        OBJECTS dc = ###document##Detail
        PROPERTIES(dc) READONLY index, idBarcodeSku, idSku, nameSku,
                                nameBatch
        FILTERS document(dc) == object
    ;

    DESIGN document##s{
        documentDetail{
            NEW certificateContainer AFTER BOX(d) {
                caption = 'Сертификаты';
                NEW headerCertificateContainer;
                MOVE BOX(dc);
            }
        }
    }

END

// ------------------------------------ Добавление сертификатов к документам ----------------------------------- //

META defineDocumentTextBatchPrefix(prefix, caption)

    prefix##Text  caption = ABSTRACT TEXT (Batch);
    prev###prefix##Text (Batch batch) = PREV(prefix##Text(batch));
END

META defineDocumentCertificateTextPrefix(document, prefix, caption)

    prefix##Text caption = ABSTRACT TEXT (###document##Detail);
    prefix##Text caption = DATA TEXT (User###document##Detail) TABLE user###document##DetailCertificate;
    prefix##Text(User###document##Detail detail) += prefix##Text(detail);
    
    overCopy(User###document##Detail d, User###document##Detail detail) + {       
        prefix##Text(d) <- prefix##Text(detail);
    } 

    EXTEND FORM user###document PROPERTIES(dc) prefix##Text;
    DESIGN user###document {
        PROPERTY(prefix##Text(dc)){
            valueSize = (200, 36);
        }
    }

    EXTEND FORM document##s PROPERTIES(dc) READONLY prefix##Text;
    DESIGN document##s {
        PROPERTY(prefix##Text(dc)){
            valueSize = (200, 36);
        }
    }

END

META defineDocumentCertificate(prop, document, object, caption)
    @defineDocumentCertificate(prop, ###prop, document, object, caption);
END

META defineDocumentCertificate(prop, propClass, document, object, caption)

    prop = ABSTRACT propClass (###document##Detail);
    description###prop caption (###document##Detail detail) = description(prop(detail));

    prop = DATA propClass (User###document);
    description###prop caption (User###document document) = description(prop(document));

    data###prop = DATA propClass (User###document##Detail) TABLE user###document##DetailCertificate;
    prop (User###document##Detail detail) =
        OVERRIDE data###prop(detail), prop(user###document(detail)) MATERIALIZED INDEXED TABLE user###document##DetailCertificate;
    prop(User###document##Detail detail) += prop(detail);

    description###prop caption (User###document##Detail detail) = description(prop(detail));

    overCopy(User###document##Detail d, User###document##Detail detail) + {       
        data###prop(d) <- data###prop(detail);
    } 
    
    backgroup###prop##User = ABSTRACT COLOR (###document##Detail);

    EXTEND FORM user###document
        PROPERTIES(object) description###prop
//        PROPERTIES(d) BACKGROUND backgroup###prop##User(d) description###prop
        PROPERTIES(dc) BACKGROUND backgroup###prop##User(dc) description###prop
    ;

    DESIGN user###document {
        headerCertificateContainer {
            MOVE PROPERTY(description###prop(object));
        }
    }

    EXTEND FORM document##s
//        PROPERTIES(d) READONLY description###prop
        PROPERTIES(dc) READONLY description###prop
    ;
END

// ------------------------------------ Сертификаты для партий ----------------------------------- //

META defineBatchCertificate(prop, propClass, caption)
    prop = ABSTRACT propClass (Batch) MATERIALIZED;
    INDEX prop(Batch batch), sku(batch);
    prev###prop (Batch batch) = PREV(prop(batch));
    number###prop caption (Batch batch) = number(prop(batch));
    series###prop caption (Batch batch) = series(prop(batch));
    seriesNumber###prop caption (Batch batch) = seriesNumber(prop(batch));

    description###prop caption (Batch batch) = description(prop(batch));
    batchCount(prop, sku) = GROUP SUM 1 BY prop(Batch batch), sku(batch);

    EXTEND FORM currentBalanceSkuStock PROPERTIES READONLY description###prop(bt);
    EXTEND FORM balanceSkuStock PROPERTIES READONLY description###prop(bt);
    EXTEND FORM currentBalanceBatchStock PROPERTIES READONLY description###prop(bt);
    EXTEND FORM balanceBatchStock PROPERTIES READONLY description###prop(bt);
END

@defineDocumentTextBatchPrefix(certificate, 'Дополнительные сертификаты');

// ------------------------------------ Ограничение на выбор объектов ----------------------------------- //

banNotShippedCompliance 'Запретить выбирать сертификаты по партиям без прихода' = DATA BOOLEAN() COMPLEX;

EXTEND FORM options
    PROPERTIES () banNotShippedCompliance
;

DESIGN options {
    certificate {
        MOVE PROPERTY(banNotShippedCompliance());
    }
}

META defineDocumentCertificateConstraint(prop, document, caption)
    CONSTRAINT prop(User###document##Detail detail) AND NOT batchCount(prop(detail), sku(detail)) 
               AND banNotShippedCompliance() 
        CHECKED BY description###prop[User###document##Detail]
        MESSAGE 'Выберите '##caption##', по которой есть поставка';
END

// ------------------------------------ Автоматическое проставление ----------------------------------- //

autoDeriveLastCertificate 'Не подставлять последний сертификат для партии на закупке' = DATA BOOLEAN () PREREAD; 

EXTEND FORM options PROPERTIES() autoDeriveLastCertificate;
DESIGN options {
    certificate {
        MOVE PROPERTY(autoDeriveLastCertificate());
    }
}

META deriveDocumentPurchaseCertificate(prop, document, stockProp, prefix)
    prefix###prop(User###document##Detail detail)  <- IF batch(detail) 
                                                            THEN prev###prop(batch(detail))
                                                            ELSE prev###prop(prevLastOrderBatch(sku(detail), stockProp(detail)))
        WHEN (CHANGED (batch(detail)) OR
              CHANGED (sku(detail)) OR
              CHANGED (stockProp(detail))) AND NOT autoDeriveLastCertificate();
END

META deriveDocumentSaleCertificate(prop, document, stockProp, prefix)
    prefix###prop(User###document##Detail detail)  <- IF batch(detail) 
                                                            THEN prev###prop(batch(detail))
                                                            ELSE prev###prop(prevLastOrderBatch(sku(detail), stockProp(detail)))
        WHEN (CHANGED (batch(detail)) OR
              CHANGED (sku(detail)) OR
              CHANGED (stockProp(detail)));
END

META deriveDocumentCertificate(prop, document, prefix)
    prefix###prop###user###document##Detail(detail)  <-  prev###prop###batch(batchUser###document##Detail(detail))
        WHEN CHANGED (batchUser###document##Detail(detail));
END

NAVIGATOR {
    dashboardNavigator {
        NEW FOLDER customsDashboardNavigator 'Оформление документов';
    }
    NEW FOLDER customsNavigator 'Документы' WINDOW toolbar IMAGE 'customs.png' {
        NEW FOLDER customsDocuments 'Документы';
        NEW FOLDER customsMasterData 'Справочники';
    }
}
