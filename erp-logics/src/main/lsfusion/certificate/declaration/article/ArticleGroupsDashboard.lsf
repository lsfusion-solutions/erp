MODULE ArticleGroupsDashboard;

REQUIRE ItemArticle, ArticleTranslateDashboard, ItemFashion;

NAMESPACE Item;

// Обработка статуса

completedGroups 'Обработан' = DATA BOOLEAN (Item);
notCompletedGroups 'Не обработан' (article) = GROUP SUM 1 IF Item i IS Item AND NOT completedGroups(i) BY article(i) MATERIALIZED INDEXED;
completedGroups 'Обработан' = Article a IS Article AND NOT notCompletedGroups(a);

changeCompletedGroups (Article article)  { 
    INPUT b = BOOLEAN DO
        completedGroups(Item item) <- b WHERE article(item) == article; 
}

// Подсчет непереведенных артикулов для групп
countNotCompletedGroupsArticles 'Не обработано (к-во)' (group) = 
    GROUP SUM 1 IF completedTranslate(Article article) AND notCompletedGroups(article) AND ((inPurchaseInvoices(currentUser()) AND quantityInvoiceDetail(article, currentUser())) OR NOT inPurchaseInvoices(currentUser())) 
    BY itemGroup(article);
recCountNotCompletedGroupsArticles 'Не обработано (к-во)' (ItemGroup parent) = GROUP SUM countNotCompletedGroupsArticles(ItemGroup child) IF isParent(child, parent);


// необходимость заполнения группы 
childNumberItemGroup 'Количество непосредственных потомков' (Item item) = childNumber(itemGroup(item));
childNumberItemGroup 'Количество непосредственных потомков' (Article article) = childNumber(itemGroup(article));
backgroundChildNumberItemGroup 'Цвет' (Article article) = RGB(224, 224, 255) IF childNumberItemGroup(article) OR (article IS Article AND NOT itemGroup(article));

// Не заполнены атрибуты
overNullGroups = ABSTRACT BOOLEAN (Item);
nullGroups (Item item)= item IS Item AND NOT completedGroups(item) AND 
    (NOT itemGroup(item) OR childNumberItemGroup(item) OR overNullGroups(item));
nullGroups (article)= GROUP SUM 1 IF nullGroups(Item item) AND NOT completedGroups(item) BY article(item);    

filterGroupsInvoice= DATA LOCAL Purchase.Invoice ();
descriptionFilterGroupsInvoice 'Накладная' = description(filterGroupsInvoice());

overChangeSeasonYear  ABSTRACT LIST ( Article);

changeSeasonYear(Article article)  { 
    DIALOG seasonYears OBJECTS t = seasonYear(article) CHANGE DO {
        overChangeSeasonYear(article); 
    }
}

overChangeSeason  ABSTRACT LIST ( Article);

changeSeason(Article article)  { 
    DIALOG seasons OBJECTS t = season(article) CHANGE DO {
        overChangeSeason(article); 
    }
}

FORM articleGroupsDashboard 'Классификация'
    PROPERTIES seriesNumberDateInvoicesCurrentUser() READONLY, selectPurchaseInvoicesCurrentUser()
    
    TREE groupTree g=ItemGroup PARENT parent(g)
    PROPERTIES READONLY order(g), name(g), recCountNotCompletedGroupsArticles(g)
    ORDERS order(g), name(g)
    FILTERS active(g)
    FILTERGROUP notGroupsFilters
        FILTER 'Не обработан' recCountNotCompletedGroupsArticles(g) 'F6'

    OBJECTS a=Article
    PROPERTIES(a) READONLY nameBrand, id, caption, nameUOM, nameGender, originalCustomsGroup
    PROPERTIES(a) BACKGROUND backgroundChildNumberItemGroup(a) canonicalNameItemGroup
    PROPERTIES(a) BACKGROUND hintEditableBackground() nameSeasonYear //ON CHANGE changeSeasonYearArticle(a),
                    , nameSeason //ON CHANGE changeSeasonArticle(a)   
    PROPERTIES(a) completedGroups ON CHANGE changeCompletedGroups(a)
    PROPERTIES(a) NEWSESSION EDIT
    
    FILTERGROUP attributesFilters
        FILTER 'Без атрибутов' nullGroups(a) 'F7'                   
        FILTER 'С атрибутами' NOT nullGroups(a) 'F6'
                           
    FILTERGROUP stickerFilters
        FILTER 'Переведены' completedTranslate(a) 'F10' DEFAULT
        
    FILTERS isParent(g, a)
//    FILTERGROUP groupFilters
//        FILTER 'По группам' 'F11' isParentGroupArticle(g, a) DEFAULT
//        FILTER 'Без групп' 'ctrl F11' captionArticle(a) IF NOT itemGroupArticle(a)        
        
    FILTERGROUP articleFilters
        FILTER 'Не обработан' notCompletedGroups(a) 'F8' DEFAULT
        FILTER 'Обработан' completedGroups(a) 'F9'   
               
    FILTERS isParent(g, a) OR (g IS ItemGroup AND NOT itemGroup(a))

    OBJECTS i=Item
    PROPERTIES(i) READONLY descriptionDefaultPurchaseInvoice, idBarcode, id, caption, nameUOM, image PANEL
    PROPERTIES(i) BACKGROUND hintEditableBackground() canonicalNameItemGroup
    PROPERTIES(i) completedGroups
    PROPERTIES(i) NEWSESSION EDIT SHOWIF enableEditing(i)
    
    FILTERGROUP attributesFilters2
        FILTER 'Без атрибутов' nullGroups(i) 'F7'
        FILTER 'С атрибутами' NOT nullGroups(i) 'F6'
          
    FILTERGROUP itemFilters
        FILTER 'По артикулам' article(i) == a 'F4' DEFAULT
        FILTER 'По группам (не обработан)' completedTranslate(i) AND NOT completedGroups(i) AND isParent(g,i) 'shift F4'
        FILTER 'По группам ' isParent(g,i) 'ctrl F4'
        
    FILTERS quantityInvoiceDetail(a, currentUser()) OR (a IS Article AND NOT countInvoices(currentUser()))
        
;

DESIGN articleGroupsDashboard {
    NEW filter {
        caption = 'Фильтр';
        horizontal = TRUE;
        MOVE PROPERTY(seriesNumberDateInvoicesCurrentUser());
        MOVE PROPERTY(selectPurchaseInvoicesCurrentUser());
    }
    NEW pane {
        type = SPLITH;
        fill = 1;
        NEW tree4{
            type = SPLITV;
            fill = 1;
            MOVE BOX(TREE groupTree) {fill = 2;}
            NEW imageBox4 {
                fill = 3;
                caption = 'Изображение';                     
                MOVE PROPERTY(image(i)) {                           
                    caption = '';
                    fill = 1;
                }
            }
        }
        NEW row511 {
            fill = 3;
            type = SPLITV;
            MOVE BOX(a) {
                defaultComponent = TRUE;
                fill = 2;
            }
            MOVE BOX(i);
        }
    }
    
    MOVE TOOLBARBOX;
}

WHEN LOCAL FORMS articleGroupsDashboard CHANGED(season(Article article)) DO {
    overChangeSeason(article);     
}

WHEN LOCAL FORMS articleGroupsDashboard CHANGED(seasonYear(Article article)) DO {
    overChangeSeasonYear(article);     
}

completeArticleGroupsDashboard 'Подтвердить все'()  {   
    LOCAL k = INTEGER ();
    k() <- 0;
    
    FOR [ FILTER articleGroupsDashboard.a](Article article) AND nullGroups(article) DO{   
        k() <- k() + 1;              
    }    
    IF k() > 0 THEN {
        MESSAGE 'Для артикула не задана группа товара, статистическая группа или нужна доп. классификация ('+k()+' шт.)';
    } ELSE {
        FOR [ FILTER articleGroupsDashboard.a](Article article) DO {
            completedGroups(Item item) <- TRUE WHERE article(item) ==article;
        }
    }      
} TOOLBAR CONFIRM;

EXTEND FORM  articleGroupsDashboard
    PROPERTIES() DRAW a completeArticleGroupsDashboard 
;

NAVIGATOR {
    customsDashboardNavigator {
        NEW articleGroupsDashboard;
    }
}
