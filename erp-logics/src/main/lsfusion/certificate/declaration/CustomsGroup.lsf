MODULE CustomsGroup;

REQUIRE Certificate, Hierarchy, Utils, Historizable, Tax, Stock;

DESIGN options {
    pane {
        NEW customs {
            caption = 'ВЭД';
        }
    }
}

CLASS CustomsZone 'Таможенная зона';
TABLE customsZone(CustomsZone);

name 'Наименование' = DATA ISTRING[50](CustomsZone) IN id;

customsZone (name) = GROUP AGGR CustomsZone customsZone WHERE customsZone IS CustomsZone BY name(customsZone);

currency = DATA Currency(CustomsZone);
nameCurrency 'Валюта' (CustomsZone customsZone) = name(currency(customsZone)) IN base;

defaultTypeExchange (customsZone) = DATA TypeExchange (CustomsZone);
nameDefaultTypeExchange  'Тип обмена (по умолч.)' (CustomsZone customsZone) = name(defaultTypeExchange(customsZone));

CLASS CustomsGroup 'Позиция ТН ВЭД';
TABLE customsGroup (CustomsGroup);

name 'Наименование' = DATA ISTRING[1000](CustomsGroup) CHARWIDTH 30;

hasCode 'Есть код' = DATA BOOLEAN (CustomsGroup) IN base;
dateFrom 'Дата с' = DATA DATE (CustomsGroup) IN base;
dateTo 'Дата по' = DATA DATE (CustomsGroup) IN base;
code 'Код' = DATA STRING[10](CustomsGroup) IN base CHARWIDTH 10;

customsGroup (code) = GROUP AGGR CustomsGroup customsGroup WHERE customsGroup IS CustomsGroup BY code(customsGroup);
nearestCustomsGroup  (BPSTRING[10] code) = GROUP MIN CustomsGroup customsGroup IF startsWith(code(customsGroup), code AS BPSTRING[10]);

number 'Номер строки' = DATA INTEGER(CustomsGroup) IN base;

TABLE customsGroupCustomsGroup (CustomsGroup, CustomsGroup);
@defineHierarchy(customsGroup);

customsZone = DATA CustomsZone(CustomsGroup) AUTOSET;
nameCustomsZone 'Таможенная зона' (CustomsGroup customsGroup) = name(customsZone(customsGroup)) IN base;

customsZone = DATA CustomsZone(Country);
nameCustomsZone 'Таможенная зона' (Country country) = name(customsZone(country)) IN base;

isCompliancedData 'Необходимость сертификации' = DATA BOOLEAN (CustomsGroup) IN base;

levelParent (CustomsGroup customsGroup) = GROUP
                                                MIN level(customsGroup, CustomsGroup parent) IF isCompliancedData(parent) MATERIALIZED;

isCompliancedParent (CustomsGroup customsGroup) = TRUE IF levelParent(customsGroup);

isComplianced 'Необходимость сертификации' (CustomsGroup customsGroup) = OVERRIDE isCompliancedData(customsGroup), isCompliancedParent(customsGroup);

TABLE customsGroupData(CustomsGroup, DATE);

META defineCustomsRate(class, object, caption)
    CLASS class caption;
    TABLE object(class);

    dateFrom 'Дата с' = DATA DATE(class) IN base;
    dateTo 'Дата по' = DATA DATE(class) IN base;
    customsGroup = DATA CustomsGroup(class) AUTOSET;
    codeCustomsGroup 'ТН ВЭД (код)' (class customsRate) = code(customsGroup(customsRate)) IN base;
    nameCustomsGroup 'ТН ВЭД' (class customsRate) = name(customsGroup(customsRate)) IN base;

    object (CustomsGroup customsGroup, DATE date) = GROUP LAST class object IF
                                                                       (dateFrom(object) < date AND
                                                                       dateTo(object) > date)
                                                                    ORDER dateFrom(object), object
                                                                    BY customsGroup(object);
END

@defineCustomsRate(VATCustomsRate, VATCustomsRate, 'Ставка НДС');
@defineCustomsRate(DutyCustomsRate, dutyCustomsRate, 'Ставка пошлины');
@defineCustomsRate(RegistrationCustomsRate, registrationCustomsRate, 'Ставка таможенного сбора');

@defineCustomsRate(VATCustomsException, VATCustomsException, 'Льгота НДС');

EXTEND CLASS VATCustomsException {
    none 'Отсутствует'
}

@defineExternalizable(VATCustomsRate, STRING[100]);
@defineExternalizable(dutyCustomsRate, STRING[100]);
@defineExternalizable(registrationCustomsRate, STRING[100]);
@defineExternalizable(VATCustomsException, STRING[100]);

// НДС
range = DATA Range(VATCustomsRate);
numberRange 'НДС, номер' (VATCustomsRate VATCustomsRate) = number(range(VATCustomsRate)) IN base;
valueCurrent 'НДС, %' (VATCustomsRate VATCustomsRate) = valueRate(range(VATCustomsRate), currentDate()) IN base;

VAT 'НДС' (CustomsGroup customsGroup, DATE date) = range(VATCustomsRate(customsGroup, date));

dataValueSupplierVAT 'НДС, %' (CustomsGroup customsGroup, DATE date) = valueRate(VAT(customsGroup, date), date);
valueCurrentRateSupplierVAT 'НДС, %' (CustomsGroup customsGroup) = valueRate(VAT(customsGroup, currentDate()), currentDate());

// пошлина
percentDuty 'Пошлина, %' = DATA NUMERIC[14,3](DutyCustomsRate) IN base;
weightDuty 'Пошлина, (мин.)' = DATA NUMERIC[14,3](DutyCustomsRate) IN base;

percentDuty 'Пошлина, %' (CustomsGroup customsGroup, DATE date) = percentDuty(dutyCustomsRate(customsGroup, date));
weightDuty 'Пошлина, (мин.)' (CustomsGroup customsGroup, DATE date) = weightDuty(dutyCustomsRate(customsGroup, date));

percentDuty 'Пошлина, %' (CustomsGroup customsGroup) = percentDuty(customsGroup, currentDate());
weightDuty 'Пошлина, (мин.)' (CustomsGroup customsGroup) = weightDuty(customsGroup, currentDate());

//сбор
sum 'Таможенный сбор' = DATA NUMERIC[14,3](RegistrationCustomsRate) IN base;

registration 'Таможенный сбор' (CustomsGroup customsGroup, DATE date) = sum(registrationCustomsRate(customsGroup, date));
registration 'Таможенный сбор' (CustomsGroup customsGroup) = registration(customsGroup, currentDate());

// Льгота НДС
name 'Наименование' = DATA ISTRING[150](VATCustomsException) IN base;
number 'Номер' (VATCustomsException VATCustomsException) = PARTITION SUM 1 ORDER VATCustomsException BY customsGroup(VATCustomsException);
VATCustomsException (customsGroup, number) = GROUP AGGR VATCustomsException VATCustomsException BY code(customsGroup(VATCustomsException)), number(VATCustomsException);

range = DATA Range(VATCustomsException);
numberRange 'Льгота НДС, номер' (VATCustomsException VATCustomsException) = number(range(VATCustomsException)) IN base;
dataValue 'Льгота НДС, %' (VATCustomsException VATCustomsException, DATE date) = valueRate(range(VATCustomsException), date);

valueCurrent 'Льгота НДС, %' (VATCustomsException VATCustomsException) = valueRate(range(VATCustomsException), currentDate()) IN base;

rangeVATCustomsException 'Льгота НДС' (CustomsGroup customsGroup, DATE date) = range(VATCustomsException(customsGroup, date));
dataValueVATCustomsException 'Льгота НДС, %' (CustomsGroup customsGroup, DATE date) = valueRate(rangeVATCustomsException(customsGroup, date), date);

countVATCustomsException 'Кол-во льгот' (customsGroup) = GROUP SUM 1 IF VATCustomsException VATCustomsException IS VATCustomsException BY customsGroup(VATCustomsException) MATERIALIZED;

nameVATCustomsException 'Наименование' (customsGroup) = GROUP CONCAT STRING[255](name(VATCustomsException VATCustomsException))  , ', ' ORDER VATCustomsException BY customsGroup(VATCustomsException);

CLASS ExtraCode 'Четырехзначный код';
TABLE extraCode(ExtraCode);

id 'Код' = DATA STRING[4] (ExtraCode);
description 'Описание' = DATA STRING[150] (ExtraCode) CHARWIDTH 50;
customsGroup = DATA CustomsGroup(ExtraCode) AUTOSET;
codeCustomsGroup 'ТН ВЭД (код)' (ExtraCode c) = code(customsGroup(c)) IN base;
nameCustomsGroup 'ТН ВЭД' (ExtraCode c) = name(customsGroup(c)) IN base;
canonicalNameCustomsGroup 'ТН ВЭД' (ExtraCode c) = canonicalName(customsGroup(c)) IN base;

extraCode (CustomsGroup c, STRING[4] id) = GROUP MAX ExtraCode ec BY customsGroup(ec), id(ec);
countExtraCodes (CustomsGroup c) = GROUP SUM 1 IF ExtraCode ec IS ExtraCode BY customsGroup(ec);
extraCode (CustomsGroup c) = GROUP MIN ExtraCode ec BY customsGroup(ec);

FORM extraCode '4-зн. код кода ТН ВЭД'
    OBJECTS ec = ExtraCode PANEL
    PROPERTIES (ec) READONLY codeCustomsGroup, nameCustomsGroup, canonicalNameCustomsGroup, id, description
    
    EDIT ExtraCode OBJECT ec
;

DESIGN extraCode {
    NEW customsGroupPanel {
        caption = 'ТН ВЭД';
        horizontal = TRUE;
        MOVE PROPERTY(codeCustomsGroup(ec));
        MOVE PROPERTY(nameCustomsGroup(ec)) { caption='ТН ВЭД (наименование)'; }
        MOVE PROPERTY(canonicalNameCustomsGroup(ec));
    }
    NEW extraGroupPanel {
        caption = 'Параметры';
        horizontal = TRUE;
        MOVE PROPERTY(id(ec)) { caption='4-зн. код'; }
        MOVE PROPERTY(description(ec));
    }
}

FORM dialogExtraCodes '4-зн. код кода ТН ВЭД'
    OBJECTS ec = ExtraCode
    PROPERTIES(ec) READONLY codeCustomsGroup, nameCustomsGroup, canonicalNameCustomsGroup, id, description

    LIST ExtraCode OBJECT ec
;

DESIGN dialogExtraCodes {
    PROPERTY(nameCustomsGroup(ec)) { caption='ТН ВЭД (наименование)'; }
    PROPERTY(id(ec)) { caption='4-зн. код'; }
}


//
customsGroup = ABSTRACT CustomsGroup(Country, Sku);
codeCustomsGroup 'ТН ВЭД' (Country country, Sku sku) = code(customsGroup(country, sku));

VATCustomsException = ABSTRACT VATCustomsException(Country, Sku);
nameVATCustomsException 'ТН ВЭД' (Country country, Sku sku) = name(VATCustomsException(country, sku));

EXTEND FORM country
    PROPERTIES(c) nameCustomsZone
;

EXTEND FORM countries
    PROPERTIES(c) READONLY nameCustomsZone
;

FORM customsZone 'Таможенная зона'
    OBJECTS cz = CustomsZone PANEL
    PROPERTIES(cz) name, nameCurrency, nameDefaultTypeExchange
    EDIT CustomsZone OBJECT cz
;

FORM customsZones 'Таможенная зона'
    OBJECTS cz = CustomsZone
    PROPERTIES(cz) READONLY name, nameCurrency, nameDefaultTypeExchange
    PROPERTIES(cz) NEWSESSION NEW, EDIT, DELETE 
;

FORM VATCustomsException 'Льгота НДС'
    OBJECTS v = VATCustomsException PANEL
    PROPERTIES (v)  id, name, dateFrom, dateTo, 
                    codeCustomsGroup, nameCustomsGroup, numberRange,
                    valueCurrent READONLY
                 
    EDIT VATCustomsException OBJECT v      
;

FORM VATCustomsExceptions 'Льготы НДС'
    OBJECTS cg = CustomsGroup PANEL

    OBJECTS vce = VATCustomsException
    PROPERTIES(vce) READONLY name, dateFrom, dateTo, numberRange, valueCurrent
    PROPERTIES(vce) NEWSESSION NEW, EDIT, DELETE 
    FILTERS customsGroup(vce) == cg

;

FORM dialogVATCustomsExceptions 'Льготы НДС'
    OBJECTS vce = VATCustomsException
    PROPERTIES(vce) READONLY name, dateFrom, dateTo, numberRange, valueCurrent

    LIST VATCustomsException OBJECT vce
;

FORM customsGroup 'Позиция ТН ВЭД'
    OBJECTS cg = CustomsGroup PANEL
    PROPERTIES(cg) code, name, nameParent, canonicalName,
                   nameCustomsZone, dateFrom, dateTo, isComplianced, number

    OBJECTS vcr = VATCustomsRate
    PROPERTIES(vcr) id SHOWIF showIDs(), dateFrom, dateTo, numberRange, 
                    valueCurrent READONLY
    PROPERTIES(vcr) NEW, DELETE 
    FILTERS customsGroup(vcr) == cg

    OBJECTS vce = VATCustomsException
    PROPERTIES(vce) id SHOWIF showIDs(), name, dateFrom, dateTo, 
                    numberRange, valueCurrent READONLY
    PROPERTIES(vce) NEW, deletea=DELETE  
    FILTERS customsGroup(vce) == cg

    OBJECTS dcr = DutyCustomsRate
    PROPERTIES(dcr) id SHOWIF showIDs(), dateFrom, dateTo, percentDuty, weightDuty
    PROPERTIES(dcr) NEW, DELETE 
    FILTERS customsGroup(dcr) == cg

    OBJECTS rcr = RegistrationCustomsRate
    PROPERTIES(rcr) id SHOWIF showIDs(), dateFrom, dateTo, sum
    PROPERTIES(rcr) NEW, DELETE 
    FILTERS customsGroup(rcr) == cg
    
    OBJECTS ec = ExtraCode
    PROPERTIES(ec) id, description
    PROPERTIES(ec) NEW, DELETE
    FILTERS customsGroup(ec) == cg

    EDIT CustomsGroup OBJECT cg
;

DESIGN customsGroup {
    BOX {
        NEW topContainer {
            NEW genContainer {
                horizontal = TRUE;
                caption = 'Основные';
                MOVE PROPERTY(code(cg));
                MOVE PROPERTY(name(cg));
                MOVE PROPERTY(nameParent(cg));
                MOVE PROPERTY(canonicalName(cg));
            }

            NEW dateContainer {
                horizontal = TRUE;
                caption = 'Дополнительные';
                MOVE PROPERTY(nameCustomsZone(cg));
                MOVE PROPERTY(dateFrom(cg));
                MOVE PROPERTY(dateTo(cg));
                MOVE PROPERTY(isComplianced(cg));
                MOVE PROPERTY(number(cg));
            }
        }
        NEW midContainer {
            fill = 1;
            horizontal = TRUE;
            MOVE BOX(vcr) { fill = 1; }
            MOVE BOX(vce) { fill = 1; }
        }

        MOVE BOX(dcr);
        
        NEW bottomContainer {
            fill = 1;
            horizontal = TRUE;
            MOVE BOX(rcr) { fill = 1; }
            MOVE BOX(ec) { fill = 1; }
        }

        MOVE TOOLBARBOX;
    }
}

add 'Добавить'(CustomsGroup customsGroup)  { 
	NEWSESSION {
	    NEW cg = CustomsGroup {
	        parent(cg) <- customsGroup;
	        SHOW customsGroup OBJECTS cg=cg DOCKED NOCANCEL;
	    }
	}
} TOOLBAR IMAGE 'add.png' CHANGEKEY 'INSERT';


caption 'Наименование' = DATA LOCAL ISTRING[255]() CHARWIDTH 20;
article 'Артикул' = DATA LOCAL STRING[100]() CHARWIDTH 10;
originalCustomsGroup 'ТНВЭД (ориг)' = DATA LOCAL BPSTRING[100] () CHARWIDTH 10 NOFLEX;
composition 'Состав' = DATA LOCAL STRING[255]() CHARWIDTH 40;
gender 'Пол' = DATA LOCAL STRING[50]();
backgroundCustomsGroup = ABSTRACT CASE COLOR (CustomsGroup);

FORM customsGroups 'Позиции ТН ВЭД'
    OBJECTS cz = CustomsZone PANEL
    PROPERTIES(cz) SELECTOR name, nameCurrency

    OBJECTS dt = DATE PANEL
    PROPERTIES(dt) date = VALUE

    PROPERTIES() caption, article, originalCustomsGroup, composition, gender

    TREE treeGroups a =BPSTRING[3], gcg=CustomsGroup PARENT parent(gcg)
    PROPERTIES READONLY VALUE(a), name(gcg), code(gcg), isCompliancedData(gcg)
    PROPERTIES(gcg) add, EDIT NEWSESSION
    ORDERS code(gcg)

    OBJECTS cg = CustomsGroup
    PROPERTIES(cg) READONLY BACKGROUND backgroundCustomsGroup(cg) code, name, canonicalName,
                   dateFrom, dateTo, isComplianced, number
                   //, registrationCustomsGroup, valueCurrentRateSupplierVATCustomsGroup, percentDutyCustomsGroup, weightDutyCustomsGroup
    PROPERTIES(cg, dt) READONLY registration, percentDuty, weightDuty, dataValueSupplierVAT, dataValueVATCustomsException
    PROPERTIES(cg) NEWSESSION NEW, EDIT, deleteg = DELETE 
    ORDERS number(cg)

    FILTERS stringEqualsAll(a), 
            customsZone(cg) == cz

    FILTERGROUP hasCode
        FILTER 'Только с кодом' hasCode(gcg) 'F7' DEFAULT

    FILTERGROUP filters
        FILTER 'Все листья' isParentLeaf(cg, gcg) OR (cg IS CustomsGroup AND isLeaf(cg) AND NOT gcg) 'F10'
        FILTER 'Всех потомков' isParent(cg, gcg) OR (cg IS CustomsGroup AND NOT gcg) 'F9' DEFAULT
        FILTER 'Только непосредственных потомков' parent(cg) == gcg OR (cg IS CustomsGroup AND NOT parent(cg) AND NOT gcg) 'F8'

    LIST CustomsGroup OBJECT cg
;

DESIGN customsGroups {
    BOX {
        NEW topContainer{
            horizontal = TRUE;
            MOVE BOX(dt) {
                PROPERTY(date) { focusable = FALSE; }            
            }
            MOVE BOX(cz) {
                PROPERTY(name(cz)) { focusable = FALSE; }
                PROPERTY(nameCurrency(cz)) { focusable = FALSE; }
            }
        }
        NEW item {
            caption = 'Товар';
            horizontal = TRUE;
            MOVE PROPERTY(caption());
            MOVE PROPERTY(article());
            MOVE PROPERTY(originalCustomsGroup());
            MOVE PROPERTY(composition());
            MOVE PROPERTY(gender());
        }
        NEW split {
            horizontal = TRUE;
            fill = 1;
            MOVE BOX(TREE treeGroups);
            MOVE BOX(cg) {
                fill = 2;
                GRID(cg) {
                    defaultComponent = TRUE;
                }
            }
        }
        MOVE TOOLBARBOX;
    }
}

NAVIGATOR {
    customsMasterData {
        NEW customsZones;
        NEW customsGroups;
    }
}

// Цвета по умолчанию
backgroundCustoms 'Цвет' () = RGB(255, 224, 224);
backgroundVATCustomsException 'Цвет' () = RGB(212, 255, 212);