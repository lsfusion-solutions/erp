MODULE ComplianceGroup;

REQUIRE Compliance;

NAMESPACE Compliance;

CLASS ComplianceGroup 'Группа сертификации';
TABLE complianceGroup (ComplianceGroup);

@defineExternalizable(complianceGroup, STRING[100]);
name 'Наименование' = DATA ISTRING[200](ComplianceGroup) CHARWIDTH 45;

TABLE complianceGroupComplianceGroup (ComplianceGroup, ComplianceGroup);
@defineHierarchy(complianceGroup);

FORM complianceGroup 'Группа сертификации'
    OBJECTS cg = ComplianceGroup PANEL
    PROPERTIES(cg) id SHOWIF showIDs(), name, nameParent

    EDIT ComplianceGroup OBJECT cg
;

add 'Добавить'(ComplianceGroup complianceGroup)  { 
	NEWSESSION {
	    NEW cg = ComplianceGroup {
	        parent(cg) <- complianceGroup;
	        SHOW complianceGroup OBJECTS cg=cg DOCKED;
	    }
	}
} TOOLBAR IMAGE 'add.png' CHANGEKEY 'INSERT';

FORM complianceGroups 'Группы сертификации'

    TREE treeGroups a =BPSTRING[3], gcg=ComplianceGroup PARENT parent(gcg)
    PROPERTIES READONLY VALUE(a), name(gcg)
    PROPERTIES(gcg)            add
    PROPERTIES(gcg) NEWSESSION EDIT
    ORDERS name(gcg)

    OBJECTS cg = ComplianceGroup
    PROPERTIES(cg) READONLY id SHOWIF showIDs(), name, canonicalName
    PROPERTIES(cg) NEWSESSION NEW, EDIT, DELETE 
    ORDERS name(gcg)

    FILTERS stringEqualsAll(a)

    FILTERGROUP filters
        FILTER 'Все листья' isParentLeaf(cg, gcg) OR (cg IS ComplianceGroup AND isLeaf(cg) AND NOT gcg) 'F10'
        FILTER 'Всех потомков' isParent(cg, gcg) OR (cg IS ComplianceGroup AND NOT gcg) 'F9' DEFAULT
        FILTER 'Только непосредственных потомков' parent(cg) == gcg OR (cg IS ComplianceGroup AND NOT parent(cg) AND NOT gcg) 'F8'

    LIST ComplianceGroup OBJECT cg
;

DESIGN complianceGroups {
    BOX {
        NEW split {
            type = SPLITH;
            fill = 1;
            MOVE BOX(TREE treeGroups);
            MOVE BOX(cg) {
                fill = 2;
                GRID(cg) {
                    defaultComponent = TRUE;
                }
            }
        }
        MOVE TOOLBARBOX;
    }
}

@extendFormEditable(complianceGroups);

NAVIGATOR {
    customsMasterData {
        NEW complianceGroups;
    }
}

// ---------------------- Расширение логики сертификатов ---------------------------------- //

TABLE complianceGroupCompliance(ComplianceGroup, Compliance);
in 'Вкл.' = DATA BOOLEAN(ComplianceGroup, Compliance);

countComplianceGroup 'Кол-во' (Compliance compliance) =
    GROUP SUM 1 IF in(ComplianceGroup complianceGroup, compliance) MATERIALIZED;

EXTEND FORM compliance
    OBJECTS cg = ComplianceGroup
    PROPERTIES(cg) READONLY id SHOWIF showIDs(), name, nameParent

    PROPERTIES(cg, c) in
;
DESIGN compliance {
    firstTab{
        MOVE BOX(cg);
    }
}

EXTEND FORM compliances
    OBJECTS cg = ComplianceGroup GRID
    PROPERTIES(cg) READONLY name, nameParent
    PROPERTIES(cg, c) READONLY in

    FILTERS in(cg, c)
    
    FILTERGROUP countComplianceGroup FILTER 'С группами' countComplianceGroup(c) 'ctrl F10'      
;

DESIGN compliances {
    documentDetail{
        NEW complianceGroup BEFORE documentHistory {
            fill = 1;
            caption = 'Группы сертификации';
            MOVE BOX(cg);
        }
        
    }
} 

EXTEND FORM complianceGroup
    OBJECTS c = Compliance
    PROPERTIES(c) READONLY number, series, date, time, fromDate,
                            toDate, nameLegalEntity
    PROPERTIES(cg, c) in
    FILTERGROUP filterIn FILTER 'Отмеченные' in(cg, c)
;

// ------------------- По товарам --------------------- //
complianceGroup = ABSTRACT ComplianceGroup(Country, Sku);

// Цвета по умолчанию
backgroundCompliance 'Цвет' () = RGB(224, 224, 255);