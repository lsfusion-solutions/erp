MODULE PurchaseCompliance;

REQUIRE Compliance, PurchaseCertificate;

NAMESPACE Purchase;

@defineDocumentCertificate(compliance, invoice, i, 'Сертификат соответствия');

autoDeriveLastCertificateCompliance = ABSTRACT VALUE BOOLEAN (UserInvoiceDetail);

autoDeriveLastCertificateCompliance(UserInvoiceDetail detail) += autoDeriveLastCertificate() AND detail IS UserInvoiceDetail;

WHEN LOCAL (CHANGED(batch(UserInvoiceDetail detail)) OR
              CHANGED (sku(detail)) OR
              CHANGED (customerStock(detail))) AND NOT CHANGED(dataCompliance(detail)) AND NOT autoDeriveLastCertificateCompliance(detail) DO {
    dataCompliance(detail)  <- IF batch(detail) 
                                  THEN prevCompliance(batch(detail))
                                  ELSE prevCompliance(prevLastOrderBatch(sku(detail), customerStock(detail)));
              
}
fromDateCompliance 'Дата с' (InvoiceDetail detail) = fromDate(compliance(detail));
toDateCompliance 'Дата по' (InvoiceDetail detail) = toDate(compliance(detail));

sumInvoiceDetail 'Сумма (по накладным)' = GROUP SUM sum(InvoiceDetail d)
                                                         BY compliance(d) CHARWIDTH 15;
sumUserInvoiceDetail 'Сумма (по накладным)' = GROUP SUM sum(UserInvoiceDetail d)
                                                             BY compliance(d) CHARWIDTH 15;

image 'Файл сертификата' (UserInvoiceDetail userInvoiceDetail) = file(compliance(userInvoiceDetail));
openImage 'Просмотреть сертификат' (UserInvoiceDetail userInvoiceDetail)  { open(image(userInvoiceDetail)); }

EXTEND FORM userInvoice
    PROPERTIES(dc) TOOLBAR openImage
;

@defineDocumentCertificate(compliance, shipment, s, 'Сертификат соответствия');

// Проставляем автоматически сертификат от строки инвойса
WHEN CHANGED(compliance(invoiceDetail(UserShipmentDetail d))) AND 
     NOT CHANGED(compliance(d)) DO
     dataCompliance(d) <- compliance(invoiceDetail(d)); 

@deriveDocumentPurchaseCertificate(compliance, shipment, customerStock, data);

compliance(InvoiceShipmentDetail detail) += compliance(invoiceDetail(detail));

overFillInvoice(UserShipmentDetail s, InvoiceDetail i) + { 
    dataCompliance(s) <- compliance(i);
}

compliance (ShipmentBatch batch) += compliance(shipmentDetail(batch));
idCompliance (Batch batch) = number(compliance(batch));


//---------------------------------- накладные для сертификата --------------------------------------------------------//

in 'Вкл.' (Compliance compliance, UserInvoice invoice) = compliance(invoice)==compliance;

in 'Вкл.' (Compliance compliance, UserInvoiceDetail invoiceDetail) = dataCompliance(invoiceDetail)==compliance;

invoices 'Накладные' (Compliance compliance) =
    GROUP
        CONCAT shortDescription(UserInvoice invoice) IF in (compliance, invoice), ',' ORDER invoice MATERIALIZED CHARWIDTH 40;


// ------------------------- Расширение формы сертификатов данными из инвойсов ----------------------------- //

EXTEND FORM compliance
    PROPERTIES(c) READONLY invoices

    OBJECTS id=UserInvoiceDetail
    PROPERTIES(id) READONLY seriesNumber, dateTime, idBarcodeSku, nameSku, quantity, price, homePrice, homeSum

    FILTERS compliance(id) == c
;

DESIGN compliance {
    documentParams{
        MOVE PROPERTY(invoices(c));
    }
    firstTab{
        MOVE BOX(id);
    }

}

// ------------------------------------------ Выбор накладных непосредственно в форме сертификата -------------------------------------- //

FORM complianceInvoices 'Накладные сертификации'
    OBJECTS c=Compliance PANEL
    PROPERTIES(c) READONLY seriesNumber, nameLegalEntity, dateTime

    OBJECTS i=UserInvoice
    PROPERTIES(c, i) in
    PROPERTIES(i) READONLY number, series, date, time, nameSupplier, nameCustomer
    FILTERS in(c, i) OR c IS Compliance AND NOT compliance(i)

    FILTERGROUP filtersImporter
        FILTER 'Только получателя' legalEntity(c) == customer(i) 'F11' DEFAULT

    OBJECTS id=UserInvoiceDetail
    PROPERTIES(c, id) in
    PROPERTIES(id) READONLY index, idBarcodeSku, nameSku,shortNameUOMSku, quantity, price
    FILTERS userInvoice(id)==i
;

selectInvoices 'Выбрать накладные'(Compliance compliance)  {
    SHOW complianceInvoices OBJECTS c=compliance ;
} TOOLBAR;

EXTEND FORM compliance
    PROPERTIES (c) selectInvoices DRAW id
;
