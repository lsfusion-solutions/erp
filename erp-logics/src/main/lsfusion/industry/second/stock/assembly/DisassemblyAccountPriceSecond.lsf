MODULE DisassemblyAccountPriceSecond;

REQUIRE Disassembly, DisassemblyCost, DisassemblyAccountLedger, PurchaseShipmentAccountPrice;

NAMESPACE Disassembly;

// отличие от обычного модуля, что учитывается опция про положительный остаток 
// многие товары могут приходить только Разборками

accountPrice 'Учетная цена (после)' = DATA NUMERIC[16,4] (DisassemblyDetail);
accountLedgerPrice (DisassemblyDetail d) += accountPrice(d);

calcAccountPriceBalance (Sku sk, Stock st, DATETIME dt) = balanceB(sk, st, dt) IF (NOT useOnlyBalanceB() OR balanceB(sk, st, dt) > 0);
calcAccountPriceBalance (DisassemblyDetail d) = calcAccountPriceBalance(sku(d), stock(d), dateTime(d));
balanceB 'Остаток (до)' (DisassemblyDetail d) = balanceB(sku(d), stock(d), dateTime(d));
accountPriceB (DisassemblyDetail d) = accountPriceB(sku(d), stock(d), dateTime(d));

calcAccountPrice (DisassemblyDetail d) =
    NUMERIC[16,4]((calcAccountPriceBalance(d) * accountPriceB(d) +
        quantity(d) * price(d))/(quantity(d) + calcAccountPriceBalance(d)));

// пока без PREV, так как нужно хитро пересчитывать при изменении той же даты
WHEN (SETCHANGED(sku(DisassemblyDetail d)) OR SETCHANGED(stock(d)) OR SETCHANGED(dateTime(d)) OR 
    SETCHANGED(quantity(d)) OR SETCHANGED(price(d))) AND NOT disableCalcAccountPrice() DO
    accountPrice(d) <- calcAccountPrice(d);

EXTEND FORM currentBalanceSkuStock
    OBJECTS dd = DisassemblyDetail
    PROPERTIES (dd) READONLY dateTime, number, quantity, price, accountPrice, balanceB
    ORDERS dateTime(dd) DESC
    FILTERS sku(dd) = s, stock(dd) = st
;

DESIGN currentBalanceSkuStock {
    ledgerBox {
        MOVE BOX(dd) {
            caption = 'Разборки';
        }
    }
}

recalculateCostAccountFirst (DATE dFrom, DATE dTo) + {
    logToFile('cost', 'Начат пересчет цен в разборках (приход)');
    APPLY NESTED LOCAL {
        accountPrice(DisassemblyDetail d) <- calcAccountPrice(d)
            WHERE date(d) >= dFrom AND date(d) <= dTo AND calcRecalculateCost(sku(d)) AND NOT date(d) < documentsClosedDate(stock(d));
    }
    logToFile('cost', 'Закончен пересчет цен в разборках (приход)');
}