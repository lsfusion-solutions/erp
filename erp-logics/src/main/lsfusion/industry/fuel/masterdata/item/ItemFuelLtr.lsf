MODULE ItemFuelLtr;

REQUIRE ItemFuel;

NAMESPACE Item;

EXTEND CLASS SkuType {
    skuTypeFuelLtr 'Топливо (в литрах)'
}

isStock(SkuType t) += WHEN t == SkuType.skuTypeFuelLtr THEN TRUE;

isFuelLtr 'Топливо (в литрах)' (Item i) = skuType(i) = SkuType.skuTypeFuelLtr;

CONSTRAINT (SETCHANGED(isFuelLtr(Item i)) OR SETCHANGED(isFuel(i))) AND isFuelLtr(i) AND isFuel(i)
    MESSAGE 'Товар не может быть одновременно топливом (в кг) и топливом (в литрах)';

DESIGN itemGroup {
    PROPERTY(prevIsFuel(g)) { caption = 'Топливо (в кг)'; }
}

META defineDocumentFuelLtrWeight (object, caption)
    weight 'Масса (топливо), кг' = ABSTRACT NUMERIC[16,5] (###object##Detail) CHARWIDTH 7 MATERIALIZED;
    weight 'Масса (топливо), кг' = DATA NUMERIC[16,5] (User###object##Detail) CHARWIDTH 7;
    weight (User###object##Detail object##Detail) += weight(object##Detail);
    
    CONSTRAINT (SETCHANGED(weight(###object##Detail d)) OR SETCHANGED(operation(d)) OR SET(isPosted(d))) AND isFuelLtr(sku(d)) AND isPosted(d) AND weight(d) < 0.0
        AND (banNegativeQuantity###object(operation(d)) OR negativeValue###object##s())
        MESSAGE 'Запрещено вводить отрицательную массу топлива в '##caption;
    
    WHEN LOCAL (SETCHANGED(quantity(User###object##Detail d)) OR SETCHANGED(weight(d))) AND NOT density(d) AND isFuelLtr(sku(d)) DO {
        density(d) <- NUMERIC[8,4](weight(d) / quantity(d));
    }
    WHEN LOCAL SETCHANGED(quantity(User###object##Detail d)) AND NOT CHANGED(weight(d)) AND density(d) AND isFuelLtr(sku(d)) DO {
        weight(d) <- NUMERIC[16,5](round3(quantity(d) * density(d)));
    }
    WHEN LOCAL SETCHANGED(weight(User###object##Detail d)) AND NOT CHANGED(quantity(d)) AND density(d) AND isFuelLtr(sku(d)) DO {
        quantity(d) <- NUMERIC[16,5](round3(weight(d) * density(d)));
    }
    
    extraFillDensity (User###object##Detail d, NUMERIC[8,4] n) + {
        IF isFuelLtr(sku(d)) THEN {
            IF n THEN {
                density(d) <- n;
                IF NOT quantity(d) THEN {
                    quantity(d) <- NUMERIC[16,5](round3(weight(d) / density(d)));
                } ELSE IF NOT weight(d) THEN {
                    weight(d) <- NUMERIC[16,5](round3(quantity(d) * density(d)));
                } ELSE {
                    ASK 'Нажмите "Да" для пересчета массы (кг) или "Нет" для пересчета кол-ва (л)' yes = YESNO DO {
                        IF yes THEN {
                            weight(d) <- NUMERIC[16,5](round3(quantity(d) * density(d)));
                        } ELSE {
                            quantity(d) <- NUMERIC[16,5](round3(weight(d) / density(d)));
                        }
                    } ELSE {
                        density(d) <- PREV(density(d));
                    }
                }
            } ELSE {
                density(d) <- NUMERIC[8,4](weight(d) / quantity(d));
            }
        }
    }
    
    weight###object##Detail 'Масса (топливо, всего), кг' (object) = GROUP SUM weight(###object##Detail idetail) BY ##object(idetail) IN documentSum CHARWIDTH 8 MATERIALIZED;
    weightUser###object##Detail 'Масса (топливо, всего), кг' (user###object) = GROUP SUM weight(User###object##Detail idetail) BY user###object(idetail) IN documentSum CHARWIDTH 8 MATERIALIZED;
    
    showWeightFuel = ABSTRACT VALUE BOOLEAN (###object);
    
    EXTEND FORM user###object
        PROPERTIES(i) SHOWIF (showWeightFuel(i) AND showFuel(i)) weightUser###object##Detail
        PROPERTIES(d) READONLYIF NOT isFuelLtr(sku(d)) SHOWIF (showWeightFuel(i) AND showFuel(i)) weight AFTER quantity(d)
    ;
    
    overCopy(User###object##Detail d, ###object##Detail detail) + {
        weight(d) <- weight(detail);
    }
    
    overCopy[User###object##Detail,User###object##Detail](User###object##Detail d, User###object##Detail detail) + {
        weight(d) <- weight(detail);
    }
    
    EXTEND FORM ##object##s
        PROPERTIES(i) READONLY SHOWIF (showWeightFuel(i) AND showFuel(i)) BACKGROUND background(i) weight###object##Detail AFTER quantity###object##Detail(i)
        PROPERTIES(d) READONLY SHOWIF (showWeightFuel(i) AND showFuel(i)) weight AFTER quantity(d)
    ;
END