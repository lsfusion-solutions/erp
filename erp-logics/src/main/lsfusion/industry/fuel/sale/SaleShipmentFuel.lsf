MODULE SaleShipmentFuel;

REQUIRE SaleShipment, SaleInvoiceFuel, SkuLedgerFuel, ItemFuel;

NAMESPACE Sale;

showFuel(Shipment s) = showFuel(operation(s));
showFuel(UserShipment s) = showFuel(operation(s));

volume 'Объём (топливо), л' = ABSTRACT NUMERIC[16,5] (ShipmentDetail) CHARWIDTH 7 MATERIALIZED;
volume 'Объём (топливо), л' = DATA NUMERIC[16,5] (UserShipmentDetail) CHARWIDTH 7;
volume (UserShipmentDetail shipmentDetail) += volume(shipmentDetail);

density 'Плотность, кг/л' = ABSTRACT NUMERIC[9,5] (ShipmentDetail) CHARWIDTH 7 MATERIALIZED;
density 'Плотность, кг/л' = DATA NUMERIC[9,5] (UserShipmentDetail) CHARWIDTH 7;
density (UserShipmentDetail shipmentDetail) += density(shipmentDetail);

@fuelDensity(userShipmentDetail, 'поставка (продажа)');

volumeShipmentDetail 'Объём (топливо, всего), л' (shipment) = GROUP SUM volume(ShipmentDetail idetail) BY shipment(idetail) IN documentSum CHARWIDTH 8 MATERIALIZED;
volumeUserShipmentDetail 'Объём (топливо, всего), л' (userShipment) = GROUP SUM volume(UserShipmentDetail idetail) BY userShipment(idetail) IN documentSum CHARWIDTH 8 MATERIALIZED;

EXTEND FORM userShipment
    PROPERTIES(s) SHOWIF showFuel(s) volumeUserShipmentDetail
    PROPERTIES(d) READONLYIF NOT isFuel(sku(d)) SHOWIF showFuel(s) volume AFTER quantity(d)
    PROPERTIES(d) READONLYIF NOT isFuel(sku(d)) SHOWIF showFuel(s) density AFTER volume(d) ON CHANGE changeDensity(d) ON CONTEXTMENU fillDensity15C(d) ON CONTEXTMENU fillDensityFromTable(d)
;

overCopy(UserShipmentDetail d, ShipmentDetail detail) + {
    volume(d) <- volume(detail);
    density(d) <- density(detail);
}
overCopy[UserShipmentDetail,UserShipmentDetail](UserShipmentDetail d, UserShipmentDetail detail) + {
    volume(d) <- volume(detail);
    density(d) <- density(detail);
}

EXTEND FORM shipments
    PROPERTIES(s) READONLY SHOWIF showFuel(s) volumeShipmentDetail AFTER quantityShipmentDetail(s)
    PROPERTIES(d) READONLY SHOWIF showFuel(s) volume AFTER quantity(d)
    PROPERTIES(d) READONLY SHOWIF showFuel(s) density AFTER volume(d)
;

overFillInvoice (UserShipmentDetail sd, InvoiceDetail id) + { density(sd) <- density(id); }

shipmentVolume 'Объём (поставлено), л' = ABSTRACT NUMERIC[16,5] (InvoiceDetail) CHARWIDTH 7 MATERIALIZED;
shipmentVolume 'Объём (поставлено), л' = DATA NUMERIC[16,5] (UserInvoiceDetail) CHARWIDTH 7;
shipmentVolume (UserInvoiceDetail invoiceDetail) += shipmentVolume(invoiceDetail);

shipmentDensity 'Плотность (поставлено), кг/л' = ABSTRACT NUMERIC[9,5] (InvoiceDetail) CHARWIDTH 7 MATERIALIZED;
shipmentDensity 'Плотность (поставлено), кг/л' = DATA NUMERIC[9,5] (UserInvoiceDetail) CHARWIDTH 7;
shipmentDensity (UserInvoiceDetail invoiceDetail) += shipmentDensity(invoiceDetail);

CONSTRAINT (SET(isPosted(UserInvoiceDetail d)) OR SET(createShipment(d)) OR CHANGED(sku(d)) OR CHANGED(shipmentDensity(d))) AND createShipment(d) AND isPosted(d) AND isFuel(sku(d)) AND NOT shipmentDensity(d)
    MESSAGE 'Для строки накладная (продажа) должна быть задана плотность (поставлено)';

WHEN LOCAL (SETCHANGED(shipmentQuantity(UserInvoiceDetail d)) OR SETCHANGED(shipmentVolume(d))) AND NOT shipmentDensity(d) AND isFuel(sku(d)) DO {
    shipmentDensity(d) <- NUMERIC[9,5](shipmentQuantity(d) / shipmentVolume(d));
}

fillShipmentDensity (UserInvoiceDetail d, NUMERIC[9,5] n) {
    IF isFuel(sku(d)) THEN {
        IF n THEN {
            shipmentDensity(d) <- n;
            IF NOT shipmentQuantity(d) THEN {
                shipmentQuantity(d) <- NUMERIC[16,5](round3(shipmentVolume(d) * shipmentDensity(d)));
            } ELSE IF NOT shipmentVolume(d) THEN {
                shipmentVolume(d) <- NUMERIC[16,5](round3(shipmentQuantity(d) / shipmentDensity(d)));
            } ELSE {
                ASK 'Нажмите "Да" для пересчета объёма (л) или "Нет" для пересчета кол-ва (кг)' yes = YESNO DO {
                    IF yes THEN {
                        shipmentVolume(d) <- NUMERIC[16,5](round3(shipmentQuantity(d) / shipmentDensity(d)));
                    } ELSE {
                        shipmentQuantity(d) <- NUMERIC[16,5](round3(shipmentVolume(d) * shipmentDensity(d)));
                    }
                } ELSE {
                    shipmentDensity(d) <- PREV(shipmentDensity(d));
                }
            }
        } ELSE {
            shipmentDensity(d) <- NUMERIC[9,5](shipmentQuantity(d) / shipmentVolume(d));
        }
    }
}

changeShipmentDensity (UserInvoiceDetail d) {
    INPUT n = NUMERIC[9,5] DO {
        fillShipmentDensity(d,n);
    }
}

fillShipmentDensity15C 'Заполнить значением плотности при 15°С' (UserInvoiceDetail d) {
    IF density15C(sku(d)) THEN {
        fillShipmentDensity(d,density15C(sku(d)));
    } ELSE {
        MESSAGE 'В карточке товара не задано значение плотности при 15°С' NOWAIT;
    }
}

shipmentVolumeInvoiceDetail 'Объём (всего) (поставлено), л' (invoice) = GROUP SUM shipmentVolume(InvoiceDetail idetail) BY invoice(idetail) IN documentSum CHARWIDTH 8 MATERIALIZED;
shipmentVolumeUserInvoiceDetail 'Объём (всего) (поставлено), л' (userInvoice) = GROUP SUM shipmentVolume(UserInvoiceDetail idetail) BY userInvoice(idetail) IN documentSum CHARWIDTH 8 MATERIALIZED;

shipmentVolume(UserInvoiceDetail detail) <- volume(detail) IF createShipment(detail)
    WHEN (CHANGED(volume(detail)) OR CHANGED(createShipment(detail))) AND NOT skipChangedShipmentQuantity(detail);
shipmentDensity(UserInvoiceDetail detail) <- density(detail) IF createShipment(detail)
    WHEN (CHANGED(density(detail)) OR CHANGED(createShipment(detail))) AND NOT skipChangedShipmentQuantity(detail);

overBackgroundShipmentDensity =  ABSTRACT CASE COLOR (UserInvoiceDetail);
backgroundShipmentDensity (UserInvoiceDetail d) = OVERRIDE overBackgroundShipmentDensity(d), backgroundShipped(d);

EXTEND FORM userInvoice
    PROPERTIES(d) READONLYIF NOT isFuel(sku(d)) shipmentVolume AFTER volume(d) SHOWIF (showShipmentQuantity(i) AND showFuel(i)) BACKGROUND backgroundShipped(i)
    PROPERTIES(d) READONLYIF NOT isFuel(sku(d)) shipmentDensity AFTER density(d) SHOWIF (showShipmentQuantity(i) AND showFuel(i)) BACKGROUND backgroundShipmentDensity(d) ON CHANGE changeShipmentDensity(d) ON CONTEXTMENU fillShipmentDensity15C(d)
;

EXTEND FORM invoices
    PROPERTIES(i) READONLY SHOWIF showFuel(i) BACKGROUND backgroundShipped(i) shipmentVolumeInvoiceDetail AFTER shipmentQuantityInvoiceDetail(i)
    PROPERTIES(d) READONLY shipmentVolume AFTER volume(d) SHOWIF (createShipment(i) AND showFuel(i)) BACKGROUND backgroundShipped(i)
    PROPERTIES(d) READONLY shipmentDensity AFTER density(d) SHOWIF (createShipment(i) AND showFuel(i)) BACKGROUND backgroundShipped(i)
;

volume(InvoiceShipmentDetail shipmentDetail) += shipmentVolume(invoiceDetail(shipmentDetail));
volume[OutFIFOSkuLedger] (ShipmentDetail ledger) += volume(ledger);
density(InvoiceShipmentDetail shipmentDetail) += shipmentDensity(invoiceDetail(shipmentDetail));
density[OutFIFOSkuLedger] (ShipmentDetail ledger) += density(ledger);
