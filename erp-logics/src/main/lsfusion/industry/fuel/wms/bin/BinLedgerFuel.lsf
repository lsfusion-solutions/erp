MODULE BinLedgerFuel;

REQUIRE BinLedger, BinFuel, ItemFuel;

NAMESPACE Bin;

colorValueBin 'Подсветка резервуара при привышении объема или смешивании' = DATA COLOR ();

EXTEND FORM options
    PROPERTIES colorValueBin()
;
DESIGN options {
    commons {
        MOVE PROPERTY(colorValueBin());
    }
}

overColorValueBin = OVERRIDE colorValueBin(), RGB(255,154,154);

density 'Плотность, кг/л' (ledger) = ABSTRACT NUMERIC[8,4] (BinLedger) MATERIALIZED;

//currentDensity 'Текущая плотность в ячейке, л' = GROUP LAST density(BinLedger ledger) IF isPosted(ledger) ORDER dateTime(ledger), ledger BY sku(ledger), inBin(ledger) MATERIALIZED;
//prevCurrentDensity 'Текущая плотность в ячейке, л' (Sku sku, Bin bin) = PREV(currentDensity(sku, bin));

volume 'Объем, л' (ledger) = ABSTRACT NUMERIC[16,5] (BinLedger) MATERIALIZED;

inBinVolume 'Приход в резервуар, л' =
    GROUP SUM volume(BinLedger ledger) IF isPosted(ledger) BY sku(ledger), inBin(ledger) MATERIALIZED;
outBinVolume 'Расход из резервуара, л' =
    GROUP SUM volume(BinLedger ledger) IF isPosted(ledger) BY sku(ledger), outBin(ledger) MATERIALIZED;
inBinVolumeA 'Приход в резервуар, л' =
    GROUP SUM volume(BinLedger ledger) IF date(ledger) > DATE date AND isPosted(ledger) BY sku(ledger), inBin(ledger), date;
outBinVolumeA 'Расход из резервуара, л' =
    GROUP SUM volume(BinLedger ledger) IF date(ledger) > DATE date AND isPosted(ledger) BY sku(ledger), outBin(ledger), date;
inBinVolumeB 'Приход в резервуар, л' =
    GROUP SUM volume(BinLedger ledger) IF date(ledger) >= DATE date AND isPosted(ledger) BY sku(ledger), inBin(ledger), date;
outBinVolumeB 'Расход из резервуара, л' =
    GROUP SUM volume(BinLedger ledger) IF date(ledger) >= DATE date AND isPosted(ledger) BY sku(ledger), outBin(ledger), date;
inBinVolumeA 'Приход в резервуар, л' =
    GROUP SUM volume(BinLedger ledger) IF dateTime(ledger) > DATETIME dateTime AND isPosted(ledger) BY sku(ledger), inBin(ledger), dateTime;
outBinVolumeA 'Расход из резервуара, л' =
    GROUP SUM volume(BinLedger ledger) IF dateTime(ledger) > DATETIME dateTime AND isPosted(ledger) BY sku(ledger), outBin(ledger), dateTime;
inBinVolumeB 'Приход в резервуар, л' =
    GROUP SUM volume(BinLedger ledger) IF dateTime(ledger) >= DATETIME dateTime AND isPosted(ledger) BY sku(ledger), inBin(ledger), dateTime;
outBinVolumeB 'Расход из резервуара, л' =
    GROUP SUM volume(BinLedger ledger) IF dateTime(ledger) >= DATETIME dateTime AND isPosted(ledger) BY sku(ledger), outBin(ledger), dateTime;                   

currentVolume 'Текущий объем в резервуаре, л' (Sku sku, Bin bin)= inBinVolume(sku, bin) (-) outBinVolume(sku, bin) MATERIALIZED;
prevCurrentVolume 'Текущий объем в резервуаре, л' (Sku sku, Bin bin) = PREV(currentVolume(sku, bin));

volumeB 'Объем в резервуаре на начало дня, л' (Sku sku, Bin bin, DATE date) =
    currentVolume(sku, bin) (-) inBinVolumeB(sku, bin, date) (+) outBinVolumeB(sku, bin, date);
volumeA 'Объем в резервуаре на конец дня, л' (Sku sku, Bin bin, DATE date) =
    currentVolume(sku, bin) (-) inBinVolumeA(sku, bin, date) (+) outBinVolumeA(sku, bin, date);

// без учета текущей даты/времени
volumeB 'Объем в резервуаре (до), л' (Sku sku, Bin bin, DATETIME dateTime) =
    currentVolume(sku, bin) (-) inBinVolumeB(sku, bin, dateTime) (+) outBinVolumeB(sku, bin, dateTime);
prevVolumeB 'Объем (до), л' (Sku sku, Bin bin, DATETIME dateTime) = PREV(volumeB(sku, bin, dateTime) IF dateTime IS DATETIME);
densityB 'Плотность в резервуаре (до), кг/л' (Sku sku, Bin bin, DATETIME dateTime) = NUMERIC[8,4](balanceB(sku,bin,dateTime) / volumeB(sku,bin,dateTime));


// с учетом текущей даты/времени
volumeA 'Объем в резервуаре (после), л' (Sku sku, Bin bin, DATETIME dateTime) =
    currentVolume(sku, bin) (-) inBinVolumeA(sku, bin, dateTime) (+) outBinVolumeA(sku, bin, dateTime);
prevVolumeA 'Объем в резервуаре (после), л' (Sku sku, Bin bin, DATETIME dateTime) = PREV(volumeA(sku, bin, dateTime) IF dateTime IS DATETIME);

volumeIn 'Приход в резервуар, л' (Sku sku, Bin bin, DATETIME dateTimeFrom, DATETIME dateTimeTo) =
    GROUP SUM volume(BinLedger ledger) IF isPosted(ledger) AND dateTime(ledger) >= dateTimeFrom AND dateTime(ledger)<= dateTimeTo BY sku(ledger), inBin(ledger);
volumeOut 'Расход из резервуара, л' (Sku sku, Bin bin, DATETIME dateTimeFrom, DATETIME dateTimeTo) =
    GROUP SUM volume(BinLedger ledger) IF isPosted(ledger) AND dateTime(ledger) >= dateTimeFrom AND dateTime(ledger)<= dateTimeTo BY sku(ledger), outBin(ledger);

quantityIn 'Приход в резервуар' (Sku sku, Bin bin, DATETIME dateTimeFrom, DATETIME dateTimeTo) =
    GROUP SUM quantity(BinLedger ledger) IF isPosted(ledger) AND dateTime(ledger) >= dateTimeFrom AND dateTime(ledger)<= dateTimeTo BY sku(ledger), inBin(ledger);
quantityOut 'Расход из резервуара' (Sku sku, Bin bin, DATETIME dateTimeFrom, DATETIME dateTimeTo) =
    GROUP SUM quantity(BinLedger ledger) IF isPosted(ledger) AND dateTime(ledger) >= dateTimeFrom AND dateTime(ledger)<= dateTimeTo BY sku(ledger), outBin(ledger);


currentVolume 'Текущий объем, л' (Bin bin)= GROUP SUM currentVolume(Sku sku, bin) IF isFuel(sku);
currentBalance 'Текущий остаток, кг' (Bin bin)= GROUP SUM currentBalance(Sku sku, bin) IF isFuel(sku);

currentDensity 'Расчётная плотность, кг/л' (Sku sku, Bin bin) = NUMERIC[8,4](currentBalance(sku,bin) / currentVolume(sku,bin));
currentDensity 'Расчётная плотность, кг/л' (Bin bin) = NUMERIC[8,4](currentBalance(bin) / currentVolume(bin));

lastDailyReportDensity 'Плотность наблюдаемая, кг/м3' = ABSTRACT NUMERIC[8,1](Stock, Sku, Bin);
lastDailyReportDensity 'Плотность наблюдаемая, кг/л' (Sku sku, Bin bin) = NUMERIC[8,4]([GROUP MAX lastDailyReportDensity(Stock st, sku, bin) IF in(st, bin)]() / 1000.0);

volumeB 'Объем (до), л' (Bin bin, DATETIME dateTime) = GROUP SUM volumeB(Sku sku, bin, dateTime) IF isFuel(sku);
prevVolumeB 'Объем (до), л' (Bin bin, DATETIME dateTime) = PREV(volumeB(bin, dateTime));

balanceB 'Остаток (до), кг' (Bin bin, DATETIME dateTime) = GROUP SUM balanceB(Sku sku, bin, dateTime) IF isFuel(sku);
prevBalanceB 'Остаток (до), кг' (Bin bin, DATETIME dateTime) = PREV(balanceB(bin, dateTime));

densityB 'Плотность (до), кг/л' (Bin bin, DATETIME dateTime) = NUMERIC[8,4](balanceB(bin,dateTime) / volumeB(bin,dateTime));
prevDensityB 'Плотность (до), кг/л' (Bin bin, DATETIME dateTime) = NUMERIC[8,4](prevBalanceB(bin,dateTime) / prevVolumeB(bin,dateTime));

volumeA 'Объем (после), л' (Bin bin, DATETIME dateTime) = GROUP SUM volumeA(Sku sku, bin, dateTime) IF isFuel(sku);
balanceA 'Остаток (после), кг' (Bin bin, DATETIME dateTime) = GROUP SUM balanceA(Sku sku, bin, dateTime) IF isFuel(sku);
densityA 'Плотность (после), кг/л' (Bin bin, DATETIME dateTime) = NUMERIC[8,4](balanceA(bin,dateTime) / volumeA(bin,dateTime));

EXTEND FORM binLedger
    PROPERTIES(b) READONLY volume AFTER quantity(b)
    PROPERTIES(b) READONLY density AFTER volume(b)
;

balanceVolume 'Объем, л' (Bin bin, BinLedger ledger) = IF inBin(ledger)==bin
    THEN volume(ledger)
        ELSE IF outBin(ledger)==bin 
            THEN -volume(ledger);

backgroundDiffValueBin (Bin b) = CASE
    WHEN currentVolume(b) > volume(b) THEN overColorValueBin()
    WHEN (GROUP SUM 1 IF currentVolume(Sku sku, b)) > 1 THEN overColorValueBin();

fullVolumePercent 'Занято по объёму, %' (Bin b) = round2(currentVolume(b) / volume(b) * 100.0);

EXTEND FORM binBalance
    PROPERTIES(b) READONLY volume, currentBalance, currentVolume BACKGROUND backgroundDiffValueBin(b), fullVolumePercent, currentDensity
    PROPERTIES(s,b) READONLY currentVolume, currentDensity
    PROPERTIES(b,l) READONLY balanceVolume
    PROPERTIES(l) READONLY density
;

EXTEND FORM dialogBinStock
    PROPERTIES(b) READONLY volume, currentVolume, fullVolumePercent, currentDensity
;

EXTEND FORM currentBalanceSkuStock
    OBJECTS bin = Bin
    PROPERTIES(bin) READONLY name
    PROPERTIES(s,bin) READONLY currentBalance, currentVolume, currentDensity
    FILTERS in(st,bin)
;
DESIGN currentBalanceSkuStock {
    ledgerBox {
        MOVE BOX(bin);
    }
}

EXTEND FORM balanceSkuStock
    OBJECTS bin = Bin
    PROPERTIES(bin) READONLY name
    PROPERTIES(s,bin,t) READONLY balanceB, volumeB, densityB
    FILTERS in(st,bin)
;
DESIGN balanceSkuStock {
    ledgerBox {
        MOVE BOX(bin);
    }
}

nameFuel 'Топливо' (Bin b) = GROUP CONCAT name(Sku sku) IF prevCurrentVolume(sku,b) , ', ' ORDER sku CHARWIDTH 20;
nameFuel 'Топливо' (Gun g) = nameFuel(bin(g)) CHARWIDTH 20;

EXTEND FORM bins
    PROPERTIES(s) READONLY nameFuel
;
EXTEND FORM dialogBinStock
    PROPERTIES(b) READONLY nameFuel
;
EXTEND FORM guns
    PROPERTIES(g) READONLY nameFuel
;
EXTEND FORM gunBins
    PROPERTIES(g) READONLY nameFuel
;

//----------------------------- переименование ячейки в резервуар -----------------------------//
DESIGN binGroup {
    caption = 'Группа резервуаров';
    BOX(g) { caption = 'Группа резервуаров';}
}
DESIGN binGroups {
    caption = 'Группы резервуаров';
}
DESIGN bin {
    caption = 'Резервуар';
    BOX(s) { caption = 'Резервуар'; }
}
DESIGN bins {
    caption = 'Резервуары';
    BOX(TREE binTree) { caption = 'Группы резервуаров'; }
    BOX(s) { caption = 'Резервуар'; }
}
DESIGN binStocks {
    caption = 'Резервуары';
    BOX(TREE binTree) { caption = 'Группы резервуаров'; }
    BOX(b) { caption = 'Резервуары'; }
    PROPERTY(nameBin(ts,g)) { caption = 'Резервуар'; }
    PROPERTY(nameBin(ts,s)) { caption = 'Резервуар'; }
}

NAVIGATOR {
    WMSNavigator 'АЗС';
    binNavigator 'Конфигурация АЗС';
    binGroups 'Группы резервуаров';
    binStocks 'Резервуары';
    binLedger 'Регистр изменения остатков по резервуарам';
    binBalance 'Остатки по резервуарам';
}

DESIGN binLedger {
    caption = 'Регистр изменения остатков по резервуарам';
    BOX(b) { caption = 'Изменение остатка по резервуарам'; }
    PROPERTY(nameInBin(b)) { caption = 'Резервуар (в)'; }
    PROPERTY(nameOutBin(b)) { caption = 'Резервуар (из)'; }
    PROPERTY(quantity(b)) { caption = 'Кол-во, кг'; }
}

DESIGN binBalance {
    caption = 'Остатки по резервуарам';
    BOX(TREE binTree) { caption = 'Группы резервуаров'; }
    BOX(b) { caption = 'Резервуар'; }
    BOX(l) { caption = 'Изменение остатка по резервуарам'; }
    PROPERTY(currentBalance(b)) { caption = 'Текущий остаток в резервуаре, кг'; }
    PROPERTY(currentBalance(s,b)) { caption = 'Текущий остаток в резервуаре, кг'; }
    PROPERTY(balanceBin(b,l)) { caption = 'Резервуар (из/в)'; }
    PROPERTY(balanceQuantity(b,l)) { caption = 'Кол-во, кг'; }
}
DESIGN dialogBinStock {
    caption = 'Резервуары';
    BOX(TREE binTree) { caption = 'Группы резервуаров'; }
    BOX(b) { caption = 'Резервуар'; }
}
DESIGN currentBalanceSkuStock {
    BOX(bin) { caption = 'Резервуары'; }
    PROPERTY(currentBalance(s,bin)) { caption = 'Текущий остаток в резервуаре, кг'; }
}
DESIGN balanceSkuStock {
    BOX(bin) { caption = 'Резервуары'; }
    PROPERTY(balanceB(s,bin,t)) { caption = 'Остаток в резервуаре (до)'; }
}

CONSTRAINT (CHANGED(volume(BinLedger l)) OR CHANGED(quantity(l))) AND (volume(l) OR quantity(l)) AND NOT (volume(l) AND quantity(l))
    AND isFuel(sku(l)) AND NOT skipCheckVolumeSkuLedger(stock(l))
    MESSAGE 'При движении топлива по резервуарам должны быть заданы масса и объём';

skipCheckBinsBinLedger 'Разрешить не указывать резервуар при движении топлива' = DATA BOOLEAN (Stock);

EXTEND FORM options
    PROPERTIES skipCheckBinsBinLedger(s)
;

CONSTRAINT (SET(BinLedger l IS BinLedger) OR CHANGED(inBin(l)) OR CHANGED(outBin(l))) AND NOT (inBin(l) OR outBin(l))
    AND isFuel(sku(l)) AND NOT skipCheckBinsBinLedger(stock(l))
    MESSAGE 'При движении топлива должен быть задан резервуар';