MODULE InventoryFuel;

REQUIRE Inventory, SkuLedgerFuel;

NAMESPACE Inventory;

volume 'Объем, л' = DATA NUMERIC[16,5] (PageInventoryDetail) CHARWIDTH 7;
density 'Плотность, кг/л' = DATA NUMERIC[8,4] (PageInventoryDetail) CHARWIDTH 7;

CONSTRAINT (SET(isPosted(inventory(PageInventoryDetail d))) OR CHANGED(sku(d)) OR CHANGED(density(d))) AND isPosted(inventory(d)) AND isFuel(skuGroup(sku(d))) AND NOT density(d)
    MESSAGE 'Для строки страницы описи должна быть задана плотность';

@fuelDensityActions(pageInventoryDetail);

volumePageInventoryDetail 'Объем (всего), л' (pageInventory) = GROUP SUM volume(PageInventoryDetail idetail) BY pageInventory(idetail) IN documentSum CHARWIDTH 8 MATERIALIZED;

volumeBalance 'Объем по остаткам, л' (collationSheet, sku) = DATA NUMERIC[16,5] (CollationSheet, Sku);
densityBalance 'Плотность по остаткам, кг/л' = DATA NUMERIC[8,4] (CollationSheet, Sku);

WHEN LOCAL (CHANGED(quantityBalance(CollationSheet cs, Sku sk)) OR CHANGED(volumeBalance(cs,sk))) AND NOT CHANGED(densityBalance(cs,sk)) AND isFuel(skuGroup(sk)) AND quantityBalance(cs,sk) AND volumeBalance(cs,sk) DO {
    densityBalance(cs,sk) <- NUMERIC[8,4](quantityBalance(cs,sk) / volumeBalance(cs,sk));
}

fillDensityBalance (CollationSheet cs, Sku sk, NUMERIC[8,4] n) {
    IF n THEN {
        densityBalance(cs,sk) <- n;
        IF NOT quantityBalance(cs,sk) THEN {
            quantityBalance(cs,sk) <- NUMERIC[16,5](volumeBalance(cs,sk) * densityBalance(cs,sk));
        } ELSE IF NOT volumeBalance(cs,sk) THEN {
            volumeBalance(cs,sk) <- NUMERIC[16,5](quantityBalance(cs,sk) / densityBalance(cs,sk));
        } ELSE {
            ASK 'Нажмите "Да" для пересчета объема (л) или "Нет" для пересчета кол-ва (кг)' yes = YESNO DO {
                IF yes THEN {
                    volumeBalance(cs,sk) <- NUMERIC[16,5](quantityBalance(cs,sk) / densityBalance(cs,sk));
                } ELSE {
                    quantityBalance(cs,sk) <- NUMERIC[16,5](volumeBalance(cs,sk) * densityBalance(cs,sk));
                }
            } ELSE {
                densityBalance(cs,sk) <- PREV(densityBalance(cs,sk));
            }
        }
    } ELSE {
        densityBalance(cs,sk) <- NUMERIC[8,4](quantityBalance(cs,sk) / volumeBalance(cs,sk));
    }
}

changeDensityBalance (CollationSheet cs, Sku sk) {
    INPUT n = NUMERIC[8,4] DO {
        fillDensityBalance(cs,sk,n);
    }
}

fillDensityBalance15C 'Заполнить значением плотности при 15°С' (CollationSheet cs, Sku sk) {
    IF density15C(sk) THEN {
        fillDensityBalance(cs,sk,density15C(sk));
    } ELSE {
        MESSAGE 'В карточке товара не задано значение плотности при 15°С' NOWAIT;
    }
}

volumeBalance 'Объем по остаткам, л' (collationSheet, batch) = DATA NUMERIC[16,5] (CollationSheet, Batch);
densityBalance 'Плотность по остаткам, кг/л' = DATA NUMERIC[8,4] (CollationSheet, Batch);

WHEN LOCAL (CHANGED(quantityBalance(CollationSheet cs, Batch bt)) OR CHANGED(volumeBalance(cs,bt))) AND NOT CHANGED(densityBalance(cs,bt)) AND isFuel(skuGroup(sku(bt))) AND quantityBalance(cs,bt) AND volumeBalance(cs,bt) DO {
    densityBalance(cs,bt) <- NUMERIC[8,4](quantityBalance(cs,bt) / volumeBalance(cs,bt));
}

fillDensityBalance (CollationSheet cs, Batch bt, NUMERIC[8,4] n) {
    IF n THEN {
        densityBalance(cs,bt) <- n;
        IF NOT quantityBalance(cs,bt) THEN {
            quantityBalance(cs,bt) <- NUMERIC[16,5](volumeBalance(cs,bt) * densityBalance(cs,bt));
        } ELSE IF NOT volumeBalance(cs,bt) THEN {
            volumeBalance(cs,bt) <- NUMERIC[16,5](quantityBalance(cs,bt) / densityBalance(cs,bt));
        } ELSE {
            ASK 'Нажмите "Да" для пересчета объема (л) или "Нет" для пересчета кол-ва (кг)' yes = YESNO DO {
                IF yes THEN {
                    volumeBalance(cs,bt) <- NUMERIC[16,5](quantityBalance(cs,bt) / densityBalance(cs,bt));
                } ELSE {
                    quantityBalance(cs,bt) <- NUMERIC[16,5](volumeBalance(cs,bt) * densityBalance(cs,bt));
                }
            } ELSE {
                densityBalance(cs,bt) <- PREV(densityBalance(cs,bt));
            }
        }
    } ELSE {
        densityBalance(cs,bt) <- NUMERIC[8,4](quantityBalance(cs,bt) / volumeBalance(cs,bt));
    }
}

changeDensityBalance (CollationSheet cs, Batch bt) {
    INPUT n = NUMERIC[8,4] DO {
        fillDensityBalance(cs,bt,n);
    }
}

fillDensityBalance15C 'Заполнить значением плотности при 15°С' (CollationSheet cs, Batch bt) {
    IF density15C(sku(bt)) THEN {
        fillDensityBalance(cs,bt,density15C(sku(bt)));
    } ELSE {
        MESSAGE 'В карточке товара не задано значение плотности при 15°С' NOWAIT;
    }
}

volumePageInventoryDetail 'Объем товара, л' (listInventory) =
    GROUP SUM volumePageInventoryDetail(PageInventory pageInventory)
    BY listInventory(pageInventory) IN documentSum CHARWIDTH 12;
volumePageInventoryDetail 'Объем по описям, л' (stock, inventory) =
    GROUP SUM volumePageInventoryDetail(ListInventory listInventory)
    BY stock(listInventory), inventory(listInventory) IN documentSum;
volumePageInventoryDetail 'Объем по описям, л' (CollationSheet collationSheet, Sku sku) =
    GROUP SUM volume(PageInventoryDetail pageInventoryDetail)
    BY collationSheet(pageInventoryDetail), sku(pageInventoryDetail) MATERIALIZED;
volumePageInventoryDetail 'Объем в описи, л' (listInventory, sku) =
    GROUP SUM volume(PageInventoryDetail pageInventoryDetail)
    BY listInventory(pageInventoryDetail), sku(pageInventoryDetail);

notBatchVolumePageInventoryDetail (CollationSheet cs, Sku sku) = GROUP SUM volume(PageInventoryDetail d) IF NOT batch(d) BY collationSheet(d), sku(d);
calcVolumePageInventoryDetail 'Объем по описям, л' (collationSheet, batch) = GROUP SUM volume(PageInventoryDetail pageInventoryDetail)
    BY collationSheet(pageInventoryDetail), batch(pageInventoryDetail);
calcPartitionVolume (CollationSheet cs, Batch batch) =
    PARTITION UNGROUP notBatchVolumePageInventoryDetail
           LIMIT (prevVolumeB(batch, stock(cs), dateTime(cs)) (-) calcVolumePageInventoryDetail(cs,batch))
           ORDER DESC dateTime(batch), batch
           BY cs, sku(batch);
partitionVolume 'По FIFO' (CollationSheet cs, Batch batch) = DATA NUMERIC[16,5](CollationSheet, Batch);
volumePageInventoryDetail 'Объем по описям, л' (CollationSheet cs, Batch batch) = calcVolumePageInventoryDetail(cs, batch) (+) partitionVolume(cs, batch);

volumePageInventoryDetail 'Объем в описи, л' (listInventory, batch) = GROUP SUM volume(PageInventoryDetail pageInventoryDetail)
    BY listInventory(pageInventoryDetail), batch(pageInventoryDetail);

volumeBatchPageInventoryDetail 'Объем по описям, л' (CollationSheet collationSheet) =
    GROUP SUM volumePageInventoryDetail(collationSheet, Batch batch);
volumePageInventoryDetail 'Объем по описям, л' (collationSheet) =
    GROUP SUM volume(PageInventoryDetail pageInventoryDetail) BY collationSheet(pageInventoryDetail) MATERIALIZED;

volumeSkuPageInventoryDetail 'Объем по описи, л' (CollationSheet collationSheet) =
    GROUP SUM volumePageInventoryDetail(collationSheet, Sku sku) IF include(collationSheet, sku) MATERIALIZED;

volumeSkuBalance 'Объем по остаткам, л' (CollationSheet collationSheet) =
    GROUP SUM volumeBalance(collationSheet, Sku sku) IF include(collationSheet, sku) MATERIALIZED;
volumeShortage 'Объем недостачи / излишка, л' (CollationSheet collationSheet, Sku sku) =
    volumeBalance(collationSheet, sku) (-) volumePageInventoryDetail(collationSheet, sku) MATERIALIZED;
volumeSkuShortage 'Объем недостачи / излишка, л' (CollationSheet collationSheet) =
    GROUP SUM volumeShortage(collationSheet, Sku sku) IF include(collationSheet, sku) MATERIALIZED;
positiveVolumeSkuShortage 'Объем недостачи, л' (CollationSheet collationSheet) =
    GROUP SUM volumeShortage(collationSheet, Sku sku) IF include(collationSheet, sku) AND volumeShortage(collationSheet, sku)>0 MATERIALIZED;
negativeVolumeSkuShortage 'Объем излишки, л' (CollationSheet collationSheet) =
    GROUP SUM volumeShortage(collationSheet, Sku sku) IF include(collationSheet, sku) AND volumeShortage(collationSheet, sku)<0 MATERIALIZED;

volumeBatchBalance 'Объем по остаткам, л' (CollationSheet collationSheet) =
    GROUP SUM volumeBalance(collationSheet, Batch batch) IF include(collationSheet, batch) MATERIALIZED;
volumeShortage 'Объем недостачи / излишка, л' (CollationSheet collationSheet, Batch batch) =
    volumeBalance(collationSheet, batch) (-) volumePageInventoryDetail(collationSheet, batch) MATERIALIZED;
volumeBatchShortage 'Объем недостачи / излишка, л' (CollationSheet collationSheet) =
    GROUP SUM volumeShortage(collationSheet, Batch batch) IF include(collationSheet, batch) MATERIALIZED;
positiveVolumeBatchShortage 'Объем недостачи, л' (CollationSheet collationSheet) =
    GROUP SUM volumeShortage(collationSheet, Batch batch) IF include(collationSheet, batch) AND volumeShortage(collationSheet, batch) >0 MATERIALIZED;
negativeVolumeBatchShortage 'Объем излишки, л' (CollationSheet collationSheet) =
    GROUP SUM volumeShortage(collationSheet, Batch batch) IF include(collationSheet, batch) AND volumeShortage(collationSheet, batch) <0 MATERIALIZED;

volumeBalance 'Объем по остаткам, л' (CollationSheet collationSheet) = IF isBatch(collationSheet)
                                                                        THEN volumeBatchBalance(collationSheet)
                                                                        ELSE volumeSkuBalance(collationSheet);
volumeShortage 'Объем недостачи / излишка, л' (CollationSheet collationSheet) = IF isBatch(collationSheet)
                                                                        THEN volumeBatchShortage(collationSheet)
                                                                        ELSE volumeSkuShortage(collationSheet);
positiveVolumeShortage 'Объем недостачи, л' (CollationSheet collationSheet) = IF isBatch(collationSheet)
                                                                        THEN positiveVolumeBatchShortage(collationSheet)
                                                                        ELSE positiveVolumeSkuShortage(collationSheet);
negativeVolumeShortage 'Объем излишки, л' (CollationSheet collationSheet) = IF isBatch(collationSheet)
                                                                        THEN negativeVolumeBatchShortage(collationSheet)
                                                                        ELSE negativeVolumeSkuShortage(collationSheet);

volume (OutInventorySkuDetail inventorySkuDetail) = volumeShortage(collationSheet(inventorySkuDetail), sku(inventorySkuDetail));
volume (InInventorySkuDetail inventorySkuDetail) = -volumeShortage(collationSheet(inventorySkuDetail), sku(inventorySkuDetail));
volume 'Объем недостачи / излишка, л' (InventorySkuDetail inventorySkuDetail) = volumeShortage(collationSheet(inventorySkuDetail), sku(inventorySkuDetail)) MATERIALIZED;

density (OutInventorySkuDetail inventorySkuDetail) = densityBalance(collationSheet(inventorySkuDetail), sku(inventorySkuDetail));
density (InInventorySkuDetail inventorySkuDetail) = densityBalance(collationSheet(inventorySkuDetail), sku(inventorySkuDetail));

volume (OutInventorySkuDetail ledger) += volume(ledger);
density (OutInventorySkuDetail ledger) += density(ledger);
volume (InInventorySkuDetail ledger) += volume(ledger);
density (InInventorySkuDetail ledger) += density(ledger);


EXTEND FORM collationSheetBatches
    PROPERTIES(d) READONLY volume AFTER quantity(d)
;

volume (OutInventoryBatchDetail inventoryBatchDetail) = volumeShortage(collationSheet(inventoryBatchDetail), batch(inventoryBatchDetail));
volume (InInventoryBatchDetail inventoryBatchDetail) = -volumeShortage(collationSheet(inventoryBatchDetail), batch(inventoryBatchDetail));
volume 'Объем недостачи / излишка, л' (InventoryBatchDetail inventoryBatchDetail) = volumeShortage(collationSheet(inventoryBatchDetail), batch(inventoryBatchDetail)) MATERIALIZED;

density (OutInventoryBatchDetail inventoryBatchDetail) = densityBalance(collationSheet(inventoryBatchDetail), batch(inventoryBatchDetail));
density (InInventoryBatchDetail inventoryBatchDetail) = densityBalance(collationSheet(inventoryBatchDetail), batch(inventoryBatchDetail));

volume (OutInventoryBatchDetail ledger) += volume(ledger);
density (OutInventoryBatchDetail ledger) += density(ledger);
volume (InInventoryBatchDetail ledger) += volume(ledger);
density (InInventoryBatchDetail ledger) += density(ledger);

EXTEND FORM listInventory
    PROPERTIES(li) volumePageInventoryDetail
    PROPERTIES(pl) volumePageInventoryDetail AFTER quantityPageInventoryDetail(pl)
    PROPERTIES(dp) READONLYIF NOT isFuel(sku(dp)) volume AFTER quantityGrid
    PROPERTIES(dp) READONLYIF NOT isFuel(sku(dp)) density AFTER volume(dp) ON CHANGE changeDensity(dp) ON CONTEXTMENU fillDensity15C(dp)
    PROPERTIES(li,i) volumePageInventoryDetail AFTER quantityPageInventoryDetail(li,i)
    PROPERTIES(li,bt) SHOWIF isBatch(li) volumePageInventoryDetail AFTER quantityPageInventoryDetail(li,bt)
;

EXTEND FORM inventory
    PROPERTIES(ds,in) READONLY volumePageInventoryDetail AFTER quantityPageInventoryDetail(ds,in)
    PROPERTIES(li) READONLY volumePageInventoryDetail AFTER quantityPageInventoryDetail(li)
    PROPERTIES(pl) READONLY volumePageInventoryDetail AFTER quantityPageInventoryDetail(pl)
    PROPERTIES(dp) READONLY BACKGROUND background(sku(dp),ds,in) AFTER quantity(dp) volume, density
    PROPERTIES(li,it) READONLY volumePageInventoryDetail AFTER quantityPageInventoryDetail(li,it)
    PROPERTIES(li,bt) READONLY SHOWIF isBatch(li) volumePageInventoryDetail AFTER quantityPageInventoryDetail(li,bt)
    PROPERTIES(cs) AFTER quantityShortage(cs) volumePageInventoryDetail, volumeBalance, volumeShortage
    PROPERTIES(cs,i) AFTER quantityShortage(cs,i) volumePageInventoryDetail, volumeShortage
    PROPERTIES(cs,i) READONLYIF NOT isFuel(i) volumeBalance AFTER volumePageInventoryDetail(cs,i)
    PROPERTIES(cs,i) READONLYIF NOT isFuel(i) densityBalance AFTER volumeBalance(cs,i) ON CHANGE changeDensityBalance(cs,i) ON CONTEXTMENU fillDensityBalance15C(cs,i)
    PROPERTIES(cs,b) SHOWIF isBatch(cs) AFTER quantityShortage(cs,b) volumePageInventoryDetail, volumeShortage
    PROPERTIES(cs,b) READONLYIF NOT isFuel(sku(b)) SHOWIF isBatch(cs) volumeBalance AFTER volumePageInventoryDetail(cs,b)
    PROPERTIES(cs,b) READONLYIF NOT isFuel(sku(b)) SHOWIF isBatch(cs) densityBalance AFTER volumeBalance(cs,b) ON CHANGE changeDensityBalance(cs,b) ON CONTEXTMENU fillDensityBalance15C(cs,b)
;

volumeShortage 'Объем недостачи / излишка, л' (Inventory in) = GROUP SUM volumeShortage(CollationSheet cs) BY inventory(cs);

EXTEND FORM inventories
    PROPERTIES(in) READONLY volumeShortage AFTER quantityShortage(in)
    PROPERTIES(il) READONLY SHOWIF isSku(in) volume AFTER quantity(il)
    PROPERTIES(ib) READONLY SHOWIF isBatch(in) volume AFTER quantity(ib)
    PROPERTIES(li) READONLY volumePageInventoryDetail AFTER quantityPageInventoryDetail(li)
    PROPERTIES(li,i) READONLY volumePageInventoryDetail AFTER quantityPageInventoryDetail(li,i)
    PROPERTIES(li,b) READONLY SHOWIF isBatch(li) volumePageInventoryDetail AFTER quantityPageInventoryDetail(li,b)
    PROPERTIES(cs) READONLY AFTER quantityShortage(cs) volumePageInventoryDetail, volumeBalance, volumeShortage
    PROPERTIES(cs,it) READONLY AFTER quantityShortage(cs,it) volumePageInventoryDetail, volumeBalance, densityBalance, volumeShortage
    PROPERTIES(cs,bt) READONLY SHOWIF isBatch(cs) AFTER quantityShortage(cs,bt) volumePageInventoryDetail, volumeBalance, densityBalance, volumeShortage
;

batchVolume 'Расписано по партиям, л' = GROUP SUM volumePageInventoryDetail(CollationSheet cs, Batch bt) BY cs, sku(bt);

EXTEND FORM inventory
    PROPERTIES(cs,i) READONLY SHOWIF isSkuBatch(cs) batchVolume AFTER batchQuantity(cs,i)
;

EXTEND FORM inventory 
    PROPERTIES SHOWIF viewChange(in) PANEL IN prevInventory
               prevVP 'Объем по описям, л' = PREV(volumePageInventoryDetail(cs,i)),
               prevVB 'Объем по остаткам, л' = PREV(volumeBalance(cs,i))
;

overRecalculateBalance(Inventory inventory) + {
    volumeBalance(CollationSheet cs, Sku sku) <- NULL WHERE inventory(cs) == inventory;
    densityBalance(CollationSheet cs, Sku sku) <- NULL WHERE inventory(cs) == inventory;
    volumeBalance(CollationSheet cs, Batch batch) <- NULL WHERE inventory(cs) == inventory;
    densityBalance(CollationSheet cs, Batch batch) <- NULL WHERE inventory(cs) == inventory;
    
    FOR inventory(CollationSheet cs) = inventory AND DATETIME dt = dateTime(inventory) AND Stock st = stock(cs) AND NOT skipRecalculateBalance(inventory) DO {
        IF isPartly(inventory) AND isRemains(inventory) THEN {
            volumeBalance(cs, Sku sku)
                <- volumeB(sku, st, dt)
                WHERE include(inventory, sku) AND volumeB(sku, st, dt) AND isFuel(sku);
            
            IF isBatch (inventory) THEN {
                volumeBalance(cs, Batch batch)
                    <- volumeB(batch, st, dt)
                    WHERE include(inventory, skuLedger(batch, st)) AND NOT excludeBatch(inventory,batch) AND volumeB(batch, st, dt) AND isFuel(sku(batch));
            }
        } ELSE {
            IF isRemains (inventory) THEN {
                volumeBalance(cs, Sku sku)
                    <- volumeB(sku, st, dt)
                    WHERE volumeB(sku, st, dt) AND isFuel(sku);
            } ELSE {
                volumeBalance(cs, Sku sku)
                    <- volumeB(sku, st, dt)
                    WHERE volumeB(sku, st, dt) AND include(cs, sku) AND isFuel(sku);
            }
            
            IF isBatch (inventory) THEN {
                IF isRemains(inventory) THEN {
                    volumeBalance(cs, Batch batch)
                        <- volumeB(batch, st, dt)
                        WHERE NOT excludeBatch(inventory,batch) AND volumeB(batch, st, dt) AND isFuel(sku(batch));
                } ELSE {
                    volumeBalance(cs, Batch batch)
                        <- volumeB(batch, st, dt)
                        WHERE include(cs, skuLedger(batch, st)) AND NOT excludeBatch(inventory,batch) AND volumeB(batch, st, dt) AND isFuel(sku(batch));
                }
            }
        }
    }
}
