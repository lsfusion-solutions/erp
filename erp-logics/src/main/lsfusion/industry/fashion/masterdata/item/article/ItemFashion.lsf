MODULE ItemFashion;

REQUIRE ItemArticle;

NAMESPACE Item;

GROUP itemFashion 'Одежда' : public;

@defineStringItemAttribute(sizeHeight, ISTRING[10], 'Рост', itemFashion);
@defineItemAttributeBatch (sizeHeight, 'Рост');

@defineStringItemAttribute(sizeChest, STRING[10], 'Обхват груди/бюста', itemFashion);
@defineItemAttributeBatch (sizeChest, 'Обхват груди/бюста');

@defineStringItemAttribute(sizeUnderChest, STRING[10], 'Обхват под грудью', itemFashion);
@defineItemAttributeBatch (sizeUnderChest, 'Обхват под грудью');

@defineStringItemAttribute(sizeCupBra, STRING[10], 'Размер чашечки', itemFashion);
@defineItemAttributeBatch (sizeCupBra, 'Размер чашечки');

@defineStringItemAttribute(sizeHips, STRING[10], 'Обхват бедер', itemFashion);
@defineItemAttributeBatch (sizeHips, 'Обхват бедер');

@defineStringItemAttribute(sizeWaist, STRING[10], 'Обхват талии', itemFashion);
@defineItemAttributeBatch (sizeWaist, 'Обхват талии');

@defineStringItemAttribute(sizeNeck, STRING[10], 'Обхват шеи', itemFashion);
@defineItemAttributeBatch (sizeNeck, 'Обхват шеи');

@defineStringItemAttribute(sizeHead, STRING[10], 'Обхват головы', itemFashion);
@defineItemAttributeBatch (sizeHead, 'Обхват головы');

@defineStringItemAttribute(sizeHand, STRING[10], 'Обхват кисти', itemFashion);
@defineItemAttributeBatch (sizeHand, 'Обхват кисти');

@defineStringItemAttribute(footLength, STRING[10], 'Длина стопы', itemFashion);
@defineItemAttributeBatch (footLength, 'Длина стопы');

@defineStringItemAttribute(insoleLength, STRING[10], 'Длина стельки', itemFashion);
@defineItemAttributeBatch (insoleLength, 'Длина стельки');

@defineStringItemAttribute(legLength, STRING[10], 'Длина ноги по внутр.поверхности', itemFashion);
@defineItemAttributeBatch (legLength, 'Длина ноги по внутр.поверхности');

overCopy(Item s, Item d) + { 
    sizeHeight(d) <- sizeHeight(s);
    sizeChest(d) <- sizeChest(s);  
    sizeUnderChest(d) <- sizeUnderChest(s);  
    sizeCupBra(d) <- sizeCupBra(s);  
    sizeHips(d) <- sizeHips(s);  
    sizeWaist(d) <- sizeWaist(s);  
    sizeNeck(d) <- sizeNeck(s);  
    sizeHead(d) <- sizeHead(s);         
    sizeHand(d) <- sizeHand(s);  
    footLength(d) <- footLength(s);
    legLength(d) <- legLength(s);
}

DESIGN item {
    itemPrimaryColumn1 {
        MOVE GROUP(itemFashion,i) { lines = 6;}
    }
    
//    PROPERTY(sizeChestItem(i)) {charWidth = 10;}
//    PROPERTY(sizeUnderChestItem(i)) {charWidth = 10;}
//    PROPERTY(sizeCupBraItem(i)) {charWidth = 10;}
//    PROPERTY(sizeHipsItem(i)) {charWidth = 10;}
//    PROPERTY(sizeWaistItem(i)) {charWidth = 10;}
//    PROPERTY(sizeNeckItem(i)) {charWidth = 10;}
//    PROPERTY(sizeHeadItem(i)) {charWidth = 10;}
//    PROPERTY(sizeHandItem(i)) {charWidth = 10;}
//    PROPERTY(footLengthItem(i)) {charWidth = 10;}
}

DESIGN itemGroup {
    attributes {
        MOVE GROUP(itemFashion,g) {
            lines = 6;
        }
    }
}

// --------------------------------- Атрибуты только для артикулов -------------------------- //

// Год
CLASS SeasonYear 'Год';
TABLE seasonYear (SeasonYear);
@defineExternalizable(seasonYear, STRING[100]);

name 'Год' = DATA ISTRING[50](SeasonYear);
seasonYearName = GROUP AGGR SeasonYear season BY name(season);

FORM seasonYear 'Год'
    OBJECTS t=SeasonYear PANEL
    PROPERTIES(t) name, id SHOWIF showIDs()
    EDIT SeasonYear OBJECT t
;

FORM seasonYears 'Годы'
    OBJECTS t=SeasonYear
    PROPERTIES(t) READONLY   name, id SHOWIF showIDs() 
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE
    ORDERS name(t)
    LIST SeasonYear OBJECT t
;
DESIGN seasonYears { BOX { size = (600, 400); } }

seasonYear = DATA SeasonYear (Article);
nameSeasonYear 'Год' (Article a) = name(seasonYear(a)) IN itemArticle CHARWIDTH 10;

seasonYear (Item item) = seasonYear(article(item));
nameSeasonYear 'Год' (Item i) = name(seasonYear(i)) IN itemArticle CHARWIDTH 10;
nameSeasonYear 'Год' (Batch b) =  OVERRIDE nameSeasonYear(sku(b)), 'Не определено';

@defineItemAttribute(seasonYear, name, 'Год', itemFashion);

EXTEND FORM article PROPERTIES(a)  nameSeasonYear;
EXTEND FORM articles PROPERTIES(a)  READONLYIF isReadonly() BEFORE deletea  nameSeasonYear;

@defineUniteAttributeItem(seasonYear, name, 'год', 'годы', article);
EXTEND FORM attributesItem
    PROPERTIES READONLY AFTER name(seasonYear) id(seasonYear) SHOWIF showIDs()
;

// Сезон
CLASS Season 'Сезон';
TABLE season (Season);
@defineExternalizable(season, STRING[100]);

name 'Сезон' = DATA ISTRING[50](Season) CHARWIDTH 10;
seasonName = GROUP AGGR Season season BY name(season);

FORM season 'Сезон'
    OBJECTS t=Season PANEL
    PROPERTIES(t) name, id SHOWIF showIDs()
    EDIT Season OBJECT t
;

FORM seasons 'Сезоны'
    OBJECTS t=Season
    PROPERTIES(t) READONLY   name, id SHOWIF showIDs() 
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE
    ORDERS name(t)
    LIST Season OBJECT t
;
DESIGN seasons { BOX { size = (600, 400); } }

season = DATA Season (Article);
idSeason 'Сезон' (Article a) = id(season(a));
nameSeason 'Сезон' (Article a) = name(season(a)) IN itemArticle CHARWIDTH 20;

season (Item item) = season(article(item));
nameSeason 'Сезон' (Item i) = name(season(i)) IN itemArticle CHARWIDTH 20;
nameSeason 'Сезон' (Batch b) =  OVERRIDE nameSeason(sku(b)), 'Не определено';
 
idSeason(Barcode barcode) = id(season(sku(barcode)));
nameSeason(Barcode barcode) = name(season(sku(barcode))); 
 
@defineItemAttribute(season, name, 'Сезон', itemFashion);

EXTEND FORM article PROPERTIES(a)  nameSeason;
EXTEND FORM articles PROPERTIES(a)  READONLYIF isReadonly() BEFORE deletea nameSeason;

@defineUniteAttributeItem(season, name, 'сезон', 'сезоны', article);
EXTEND FORM attributesItem
    PROPERTIES READONLY AFTER name(season) id(season) SHOWIF showIDs()
;

// Коллекция
CLASS Collection 'Коллекция';
TABLE collection (Collection);

@defineExternalizable(collection, STRING[100]);
name 'Наименование' = DATA ISTRING[100](Collection);
collectionName = GROUP NAGGR Collection collection BY name(collection);

FORM collection 'Коллекция'
    OBJECTS t=Collection PANEL
    PROPERTIES(t) name, id SHOWIF showIDs()
    EDIT Collection OBJECT t
;

FORM collections 'Коллекции'
    OBJECTS t=Collection
    PROPERTIES(t) READONLY   name, id SHOWIF showIDs() 
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE
    ORDERS name(t)
    LIST Collection OBJECT t
;
DESIGN collections { BOX { size = (600, 400); } }

collection  = DATA Collection(Article);
nameCollection 'Коллекция' (Article Article) = name(collection(Article)) IN itemArticle CHARWIDTH 10;

collection (Item item) = collection(article(item));
nameCollection 'Коллекция' (Item i) = name(collection(i)) IN itemArticle CHARWIDTH 10;
nameCollection 'Коллекция' (Batch b) =  OVERRIDE nameCollection(sku(b)), 'Не определено';

@defineItemAttribute(collection, name, 'Коллекция', itemFashion);

@defineUniteAttributeItem(collection, name, 'коллекция', 'коллекции', article);
EXTEND FORM attributesItem
    PROPERTIES READONLY AFTER name(collection) id(collection) SHOWIF showIDs()
;

EXTEND FORM article PROPERTIES(a)  nameCollection;
EXTEND FORM articles PROPERTIES(a)  BEFORE deletea READONLYIF isReadonly() nameCollection;

//пол
gender (Item i) = gender(article(i));
nameGender 'Пол' (Item i) = name(gender(i)) IN itemArticle;
shortNameGender 'Пол' (Item i) = shortName(gender(i)) IN itemArticle;

gender  (Batch batch) = gender(sku(batch));
nameGender 'Пол' (Batch batch) = name(gender(batch));
shortNameGender 'Пол' (Batch batch) = shortName(gender(batch));

@defineItemAttribute(gender, name, 'Пол', itemFashion);