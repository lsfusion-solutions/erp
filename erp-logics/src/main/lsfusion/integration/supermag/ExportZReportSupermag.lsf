MODULE ExportZReportSupermag;
REQUIRE SupermagSettings, ReceiptSkuLedgerStockDocument, Time; //ExportSupermag
NAMESPACE ZReport;


//---------------------- Оптовая торговля (Код операции 1)
GROUP CS;
GROUP SMDOCUMENTS : CS;
//GROUP SMWAYBILLSOUT : CS;
//GROUP SMDOCPROPS : CS;

inc = DATA LOCAL BOOLEAN (RetailSales);
index (ReceiptSaleSkuLedger d) = 
        PARTITION SUM 1
        ORDER d BY stockDocumentLedger(d);
curRate(RetailSales i) = (OVERRIDE rateOn(typeExchange('НБРБ (BYR)'),currencyShortName('USD'),date(i)),(1.0 IF i IS RetailSales));
curRate(ReceiptSaleSkuLedger d) = (OVERRIDE rateOn(typeExchange('НБРБ (BYR)'),currencyShortName('USD'),date(d)),(1.0 IF d IS ReceiptSaleSkuLedger));
curRate(ReceiptReturnSkuLedger d) = (OVERRIDE rateOn(typeExchange('НБРБ (BYR)'),currencyShortName('USD'),date(d)),(1.0 IF d IS ReceiptReturnSkuLedger));

dateTimeChange = DATA DATETIME (RetailSales);
dateTimeChange[StockDocumentLedger](RetailSales i) += dateTimeChange(i);

changeDoc(RetailSales d) = CHANGED(departmentStore(d)) OR CHANGED(date(d)) OR CHANGED(sumItem(d)) OR CHANGED (curRate(d)) OR CHANGED(isPosted(d));

changeDoc(ReceiptSaleSkuLedger d) = CHANGED(price(d)) OR CHANGED(sku(d)) OR CHANGED(sum[SaleLedger](d)) 
    OR CHANGED(sumVAT[SaleLedger](d)) OR CHANGED(quantity[SaleLedger](d)) OR CHANGED(valueVAT[SaleLedger](d));
  
changeDocReturn(ReceiptReturnSkuLedger d) = CHANGED(price(d)) OR CHANGED(sku(d)) OR CHANGED(sum[SaleLedger](d)) 
    OR CHANGED(sumVAT[SaleLedger](d)) OR CHANGED(quantity[SaleLedger](d)) OR CHANGED(valueVAT[SaleLedger](d));
    
changeDocDetail(RetailSales i) = GROUP SUM 1 IF changeDoc(ReceiptSaleSkuLedger d) AND stockDocumentLedger(d)==i; 
changeDocReturnDetail(RetailSales i) = GROUP SUM 1 IF changeDocReturn(ReceiptReturnSkuLedger d) AND stockDocumentLedger(d)==i; 

WHEN SET(changeDoc(RetailSales i)) OR SET (changeDocDetail(i)) OR SET(changeDocReturnDetail(i)) DO {
    dateTimeChange(i)<- currentDateTime();  
}

sumRetailSales = DATA LOCAL NUMERIC[16,4] (RetailSales); 
sumRetailSalesCur = DATA LOCAL NUMERIC[16,4] (RetailSales);
sumSaleLedgerCur (ReceiptSaleSkuLedger d) = NUMERIC[18,4](sum[SaleLedger](d)/curRate(d)); 
//sumSaleLedgerCur = DATA LOCAL NUMERIC[18,4] (ReceiptSaleSkuLedger);
//    PROPERTIES = exportTime(DATETIME(date(i)))  EXTID 'CREATEDAT' IN SMDOCUMENTS

FORM exportZReportMag FORMEXTID 'PACKAGE'  
    PROPERTIES ATTR = exportTime(currentDateTime())  EXTID 'name'
//-- продажи
    OBJECTS i = RetailSales  EXTID 'POSTOBJECT'
    PROPERTIES ATTR = 'Продажи по кассе' IF i IS RetailSales EXTID 'description'  
    PROPERTIES ATTR = 'normal' IF i IS RetailSales EXTID 'action'      
    
    PROPERTIES = STRING[100]('CS'+STRING[30](LONG(i))) EXTID 'Id'
    PROPERTIES = STRING[100](LONG(i)) EXTID 'ID' IN SMDOCUMENTS
    PROPERTIES = 'CS' IF i IS RetailSales EXTID 'DOCTYPE' IN SMDOCUMENTS    
    PROPERTIES = baseIDSupermag() IF i IS RetailSales EXTID 'BORNIN' IN SMDOCUMENTS    
    PROPERTIES = exportTime(DATETIME(date(i)))  EXTID 'CREATEDAT' IN SMDOCUMENTS
    PROPERTIES = 0 IF i IS RetailSales EXTID 'CURRENCYMULTORDER' IN SMDOCUMENTS  
    PROPERTIES = curRate(i) EXTID 'CURRENCYRATE' IN SMDOCUMENTS 
    PROPERTIES = 1 IF i IS RetailSales EXTID 'CURRENCYTYPE' IN SMDOCUMENTS    
    PROPERTIES = IF isPosted(i) THEN 3 ELSE 2 EXTID 'DOCSTATE' IN SMDOCUMENTS       
    PROPERTIES = 1 IF i IS RetailSales  EXTID 'ISROUBLES' IN SMDOCUMENTS  
    PROPERTIES = id(departmentStore(i)) EXTID 'LOCATIONFROM' IN SMDOCUMENTS  
    PROPERTIES = 1 IF i IS RetailSales  EXTID 'OPCODE' IN SMDOCUMENTS      
    PROPERTIES = 3 IF i IS RetailSales  EXTID 'PRICEROUNDMODE' IN SMDOCUMENTS     
    PROPERTIES = sumRetailSales(i) EXTID 'TOTALSUM' IN SMDOCUMENTS
    PROPERTIES = NUMERIC[18,4](sumRetailSalesCur(i)) EXTID 'TOTALSUMCUR' IN SMDOCUMENTS 
                           
    OBJECTS d = ReceiptSaleSkuLedger   EXTID 'SMSPEC' IN CS
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(d)))) EXTID 'DOCID'    
    PROPERTIES = 'CS' IF d IS ReceiptSaleSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(d) EXTID 'SPECITEM'        
    PROPERTIES = id(sku(d)) EXTID 'ARTICLE'                          
    PROPERTIES d1= index(d) EXTID 'DISPLAYITEM'  
    PROPERTIES = price (d) EXTID 'ITEMPRICE'     
    PROPERTIES d2 = NUMERIC[18,4](price(d)/curRate(d)) EXTID 'ITEMPRICECUR'                
    PROPERTIES d4 = round2((sum[SaleLedger](d) (-) sumVAT[SaleLedger](d))/quantity[SaleLedger](d)) EXTID 'ITEMPRICENOTAX'   
    PROPERTIES = quantity[SaleLedger] (d) EXTID 'QUANTITY'  
    PROPERTIES = OVERRIDE sum[SaleLedger](d), 0 EXTID 'TOTALPRICE'   
    PROPERTIES d3 =  OVERRIDE sumSaleLedgerCur(d), 0 EXTID 'TOTALPRICECUR'                
    PROPERTIES d5 = OVERRIDE (sum[SaleLedger] (d) (-) sumVAT[SaleLedger](d)), 0 EXTID 'TOTALPRICENOTAX'
             
    FILTERS stockDocumentLedger(d)==i,
            inc(i)                                         

    OBJECTS d2 = ReceiptSaleSkuLedger   EXTID 'SMSPECCASHDISC' IN CS
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(d2)))) EXTID 'DOCID'    
    PROPERTIES = 'CS' IF d2 IS ReceiptSaleSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(d2) EXTID 'SPECITEM'        
    PROPERTIES = 2 IF d2 IS ReceiptSaleSkuLedger EXTID 'DISCKIND'        
    PROPERTIES = OVERRIDE discountSum[SaleLedger](d2), 0 EXTID 'DISCSUM'
    PROPERTIES = (OVERRIDE sum[SaleLedger](d2), 0) EXTID 'TOTALSUM'            
    FILTERS stockDocumentLedger(d2)==i                              
                                                                           
    OBJECTS dd = ReceiptSaleSkuLedger   EXTID 'SMSPECTAX' IN CS
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(dd)))) EXTID 'DOCID'    
    PROPERTIES = 'CS' IF dd IS ReceiptSaleSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(dd) EXTID 'SPECITEM'        
    PROPERTIES = 0 IF dd IS ReceiptSaleSkuLedger  EXTID 'TAXID'        
    PROPERTIES = valueVAT[SaleLedger](dd) EXTID 'TAXRATE'
    PROPERTIES = OVERRIDE sumVAT[SaleLedger](dd),0 EXTID 'TAXSUM'            
    FILTERS stockDocumentLedger(dd)==i                              
; 
GROUP CR;
GROUP SMDOCUMENTS1 EXTID 'SMDOCUMENTS': CR;
index (ReceiptReturnSkuLedger d) = 
        PARTITION SUM 1
        ORDER d BY stockDocumentLedger(d);

sumRetailReturns  = DATA LOCAL NUMERIC[18,4] (RetailSales);
sumRetailReturnsCur = DATA LOCAL NUMERIC[18,4](RetailSales);
sumReturnLedgerCur (ReceiptReturnSkuLedger d) = NUMERIC[18,4](sum[SaleLedger](d)/curRate(d));

FORM exportZReportReturnMag FORMEXTID 'PACKAGE'  
    PROPERTIES ATTR = exportTime(currentDateTime())  EXTID 'name'
//-- возвраты
    OBJECTS i = RetailSales  EXTID 'POSTOBJECT'
    PROPERTIES ATTR = 'Возвраты по кассе' IF i IS RetailSales EXTID 'description'  
    PROPERTIES ATTR = 'normal' IF i IS RetailSales EXTID 'action'      

    PROPERTIES = STRING[100]('CR'+STRING[30](LONG(i))) EXTID 'Id'
    PROPERTIES = STRING[100](LONG(i)) EXTID 'ID' IN SMDOCUMENTS1
    PROPERTIES = 'CR' IF i IS RetailSales EXTID 'DOCTYPE' IN SMDOCUMENTS1    
    PROPERTIES = baseIDSupermag() IF i IS RetailSales EXTID 'BORNIN' IN SMDOCUMENTS1    
    PROPERTIES = exportTime(DATETIME(date(i)))  EXTID 'CREATEDAT' IN SMDOCUMENTS1
    PROPERTIES = 0 IF i IS RetailSales EXTID 'CURRENCYMULTORDER' IN SMDOCUMENTS1  
    PROPERTIES = curRate(i) EXTID 'CURRENCYRATE' IN SMDOCUMENTS1 
    PROPERTIES = 1 IF i IS RetailSales EXTID 'CURRENCYTYPE' IN SMDOCUMENTS1    
    PROPERTIES = IF isPosted(i) THEN 3 ELSE 2 EXTID 'DOCSTATE' IN SMDOCUMENTS1       
    PROPERTIES = 1 IF i IS RetailSales  EXTID 'ISROUBLES' IN SMDOCUMENTS1  
    PROPERTIES = id(departmentStore(i)) EXTID 'LOCATIONTO' IN SMDOCUMENTS1  
    PROPERTIES = 3 IF i IS RetailSales  EXTID 'OPCODE' IN SMDOCUMENTS1      
    PROPERTIES = 3 IF i IS RetailSales  EXTID 'PRICEROUNDMODE' IN SMDOCUMENTS1     
    PROPERTIES = -sumRetailReturns(i) EXTID 'TOTALSUM' IN SMDOCUMENTS1 
    PROPERTIES = -sumRetailReturnsCur(i) EXTID 'TOTALSUMCUR' IN SMDOCUMENTS1                       
                  
    OBJECTS d = ReceiptReturnSkuLedger   EXTID 'SMSPEC' IN CR
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(d)))) EXTID 'DOCID'    
    PROPERTIES = 'CR' IF d IS ReceiptReturnSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(d) EXTID 'SPECITEM'        
    PROPERTIES = id(sku(d)) EXTID 'ARTICLE'                                  
    PROPERTIES d1= index(d) EXTID 'DISPLAYITEM'  
    PROPERTIES = price (d) EXTID 'ITEMPRICE'     
    PROPERTIES d2 = NUMERIC[18,4](price(d)/curRate(d)) EXTID 'ITEMPRICECUR'                
    PROPERTIES d4 = round2((sum[SaleLedger](d) (-) sumVAT[SaleLedger](d))/quantity[SaleLedger](d)) EXTID 'ITEMPRICENOTAX'   
    PROPERTIES = -quantity[SaleLedger] (d) EXTID 'QUANTITY'  
    PROPERTIES = -sum[SaleLedger] (d) EXTID 'TOTALPRICE'   
    PROPERTIES d3 = OVERRIDE -sumReturnLedgerCur(d), 0 EXTID 'TOTALPRICECUR'                
    PROPERTIES d5 = -(sum[SaleLedger] (d) (-) sumVAT[SaleLedger](d)) EXTID 'TOTALPRICENOTAX'  
    PROPERTIES = 'CS' IF d IS ReceiptReturnSkuLedger EXTID 'CAUSETYPE'            
    PROPERTIES d6 = STRING[100](STRING[30](LONG(stockDocumentLedger(d)))) EXTID 'CAUSEID'                         
    PROPERTIES d7 = GROUP LAST index(ReceiptSaleSkuLedger rs) IF sku(d) = sku(rs) AND stockDocumentLedger(d) = stockDocumentLedger(rs) ORDER rs  EXTID 'CAUSESPECITEM'                
    FILTERS stockDocumentLedger(d)==i,
            inc(i)                                         

    OBJECTS dd = ReceiptReturnSkuLedger   EXTID 'SMSPECTAX' IN CR
    PROPERTIES = STRING[100](STRING[30](LONG(stockDocumentLedger(dd)))) EXTID 'DOCID'    
    PROPERTIES = 'CR' IF dd IS ReceiptReturnSkuLedger EXTID 'DOCTYPE'      
    PROPERTIES = index(dd) EXTID 'SPECITEM'        
    PROPERTIES = 0 IF dd IS ReceiptReturnSkuLedger  EXTID 'TAXID'        
    PROPERTIES = valueVAT(dd) EXTID 'TAXRATE'
    PROPERTIES = -sumVAT[SaleLedger](dd) EXTID 'TAXSUM'            
    FILTERS stockDocumentLedger(dd)==i   
; 

numberExport 'Номер (CM)' (ZReport r) = STRING[100](LONG(retailSales(departmentStore(r),date(r)))) CHARWIDTH 12;
EXTEND FORM zReports
    PROPERTIES (z) READONLY numberExport
;
exportZReportMag 'Экспорт в супермаг' (RetailSales i) {
    inc(RetailSales ii) <- NULL;
    inc(i) <- TRUE;// IF idSupermag(departmentStore(i));
    LOCAL NESTED dt = DATETIME();
    dt () <- currentDateTime();
    dateTimeChange(i) <- NULL;
    IF (GROUP SUM 1 IF inc(RetailSales ii)) THEN {        
        TRY{
//            sumSaleLedgerCur (ReceiptSaleSkuLedger d) <- NUMERIC[18,4](sum[SaleLedger](d)/curRate(d));    
            sumRetailSales (i) <- NUMERIC[16,4](GROUP SUM (sum[SaleLedger](ReceiptSaleSkuLedger d)) IF stockDocumentLedger(d)==i AND d IS ReceiptSaleSkuLedger);
            sumRetailSalesCur (i) <- NUMERIC[16,4](GROUP SUM (sumSaleLedgerCur[SaleLedger](ReceiptSaleSkuLedger d)) IF stockDocumentLedger(d)==i AND d IS ReceiptSaleSkuLedger);
          
            EXPORT exportZReportMag XML TO System.exportFile;
            WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + 'CS_' + STRING(date(i)) + '_' + STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
            WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/COPY/' + 'CS_' + STRING(date(i)) + '_' + STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
            fileExists('file://' + exportDirectorySupermag() + '/' + 'CS_' + STRING(date(i)) + '_' + STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + '.xml');  
            IF fileExists()  THEN NEWSESSION NESTED LOCAL {
                FOR inc(RetailSales ii)  DO NEW log = SupermagLog {
                    id(log)<- 'CS_' +STRING[30](LONG(ii))+(OVERRIDE seriesNumber(ii), '')+'_'+ formulaDateT(dt());
                    dateTime(log) <- currentDateTime();
                    userLogin(log) <- login(currentUser()); 
                    nameContact(log) <- STRING[100](name(currentUser()));
                    stockDocumentLedger(log)<- ii;
                }     
                APPLY NESTED LOCAL;
            }  
        
        } CATCH {
            logToFile('supermag', CONCAT '\n', 'Продажи по кассе', 'file://' + exportDirectorySupermag() + '/' + 'CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
            MESSAGE  'Продажи по кассе. Ошибка при экспорте CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) +'. Обратитесь к администратору' NOWAIT;                         
        } 
        TRY{
            IF (GROUP SUM 1 IF inc(stockDocumentLedger(ReceiptReturnSkuLedger h)) AND h IS ReceiptReturnSkuLedger)THEN {
                sumRetailReturns (i) <- NUMERIC[16,4](GROUP SUM (sum[SaleLedger](ReceiptReturnSkuLedger d)) IF stockDocumentLedger(d)==i AND d IS ReceiptReturnSkuLedger);
                sumRetailReturnsCur (i) <- NUMERIC[16,4](GROUP SUM (sumReturnLedgerCur[SaleLedger](ReceiptReturnSkuLedger d)) IF stockDocumentLedger(d)==i AND d IS ReceiptReturnSkuLedger);
            
                EXPORT exportZReportReturnMag XML TO System.exportFile;
                WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/' + 'CR_' + STRING(date(i)) + '_' + STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
                WRITE System.exportFile() TO 'file://' + exportDirectorySupermag() + '/COPY/' + 'CR_' + STRING(date(i)) + '_' + STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt());  
                fileExists('file://' + exportDirectorySupermag() + '/' + 'CR_' + STRING(date(i)) + '_' + STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) + '.xml');   
                IF fileExists()  THEN NEWSESSION NESTED LOCAL {
                    FOR inc(RetailSales ii)  DO NEW log = SupermagLog {
                        id(log)<- 'CR_' +STRING[30](LONG(ii))+(OVERRIDE seriesNumber(ii), '')+'_'+ formulaDateT(dt());
                        dateTime(log) <- currentDateTime();
                        userLogin(log) <- login(currentUser()); 
                        nameContact(log) <- STRING[100](name(currentUser()));
                        stockDocumentLedger(log)<- ii;
                    }     
                    APPLY NESTED LOCAL;
                }                     
            }           
        } CATCH {
            logToFile('supermag', CONCAT '\n', 'Возвраты по кассе', 'file://' + exportDirectorySupermag() + '/' + 'CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+formulaDateT(dt()) + ' ParseMessage error:', messageCaughtException(), javaStackTraceCaughtException(), lsfStackTraceCaughtException());
            MESSAGE  'Возвраты по кассе. Ошибка при экспорте CSCR_' +STRING[30](LONG(i))+(OVERRIDE seriesNumber(i), '')+'_'+ formulaDateT(dt()) +'. Обратитесь к администратору' NOWAIT;           
        }                                               
    }      
    inc(RetailSales ii) <- NULL;      
}

exportZReportMag 'Экспорт в супермаг' (ZReport i) {
    FOR RetailSales ii == retailSales(departmentStore(i) ,date(i)) AND isPosted(ii) DO {
        exportZReportMag(ii);
    }          
}

//exportSupermag(RetailSales s) + {
//    exportZReportMag(s);
//}

exportZReportMag() {
    FOR date(RetailSales s AS RetailSales) >= DATE(startDate(departmentStore(s))) AND NOT date(s) < DATE(endDate(departmentStore(s)))  AND dateTimeChange(s) DO {
        exportZReportMag(s);
    }
}

