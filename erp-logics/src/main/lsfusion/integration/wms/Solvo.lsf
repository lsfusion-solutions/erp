MODULE Solvo;

REQUIRE WMSIntegration, Warehouse, PurchaseShipment;


isSolvo 'Склад c WMS Solvo' = DATA BOOLEAN (Warehouse);

EXTEND FORM warehouse 
    PROPERTIES (w) isSolvo;
    
host 'Хост' = DATA ISTRING[30]();
base 'База' = DATA ISTRING[30]();
login 'Логин' = DATA ISTRING[30]();
password 'Пароль' = DATA ISTRING[30]() ECHO;

connectionString 'строка подключения' () = 'jdbc:oracle:thin:' + login() + '/' + password() + '@//'+ host() + '/' + base();

EXTEND FORM integrationData 
    PROPERTIES() shost = host, base, login, password
;
DESIGN  integrationData {
    wms {
        NEW solvo {
            caption = 'Solvo';
            fill = 1;
            NEW SPanel {
                MOVE PROPERTY (shost);
                MOVE PROPERTY (base());
                MOVE PROPERTY (login());
                MOVE PROPERTY (password());
            }
            NEW paneS {
                type = TABBED ;
                fill = 1;
            }
        }
    }
}

nowText() =  [FORMULA TEXT 'to_char(now(),($1))']('DD-MM-YYYY HH24:MI:SS'); 
format(STRING s) = OVERRIDE escapeXMLValue(s), '';
format(BOOLEAN b) = IF b THEN 't' ELSE 'f';
format(DATETIME d) = OVERRIDE toChar(d, 'YYYY-MM-DD HH24:MI'), '';

defaultNumeratorSyncid = DATA Numerator ();
nameDefaultNumeratorSyncid 'Пакеты выгрузки в wms' = name(defaultNumeratorSyncid()) IN defaultNumerator;

EXTEND FORM defaultNumerators
    PROPERTIES() nameDefaultNumeratorSyncid = nameDefaultNumeratorSyncid
;

headerId = DATA LOCAL INTEGER (LONG);
action = DATA LOCAL STRING (LONG);
meaasage = DATA LOCAL STRING (LONG);

insertString  = 
    'INSERT ALL'+
        ' WHEN header=0 THEN INTO from_host_header_message(ID,SRC_HOST_ID,DST_HOST_ID,TYPE,ACTION,STATUS,MESSAGE) VALUES (sync_id,\'host\',\'wms\',\'update\',action,\'ready\',meaasage)' +
        ' WHEN header>0 THEN INTO from_host_detail_message(ID,HEADER_ID,TYPE,ACTION,STATUS,MESSAGE) VALUES (sync_id,header,\'update\',action,\'ready\',meaasage)' +
        ' WITH data AS ('+
        (GROUP CONCAT ' SELECT ' + headerId(LONG id) + ' header, ' + id + ' sync_id, \'' + action(id) + '\' action, \''+ meaasage(id) + '\' meaasage FROM dual', ' UNION ALL' ORDER id)+
        ' ) SELECT * FROM data';

incrementedValue = DATA LOCAL NESTED LONG();    
numerateIds(LONG i) {
    NEWSESSION APPLY {
        incrementedValue() <- curValue(defaultNumeratorSyncid());
        curValue(Numerator n) <- curValue(n) + i WHERE n == defaultNumeratorSyncid();
    }
    headerId (LONG l) <- NULL;
    action (LONG l) <- NULL;
    meaasage (LONG l) <- NULL;
}

//товары
changed 'Время изменения' = DATA DATETIME (Item) IN wms;
loaded 'Время выгрузки' = DATA DATETIME (Item) IN wms;

WHEN CHANGED (id(Item o)) OR CHANGED (nameAttribute(o)) OR CHANGED (idBarcode(o)) OR CHANGED (shortNameUOM(o)) OR CHANGED (nameManufacturer(o)) OR CHANGED (nameCountry(o)) DO 
    changed(o) <- currentDateTime();

itemString (LONG syncId, Item s) = '<sku syncid=\'\''+syncId+'\'\' action=\'\'update\'\' syncdate=\'\''+nowText()+
    '\'\' sdid=\'\''+id(s)+'\'\' sku_code=\'\''+id(s)+'\'\' name=\'\''+format(nameAttribute(s))+'\'\' upc=\'\''+format(idBarcode(s))+
    '\'\' measure=\'\''+format(shortNameUOM(s))+'\'\' store_cond=\'\'1\'\' producer_sdid=\'\''+format(nameManufacturer(s))+
    '\'\' country=\'\''+format(nameCountry(s))+'\'\' abc=\'\'\'\' minosg=\'\'\'\' sku_spec_id=\'\'0\'\' description=\'\'\'\' divisibility=\'\'\'\'></sku>';

exportItems 'Выгрузить товары в wms Solvo' ()  { 
    
    IF countInItem() THEN {
        
        numerateIds(countInItem());
        
        logToFile('WMS', CONCAT ' ', 'User:', currentUserName(), 'startId:', incrementedValue(), 'Write items:', (GROUP CONCAT id(Item i) IF in(i), ',' ORDER i));
        
        LOCAL syncId = LONG (Item);
        syncId(Item i) <- incrementedValue() - 1 + PARTITION SUM 1 IF in(i) ORDER i; 
        
        FOR syncId(Item i) DO {
            headerId(syncId(i)) <- 0;
            action(syncId(i)) <- 'sku';
            meaasage(syncId(i)) <- itemString(syncId(i), i);
        }
        
        EXTERNAL 
            SQL connectionString()
            EXEC insertString(); 
        
        NEWSESSION NESTED LOCAL {
            loaded(Item i) <- currentDateTime() WHERE in(i);
            APPLY NESTED LOCAL;
        }
        
        MESSAGE 'Товары выгружены' NOWAIT;
	    
	    in(Item it) <- NULL;
    }
}

exportItems 'Выгрузить отмеченные товары в wms Solvo' (Item i)  { 
	NEWSESSION NESTED LOCAL {
	    in(i) <- TRUE;
	    exportItems();
	}
} TOOLBAR;

exportChangedItems 'Выгрузить изменившиеся товары в wms Solvo' ()  { 
	NEWSESSION NESTED LOCAL {
	    in(Item i) <- TRUE WHERE changed(i) AND NOT changed(i) < loaded(i);
	    exportItems();
	}
} TOOLBAR;

EXTEND FORM integrationData 
    OBJECTS sIt = Item
    PROPERTIES(sIt) READONLY in CHANGEABLE, id, idBarcode, nameAttribute, shortNameUOM, nameCountry, changed, loaded
    PROPERTIES exportItems(sIt), exportChangedItems() DRAW sIt
;
DESIGN  integrationData {
    paneS {
        MOVE BOX (sIt);
    }
}

//склады
changed 'Время изменения' = DATA DATETIME (Stock) IN wms;
loaded 'Время выгрузки' = DATA DATETIME (Stock) IN wms;

WHEN CHANGED (id(Stock o)) OR CHANGED (name(o)) OR CHANGED (address(o)) OR CHANGED (phone(o)) OR CHANGED (email(o)) 
    OR CHANGED (isCustomer(o)) OR CHANGED (isSupplier(o)) DO 
    changed(o) <- currentDateTime();

stockString (LONG syncId, Stock s) = '<client syncid=\'\''+syncId+'\'\' action=\'\'update\'\' syncdate=\'\''+nowText()+
    '\'\' client_id=\'\''+id(s)+'\'\' name=\'\''+format(name(s))+'\'\' is_customer=\'\''+format(isCustomer(s))+'\'\' is_supplier=\'\''+format(isSupplier(s))+
    '\'\' is_carrier=\'\'f\'\' is_producer=\'\'f\'\' measure=\'\''+format(phone(s))+'\'\' address=\'\''+format(address(s))+'\'\' email=\'\''+format(email(s))+'\'\' fax=\'\'\'\' comments=\'\'\'\'></client>';

exportStocks 'Выгрузить склады в wms Solvo' ()  { 
    
    IF countInStock() THEN {
        
        numerateIds(countInStock());
        
        logToFile('WMS', CONCAT ' ', 'User:', currentUserName(), 'startId:', incrementedValue(), 'Write stocks:', (GROUP CONCAT id(Stock i) IF in(i), ',' ORDER i));
        
        LOCAL syncId = LONG (Stock);
        syncId(Stock i) <- incrementedValue() - 1 + PARTITION SUM 1 IF in(i) ORDER i; 
        
        FOR syncId(Stock i) DO {
            headerId(syncId(i)) <- 0;
            action(syncId(i)) <- 'client';
            meaasage(syncId(i)) <- stockString(syncId(i), i);
        }
        
        EXTERNAL 
            SQL connectionString()
            EXEC insertString();
            
        NEWSESSION NESTED LOCAL {
            loaded(Stock i) <- currentDateTime() WHERE in(i);
            APPLY NESTED LOCAL;
        }
        
        MESSAGE 'Склады выгружены' NOWAIT;
	    
	    in(Stock st) <- NULL;
    }
}

exportStocks 'Выгрузить отмеченные склады в wms Solvo' (Stock s)  { 
	NEWSESSION NESTED LOCAL {
	    in(s) <- TRUE;
	    exportStocks();
	}
} TOOLBAR;

exportChangedStocks 'Выгрузить изменившиеся склады в wms Solvo' ()  { 
	NEWSESSION NESTED LOCAL {
	    in(Stock s) <- TRUE WHERE changed(s) AND NOT changed(s) < loaded(s);
	    exportStocks();
	}
} TOOLBAR;

EXTEND FORM integrationData 
    OBJECTS sSt = Stock
    PROPERTIES(sSt) READONLY in CHANGEABLE, id, name, nameStockGroup, address, phone, email, changed, loaded
    PROPERTIES exportStocks(sSt), exportChangedStocks() DRAW sSt
;
DESIGN  integrationData {
    paneS {
        MOVE BOX (sSt);
    }
}

//приход
beforeExportSolvo ABSTRACT (Purchase.Invoice);

incomingHeaderString (LONG syncId, Purchase.Invoice s) = '<incoming syncid=\'\''+syncId+'\'\' action=\'\'update\'\' syncdate=\'\''+nowText()+
    '\'\' inc_id=\'\''+id(s)+'\'\' display_name=\'\''+format(seriesNumber(s))+'\'\' priority=\'\'99\'\' supplier_id=\'\''+format(idSupplierStock(s))+
    '\'\' carrier_id=\'\'\'\' type=\'\'A\'\' date_to_ship=\'\''+format(shipmentDateTime(s))+'\'\' responsible=\'\'\'\' comments=\'\''+format(note(s))+'\'\'>';

extraIncomingDetailString = ABSTRACT CASE STRING (Purchase.InvoiceDetail);
incomingDetailString (LONG syncId, Purchase.InvoiceDetail s) = '<incoming_detail syncid=\'\''+syncId+'\'\' action=\'\'update\'\' syncdate=\'\''+nowText()+
    '\'\' inc_id=\'\''+id(invoice(s))+'\'\' line=\'\''+STRING(index(s))+'\'\' sku_id=\'\''+idSku(s)+'\'\' category=\'\'1\'\' ' + extraIncomingDetailString(s) +
    ' marker=\'\'-\'\' marker2=\'\'-\'\' qty=\'\''+format(STRING(quantity(s)))+'\'\' uom=\'\''+format(shortNameUOMSku(s))+'\'\' comments=\'\'\'\'/>';

exportSolvo 'Выгрузить приход в wms Solvo' (Purchase.Invoice i) { 
    NEWSESSION {
    
        in(Item it) <- TRUE WHERE quantityInvoiceDetail(it, i) AND changed(it) AND NOT changed(it) < loaded(it);
        exportItems();
        
        in(Stock s) <- TRUE WHERE s == supplierStock(i) AND changed(s) AND NOT changed(s) < loaded(s);
        exportStocks();
    
        beforeExportSolvo(i);
        
        numerateIds(countInvoiceDetail(i) + 2);
        
        logToFile('WMS', CONCAT ' ', 'User:', currentUserName(), 'startId:', incrementedValue(), 'Write Purchase Invoice:', seriesNumber(i));
        
        IF NOT id(i) THEN {
            id(i) <- CONCAT '_', seriesNumber(i), date(i);
        }
        
        headerId(incrementedValue()) <- 0;
        action(incrementedValue()) <- 'incoming';
        meaasage(incrementedValue()) <- incomingHeaderString(incrementedValue(), i);
        
        FOR i == invoice(Purchase.InvoiceDetail d) DO {
            headerId(incrementedValue() + index(d)) <- incrementedValue();
            action(incrementedValue() + index(d)) <- 'incoming_detail';
            meaasage(incrementedValue() + index(d)) <- incomingDetailString(incrementedValue() + index(d), d);
        }
        
        headerId(incrementedValue() + countInvoiceDetail(i) + 1) <- incrementedValue();
        action(incrementedValue() + countInvoiceDetail(i) + 1) <- '/incoming';
        meaasage(incrementedValue() + countInvoiceDetail(i) + 1) <- '</incoming>';
    
        EXTERNAL 
            SQL connectionString()
            EXEC insertString();
            
        MESSAGE 'Накладная выгружена' NOWAIT;
    }

}

EXTEND FORM Purchase.invoices 
    PROPERTIES (i) PANEL SHOWIF isSolvo(customerStock(i)) 
        exportSolvo
;

DESIGN Purchase.invoices {
    actionContainer {
        NEW exportWMS {
            caption = 'Экспорт в WMS';
            type = CONTAINERV;
            MOVE PROPERTY(exportSolvo(i));
        }
    }
}