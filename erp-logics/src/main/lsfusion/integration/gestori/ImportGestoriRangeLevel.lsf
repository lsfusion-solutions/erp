MODULE ImportGestoriRangeLevel;

REQUIRE ImportGestori, RangeLevel;

NAMESPACE ImportGestori;

id 'Номер' = DATA ISTRING[100](Range.Range);
range = GROUP MAX Range.Range r BY id(r);

importRange 'Импорт ассортиментных матриц' () {

    LOCAL stores = TEXT (INTEGER);

    LOCAL file = FILE ();
    EXTERNAL SQL 'jdbc:datadirect:openedge://' + host() + ':' + port() + ';DatabaseName=' + base() + ';user=' + login() + ';password=' + password()
        EXEC 'SELECT num_as, name, SUBSTR(seq_shop,1,1000) FROM Pub.as1 WITH (NOLOCK)' TO file;

    IMPORT TABLE FROM file() TO id, name, stores;

    IF NOT rangeLevel('1') THEN NEW l = RangeLevel {
        name(l) <- '1';
    }

    FOR id(INTEGER i) AND NOT range(TEXT (id(i))) DO NEW r = Range.Range {
        id(r) <- ISTRING[100](id(i));
    }

    FOR Range.Range r = range(TEXT (id(INTEGER i))) DO {
        name(r) <- name(i);
        in(r, RangeLevel l) <- l == rangeLevel('1');
        inData(r, ItemGroup g) <- g == itemGroup('all');
        dataLevel(r, Store s, DATE d) <- rangeLevel('1') WHERE [GROUP SUM 1 IF iterate(INTEGER j, 1, wordCount(stores(i), ',')) BY getWord(stores(i), ',', j)](extId(s)) AND d = 2019_01_01;

        IF NOT [GROUP SUM 1 BY range(RangeRev rr)](r) THEN NEW rr = RangeRev {
            range(rr) <- r;
            dateTime(rr) <- 2019_01_01_00:00;
        }
    }

    LOCAL idRange = INTEGER (INTEGER);

    EXTERNAL SQL 'jdbc:datadirect:openedge://' + host() + ':' + port() + ';DatabaseName=' + base() + ';user=' + login() + ';password=' + password()
        EXEC 'SELECT num_as, cod_good FROM Pub.asskat WITH (NOLOCK)' TO file;

    IMPORT TABLE FROM file() TO idRange, idItem;

    LOCAL imported = BOOLEAN (RangeRev, Item);

    FOR Item sk = sku(TEXT (idItem(INTEGER i))) AND RangeRev r = [GROUP LAST RangeRev rr ORDER rr BY range(rr)](range(TEXT (idRange(i)))) DO {

        level(r, sk) <- rangeLevel('1');
        imported(r, sk) <- TRUE;
    }

    level(RangeRev r, Item s) <- NULL WHERE r IS RangeRev AND s IS Item AND NOT imported(r, s);

    APPLY;
}

EXTEND FORM integrationData PROPERTIES importRange();
DESIGN integrationData { gestoriButtons { MOVE PROPERTY (importRange()); } }

