MODULE EnterpriseDataExchange16;

REQUIRE EnterpriseData;

NAMESPACE EnterpriseData;

// Временный костыль для поддержки ver. 1.6
GROUP bodySend15 EXTID '=http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.6:Body';

GROUP productSale EXTID 'ТоварыПродажа';
GROUP productReturn EXTID 'ТоварыВозвратПродажи';
GROUP settlementData EXTID 'ДанныеРасчетов';

// complex props
CLASS ABSTRACT PaymentDetail : EnterpriseData;
GROUP paymentDetail EXTID '=http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.5:РеквизитыПлатежа';
@defProp(paymentType, 'ВидПлатежа', STRING[15], PaymentDetail);
@defProp(priority, 'Очередность', STRING[1], PaymentDetail);
@defProp(purpose, 'НазначениеПлатежа', STRING[250], PaymentDetail);
// todo - сделать в общем случае
purposePaymentDetail 'НазначениеПлатежа' = DATA LOCAL STRING (INTEGER);

META defPaymentDetail(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = PaymentDetail EXTID extid
        PROPERTIES (nm###class, configuration) paymentType EXTID 'ВидПлатежа', priority EXTID 'Очередность', purpose EXTID 'НазначениеПлатежа'
        FILTERS nm###class = nm(class, configuration)
    ;

    EXTEND FORM receiveMessage
        PROPERTIES(paymentOrder) IN paymentDetail purposePaymentDetail EXTID '=http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.5:НазначениеПлатежа';
    ;
END

// all references
@defProp(id, 'Код', STRING, Reference);

//UOM
CLASS ABSTRACT UOM 'Справочник.ЕдиницыИзмерения' : Reference;
@defProp(name, 'Наименование', STRING, UOM);
@defProp(fullName, 'НаименованиеПолное', STRING, UOM);
META defUOMDetail (nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = UOM EXTID extid
        PROPERTIES(nm###class###table, configuration) sendUid EXTID 'Ссылка' , id EXTID 'Код', name EXTID 'Наименование'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;
END

META defUOM(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = UOM EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', id EXTID 'Код', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;

    id###nm###class = DATA STRING (INTEGER);
    name###nm###class = DATA STRING (INTEGER);
    EXTEND FORM receiveMessage
        PROPERTIES (nm###class) id###nm###class EXTID 'Код', name###nm###class EXTID 'Наименование'
    ;
END

META defTypeSkuItem(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = TypeSkuItem EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;

    id###nm###class = DATA STRING (INTEGER);
    name###nm###class = DATA STRING (INTEGER);
    EXTEND FORM receiveMessage
        PROPERTIES (nm###class) id###nm###class EXTID 'Ссылка', name###nm###class EXTID 'Наименование'
    ;
END

CLASS ABSTRACT Country 'Справочник.СтраныМира' : Reference;
@defProp(name, 'Наименование', STRING, Country);
@defProp(alha2, 'КодАльфа2', STRING[2], Country);
@defProp(alha3, 'КодАльфа3', STRING[3], Country);
@defProp(fullName, 'НаименованиеПолное', STRING, Country);
META defCountryDetail (nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = Country EXTID extid
        PROPERTIES(nm###class###table, configuration) id EXTID 'Код', name EXTID 'Наименование'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;
END

META defCountry (nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Country EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', id EXTID 'Код', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;
    uid###nm###class = DATA LOCAL STRING (INTEGER);
    id###nm###class = DATA LOCAL STRING (INTEGER);
    name###nm###class = DATA LOCAL STRING (INTEGER);
    EXTEND FORM receiveMessage
        PROPERTIES (nm###class) uid###nm###class  EXTID 'Ссылка', id###nm###class EXTID 'Код', name###nm###class EXTID 'Наименование'
    ;
END
META defCountry (nm, class, group, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Country EXTID extid IN group
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', id EXTID 'Код', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;
    uid###nm###class = DATA LOCAL STRING (INTEGER);
    id###nm###class = DATA LOCAL STRING (INTEGER);
    name###nm###class = DATA LOCAL STRING (INTEGER);
    EXTEND FORM receiveMessage
        PROPERTIES (nm###class) uid###nm###class  EXTID 'Ссылка', id###nm###class EXTID 'Код', name###nm###class EXTID 'Наименование'
    ;
END

// item
@extReference (item, 'Номенклатура');
@defKeyPropSimple(fullName, 'НаименованиеПолное', STRING, keyProperties, item);
@defKeyPropSimple(id, 'КодВПрограмме', item);
@defKeyPropSimple(article, 'Артикул', STRING, keyProperties, item);
@defKeyPropSimple(name, 'Наименование', item);
@defPropId(type, 'ТипНоменклатуры', typeItem, item);
@defPropSimple(description, 'Описание', STRING, item);
@defPropObject(uom, 'ЕдиницаИзмерения', UOM, item);
@defPropId(vat, 'СтавкаНДС', typeVat, item);
@defProp(codeTNVD, 'Код ТНВЭД', ISTRING, item);
@defProp(nameTNVD, 'наименование ТНВЭД', ISTRING, item);
META defBag(caption)
    EXTEND FORM sendMessage
        OBJECTS  itemTNVD = Item EXTID 'КодТНВЭД'
        PROPERTIES (itemTNVD, configuration)   codeTNVD EXTID 'Код'//, nameTNVD  EXTID 'Наименование'
        FILTERS itemTNVD==item
    ;
END
@defBag('defBag');
@defPropObject(country, 'СтранаПроисхождения', Country, item);

@defPropObject(typeSku, 'ВидНоменклатуры', TypeSkuItem, item);

@defPropId(type, 'ТипНоменклатуры', typeItem, typeSkuItem);

META defItem(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Item EXTID extid
        PROPERTIES (nm###class, configuration) sendUid EXTID 'Ссылка', article EXTID 'Артикул', id EXTID 'КодВПрограмме', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное'
        FILTERS nm###class = nm(class, configuration)
    ;
END

META defItem(nm, class, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Item IN group EXTID extid
        PROPERTIES (nm###class, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное', id EXTID 'КодВПрограмме', article EXTID 'Артикул', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;
END

META defItemDetail(nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = Item IN group EXTID extid
        PROPERTIES(nm###class###table, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное', id EXTID 'КодВПрограмме', article EXTID 'Артикул', name EXTID 'Наименование'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;

    uid###nm###class###table 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
    fullName###nm###class###table 'НаименованиеПолное' = DATA LOCAL STRING (INTEGER);
    id###nm###class###table 'КодВПрограмме' = DATA LOCAL ISTRING[36] (INTEGER);
    article###nm###class###table 'Артикул' = DATA LOCAL STRING (INTEGER);
    name###nm###class###table 'Наименование' = DATA LOCAL STRING (INTEGER);

    EXTEND FORM receiveMessage
        PROPERTIES (class###table) IN item uid###nm###class###table EXTID 'Ссылка', fullName###nm###class###table  EXTID 'НаименованиеПолное', id###nm###class###table EXTID 'КодВПрограмме', article###nm###class###table EXTID 'Артикул', name###nm###class###table EXTID 'Наименование'
    ;
END

// specifications
@extReference(specification, 'ХарактеристикиНоменклатуры');
@defKeyPropSimple(fullName, 'НаименованиеПолное', specification);
@defPropObject(item, 'Номенклатура', Item, specification);
@defPropSimple(name, 'Наименование', STRING[10], specification);

//серии номенклатуры
@extReference(seriesSku, 'СерииНоменклатуры');

@defKeyPropSimple(name, 'Наименование', seriesSku);
@defKeyPropSimple(number, 'СерийныйНомер', seriesSku);
META defSpecification(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Specification EXTID extid
        PROPERTIES (nm###class, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное'
        FILTERS nm###class = nm(class, configuration)
    ;
END

META defSpecificationDetail(nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = Specification IN group EXTID extid
        PROPERTIES(nm###class###table, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;
    uid###nm###class###table 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
    fullName###nm###class###table 'НаименованиеПолное' = DATA LOCAL STRING (INTEGER);

    EXTEND FORM receiveMessage
        PROPERTIES (class###table) IN specification uid###nm###class###table EXTID 'Ссылка', fullName###nm###class###table EXTID 'НаименованиеПолное'
    ;
END

META defSpecificationDetail(nm, class, table, extid)
    @defSpecificationDetail(nm, class, table, extid, nm###table);
END

META defSeriesSkuDetail(nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = SeriesSku IN group EXTID extid
        PROPERTIES(nm###class###table, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', number EXTID 'СерийныйНомер'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;
    uid###nm###class###table 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
    name###nm###class###table 'Наименование' = DATA LOCAL STRING (INTEGER);
    number###nm###class###table 'СерийныйНомер' = DATA LOCAL STRING (INTEGER);

    EXTEND FORM receiveMessage
        PROPERTIES (class###table) IN seriesItem uid###nm###class###table EXTID 'Ссылка', name###nm###class###table EXTID 'Наименование', number###nm###class###table EXTID 'СерийныйНомер'
    ;
END

META defSeriesSkuDetail(nm, class, table, extid)
    @defSeriesSkuDetail(nm, class, table, extid, nm###table);
END

//barcode
@extReference (barcode, 'ШтрихкодыНоменклатуры');
@defPropSimple(barcodeSelect, 'ШтрихкодОтбор', STRING, barcode);
@extTable(barcode, records);
@defPropSimpleDetail(barcodeItem, 'Штрихкод', STRING, barcode, records);
@defPropDetail(item, 'Номенклатура', Item, barcode, records);
EXTEND FORM sendMessage
    OBJECTS itemBarcodeRecords = Item IN itemRecords EXTID 'Номенклатура'
    PROPERTIES(itemBarcodeRecords, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное', id EXTID 'КодВПрограмме', article EXTID 'Артикул', name EXTID 'Наименование'
    FILTERS itemBarcodeRecords = item(barcodeRecords, configuration)
;

uidItemBarcodeRecords 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
fullNameItemBarcodeRecords 'НаименованиеПолное' = DATA LOCAL STRING (INTEGER);
idItemBarcodeRecords 'КодВПрограмме' = DATA LOCAL ISTRING[36] (INTEGER);
articleItemBarcodeRecords 'Артикул' = DATA LOCAL STRING (INTEGER);
nameItemBarcodeRecords 'Наименование' = DATA LOCAL STRING (INTEGER);

EXTEND FORM receiveMessage
    PROPERTIES (barcodeRecords) IN itemRecords uidItemBarcodeRecords EXTID 'Ссылка', fullNameItemBarcodeRecords  EXTID 'НаименованиеПолное', idItemBarcodeRecords EXTID 'КодВПрограмме', articleItemBarcodeRecords EXTID 'Артикул', nameItemBarcodeRecords EXTID 'Наименование'
;
@defPropDetail(specification, 'Характеристика', Specification, barcode, records);
EXTEND FORM sendMessage
    OBJECTS specificationBarcodeRecords = Specification IN specificationRecords EXTID 'Характеристика'
    PROPERTIES(specificationBarcodeRecords, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное'
    FILTERS specificationBarcodeRecords = specification(barcodeRecords, configuration)
;
uidSpecificationBarcodeRecords 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
fullNameSpecificationBarcodeRecords 'НаименованиеПолное' = DATA LOCAL STRING (INTEGER);

EXTEND FORM receiveMessage
    PROPERTIES (barcodeRecords) IN specificationRecords uidSpecificationBarcodeRecords EXTID 'Ссылка', fullNameSpecificationBarcodeRecords EXTID 'НаименованиеПолное'
;

// patner
// workaround для совместимости 1.6 -> 1.5
META defPartner(nm, class, group, extid)

    //    EXTEND FORM sendMessage
    //        OBJECTS nm###class = Partner EXTID extid IN group
    //        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    //        FILTERS nm###class = nm(class, configuration)
    //    ;

    uid###nm###class = DATA LOCAL ISTRING[36] (INTEGER);
    name###nm###class = DATA LOCAL STRING (INTEGER);
    fullName###nm###class = DATA LOCAL STRING (INTEGER);
    inn###nm###class = DATA LOCAL STRING[12] (INTEGER);
    kpp###nm###class = DATA LOCAL STRING[9] (INTEGER);

    EXTEND FORM receiveMessage
        PROPERTIES (nm###class) uid###nm###class EXTID 'Ссылка', name###nm###class EXTID 'Наименование', fullName###nm###class EXTID 'НаименованиеПолное', inn###nm###class EXTID 'ИНН', kpp###nm###class EXTID 'КПП'
    ;

END

META defPartner(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Partner EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
        FILTERS nm###class = nm(class, configuration)
    ;

    uidPartner###class = DATA LOCAL ISTRING[36] (INTEGER);
    namePartner###class = DATA LOCAL STRING (INTEGER);
    fullNamePartner###class = DATA LOCAL STRING (INTEGER);
    innPartner###class = DATA LOCAL STRING[12] (INTEGER);
    kppPartner###class = DATA LOCAL STRING[9] (INTEGER);

    EXTEND FORM receiveMessage
        PROPERTIES (nm###class) uidPartner###class EXTID 'Ссылка', namePartner###class EXTID 'Наименование', fullNamePartner###class EXTID 'НаименованиеПолное', innPartner###class EXTID 'ИНН', kppPartner###class EXTID 'КПП'
    ;
END

META defPartner(nm, class)
    @defPartner(nm, class, 'Контрагент');
END

META defPartnerDetail(nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = Partner EXTID extid
        PROPERTIES(nm###class###table, configuration)  sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;
END

@extReference(partner, 'Контрагенты');
@defKeyPropSimple(name, 'Наименование', STRING, keyProperties, partner);
@defKeyPropSimple(fullName, 'НаименованиеПолное', STRING, keyProperties, partner);
@defKeyPropSimple(inn, 'ИНН', STRING[12], keyProperties, partner);
@defKeyPropSimple(kpp, 'КПП', STRING[9], keyProperties, partner);


//@defKeyPropSimple(type, 'ЮридическоеФизическоеЛицо', TypePartner, keyProperties, partner) 
type 'ЮридическоеФизическоеЛицо' = ABSTRACT TypePartner (Partner, Configuration);
idType 'ЮридическоеФизическоеЛицо' (Partner p, Configuration c) = staticCaption(type(p, c));
WHEN CHANGED(type(Partner d, Configuration c)) DO {
    packet(c, d) <- NULL;
    in(c, d) <- inSending(c, d) AND NOT date(d, c) < dateStartExchange(c);
}
typePartner 'ЮридическоеФизическоеЛицо' = DATA LOCAL STRING (INTEGER);
EXTEND FORM sendMessage PROPERTIES idType(partner, configuration) IN keyProperties EXTID 'ЮридическоеФизическоеЛицо';
EXTEND FORM receiveMessage PROPERTIES typePartner(partner) IN keyProperties EXTID 'ЮридическоеФизическоеЛицо';

//country
//CLASS ABSTRACT Country 'Справочник.СтраныМира' : Reference;
//@defProp(name, 'Наименование', STRING, Country){
//    name 'Наименование' = ABSTRACT STRING (Country, Configuration);
//    
//    WHEN CHANGED(name(Country d, Configuration c)) DO {
//        packet(c, d) <- NULL;
//        in(c, d) <- inSending(c, d) AND NOT date(d, c) < dateStartExchange(c);  
//    }
//};

@defKeyPropObject(country, 'СтранаРегистрации', Country, keyProperties, partner);

@defKeyPropSimple(group, 'Наименование', ISTRING[100], hierarchyGroup, partner);


@extTable(partner, contactInfo);
@defPropSimpleDetail(typeContactInfo, 'ВидКонтактнойИнформации', STRING, partner, contactInfo);
@defPropSimpleDetail(contentContactInfo, 'ЗначенияПолей', STRING, partner, contactInfo);

@defPropObject(mainPartner, 'ГоловнойКонтрагент', Partner, partner);

@defPropSimple(isIndependentDepartment, 'ОбособленноеПодразделение', BOOLEAN, partner);

// company
CLASS ABSTRACT Company 'Справочник.Организации' : Partner;
META defCompany(nm, class, group, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Partner EXTID extid IN group
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
        FILTERS nm###class = nm(class, configuration)
    ;
END

META defCompany(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Partner EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
        FILTERS nm###class = nm(class, configuration)
    ;
END
META defCompany(nm, class)
    @defCompany(nm, class, 'Организация');
END

// stock
@extReference (stock, 'Склады');

@defKeyPropSimple(name, 'Наименование', STRING, keyProperties, stock);

@defProp(type, 'ТипСклада', TypeStock, Stock);
idType 'ТипСклада' (Stock s, Configuration c) = staticCaption(type(s, c));
EXTEND FORM sendMessage PROPERTIES idType(stock, configuration) IN keyProperties EXTID 'ТипСклада';

META defStock(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Stock EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', idType EXTID 'ТипСклада'
        FILTERS nm###class = nm(class, configuration)
    ;

    uid###nm###class 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
    name###nm###class 'Наименование' = DATA LOCAL STRING (INTEGER);

    EXTEND FORM receiveMessage
        PROPERTIES (nm###class) uid###nm###class EXTID 'Ссылка', name###nm###class EXTID 'Наименование'
    ;
END

META defStock(nm, class)
    @defStock(nm, class, 'Склад');
END

// department
CLASS ABSTRACT Department 'Справочник.Подразделения' : Reference;
@defProp(nameDepartment, 'Наименование', STRING, department);
@defProp(idDepartment, 'КодПодразделения', STRING, department);
useId1CDepartment 'Используем "Код подразделения 1С"' = ABSTRACT BOOLEAN ();

EXTEND FORM sendMessage
    PROPERTIES idDepartment(stock, configuration) IN keyProperties EXTID 'КодПодразделения'
;

META defDepartment(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Department EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', nameDepartment EXTID 'Наименование'
        PROPERTIES idDepartment###nm###class = (idDepartment(nm###class, configuration) IF useId1CDepartment()) EXTID 'КодПодразделения'
        FILTERS nm###class = nm(class, configuration)
    ;
END
META defDepartment(nm, class, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Department EXTID extid IN group
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', nameDepartment EXTID 'Наименование'
        PROPERTIES idDepartment###nm###class = (idDepartment(nm###class, configuration) IF useId1CDepartment()) EXTID 'КодПодразделения'
        FILTERS nm###class = nm(class, configuration)
    ;
END

// currency
CLASS ABSTRACT Currency 'Справочник.Валюты' : Reference;
@defProp(name, 'Наименование', STRING, Currency);
META defCurrency(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Currency EXTID extid
        PROPERTIES(nm###class, configuration) id EXTID 'Код', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;
END
META defCurrency(nm, class)
    @defCurrency(nm, class, 'Валюта');
END
META defCurrency(nm, class, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Currency EXTID extid IN group
        PROPERTIES(nm###class, configuration) id EXTID 'Код', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;
END


// contract
CLASS Contract 'Справочник.Договоры' : Reference;
@defProp(currency, 'ВалютаВзаиморасчетов', Currency, Contract);
@defProp(type, 'ВидДоговора', TypeContract, Contract);
idType 'ВидДоговора' (Contract cc, Configuration c) = staticCaption(type(cc, c));
@defProp(company, 'Организация', Company, Contract);
@defProp(partner, 'Контрагент', Partner, Contract);

META defContract(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Contract EXTID extid
        FILTERS nm###class = nm(class, configuration)

        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', idType EXTID 'ВидДоговора'
    ;
    @defCompany(company, nm###class);
    uid###nm###class 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);

    partner###nm###class = DATA LOCAL INTEGER (INTEGER);

    EXTEND FORM receiveMessage
        OBJECTS partner###nm###class = INTEGER EXTID 'Контрагент'
        FILTERS partner###nm###class(partner###nm###class) = nm###class
    ;
    @defPartner(partner, nm###class);
    @defCurrency(currency, nm###class, 'ВалютаВзаиморасчетов');
    EXTEND FORM sendMessage
        PROPERTIES(nm###class, configuration) name EXTID 'Наименование',  dateString EXTID 'Дата', number EXTID 'Номер'
    ;
END

@defProp(name, 'Наименование', STRING, Contract);
@defProp(date, 'Дата', DATE, Contract);
dateString 'Дата' (Contract cc, Configuration c) = dateToString(date(cc, c));
@defProp(number, 'Номер', STRING, Contract);

//settlement
CLASS Settlement 'ДанныеВзаиморасчетов' : EnterpriseData;

@defProp(contract, 'Договор', Contract, settlement);
@defProp(currencySettlement, 'ВалютаВзаиморасчетов', Currency, settlement);


META defSettlement(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Settlement EXTID extid
        FILTERS nm###class = nm(class, configuration)
    ;

    uid###nm###class 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
    contract###nm###class = DATA LOCAL INTEGER (INTEGER);

    EXTEND FORM receiveMessage
        OBJECTS contract###nm###class = INTEGER EXTID 'Договор'
        PROPERTIES (contract###nm###class) uid###nm###class EXTID 'Ссылка'
        FILTERS contract###nm###class(contract###nm###class) = nm###class
    ;
    @defContract(contract, nm###class, 'Договор');
    @defCurrency(currencySettlement, nm###class, 'ВалютаВзаиморасчетов');
END


// bank
CLASS ABSTRACT Bank 'Справочник.Банки' : Reference;
@defProp(name, 'Наименование', STRING, Bank);
@defProp(bic, 'БИК', STRING[9], Bank);
@defProp(correspondentAccount, 'КоррСчет', STRING[20], Bank);
@defProp(swiftBic, 'СВИФТБИК', STRING[11], Bank);
META defBank (nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = Bank EXTID extid
        PROPERTIES(nm###class, configuration) sendUid EXTID 'Ссылка', bic EXTID 'БИК', name EXTID 'Наименование', swiftBic EXTID 'СВИФТБИК'
        FILTERS nm###class = nm(class, configuration)
    ;

    uidBank###class = DATA LOCAL ISTRING[36] (INTEGER);
    nameBank###class = DATA LOCAL STRING (INTEGER);
    bicBank###class = DATA LOCAL STRING[9] (INTEGER);
    swiftBicBank###class = DATA LOCAL STRING[11] (INTEGER);
    correspondentAccountBank###class = DATA LOCAL STRING[20] (INTEGER);

    EXTEND FORM receiveMessage
        OBJECTS nm###class = INTEGER EXTID 'Банк'
        //FILTERS class(nm###class) = class
        PROPERTIES (nm###class) uidBank###class EXTID 'Ссылка', bicBank###class EXTID 'БИК', correspondentAccountBank###class EXTID 'КоррСчет',
            nameBank###class EXTID 'Наименование', swiftBicBank###class EXTID 'СВИФТБИК'
    ;
END
META defBank(nm, class)
    @defBank(nm, class, 'Банк');
END

// bank account
CLASS ABSTRACT BankAccount 'Справочник.БанковскиеСчета' : Reference;
@defProp(number, 'НомерСчета', STRING[34], BankAccount);
@defProp(bank, 'Банк', Bank, BankAccount);
@defProp(owner, 'Владелец', Partner, BankAccount);
META defBankAccount(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = BankAccount EXTID extid
        PROPERTIES (nm###class, configuration) sendUid EXTID 'Ссылка', number EXTID 'НомерСчета'
        FILTERS nm###class = nm(class, configuration)
    ;
    @defBank(bank, nm###class)
        ;
    @defPartner(owner, nm###class, 'Владелец');
END

META defBankAccount(nm, class)
    @defBankAccount(nm, class, 'БанковскийСчет');
END

// cash register
@extReference (cashRegister, 'КассыККМ');
@defKeyPropSimple(name, 'Наименование', STRING, keyProperties, cashRegister);
@defProp(company, 'Организация', Company, CashRegister);
@defProp(stock, 'Склад', Stock, CashRegister);
META defCashRegister (nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = CashRegister EXTID extid
        FILTERS nm###class = nm(class, configuration)
        PROPERTIES (nm###class, configuration) name EXTID 'Наименование'
    ;
    @defCompany(company, nm###class);
    EXTEND FORM sendMessage
        OBJECTS stock###nm###class = Stock EXTID 'Склад'
        PROPERTIES(stock###nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', idType EXTID 'ТипСклада'
        FILTERS stock###nm###class = stock(nm###class, configuration)
    ;
//    @defStock(stock, nm###class){
//    @defStock(stock, nm###class, 'Склад'){
//    EXTEND FORM sendMessage
//        OBJECTS stock###nm###class = Stock EXTID 'Склад'
//        PROPERTIES(stock###nm###class, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', idType EXTID 'ТипСклада'
//        FILTERS stock###nm###class = stock(nm###class, configuration)
//    ;
//
//    uidStock###nm###class 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
//    nameStock###nm###class 'Наименование' = DATA LOCAL STRING (INTEGER);
//
//    EXTEND FORM receiveMessage
//        PROPERTIES (stock###nm###class) uidStock###nm###class EXTID 'Ссылка', nameStock###nm###class EXTID 'Наименование'
//    ;
//};
//};
    EXTEND FORM sendMessage
        PROPERTIES(nm###class) uid EXTID 'Ссылка'
    ;
END

//cash flow type
CLASS ABSTRACT CashflowType 'Справочник.СтатьиДДС' : Reference;
@defProp(name, 'Наименование', STRING, CashflowType);

//income type
CLASS ABSTRACT IncomeType 'Справочник.СтатьиДоходов' : Reference;
@defProp(name, 'Наименование', STRING, IncomeType);
//gift card type
CLASS ABSTRACT GiftCardType 'Справочник.ВидыПодарочныхСертификатов' : Reference;
@defProp(currency, 'Валюта', Currency, GiftCardType);

@defProp(denomination, 'Номинал', NUMERIC[15,2], GiftCardType);
@defProp(partPayment, 'РазрешитьЧастичнуюОплату', BOOLEAN, GiftCardType);

META defGiftCardType(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = GiftCardType EXTID extid
        PROPERTIES (nm###class, configuration) sendUid EXTID 'Ссылка', denomination EXTID 'Номинал', name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;
    @defCurrency(currency, nm###class);
END

META defGiftCardType(nm, class)
    @defGiftCardType(nm, class, 'ВидПодарочногоСертификата');
END

META defGiftCardTypeDetail(nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = GiftCardType EXTID extid
        PROPERTIES(nm###class###table, configuration)  sendUid EXTID 'Ссылка', denomination EXTID 'Номинал', name EXTID 'Наименование'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;
END
// all documents
@defProp(dateTime, 'Дата', DATETIME, Document);
dateTimeString 'Дата' (Document d, Configuration c) = dateTimeToString(dateTime(d, c));
@defProp(id, 'Номер', ISTRING, Document);

// sale order
@extDocument(saleOrder, 'ЗаказКлиента', 15, 'ЗаказыКлиентов');
@defPropObject(currency, 'Валюта', Currency, saleOrder);
@defPropObject(stock, 'Склад', Stock, saleOrder);
@defPropObject(customer, 'Контрагент', Partner, saleOrder);

@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, saleOrder);

@defPropSimple(note, 'Комментарий', STRING, saleOrder);
@defPropBoolean(includeVAT, 'СуммаВключаетНДС', saleOrder);
@extTable(saleOrder, product);
@defPropObjectDetail(item, 'Номенклатура', Item, saleOrder, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, saleOrder, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, saleOrder, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], saleOrder, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], saleOrder, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], saleOrder, product);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, saleOrder, product);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], saleOrder, product);
@extTable(saleOrder, service);
@defPropObjectDetail(item, 'Номенклатура', Item, saleOrder, service, itemData);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], saleOrder, service);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], saleOrder, service);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], saleOrder, service);
//settlements (SaleOrder s, Configuration c) += '' IF s IS SaleOrder AND c IS Configuration; //todo

// shipment order
@extDocument(shipmentOrder, 'ЗаказНаПеремещение', 15);
@defPropSimple(note, 'Комментарий', STRING, shipmentOrder);
@defPropObject(outStock, 'СкладОтправитель', Stock, shipmentOrder);
@defPropObject(inStock, 'СкладПолучатель', Stock, shipmentOrder);

@extTable(shipmentOrder, product);
@defPropObjectDetail(item, 'Номенклатура', Item, shipmentOrder, product, itemData);
@defPropDetail(specification, 'Характеристика', Specification, shipmentOrder, product);
EXTEND FORM sendMessage
    OBJECTS specificationShipmentOrderProduct = Specification IN itemData EXTID 'Характеристика'
    PROPERTIES(specificationShipmentOrderProduct, configuration) sendUid EXTID 'Ссылка'
    FILTERS specificationShipmentOrderProduct = specification(shipmentOrderProduct, configuration)

    OBJECTS itemSpecificationShipmentOrderProduct = Item EXTID 'Номенклатура'
    PROPERTIES(itemSpecificationShipmentOrderProduct, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное', id EXTID 'КодВПрограмме', article EXTID 'Артикул', name EXTID 'Наименование'
    FILTERS itemSpecificationShipmentOrderProduct = item(shipmentOrderProduct, configuration) IF specificationShipmentOrderProduct IS Specification

    PROPERTIES(specificationShipmentOrderProduct, configuration) fullName EXTID 'НаименованиеПолное'
;

uidSpecificationShipmentOrderProduct 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
fullNameSpecificationShipmentOrderProduct 'НаименованиеПолное' = DATA LOCAL STRING (INTEGER);

EXTEND FORM receiveMessage
    PROPERTIES (shipmentOrderProduct) IN specification uidSpecificationShipmentOrderProduct EXTID 'Ссылка', fullNameSpecificationShipmentOrderProduct EXTID 'НаименованиеПолное'
;
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, shipmentOrder, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], shipmentOrder, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], shipmentOrder, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], shipmentOrder, product);

// Purchase invoice
@extDocument(purchaseInvoice, 'ПоступлениеТоваровУслуг');
// Для обратной совместимости 1.6 -> 1.5

@defProp(numberInnerDocument, 'НомерВходящегоДокумента', STRING, purchaseInvoice);
@defProp(dateInnerDocument, 'ДатаВходящегоДокумента', DATE, purchaseInvoice);
@defProp(nameInnerDocument, 'НаименованиеВходящегоДокумента', STRING, purchaseInvoice);
EXTEND FORM sendMessage
    OBJECTS innerDocument  = PurchaseInvoice EXTID 'ДанныеВходящегоДокумента' IN keyProperties
    PROPERTIES  = numberInnerDocument(innerDocument, configuration) EXTID 'НомерВходящегоДокумента',
                = dateToString(dateInnerDocument(innerDocument, configuration))  EXTID 'ДатаВходящегоДокумента',
                = nameInnerDocument(innerDocument, configuration)  EXTID 'НаименованиеВходящегоДокумента'
    FILTERS innerDocument == purchaseInvoice //AND (numberInnerDocument(purchaseInvoice, configuration) OR dateInnerDocument(purchaseInvoice, configuration) OR nameInnerDocument(purchaseInvoice, configuration))
;

@defKeyPropObject(partnerKey, 'Контрагент', Partner, keyProperties, purchaseInvoice);

EXTEND FORM sendMessage
    OBJECTS partnerKey = Partner EXTID 'Контрагент' IN keyProperties
    PROPERTIES(partnerKey, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS partnerKey = partnerKey(purchaseInvoice, configuration)

    OBJECTS countryPartnerKey = Country EXTID 'СтранаРегистрации'
    PROPERTIES(countryPartnerKey, configuration) sendUid EXTID 'Ссылка', id EXTID 'Код', name EXTID 'Наименование'
    FILTERS country(partnerKey, configuration)==countryPartnerKey
;

@extTable(purchaseInvoice, product);
@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, purchaseInvoice, product);
@defPropDetail(item, 'Номенклатура', Item, purchaseInvoice);
@defPropObjectDetail(item, 'Номенклатура', Item, purchaseInvoice, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, purchaseInvoice, product, itemData);

@defPropObjectDetail(seriesSku, 'Серия', SeriesSku, purchaseInvoice, product, itemData);

@defPropDetail(idBarcodePurchaseInvoiceProduct, 'Штрихкод', STRING[200], purchaseInvoice);
EXTEND FORM sendMessage
    PROPERTIES (purchaseInvoiceProduct, configuration) idBarcodePurchaseInvoiceProduct EXTID 'Штрихкод' IN itemData
;
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, purchaseInvoice, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], purchaseInvoice, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], purchaseInvoice, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], purchaseInvoice, product);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, purchaseInvoice, product);

EXTEND FORM receiveMessage
    PROPERTIES (purchaseInvoiceProduct) rateVatPurchaseInvoiceProduct EXTID 'СтавкаНДС'
;

@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], purchaseInvoice, product);
@defPropSimpleDetail(retailSum, 'СуммаРозничная', NUMERIC[15,2], purchaseInvoice, product);
@defPropSimpleDetail(retailPrice, 'ЦенаРозничная', NUMERIC[15,2], purchaseInvoice, product);
@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], purchaseInvoice, product);

@defPropObject(currency, 'Валюта', Currency, purchaseInvoice);
@defPropId(operation, 'ВидОперации', typePurchaseInvoice, purchaseInvoice);
@defPropBoolean(includeVAT, 'СуммаВключаетНДС', purchaseInvoice);
@defPropObject(department, 'Подразделение', Department, purchaseInvoice);
@defPropObject(stock, 'Склад', Stock, purchaseInvoice);
@defPropObject(contract, 'Договор', Contract, purchaseInvoice);
@defPropObject(partner, 'Контрагент', Partner, purchaseInvoice);
@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, purchaseInvoice);

META defPurchaseInvoice(nm, class, extid, group)
    
    @defKeyPropSimple(uid###nm, 'Ссылка', ISTRING[36], group, class);
    uid###nm(###class nm, Configuration configuration) += sendUid(nm(nm, configuration), configuration);
    @defKeyPropDate(date###nm, 'Дата', group, class);
    date###nm(###class nm, Configuration configuration) += date(nm(nm, configuration), configuration);
    @defKeyPropSimple(id###nm, 'Номер', STRING[256], group, class);
    id###nm(###class nm, Configuration configuration) += STRING[256](id(nm(nm, configuration), configuration));
    @defKeyPropObject(company###nm, 'Организация', Company, group, class);
    company###nm(###class nm, Configuration configuration) += company(nm(nm, configuration), configuration);
    @defKeyPropObject(partner###nm, 'Контрагент', Partner, group, class);
    partner###nm(###class nm, Configuration configuration) += partner(nm(nm, configuration), configuration);

END

// Виды операций корректировки инвойсов
@defStaticType(typeInvoiceCorrection, 'ВидыОперацийИсправленияПоступленияРеализации');
@defStaticTypeValue(typeInvoiceCorrection, agreedChange, 'СогласованноеИзменение');
@defStaticTypeValue(typeInvoiceCorrection, mistakeCorrection, 'ИсправлениеОшибки');

// КорректировкаПоступленияТоваров
@extDocument(purchaseInvoiceCorrection, 'КорректировкаПоступленияТоваров');
@defKeyPropObject(partner, 'Контрагент', Partner, keyProperties, purchaseInvoiceCorrection);
EXTEND FORM sendMessage
    OBJECTS partnerPurchaseInvoiceCorrection = Partner EXTID 'Контрагент' IN keyProperties
    PROPERTIES(partnerPurchaseInvoiceCorrection, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS partnerPurchaseInvoiceCorrection = partner(purchaseInvoiceCorrection, configuration)

//    OBJECTS countryPartnerPurchaseInvoiceCorrection = Country EXTID 'СтранаРегистрации'
//    PROPERTIES(countryPartnerPurchaseInvoiceCorrection, configuration) sendUid EXTID 'Ссылка', id EXTID 'Код', name EXTID 'Наименование'
//    FILTERS country(partnerPurchaseInvoiceCorrection, configuration)==countryPartner
;
@defPropSimple(note, 'Комментарий', STRING, purchaseInvoiceCorrection);
@defPropObject(department, 'Подразделение', Department, purchaseInvoiceCorrection);
@defPropObject(stock, 'Склад', Stock, purchaseInvoiceCorrection);
@defPropObject(currency, 'Валюта', Currency, purchaseInvoiceCorrection);
@defPropObject(contract, 'Договор', Contract, purchaseInvoiceCorrection);
@defPropBoolean(includeVAT, 'СуммаВключаетНДС', purchaseInvoiceCorrection);
@defPropObject(purchaseInvoice, 'ПоступлениеТоваровУслугСсылка', PurchaseInvoice, purchaseInvoiceCorrection, purchaseInvoice);
EXTEND FORM sendMessage
    OBJECTS partnerPurchaseInvoicePurchaseInvoiceCorrection = Partner EXTID 'Контрагент' IN purchaseInvoice
    PROPERTIES(partnerPurchaseInvoicePurchaseInvoiceCorrection, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS partnerPurchaseInvoicePurchaseInvoiceCorrection = partnerPurchaseInvoice(purchaseInvoiceCorrection, configuration)
;
@defPropObject(purchaseInvoiceCorrected, 'ПоступлениеТоваровУслугСсылка', PurchaseInvoice, purchaseInvoiceCorrection, purchaseInvoiceCorrected);
EXTEND FORM sendMessage
    OBJECTS partnerPurchaseInvoiceCorrectedPurchaseInvoiceCorrection = Partner EXTID 'Контрагент' IN purchaseInvoiceCorrected
    PROPERTIES(partnerPurchaseInvoiceCorrectedPurchaseInvoiceCorrection, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS partnerPurchaseInvoiceCorrectedPurchaseInvoiceCorrection = partnerPurchaseInvoiceCorrected(purchaseInvoiceCorrection, configuration)
;
@defPropId(operation, 'ВидОперации', typeInvoiceCorrection, purchaseInvoiceCorrection);
@extTable(purchaseInvoiceCorrection, product);
@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, purchaseInvoiceCorrection, product);
@defPropObjectDetail(item, 'Номенклатура', Item, purchaseInvoiceCorrection, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, purchaseInvoiceCorrection, product, itemData);
@defPropSimpleDetail(quantityA, 'Количество', NUMERIC[15,3], purchaseInvoiceCorrection, product);
@defPropSimpleDetail(quantityB, 'КоличествоДоИзменения', NUMERIC[15,3], purchaseInvoiceCorrection, product);
@defPropSimpleDetail(sumA, 'Сумма', NUMERIC[15,2], purchaseInvoiceCorrection, product);
@defPropSimpleDetail(sumB, 'СуммаДоИзменения', NUMERIC[15,2], purchaseInvoiceCorrection, product);
@defPropSimpleDetail(priceA, 'Цена', NUMERIC[15,2], purchaseInvoiceCorrection, product);
@defPropSimpleDetail(priceB, 'ЦенаДоИзменения', NUMERIC[15,2], purchaseInvoiceCorrection, product);
@defPropIdDetail(rateVatA, 'СтавкаНДС', TypeVat, purchaseInvoiceCorrection, product);
EXTEND FORM receiveMessage
    PROPERTIES (purchaseInvoiceCorrectionProduct) rateVatAPurchaseInvoiceCorrectionProduct EXTID 'СтавкаНДС'
;
@defPropIdDetail(rateVatB, 'СтавкаНДСДоИзменения', TypeVat, purchaseInvoiceCorrection, product);
EXTEND FORM receiveMessage
    PROPERTIES (purchaseInvoiceCorrectionProduct) rateVatBPurchaseInvoiceCorrectionProduct EXTID 'СтавкаНДС'
;
@defPropSimpleDetail(sumVatA, 'СуммаНДС', NUMERIC[15,2], purchaseInvoiceCorrection, product);
@defPropSimpleDetail(sumVatB, 'СуммаНДСДоИзменения', NUMERIC[15,2], purchaseInvoiceCorrection, product);

//purchase order
orderPurchaseInvoice = DATA LOCAL INTEGER (INTEGER);
uidOrderPurchaseInvoice 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);

EXTEND FORM receiveMessage
    OBJECTS orderPurchaseInvoice = INTEGER EXTID 'Заказ'
    PROPERTIES (orderPurchaseInvoice) uidOrderPurchaseInvoice EXTID 'Ссылка'
    FILTERS orderPurchaseInvoice(orderPurchaseInvoice) = purchaseInvoice
;

@defPropSimple(note, 'Комментарий', STRING, purchaseInvoice);

// Purchase order
@extDocument(purchaseOrder, 'ЗаказПоставщику', 15, 'ЗаказыПоставщикам');
@defPropObject(currency, 'Валюта', Currency, purchaseOrder);
@defPropObject(department, 'Подразделение', Department, purchaseOrder);
@defPropObject(stock, 'Склад', Stock, purchaseOrder);
@defPropObject(partner, 'Контрагент', Partner, purchaseOrder);
@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, purchaseOrder);
@defPropBoolean(includeVAT, 'СуммаВключаетНДС', purchaseOrder);

@extTable(purchaseOrder, product);
@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, purchaseOrder, product);
@defPropObjectDetail(item, 'Номенклатура', Item, purchaseOrder, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, purchaseOrder, product, itemData);
@defPropDetail(idBarcodePurchaseOrderProduct, 'Штрихкод', STRING[200], purchaseOrder);
EXTEND FORM sendMessage
    PROPERTIES (purchaseOrderProduct, configuration) idBarcodePurchaseOrderProduct EXTID 'Штрихкод' IN itemData
;
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, purchaseOrder, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], purchaseOrder, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], purchaseOrder, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], purchaseOrder, product);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, purchaseOrder, product);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], purchaseOrder, product);
//@defPropSimpleDetail(retailSum, 'СуммаРозничная', NUMERIC[15,2], purchaseOrder, product);
//@defPropSimpleDetail(retailPrice, 'ЦенаРозничная', NUMERIC[15,2], purchaseOrder, product);
//@defPropId(operation, 'ВидОперации', typePurchaseInvoice, purchaseOrder);
//@defPropObject(contract, 'Договор', Contract, purchaseOrder);
@defPropSimple(note, 'Комментарий', STRING, purchaseOrder);

// Sale invoice
META defSaleInvoice(nm, class, extid)
    @defKeyPropSimple(uidSaleInvoice, 'Ссылка', ISTRING[36], saleInvoice, class);
    uidSaleInvoice(###class nm, Configuration configuration) += sendUid(nm(nm, configuration), configuration);
    @defKeyPropDate(dateSaleInvoice, 'Дата', saleInvoice, class);
    dateSaleInvoice(###class nm, Configuration configuration) += date(nm(nm, configuration), configuration);
    @defKeyPropSimple(idSaleInvoice, 'Номер', STRING[256], saleInvoice, class);
    idSaleInvoice(###class nm, Configuration configuration) += STRING[256](id(nm(nm, configuration), configuration));
    @defKeyPropObject(companySaleInvoice, 'Организация', Company, saleInvoice, class);
    companySaleInvoice(###class nm, Configuration configuration) += company(nm(nm, configuration), configuration);
END

META defRetailReport(nm, class, extid)
    @defKeyPropSimple(uidRetailReport, 'Ссылка', ISTRING[36], retailReport, class);
    uidRetailReport(###class nm, Configuration configuration) += sendUid(nm(nm, configuration), configuration);
    @defKeyPropDate(dateRetailReport, 'Дата', retailReport, class);
    dateRetailReport(###class nm, Configuration configuration) += date(nm(nm, configuration), configuration);
    @defKeyPropSimple(idRetailReport, 'Номер', STRING[256], retailReport, class);
    idRetailReport(###class nm, Configuration configuration) += STRING[256](id(nm(nm, configuration), configuration));
    @defKeyPropObject(companyRetailReport, 'Организация', Company, retailReport, class);
    companyRetailReport(###class nm, Configuration configuration) += company(nm(nm, configuration), configuration);
END

META defSaleInvoiceDetail(nm, class, table, extid, group)
    @extKeyPropertiesDetail(nm, extid, reasonDocument, class, table);
END

META defSaleCreditNoteDetail(nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = ###nm EXTID extid IN reasonDocument
        PROPERTIES(nm###class###table, configuration) sendUid EXTID 'Ссылка', dateTimeString EXTID 'Дата', id EXTID 'Номер'
        FILTERS nm###class###table = nm(class###table, configuration)

        OBJECTS companyNote###class###table = Company EXTID 'Организация'
        PROPERTIES(companyNote###class###table, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
        FILTERS companyNote###class###table = company(nm###class###table, configuration)
    ;
END

@extDocument(saleInvoice, 'РеализацияТоваровУслуг');
@defPropId(operation, 'ВидОперации', typeSaleInvoice, saleInvoice);
@defPropObject(currency, 'Валюта', Currency, saleInvoice);
@defPropBoolean(includeVAT, 'СуммаВключаетНДС', saleInvoice);
@defPropObject(department, 'Подразделение', Department, saleInvoice);

EXTEND FORM receiveMessage
    PROPERTIES includeVATSaleInvoice(saleInvoice) EXTID 'СуммаВключаетНДС';

@defPropObject(stock, 'Склад', Stock, saleInvoice);
@defPropObject(partner, 'Контрагент', Partner, saleInvoice);
@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, saleInvoice);

order 'Заказ' = ABSTRACT SaleOrder (SaleInvoice, Configuration);
WHEN CHANGED(order(SaleInvoice d, Configuration c)) DO {
    packet(c, d) <- NULL;
    in(c, d) <- inSending(c, d) AND NOT date(d, c) < dateStartExchange(c);
}

orderSaleInvoice = DATA LOCAL INTEGER (INTEGER);
uidOrderSaleInvoice 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);

EXTEND FORM receiveMessage
    OBJECTS orderSaleInvoice = INTEGER EXTID 'Заказ'
    PROPERTIES (orderSaleInvoice) uidOrderSaleInvoice EXTID 'Ссылка'
    FILTERS orderSaleInvoice(orderSaleInvoice) = saleInvoice
;

EXTEND FORM sendMessage
    OBJECTS orderSaleInvoice = SaleOrder EXTID 'Заказ'
    PROPERTIES(orderSaleInvoice, configuration) sendUid EXTID 'Ссылка', dateTimeString EXTID 'Дата', id EXTID 'Номер'
    OBJECTS companyOrderSaleInvoice = Company EXTID 'Организация'// IN legalEntityKey
    PROPERTIES(companyOrderSaleInvoice, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS companyOrderSaleInvoice = company(orderSaleInvoice, configuration)

    FILTERS orderSaleInvoice = order(saleInvoice, configuration)
;

@defPropSimple(note, 'Комментарий', STRING, saleInvoice);

@extTable(saleInvoice, product);
@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, saleInvoice, product);
@defPropObjectDetail(item, 'Номенклатура', Item, saleInvoice, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, saleInvoice, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, saleInvoice, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], saleInvoice, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], saleInvoice, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], saleInvoice, product);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, saleInvoice, product);
EXTEND FORM receiveMessage
    PROPERTIES (saleInvoiceProduct) rateVatSaleInvoiceProduct EXTID 'СтавкаНДС'
;

@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], saleInvoice, product);
@defPropSimpleDetail(cost, 'Себестоимость', NUMERIC[15,2], saleInvoice, product);
@defPropSimpleDetail(retailSum, 'СуммаРозничная', NUMERIC[15,2], saleInvoice, product);
@defPropSimpleDetail(retailPrice, 'ЦенаРозничная', NUMERIC[15,2], saleInvoice, product);
//@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], saleInvoice, product){
//    @defPropDetail(declaration, 'НомерГТД', STRING[30], saleInvoice, product){
//    declaration 'НомерГТД' = ABSTRACT STRING[30] (SaleInvoiceProduct, Configuration);
//    WHEN CHANGED(declaration(SaleInvoiceProduct d, Configuration c)) DO {
//        packet(c, saleInvoice(d, c)) <- NULL;
//        in(c, saleInvoice(d, c)) <- inSending(c, saleInvoice(d, c)) AND NOT date(saleInvoice(d, c), c) < dateStartExchange(c);
//    }
//    
//    declarationSaleInvoiceProduct 'НомерГТД' = DATA LOCAL STRING (INTEGER);
//};
//    EXTEND FORM sendMessage
//        PROPERTIES (saleInvoiceProduct, configuration) declaration EXTID 'НомерГТД'
//    ;
//
//    EXTEND FORM receiveMessage
//        PROPERTIES (saleInvoiceProduct) declarationSaleInvoiceProduct EXTID 'НомерГТД'
//    ; 
//};

declaration 'НомерГТД' = ABSTRACT STRING[30] (SaleInvoiceProduct, Configuration);
WHEN CHANGED(declaration(SaleInvoiceProduct d, Configuration c)) DO {
    packet(c, saleInvoice(d, c)) <- NULL;
    in(c, saleInvoice(d, c)) <- inSending(c, saleInvoice(d, c)) AND NOT date(saleInvoice(d, c), c) < dateStartExchange(c);
}

declarationSaleInvoiceProduct 'ДанныеГТД' = DATA LOCAL STRING (INTEGER);

EXTEND FORM sendMessage
    PROPERTIES (saleInvoiceProduct, configuration) declaration EXTID 'НомерГТД'
;

//GROUP declarationInfo 'ДанныеГТД';

EXTEND FORM receiveMessage
    PROPERTIES (saleInvoiceProduct) declarationSaleInvoiceProduct EXTID 'ДанныеГТД' //IN declarationInfo
;

CLASS ABSTRACT SaleInvoiceService : SaleInvoiceDetail;
isService = ABSTRACT BOOLEAN (SaleInvoiceService, Configuration);

EXTEND FORM sendMessage
    OBJECTS saleInvoiceService = SaleInvoiceService EXTID 'Строка' IN service
    FILTERS in(saleInvoice, saleInvoiceService, configuration), isService(saleInvoiceService, configuration)
;

saleInvoiceService = DATA LOCAL INTEGER (INTEGER);
calcIndexSaleInvoiceService (INTEGER detailIndex, INTEGER docIndex) = PARTITION SUM 1 IF saleInvoiceService(detailIndex) = docIndex ORDER detailIndex BY saleInvoiceService(detailIndex);

EXTEND FORM receiveMessage
    OBJECTS saleInvoiceService = INTEGER EXTID 'Строка' IN service
    FILTERS saleInvoiceService(saleInvoiceService) = saleInvoice
;

item 'Номенклатура' = ABSTRACT Item (SaleInvoiceService, Configuration);
WHEN CHANGED(item(SaleInvoiceService d, Configuration c)) DO {
    packet(c, saleInvoice(d, c)) <- NULL;
    in(c, saleInvoice(d, c)) <- inSending(c, saleInvoice(d, c)) AND NOT date(saleInvoice(d, c), c) < dateStartExchange(c);
}

itemSaleInvoiceService 'Номенклатура' = DATA LOCAL STRING (INTEGER);

EXTEND FORM sendMessage
    OBJECTS itemSaleInvoiceService = Item EXTID 'Номенклатура'
    PROPERTIES(itemSaleInvoiceService, configuration) sendUid EXTID 'Ссылка', fullName EXTID 'НаименованиеПолное', id EXTID 'КодВПрограмме', article EXTID 'Артикул', name EXTID 'Наименование'
    FILTERS itemSaleInvoiceService = item(saleInvoiceService, configuration)
;

uidItemSaleInvoiceService 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
fullNameItemSaleInvoiceService 'НаименованиеПолное' = DATA LOCAL STRING (INTEGER);
idItemSaleInvoiceService 'КодВПрограмме' = DATA LOCAL ISTRING[36] (INTEGER);
articleItemSaleInvoiceService 'Артикул' = DATA LOCAL STRING (INTEGER);
nameItemSaleInvoiceService 'Наименование' = DATA LOCAL STRING (INTEGER);

EXTEND FORM receiveMessage
    PROPERTIES (saleInvoiceService) IN item uidItemSaleInvoiceService EXTID 'Ссылка', fullNameItemSaleInvoiceService  EXTID 'НаименованиеПолное', idItemSaleInvoiceService EXTID 'КодВПрограмме', articleItemSaleInvoiceService EXTID 'Артикул', nameItemSaleInvoiceService EXTID 'Наименование'
;

@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], saleInvoice, service);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], saleInvoice, service);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], saleInvoice, service);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, saleInvoice, service);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], saleInvoice, service);

//outcome vat invoice
CLASS ABSTRACT OutcomeVatInvoice 'Документ.СчетФактураВыданный' : Document;

EXTEND CLASS ObjectExchange { outcomeVatInvoice 'Документ.СчетФактураВыданный' }

date (OutcomeVatInvoice outcomeVatInvoice, Configuration configuration) += DATE(dateTime(outcomeVatInvoice, configuration));
desc (OutcomeVatInvoice outcomeVatInvoice, Configuration configuration) += STRING (CONCAT ' ', 'Счет фактура', 'от ' + date(outcomeVatInvoice, configuration), '№ ' + id(outcomeVatInvoice, configuration));

inSending (Configuration configuration, OutcomeVatInvoice outcomeVatInvoice) += inSending(ObjectExchange.outcomeVatInvoice, configuration) IF outcomeVatInvoice IS OutcomeVatInvoice;

CLASS ABSTRACT OutcomeVatInvoiceDetail 'Строка';

outcomeVatInvoice = ABSTRACT OutcomeVatInvoice (OutcomeVatInvoiceDetail, Configuration);
in (OutcomeVatInvoice outcomeVatInvoice, OutcomeVatInvoiceDetail outcomeVatInvoiceDetail, Configuration configuration) = outcomeVatInvoice(outcomeVatInvoiceDetail, configuration) == outcomeVatInvoice;

@defProp(company, 'Организация', Company, OutcomeVatInvoice);

EXTEND FORM sendMessage
    OBJECTS outcomeVatInvoice = OutcomeVatInvoice EXTID 'Документ.СчетФактураВыданный' IN bodySend15
    PROPERTIES(outcomeVatInvoice, configuration) IN keyProperties sendUid EXTID 'Ссылка', id EXTID 'Номер', dateTimeString EXTID 'Дата'
    FILTERS dateTimeString(outcomeVatInvoice, configuration), id(outcomeVatInvoice, configuration), NOT EnterpriseData.isDeleted(outcomeVatInvoice)

    OBJECTS companyOutcomeVatInvoice = Company EXTID 'Организация' IN keyProperties
    PROPERTIES(companyOutcomeVatInvoice, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS companyOutcomeVatInvoice = company(outcomeVatInvoice, configuration)

    FILTERS inLocalSending(configuration, outcomeVatInvoice)
;

EXTEND FORM receiveMessage
    OBJECTS outcomeVatInvoice = INTEGER EXTID 'Документ.СчетФактураВыданный' IN bodyReceive
;

@extDeleteObject(outcomeVatInvoice, 'СчетФактураВыданныйСсылка');
@defPropObject(currency, 'Валюта', Currency, outcomeVatInvoice);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], outcomeVatInvoice);
@defPropSimple(note, 'Комментарий', STRING, outcomeVatInvoice);
@defPropObject(partner, 'Контрагент', Partner, outcomeVatInvoice);
@defPropObject(contract, 'Договор', Contract, outcomeVatInvoice);
@defPropSimple(sumVat, 'СуммаНДС', NUMERIC[15,2], outcomeVatInvoice);
@defPropId(typeVatInvoice, 'ВидСчетаФактуры', typeVatInvoice, outcomeVatInvoice);
@defPropSimple(idOperation, 'КодВидаОперации', STRING, outcomeVatInvoice);
@defPropBoolean(invoiced, 'Выставлен', outcomeVatInvoice);
@defPropId(typeInvoiced, 'СпособВыставления', typeInvoiced, outcomeVatInvoice);

@extTable(outcomeVatInvoice, reason);
@defPropObjectDetail(saleInvoice, 'РеализацияТоваровУслугСсылка', SaleInvoice, outcomeVatInvoice, reason);

//sale credit note
@extDocument(saleCreditNote, 'КорректировкаРеализацииТоваров');
@defPropSimple(note, 'Комментарий', STRING, saleCreditNote);
@defPropObject(department, 'Подразделение', Department, saleCreditNote);
@defPropObject(currency, 'Валюта', Currency, saleCreditNote);
@defPropObject(partner, 'Контрагент', Partner, saleCreditNote);

@defPropObjectDetail(saleCreditNote, 'КорректировкаРеализацииСсылка', SaleCreditNote, outcomeVatInvoice, reason);

//ссылка на продажу
saleInvoice 'ДокументРеализации' = ABSTRACT SaleInvoice (SaleCreditNote, Configuration);
WHEN CHANGED(saleInvoice(SaleCreditNote d, Configuration c)) DO {
    packet(c, saleInvoice(d, c)) <- NULL;
    in(c, saleInvoice(d, c)) <- TRUE WHERE inSending(c, saleInvoice(d, c)) AND NOT date(saleInvoice(d, c), c) < dateStartExchange(c);
}

saleInvoiceSaleCreditNote 'ДокументРеализации' = DATA LOCAL STRING (INTEGER);

EXTEND FORM sendMessage
    OBJECTS saleInvoiceSaleCreditNote = SaleInvoice EXTID 'РеализацияТоваровУслугСсылка' IN saleDocument
    PROPERTIES(saleInvoiceSaleCreditNote, configuration) sendUid EXTID 'Ссылка', dateTimeString EXTID 'Дата', id EXTID 'Номер'
    FILTERS saleInvoiceSaleCreditNote = saleInvoice(saleCreditNote, configuration)

    OBJECTS companySaleInvoiceSaleCreditNote = Company EXTID 'Организация'
    PROPERTIES(companySaleInvoiceSaleCreditNote, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS companySaleInvoiceSaleCreditNote = company(saleInvoiceSaleCreditNote, configuration)
;

//еще одна ссылка на продажу
correctedSaleInvoice 'ИсправляемыйДокументРеализации' = ABSTRACT SaleInvoice (SaleCreditNote, Configuration);
WHEN CHANGED(correctedSaleInvoice(SaleCreditNote d, Configuration c)) DO {
    packet(c, saleInvoice(d, c)) <- NULL;
    in(c, saleInvoice(d, c)) <- TRUE WHERE inSending(c, saleInvoice(d, c)) AND NOT date(saleInvoice(d, c), c) < dateStartExchange(c);
}

correctedSaleInvoiceSaleCreditNote 'ИсправляемыйДокументРеализации' = DATA LOCAL STRING (INTEGER);

EXTEND FORM sendMessage
    OBJECTS correctedSaleInvoiceSaleCreditNote = SaleInvoice EXTID 'РеализацияТоваровУслугСсылка' IN correctedSaleDocument
    PROPERTIES(correctedSaleInvoiceSaleCreditNote, configuration) sendUid EXTID 'Ссылка', dateTimeString EXTID 'Дата', id EXTID 'Номер'
    FILTERS correctedSaleInvoiceSaleCreditNote = correctedSaleInvoice(saleCreditNote, configuration)

    OBJECTS companyCorrectedSaleInvoiceSaleCreditNote = Company EXTID 'Организация'
    PROPERTIES(companyCorrectedSaleInvoiceSaleCreditNote, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS companyCorrectedSaleInvoiceSaleCreditNote = company(correctedSaleInvoiceSaleCreditNote, configuration)
;
@defPropId(operation, 'ВидОперации', typeSaleCreditNote, saleCreditNote);
@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, saleCreditNote);

@extTable(saleCreditNote, product);
@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, saleCreditNote, product);
@defPropObjectDetail(item, 'Номенклатура', Item, saleCreditNote, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, saleCreditNote, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], saleCreditNote, product);
@defPropSimpleDetail(quantityChanged, 'КоличествоДоИзменения', NUMERIC[15,3], saleCreditNote, product);
@defPropSimpleDetail(quantityCorrected, 'КоличествоДоКорректировки', NUMERIC[15,3], saleCreditNote, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], saleCreditNote, product);
@defPropSimpleDetail(sumChanged, 'СуммаДоИзменения', NUMERIC[15,2], saleCreditNote, product);
@defPropSimpleDetail(sumCorrected, 'СуммаДоКорректировки', NUMERIC[15,2], saleCreditNote, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], saleCreditNote, product);
@defPropSimpleDetail(priceChanged, 'ЦенаДоИзменения', NUMERIC[15,2], saleCreditNote, product);
@defPropSimpleDetail(priceCorrected, 'ЦенаДоКорректировки', NUMERIC[15,2], saleCreditNote, product);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, saleCreditNote, product);
@defPropIdDetail(rateVatChanged, 'СтавкаНДСДоИзменения', TypeVat, saleCreditNote, product);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], saleCreditNote, product);
@defPropSimpleDetail(sumVatCorrected, 'СуммаНДСДоКорректировки', NUMERIC[15,2], saleCreditNote, product);
@defPropSimpleDetail(sumVatChanged, 'СуммаНДСДоИзменения', NUMERIC[15,2], saleCreditNote, product);

@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], saleCreditNote, product);
@defPropSimpleDetail(declarationChanged, 'НомерГТДДоИзменения', STRING[30], saleCreditNote, product);

// shipment
@extDocument(shipment, 'ПеремещениеТоваров');
@defPropSimple(note, 'Комментарий', STRING, shipment);
@defPropObject(supplierDepartment, 'ПодразделениеОтправитель', Department, shipment);
@defPropObject(customerDepartment, 'ПодразделениеПолучатель', Department, shipment);
@defPropObject(supplierStock, 'СкладОтправитель', Stock, shipment);
@defPropObject(customerStock, 'СкладПолучатель', Stock, shipment);

//shipment order
orderShipment = DATA LOCAL INTEGER (INTEGER);
uidOrderShipment 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);

EXTEND FORM receiveMessage
    OBJECTS orderShipment = INTEGER EXTID 'ЗаказНаПеремещение'
    PROPERTIES (orderShipment) uidOrderShipment EXTID 'Ссылка'
    FILTERS orderShipment(orderShipment) = shipment
;

@extTable(shipment, product);
@defPropObjectDetail(item, 'Номенклатура', Item, shipment, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, shipment, product);
@defPropObjectDetail(specification, 'Характеристика', Specification, shipment, product, itemData);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], shipment, product);
@defPropIdDetail(typeInventory, 'ТипЗапасов', TypeInventory, shipment, product);
@defPropSimpleDetail(retailSum, 'СуммаВРознице', NUMERIC[15,2], shipment, product);
@defPropSimpleDetail(sumCost, 'Себестоимость', NUMERIC[15,2], shipment, product);
@defPropSimpleDetail(idBarcode, 'Штрихкод', STRING[200], shipment, product);

@defPropObjectDetail(seriesSku, 'Серия', SeriesSku, shipment, product, itemData);
// purchase return invoice
@extDocument(purchaseReturnInvoice, 'ВозвратТоваровПоставщику');
// Для обратной совместимости 1.6 -> 1.5
@defKeyPropObject(partnerKey, 'Контрагент', Partner, keyProperties, purchaseReturnInvoice);
@defPropId(operation, 'ВидОперации', typePurchaseReturnInvoice, purchaseReturnInvoice);
@defPropObject(currency, 'Валюта', Currency, purchaseReturnInvoice);
@defPropBoolean(includeVAT, 'СуммаВключаетНДС', purchaseReturnInvoice);

@defPropObject(department, 'Подразделение', Department, purchaseReturnInvoice);
@defPropObject(stock, 'Склад', Stock, purchaseReturnInvoice);
@defPropObject(partner, 'Контрагент', Partner, purchaseReturnInvoice);

@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, purchaseReturnInvoice);

@defPropObject(purchaseInvoice, 'ДокументПоступления', PurchaseInvoice, purchaseReturnInvoice, purchaseDocument);

EXTEND FORM sendMessage
    OBJECTS partnerPurchaseInvoicePurchaseReturnInvoice = Partner EXTID 'Контрагент' IN purchaseDocument
    PROPERTIES(partnerPurchaseInvoicePurchaseReturnInvoice, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS partnerPurchaseInvoicePurchaseReturnInvoice = partnerPurchaseInvoice(purchaseReturnInvoice, configuration)
;

@defPropSimple(note, 'Комментарий', STRING, purchaseReturnInvoice);

@extTable(purchaseReturnInvoice, product);
@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, purchaseReturnInvoice, product);
@defPropObjectDetail(item, 'Номенклатура', Item, purchaseReturnInvoice, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, purchaseReturnInvoice, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, purchaseReturnInvoice, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], purchaseReturnInvoice, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], purchaseReturnInvoice, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], purchaseReturnInvoice, product);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, purchaseReturnInvoice, product);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], purchaseReturnInvoice, product);
@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], purchaseReturnInvoice, product);
@defPropId(taxationVAT, 'Налогообложение', taxationVAT, purchaseReturnInvoice);

// sale return invoice
@extDocument(saleReturnInvoice, 'ВозвратТоваровОтПокупателя');
@defPropId(operation, 'ВидОперации', typeSaleReturnInvoice, saleReturnInvoice);
@defPropObject(currency, 'Валюта', Currency, saleReturnInvoice);
@defPropBoolean(includeVAT, 'СуммаВключаетНДС', saleReturnInvoice);
@defPropObject(department, 'Подразделение', Department, saleReturnInvoice);
@defPropObject(stock, 'Склад', Stock, saleReturnInvoice);
@defPropObject(partner, 'Контрагент', Partner, saleReturnInvoice);
@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, saleReturnInvoice);
@defPropObject(invoice, 'ДокументРеализации', SaleInvoice, saleReturnInvoice);
@defPropSimple(note, 'Комментарий', STRING, saleReturnInvoice);

@extTable(saleReturnInvoice, product);
@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, saleReturnInvoice, product);
@defPropObjectDetail(item, 'Номенклатура', Item, saleReturnInvoice, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, saleReturnInvoice, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, saleReturnInvoice, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], saleReturnInvoice, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], saleReturnInvoice, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], saleReturnInvoice, product);
@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, saleReturnInvoice, product);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], saleReturnInvoice, product);
@defPropSimpleDetail(sumCost, 'Себестоимость', NUMERIC[15,2], saleReturnInvoice, product);
@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], saleReturnInvoice, product);
//@defPropObjectDetail(specification, 'Характеристика', Specification, saleReturnInvoice, product, itemData);

// sale return order
//@extDocument(saleReturnOrder, 'ВозвратТоваровОтПокупателя');
//@defPropId(operation, 'ВидОперации', typeSaleReturnInvoice, saleReturnOrder);
//@defPropObject(currency, 'Валюта', Currency, saleReturnOrder);
//@defPropObject(stock, 'Склад', Stock, saleReturnOrder);
//@defPropObject(partner, 'Контрагент', Partner, saleReturnOrder);
//@defPropObject(settlements, 'ДанныеВзаиморасчетов', Settlement, saleReturnOrder);
//@defPropSimple(note, 'Комментарий', STRING, saleReturnOrder);
//
//@extTable(saleReturnOrder, product);
//@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, saleReturnOrder, product);
//@defPropObjectDetail(item, 'Номенклатура', Item, saleReturnOrder, product, itemData);
//@defPropObjectDetail(specification, 'Характеристика', Specification, saleReturnOrder, product, itemData);
//@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, saleReturnOrder, product);
//@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], saleReturnOrder, product);
//@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], saleReturnOrder, product);
//@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], saleReturnOrder, product);
//@defPropIdDetail(rateVat, 'СтавкаНДС', TypeVat, saleReturnOrder, product);
//@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], saleReturnOrder, product);
//@defPropSimpleDetail(sumCost, 'Себестоимость', NUMERIC[15,2], saleReturnOrder, product);
//@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], saleReturnOrder, product);

@extDocument(writeOffMaterial, 'ПередачаМатериаловВПроизводство');
@defPropSimple(note, 'Комментарий', STRING, writeOffMaterial);
@defPropObject(department, 'Подразделение', Department, writeOffMaterial);
@defPropObject(stock, 'Склад', Stock, writeOffMaterial);
@defPropSimple(reason, 'Основание', STRING, writeOffMaterial);

@extTable(writeOffMaterial, product);
@defPropObjectDetail(item, 'Номенклатура', Item, writeOffMaterial, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, writeOffMaterial, product, itemData);
@defPropSimpleDetail(idBarcode, 'Штрихкод', STRING[200], writeOffMaterial, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, writeOffMaterial, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], writeOffMaterial, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], writeOffMaterial, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], writeOffMaterial, product);
@defPropIdDetail(typeInventory, 'ТипЗапасов', TypeInventory, writeOffMaterial, product);
@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], writeOffMaterial, product);
@defPropObjectDetail(country, 'СтранаПроисхождения', Country, writeOffMaterial, product);

// write off  СписаниеНедостач
@extDocument(writeOff, 'СписаниеЗапасов');
@defPropSimple(note, 'Комментарий', STRING, writeOff);
@defPropObject(department, 'Подразделение', Department, writeOff);
@defPropObject(stock, 'Склад', Stock, writeOff);
@defPropSimple(reason, 'Основание', STRING, writeOff);

@extTable(writeOff, product);
@defPropObjectDetail(item, 'Номенклатура', Item, writeOff, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, writeOff, product, itemData);
@defPropSimpleDetail(idBarcode, 'Штрихкод', STRING[200], writeOff, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, writeOff, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], writeOff, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], writeOff, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], writeOff, product);
@defPropIdDetail(typeInventory, 'ТипЗапасов', TypeInventory, writeOff, product);
@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], writeOff, product);
@defPropObjectDetail(country, 'СтранаПроисхождения', Country, writeOff, product);

//--ОприходованиеТоваров
@extDocument(moveIn, 'ОприходованиеТоваров');
@defPropSimple(note, 'Комментарий', STRING, moveIn);
@defPropObject(department, 'Подразделение', Department, moveIn);
@defPropObject(stock, 'Склад', Stock, moveIn);
@defPropSimple(reason, 'Основание', STRING, moveIn);

@extTable(moveIn, product);
@defPropObjectDetail(item, 'Номенклатура', Item, moveIn, product, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, moveIn, product, itemData);
@defPropSimpleDetail(idBarcode, 'Штрихкод', STRING[200], moveIn, product, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, moveIn, product);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], moveIn, product);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], moveIn, product);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], moveIn, product);
@defPropIdDetail(typeInventory, 'ТипЗапасов', TypeInventory, moveIn, product);
@defPropSimpleDetail(declaration, 'НомерГТД', STRING[30], moveIn, product);
@defPropObjectDetail(country, 'СтранаПроисхождения', Country, moveIn, product);

// Сборка товаров
@extDocument(assembly, 'СборкаТоваров');

@defStaticType(typeAssembly, 'ВидыОперацийСборкаТоваров');

@defStaticTypeValue(typeAssembly, assembly, 'Сборка');

@defStaticTypeValue(typeAssembly, disassembly, 'Разборка');

@defPropId(operation, 'ВидОперации', typeAssembly, assembly);

@defPropSimple(note, 'Комментарий', STRING, assembly);

@defPropObject(stock, 'Склад', Stock, assembly);

@defPropObject(department, 'Подразделение', Department, assembly);

@defPropObject(item, 'Номенклатура', Item, assembly, itemData);

@defPropObject(uom, 'ЕдиницаИзмерения', UOM, assembly);

@defPropSimple(quantity, 'Количество', NUMERIC[15,3], assembly);

@defPropId(typeInventory, 'ТипЗапасов', typeInventory, assembly);

@extTable(assembly, product);

@defPropSimpleDetail(index, 'НомерСтрокиДокумента', INTEGER, assembly, product);

@defPropObjectDetail(item, 'Номенклатура', Item, assembly, product, itemData);

@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, assembly, product);

@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], assembly, product);

@defPropIdDetail(typeInventory, 'ТипЗапасов', TypeInventory, assembly, product);

// income cash orders
@extDocument(incomeCashOrderRetailSales, 'ПКОРозничнаяВыручка');
@defPropObject(currency, 'Валюта', Currency, incomeCashOrderRetailSales, commonData);
@defPropSimple(note, 'Комментарий', STRING, incomeCashOrderRetailSales);
@defPropSimple(reason, 'Основание', STRING, incomeCashOrderRetailSales);
@defPropSimple(takenFrom, 'ПринятоОт', STRING, incomeCashOrderRetailSales);
@defPropObject(stock, 'Склад', Stock, incomeCashOrderRetailSales);
@defPropBoolean(nonAutomatic, 'ВыручкаНТТ', incomeCashOrderRetailSales);

@defPropSimple(sum, 'Сумма', NUMERIC[15,2], incomeCashOrderRetailSales, commonData);
@defPropObject(department, 'Подразделение', Department, incomeCashOrderRetailSales, commonData);

@extDocument(incomeCashOrderInternal, 'ПКОВнутренняяПередача');
@defPropObject(currency, 'Валюта', Currency, incomeCashOrderInternal);
@defPropSimple(note, 'Комментарий', STRING, incomeCashOrderInternal);
@defPropSimple(reason, 'Основание', STRING, incomeCashOrderInternal);
@defPropSimple(takenFrom, 'ПринятоОт', STRING, incomeCashOrderInternal);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], incomeCashOrderInternal);

@extDocument(incomeCashOrderBank, 'ПКОПолучениеНаличныхВБанке');
@defPropObject(currency, 'Валюта', Currency, incomeCashOrderBank);
@defPropSimple(cashOrderOperation, 'ВидОперации', STRING, incomeCashOrderBank);
@defPropSimple(note, 'Комментарий', STRING, incomeCashOrderBank);
@defPropSimple(reason, 'Основание', STRING, incomeCashOrderBank);
@defPropSimple(takenFrom, 'ПринятоОт', STRING, incomeCashOrderBank);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], incomeCashOrderBank);

@extDocument(incomeCashOrderOther, 'ПКОПрочееПоступление');
@defPropObject(currency, 'Валюта', Currency, incomeCashOrderOther, commonData);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], incomeCashOrderOther, commonData);
@defPropSimple(note, 'Комментарий', STRING, incomeCashOrderOther, commonData);
@defPropSimple(reason, 'Основание', STRING, incomeCashOrderOther, commonData);
@defPropSimple(takenFrom, 'ПринятоОт', STRING, incomeCashOrderOther, commonData);
@defPropObject(department, 'Подразделение', Department, incomeCashOrderOther, commonData);
@extTable(incomeCashOrderOther, paymentDescription);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], incomeCashOrderOther, paymentDescription);

@extDocument(incomeCashOrderFromCashRegister, 'ПКОПоступлениеИзКассыККМ');
@defPropObject(currency, 'Валюта', Currency, incomeCashOrderFromCashRegister, commonData);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], incomeCashOrderFromCashRegister, commonData);
@defPropSimple(note, 'Комментарий', STRING, incomeCashOrderFromCashRegister, commonData);
@defPropObject(department, 'Подразделение', Department, incomeCashOrderFromCashRegister, commonData);
@defPropSimple(reason, 'Основание', STRING, incomeCashOrderFromCashRegister, commonData);
@defPropSimple(takenFrom, 'ПринятоОт', STRING, incomeCashOrderFromCashRegister, commonData);

@defPropObject(cashRegister, 'КассаККМ', CashRegister, incomeCashOrderFromCashRegister);

// outcome cash orders
@extDocument(outcomeCashOrderInternal, 'РКОВнутренняяПередача');
@defPropObject(currency, 'Валюта', Currency, outcomeCashOrderInternal);
@defPropSimple(issuedTo, 'Выдать', STRING, outcomeCashOrderInternal);
@defPropSimple(chiefAccounter, 'ГлавныйБухгалтер', STRING, outcomeCashOrderInternal);
@defPropSimple(note, 'Комментарий', STRING, outcomeCashOrderInternal);
@defPropSimple(paymentInformation, 'НазначениеПлатежа', STRING, outcomeCashOrderInternal);
@defPropObject(beneficiary, 'ОрганизацияПолучатель', Company, outcomeCashOrderInternal);
@defPropSimple(reason, 'Основание', STRING, outcomeCashOrderInternal);
@defPropSimple(document, 'ПоДокументу', STRING, outcomeCashOrderInternal);
@defPropSimple(appendix, 'Приложение', STRING, outcomeCashOrderInternal);
@defPropSimple(chief, 'Руководитель', STRING, outcomeCashOrderInternal);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderInternal);

@extDocument(outcomeCashOrderBank, 'РКОНаБанковскийСчет');
@defPropObject(currency, 'Валюта', Currency, outcomeCashOrderBank, commonData);
@defPropId(operation, 'ВидОперации', typeOutcomeCashOrderBank, outcomeCashOrderBank);
@defPropSimple(issuedTo, 'Выдать', STRING, outcomeCashOrderBank);
@defPropSimple(chiefAccounter, 'ГлавныйБухгалтер', STRING, outcomeCashOrderBank);
@defPropSimple(note, 'Комментарий', STRING, outcomeCashOrderBank);
@defPropSimple(paymentInformation, 'НазначениеПлатежа', STRING, outcomeCashOrderBank);

@defPropSimple(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderBank, commonData);
@defPropObject(department, 'Подразделение', Department, outcomeCashOrderBank, commonData);
@defPropSimple(reason, 'Основание', STRING, outcomeCashOrderBank);
@defPropSimple(document, 'ПоДокументу', STRING, outcomeCashOrderBank);
@defPropSimple(appendix, 'Приложение', STRING, outcomeCashOrderBank);
@defPropSimple(chief, 'Руководитель', STRING, outcomeCashOrderBank);

//CLASS ABSTRACT OutcomeCashOrderBankAdditionalDetails : OutcomeCashOrderBankDetail;
//
//isAdditionalDetails = ABSTRACT BOOLEAN (OutcomeCashOrderBankAdditionalDetails, Configuration);
//
//EXTEND FORM sendMessage  
//    OBJECTS outcomeCashOrderBankAdditionalDetails = OutcomeCashOrderBankAdditionalDetails EXTID 'Свойство' IN additionalDetails
//    FILTERS in(outcomeCashOrderBank, outcomeCashOrderBankAdditionalDetails, configuration), isAdditionalDetails(outcomeCashOrderBankAdditionalDetails, configuration)
//;
//
//outcomeCashOrderBankAdditionalDetails = DATA LOCAL INTEGER (INTEGER);
//calcIndexOutcomeCashOrderBankAdditionalDetails (INTEGER detailIndex, INTEGER docIndex) = PARTITION SUM 1 IF outcomeCashOrderBankAdditionalDetails(detailIndex) = docIndex ORDER detailIndex BY outcomeCashOrderBankAdditionalDetails(detailIndex);
//indexOutcomeCashOrderBankAdditionalDetails = DATA LOCAL INTEGER (INTEGER, INTEGER);
//
//EXTEND FORM receiveMessage
//    OBJECTS outcomeCashOrderBankAdditionalDetails = INTEGER EXTID 'Свойство' IN additionalDetails
//    FILTERS outcomeCashOrderBankAdditionalDetails(outcomeCashOrderBankAdditionalDetails) = outcomeCashOrderBank
//;


//@defPropSimpleDetail(name, 'Наименование', STRING, outcomeCashOrderBank, additionalDetails);

@extDocument(outcomeCashOrderOther, 'РКОПрочийРасход');
@defPropObject(currency, 'Валюта', Currency, outcomeCashOrderOther, commonData);
@defPropSimple(issuedTo, 'Выдать', STRING, outcomeCashOrderOther);
@defPropSimple(chiefAccounter, 'ГлавныйБухгалтер', STRING, outcomeCashOrderOther);
@defPropSimple(note, 'Комментарий', STRING, outcomeCashOrderOther);
@defPropSimple(paymentInformation, 'НазначениеПлатежа', STRING, outcomeCashOrderOther);
@defPropSimple(reason, 'Основание', STRING, outcomeCashOrderOther);
@defPropSimple(document, 'ПоДокументу', STRING, outcomeCashOrderOther);
@defPropSimple(appendix, 'Приложение', STRING, outcomeCashOrderOther);
@defPropSimple(chief, 'Руководитель', STRING, outcomeCashOrderOther);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderOther, commonData);
@defPropObject(department, 'Подразделение', Department, outcomeCashOrderOther, commonData);

@extTable(outcomeCashOrderOther, paymentDescription);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderOther, paymentDescription);


@defPropObject(recipientDepartment, 'ПодразделениеПолучатель', Department, outcomeCashOrderOther);

//-----------------

@extDocument(outcomeCashOrderOtherEx, 'РКОПрочаяВыдача');
@defPropObject(currency, 'Валюта', Currency, outcomeCashOrderOtherEx, commonData);
@defPropSimple(issuedTo, 'Выдать', STRING, outcomeCashOrderOtherEx);
@defPropSimple(chiefAccounter, 'ГлавныйБухгалтер', STRING, outcomeCashOrderOtherEx);
@defPropSimple(note, 'Комментарий', STRING, outcomeCashOrderOtherEx);
@defPropSimple(paymentInformation, 'НазначениеПлатежа', STRING, outcomeCashOrderOtherEx);
@defPropSimple(reason, 'Основание', STRING, outcomeCashOrderOtherEx);
@defPropSimple(document, 'ПоДокументу', STRING, outcomeCashOrderOtherEx);
@defPropSimple(appendix, 'Приложение', STRING, outcomeCashOrderOtherEx);
@defPropSimple(chief, 'Руководитель', STRING, outcomeCashOrderOtherEx);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderOtherEx, commonData);
@defPropObject(department, 'Подразделение', Department, outcomeCashOrderOtherEx, commonData);

@extTable(outcomeCashOrderOtherEx, paymentDescription);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderOtherEx, paymentDescription);

@defPropObject(recipientDepartment, 'ПодразделениеПолучатель', Department, outcomeCashOrderOtherEx);

//-- Документ.РКОВыплатаЗарплаты

@extDocument(outcomeCashOrderSalary, 'РКОВыплатаЗарплаты');
@defPropObject(currency, 'Валюта', Currency, outcomeCashOrderSalary, commonData);
@defPropSimple(issuedTo, 'Выдать', STRING, outcomeCashOrderSalary);
@defPropSimple(chiefAccounter, 'ГлавныйБухгалтер', STRING, outcomeCashOrderSalary);
@defPropSimple(note, 'Комментарий', STRING, outcomeCashOrderSalary);
@defPropSimple(paymentInformation, 'НазначениеПлатежа', STRING, outcomeCashOrderSalary);
@defPropSimple(reason, 'Основание', STRING, outcomeCashOrderSalary);
@defPropSimple(document, 'ПоДокументу', STRING, outcomeCashOrderSalary);
@defPropSimple(appendix, 'Приложение', STRING, outcomeCashOrderSalary);
@defPropSimple(chief, 'Руководитель', STRING, outcomeCashOrderSalary);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderSalary, commonData);
@defPropObject(department, 'Подразделение', Department, outcomeCashOrderSalary, commonData);

@extTable(outcomeCashOrderSalary, paymentDescription);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], outcomeCashOrderSalary, paymentDescription, settlementData);
@defProp(datePayroll, 'ДатаВедомостиНаВыплатуЗарплаты', DATE, outcomeCashOrderSalaryPaymentDescription);
datePayrollOutcomeCashOrderSalaryPaymentDescription 'ДатаВедомостиНаВыплатуЗарплаты' = DATA LOCAL DATE (INTEGER);
stringDatePayroll 'ДатаВедомостиНаВыплатуЗарплаты' (OutcomeCashOrderSalaryPaymentDescription outcomeCashOrderSalaryPaymentDescription, Configuration configuration) = dateTimeToString(datePayroll(outcomeCashOrderSalaryPaymentDescription, configuration));

EXTEND FORM sendMessage PROPERTIES stringDatePayroll(outcomeCashOrderSalaryPaymentDescription, configuration) IN settlementData EXTID 'ДатаВедомостиНаВыплатуЗарплаты';
EXTEND FORM receiveMessage PROPERTIES datePayrollOutcomeCashOrderSalaryPaymentDescription(outcomeCashOrderSalaryPaymentDescription) IN settlementData EXTID 'ДатаВедомостиНаВыплатуЗарплаты';

@defPropSimpleDetail(numberPayroll, 'НомерВедомостиНаВыплатуЗарплаты', STRING , outcomeCashOrderSalary, paymentDescription, settlementData);

@defPropSimpleDetail(workAgreement, 'ДоговорПодряда', STRING , outcomeCashOrderSalary, paymentDescription, settlementData);


// retail report
@extDocument(retailReport, 'ОтчетОРозничныхПродажах');
@defPropObject(currency, 'Валюта', Currency, retailReport);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], retailReport);
@defPropBoolean(includeVat, 'СуммаВключаетНДС', retailReport);
@defPropObject(department, 'Подразделение', Department, retailReport);
@defPropObject(stock, 'Склад', Stock, retailReport);
META defCashflowType(nm, class, extid)
    EXTEND FORM sendMessage
        OBJECTS nm###class = CashflowType EXTID extid
        PROPERTIES(nm###class, configuration) name EXTID 'Наименование'
        FILTERS nm###class = nm(class, configuration)
    ;
END
@defPropObject(cashflowType, 'СтатьяДДС', CashflowType, retailReport);
@defPropSimple(note, 'Комментарий', STRING, retailReport);
@defPropObject(retailReport, 'ДокументРеализации', RetailReport, saleReturnInvoice);
//Продажа
@extTable(retailReport, productSale);
@defPropObjectDetail(item, 'Номенклатура', Item, retailReport, productSale, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, retailReport, productSale, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, retailReport, productSale);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], retailReport, productSale);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], retailReport, productSale);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], retailReport, productSale);
@defPropSimpleDetail(pricePack, 'ЦенаЗаУпаковку', NUMERIC[15,2], retailReport, productSale);
@defPropSimpleDetail(quantityPack, 'КоличествоУпаковок', NUMERIC[15,3], retailReport, productSale);
@defPropIdDetail(vat, 'СтавкаНДС', TypeVat, retailReport, productSale);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], retailReport, productSale);
@defPropSimpleDetail(cost, 'Себестоимость', NUMERIC[15,2], retailReport, productSale);
//Возврат
@extTable(retailReport, productReturn);
@defPropObjectDetail(item, 'Номенклатура', Item, retailReport, productReturn, itemData);
@defPropObjectDetail(specification, 'Характеристика', Specification, retailReport, productReturn, itemData);
@defPropObjectDetail(uom, 'ЕдиницаИзмерения', UOM, retailReport, productReturn);
@defPropSimpleDetail(quantity, 'Количество', NUMERIC[15,3], retailReport, productReturn);
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], retailReport, productReturn);
@defPropSimpleDetail(price, 'Цена', NUMERIC[15,2], retailReport, productReturn);
@defPropSimpleDetail(pricePack, 'ЦенаЗаУпаковку', NUMERIC[15,2], retailReport, productReturn);
@defPropSimpleDetail(quantityPack, 'КоличествоУпаковок', NUMERIC[15,3], retailReport, productReturn);
@defPropIdDetail(vat, 'СтавкаНДС', TypeVat, retailReport, productReturn);
@defPropSimpleDetail(sumVat, 'СуммаНДС', NUMERIC[15,2], retailReport, productReturn);
@defPropSimpleDetail(cost, 'Себестоимость', NUMERIC[15,2], retailReport, productReturn);

META defRetailReportDetail(nm, class, table, extid, group)
    EXTEND FORM sendMessage
        OBJECTS nm###class###table = RetailReport  EXTID extid
        PROPERTIES(nm###class###table, configuration) sendUid EXTID 'Ссылка', dateTimeString EXTID 'Дата', id EXTID 'Номер'
        FILTERS nm###class###table = nm(class###table, configuration)
    ;

    uid###nm###class###table 'Ссылка' = DATA LOCAL ISTRING[36] (INTEGER);
    fullName###nm###class###table 'НаименованиеПолное' = DATA LOCAL STRING (INTEGER);
    id###nm###class###table 'КодВПрограмме' = DATA LOCAL ISTRING[36] (INTEGER);
    article###nm###class###table 'Артикул' = DATA LOCAL STRING (INTEGER);
    name###nm###class###table 'Наименование' = DATA LOCAL STRING (INTEGER);

    EXTEND FORM receiveMessage
        PROPERTIES (class###table) IN item uid###nm###class###table EXTID 'Ссылка', fullName###nm###class###table  EXTID 'НаименованиеПолное', id###nm###class###table EXTID 'КодВПрограмме', article###nm###class###table EXTID 'Артикул', name###nm###class###table EXTID 'Наименование'
    ;
END

@defPropObjectDetail(retailReportReturn, 'ОтчетОРозничныхПродажах', RetailReport, retailReport, productReturn);

EXTEND FORM sendMessage
    OBJECTS companyReturnRetailReportReturnProductReturn = Partner EXTID 'Организация'
    PROPERTIES(companyReturnRetailReportReturnProductReturn, configuration) sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS companyReturnRetailReportReturnProductReturn = company(retailReportReturnRetailReportProductReturn, configuration)
;

//--
@extTable(retailReport, paymentCard);
@defPropSimpleDetail(sum, 'СуммаОплаты', NUMERIC[15,2], retailReport, paymentCard);
@defPropSimpleDetail(typeCard, 'ВидКарты', STRING, retailReport, paymentCard);
@defPropSimpleDetail(cardNum, 'НомерКарты', STRING, retailReport, paymentCard);
@defPropObjectDetail (acquirer, 'Эквайер', Partner, retailReport, paymentCard);

//giftCard payments
@extTable(retailReport, paymentGiftCard);

@defPropDetail(giftCardNum, 'СерийныйНомер', STRING, retailReport, paymentGiftCard);

@defPropDetail(sum, 'Сумма', NUMERIC[15,2], retailReport, paymentGiftCard);
@defPropDetail(barcode, 'Штрихкод', STRING, retailReport, paymentGiftCard);

EXTEND FORM sendMessage
    PROPERTIES (retailReportPaymentGiftCard, configuration) giftCardNum EXTID 'СерийныйНомер' IN paymentGiftCardInfo,
        barcode EXTID 'Штрихкод' IN paymentGiftCardInfo,
        sum EXTID 'Сумма'
;

EXTEND FORM receiveMessage
    PROPERTIES (retailReportPaymentGiftCard) giftCardNumRetailReportPaymentGiftCard EXTID 'СерийныйНомер',
        sumRetailReportPaymentGiftCard EXTID 'Сумма'
;

@defPropDetail(giftCardType, 'ВидПодарочногоСертификата', GiftCardType, retailReport, paymentGiftCard);

EXTEND FORM sendMessage
    OBJECTS giftCardTypeRetailReportPaymentGiftCard = GiftCardType EXTID 'ВидПодарочногоСертификата' IN paymentGiftCardInfo
    PROPERTIES(giftCardTypeRetailReportPaymentGiftCard, configuration)  sendUid EXTID 'Ссылка', denomination EXTID 'Номинал'
    FILTERS giftCardTypeRetailReportPaymentGiftCard = giftCardType(retailReportPaymentGiftCard, configuration)
;

//@defCurrency(currency, giftCardTypeRetailReportPaymentGiftCard, 'Валюта'){
//    EXTEND FORM sendMessage
//        OBJECTS currencyGiftCardTypeRetailReportPaymentGiftCard = Currency EXTID 'Валюта' 
//        PROPERTIES(currencyGiftCardTypeRetailReportPaymentGiftCard, configuration) id EXTID 'Код', name EXTID 'Наименование'
//        FILTERS currencyGiftCardTypeRetailReportPaymentGiftCard = currency(giftCardTypeRetailReportPaymentGiftCard, configuration)
//    ;
//};

EXTEND FORM sendMessage
    OBJECTS currencyGiftCardTypeRetailReportPaymentGiftCard = Currency EXTID 'Валюта'
    PROPERTIES(currencyGiftCardTypeRetailReportPaymentGiftCard, configuration) id EXTID 'Код', name EXTID 'Наименование'
    FILTERS currencyGiftCardTypeRetailReportPaymentGiftCard = currency(giftCardTypeRetailReportPaymentGiftCard, configuration)

    PROPERTIES(giftCardTypeRetailReportPaymentGiftCard, configuration) partPayment EXTID 'РазрешитьЧастичнуюОплату'
;

//giftCard sales
@extTable(retailReport, giftCard);
@defPropDetail(giftCardNum, 'СерийныйНомер', STRING, retailReport, giftCard);
EXTEND FORM sendMessage
    PROPERTIES (retailReportGiftCard, configuration) giftCardNum EXTID 'СерийныйНомер' IN giftCardnfo
;

EXTEND FORM receiveMessage
    PROPERTIES (retailReportGiftCard) giftCardNumRetailReportGiftCard EXTID 'СерийныйНомер'
;
@defPropSimpleDetail(sum, 'Сумма', NUMERIC[15,2], retailReport, giftCard);

@extTable(retailReport, giftCardPaymentCard);
@defPropSimpleDetail(sum, 'СуммаОплаты', NUMERIC[15,2], retailReport, giftCardPaymentCard);
@defPropSimpleDetail(cardNum, 'НомерКарты', STRING, retailReport, giftCardPaymentCard);
@defPropObjectDetail (acquirer, 'Эквайер', Partner, retailReport, giftCardPaymentCard);

// income exchange payment
@extDocument(incomePaymentExchange, 'ПБДСКонвертацияВалюты');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, incomePaymentExchange);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, incomePaymentExchange);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, incomePaymentExchange);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, incomePaymentExchange);
@defPropId(settlement, 'ВидРасчетов', typeSettlement, incomePaymentExchange);
@defPropObject(partner, 'Контрагент', Partner, incomePaymentExchange);

// income other payment
@extDocument(incomePaymentOther, 'ПБДСПрочееПоступление');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, incomePaymentOther);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, incomePaymentOther);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, incomePaymentOther);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, incomePaymentOther);
@defPropId(settlement, 'ВидРасчетов', typeSettlement, incomePaymentOther);
@defPropObject(partner, 'Контрагент', Partner, incomePaymentOther);

// income profit payment
@extDocument(incomePaymentProfit, 'ПБДСПрочиеДоходы');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, incomePaymentProfit);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, incomePaymentProfit);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, incomePaymentProfit);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, incomePaymentProfit);
@defPropId(settlement, 'ВидРасчетов', typeSettlement, incomePaymentProfit);
@defPropObject(partner, 'Контрагент', Partner, incomePaymentProfit);

// income partner payment
@extDocument(incomePaymentPartner, 'ПБДСРасчетыСКонтрагентами');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, incomePaymentPartner);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, incomePaymentPartner);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, incomePaymentPartner);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, incomePaymentPartner);
@defPropId(settlement, 'ВидРасчетов', typeSettlement, incomePaymentPartner);
@defPropObject(partner, 'Контрагент', Partner, incomePaymentPartner);

// income employee payment
@extDocument(incomePaymentEmployee, 'ПБДСРасчетыССотрудниками');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, incomePaymentEmployee);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, incomePaymentEmployee);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, incomePaymentEmployee);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, incomePaymentEmployee);
@defPropId(settlement, 'ВидРасчетов', typeSettlement, incomePaymentEmployee);
@defPropObject(partner, 'Контрагент', Partner, incomePaymentEmployee);

// income card payment
@extDocument(incomePaymentCard, 'ПБДСПоПлатежнымКартам');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, incomePaymentCard);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, incomePaymentCard);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, incomePaymentCard);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, incomePaymentCard);
@defPropId(settlement, 'ВидРасчетов', typeSettlement, incomePaymentCard);
@defPropObject(partner, 'Контрагент', Partner, incomePaymentCard);

// outcome exchange payment
@extDocument(outcomePaymentExchange, 'СБДСКонвертацияВалюты');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentExchange);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentExchange);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentExchange);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentExchange);
@defPropObject(partner, 'Контрагент', Partner, outcomePaymentExchange);

// outcome internal payment
@extDocument(outcomePaymentInternal, 'СБДСПереводНаДругойСчет');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentInternal);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentInternal);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentInternal);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentInternal);

// outcome salary payment
@extDocument(outcomePaymentSalary, 'СБДСПеречислениеЗаработнойПлаты');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentSalary);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentSalary);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentSalary);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentSalary);
@defPropObject(partner, 'Контрагент', Partner, outcomePaymentSalary);

// outcome personal account payment
@extDocument(outcomePaymentPersonalAccount, 'СБДСПеречислениеЗаработнойПлатыНаЛицевыеСчета');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentPersonalAccount);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentPersonalAccount);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentPersonalAccount);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentPersonalAccount);

// outcome other payment
@extDocument(outcomePaymentOther, 'СБДСПрочееСписание');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentOther);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentOther);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentOther);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentOther);
@defPropId(typeOperation, 'ВидОперации', typeOutcomePayment, outcomePaymentOther);
@defPropObject(partner, 'Контрагент', Partner, outcomePaymentOther);

// outcome budget payment
@extDocument(outcomePaymentBudget, 'СБДСПлатежиВБюджет');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentBudget);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentBudget);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentBudget);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentBudget);
@defPropObject(partner, 'Контрагент', Partner, outcomePaymentBudget);

// outcome expenses payment
@extDocument(outcomePaymentExpenses, 'СБДСПрочиеРасходы');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentExpenses);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentExpenses);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentExpenses);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentExpenses);
@defPropId(typeOperation, 'ВидОперации', typeOutcomePayment, outcomePaymentExpenses);
@defPropObject(partner, 'Контрагент', Partner, outcomePaymentExpenses);

// outcome partner payment
@extDocument(outcomePaymentPartner, 'СБДСРасчетыСКонтрагентами');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentPartner);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentPartner);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentPartner);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, paymentOptions, outcomePaymentPartner);
@defPropObject(partner, 'Контрагент', Partner, outcomePaymentPartner);

// outcome employee payment
@extDocument(outcomePaymentEmployee, 'СБДСРасчетыССотрудниками');
@defKeyPropSimple(dateStatement, 'ДатаВыписки', DATE, commonData, outcomePaymentEmployee);
@defKeyPropSimple(sum, 'Сумма', DATE, commonData, outcomePaymentEmployee);
@defKeyPropSimple(note, 'Комментарий', DATE, commonData, outcomePaymentEmployee);
@defKeyPropSimple(purpose, 'НазначениеПлатежа', DATE, commonData, outcomePaymentEmployee);
@defPropObject(partner, 'Контрагент', Partner, outcomePaymentEmployee);

//payment order
@extDocument(paymentOrder, 'ПлатежноеПоручение');
@defProp(companyBankAccount, 'БанковскийСчетОрганизации', BankAccount, PaymentOrder);
EXTEND FORM sendMessage
    OBJECTS companyBankAccountPaymentOrder = BankAccount EXTID 'БанковскийСчетОрганизации'
    PROPERTIES (companyBankAccountPaymentOrder, configuration) sendUid EXTID 'Ссылка', number EXTID 'НомерСчета'
    FILTERS companyBankAccountPaymentOrder = companyBankAccount(paymentOrder, configuration)
;
@defBank(bank, companyBankAccountPaymentOrder)
    ;
GROUP companyLink  EXTID 'ОрганизацииСсылка';
EXTEND FORM sendMessage
    OBJECTS ownerCompanyBankAccountPaymentOrder = Partner EXTID 'Владелец'
    PROPERTIES(ownerCompanyBankAccountPaymentOrder, configuration) IN companyLink sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS ownerCompanyBankAccountPaymentOrder = owner(companyBankAccountPaymentOrder, configuration)
;
@defPropObject(partner, 'Контрагент', Partner, paymentOrder);
EXTEND FORM receiveMessage
    OBJECTS ownerPartnerBankAccountPaymentOrder = INTEGER EXTID 'Владелец'
;
@defPropObject(partnerBankAccount, 'БанковскийСчет', BankAccount, paymentOrder);
// todo -  попробовать сделать метакодом в общем случае
//GROUP partnerLink  EXTID 'КонтрагентыСсылка';
//EXTEND FORM sendMessage
//    OBJECTS ownerPartnerBankAccountPaymentOrder = Partner EXTID 'Владелец'
//    PROPERTIES(ownerPartnerBankAccountPaymentOrder) IN partnerLink sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
//    FILTERS ownerPartnerBankAccountPaymentOrder = owner(partnerBankAccountPaymentOrder)
//;

@defPropObject(paymentDetail, 'РеквизитыПлатежа', PaymentDetail, paymentOrder);
@defPropObject(currency, 'Валюта', Currency, paymentOrder);
@defPropSimple(sum, 'Сумма', NUMERIC[15,2], paymentOrder);
@defPropObject(contract, 'Договор', Contract, paymentOrder);
@defPropSimple(note, 'Комментарий', STRING, paymentOrder);
@defPropSimple(textPayer, 'ТекстПлательщика', STRING, paymentOrder);
@defPropSimple(textBeneficiary, 'ТекстПолучателя', STRING, paymentOrder);
@defPropSimple(innPayer, 'ИННПлательщика', STRING[12], paymentOrder);
@defPropSimple(kppPayer, 'КПППлательщика', STRING[12], paymentOrder);
@defPropSimple(innBeneficiary, 'ИННПолучателя', STRING[12], paymentOrder);
@defPropSimple(kppBeneficiary, 'КПППолучателя', STRING[12], paymentOrder);

//------------------------ расширяем формы -------------------//

EXTEND FORM receiveMessage
    OBJECTS ownerBankAccountPartner = INTEGER EXTID 'Владелец'
;
@defPropObject(bankAccount, 'ОсновнойБанковскийСчет', BankAccount, partner);
bankBankAccountPartner = DATA LOCAL INTEGER (INTEGER);
ownerBankAccountPartner = DATA LOCAL INTEGER (INTEGER);

EXTEND FORM receiveMessage
    FILTERS  bankBankAccountPartner(bankBankAccountPartner)==bankAccountPartner
    FILTERS ownerBankAccountPartner AND NOT TRUE // т.к. нужны свойства в отдельной группе
    OBJECTS ownerBankAccountPartnerEx = INTEGER EXTID 'Владелец'
    PROPERTIES (ownerBankAccountPartnerEx) IN counterparties uidPartnerBankAccountPartner  EXTID 'Ссылка', namePartnerBankAccountPartner EXTID 'Наименование', fullNamePartnerBankAccountPartner EXTID 'НаименованиеПолное', innPartnerBankAccountPartner EXTID 'ИНН', kppPartnerBankAccountPartner EXTID 'КПП'
    FILTERS ownerBankAccountPartner(ownerBankAccountPartnerEx)==bankAccountPartner
;

EXTEND FORM sendMessage
    FILTERS ownerBankAccountPartner AND NOT TRUE
    OBJECTS ownerBankAccountPartnerEx = Partner EXTID 'Владелец'
    PROPERTIES(ownerBankAccountPartnerEx, configuration) IN counterparties sendUid EXTID 'Ссылка', name EXTID 'Наименование', fullName EXTID 'НаименованиеПолное', inn EXTID 'ИНН', kpp EXTID 'КПП', idType EXTID 'ЮридическоеФизическоеЛицо'
    FILTERS ownerBankAccountPartnerEx = owner(bankAccountPartner, configuration)
;

