MODULE TerminalHandlerLot;

REQUIRE TerminalHandler, TerminalLot;

NAMESPACE TerminalHandler;

overProcessMarking ABSTRACT LIST (TerminalDocumentDetail, TerminalLotDetail, INTEGER);

skipCreateLot = ABSTRACT BOOLEAN (STRING); 

process (TerminalDocument document) + {
    DELETE TerminalLotDetail l WHERE terminalDocument(terminalDocumentDetail(l)) == document;

    FOR marking(TerminalDocumentDetail d) AND terminalDocument(d) == document AND count(INTEGER i, jsonArrayLength(marking(d))) 
        AND STRING mark = jsonArrayElement(marking(d), i, 'id') AND NOT skipCreateLot(mark) DO NEW l = TerminalLotDetail {
        id(l) <- STRING[200](barcodeToId(mark));
        tail(l) <- STRING[200](barcodeToTail(mark));
        quantity(l) <- NUMERIC[14,3](jsonArrayElement(marking(d), i, 'quantity'));
        idParent(l) <- STRING[200](jsonArrayElement(marking(d), i, 'parent'));
        terminalDocumentDetail(l) <- d;
        overProcessMarking(d, l, i);
    }
}

in(Sku s, Stock st, TerminalBarcodeFlags f) += WHEN lotType(s) AND st IS Stock AND f == TerminalBarcodeFlags.goodMarking THEN TRUE;

lotInfo = ABSTRACT CASE ISTRING (STRING, INTEGER );
lotInfo(STRING str, INTEGER order) += WHEN order == 100 AND lot(str) THEN 'Марка найдена: ' + idBarcodeSku(lot(str)) + ' ' + nameSku(lot(str));

lotInfo(STRING s) = GROUP CONCAT lotInfo(s, INTEGER o), '' ORDER o;

//
sendAllLots 'Загружать в терминал все марки' = DATA BOOLEAN () PREREAD;
EXTEND FORM options
    PROPERTIES() sendAllLots;
DESIGN options {
    terminalServer {
        MOVE PROPERTY(sendAllLots());
    }
}

filter(Lot l, Stock st, Employee e) += l IS Lot AND st IS Stock AND e IS Employee
    AND (currentBalance(l) OR NOT batch(l)) AND sendAllLots();

EXTEND FORM terminalDocument
    PROPERTIES(tld) tail
;