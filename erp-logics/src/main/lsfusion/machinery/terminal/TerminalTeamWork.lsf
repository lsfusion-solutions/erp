MODULE TerminalTeamWork;

REQUIRE Terminal, System;

NAMESPACE Terminal;


CLASS TeamWorkDocument 'Документ совместной приемки';
TABLE teamWorkDocument (TeamWorkDocument);

TABLE teamWorkDocumentId(ISTRING[1000]) NODEFAULT;
TABLE teamWorkDocumentBarcode(TeamWorkDocument, STRING);

id 'Код' = DATA STRING[100] (TeamWorkDocument) IN id INDEXED CHARWIDTH 10;
teamWorkDocument (id) = GROUP AGGR (TeamWorkDocument td) BY id (td) MATERIALIZED TABLE teamWorkDocumentId;

number 'Имя' = DATA STRING[100] (TeamWorkDocument) IN base CHARWIDTH 20;
comment 'Комментарий' = DATA STRING[100] (TeamWorkDocument) IN base CHARWIDTH 20;
quantity 'Количество' = DATA NUMERIC[14,3] (TeamWorkDocument) IN base;

used 'Использован' (teamWorkDocument) = DATA BOOLEAN (TeamWorkDocument) IN base;
notUsed 'Неиспользован' (TeamWorkDocument teamWorkDocument) = teamWorkDocument IS TeamWorkDocument AND NOT used(teamWorkDocument) MATERIALIZED INDEXED;

createdUser = DATA CustomUser (TeamWorkDocument);
createdNameUser 'Создан пользователем' (TeamWorkDocument td) = name[Contact](createdUser(td)) CHARWIDTH 10 IN created;

createdTime 'Время создания'= DATA DATETIME (TeamWorkDocument) IN created;
createdTime (TeamWorkDocument o) <- currentDateTime() WHEN SET(o IS TeamWorkDocument);

stock = DATA Stock (TeamWorkDocument) INDEXED;
nameStock 'Склад' (TeamWorkDocument document) = name(stock (document)) IN documentHeader;

terminalDocumentType = DATA TerminalDocumentType (TeamWorkDocument) INDEXED;
nameTerminalDocumentType 'Тип документа' (TeamWorkDocument d) = name(terminalDocumentType(d));
idTerminalDocumentType 'Тип документа' (TeamWorkDocument d) = id(terminalDocumentType(d));

numberOrders 'Заказы' = DATA STRING (TeamWorkDocument) IN base;

CLASS TeamWorkDocumentDetail 'Строка документа совместной приемки';
TABLE teamWorkDocumentDetail (TeamWorkDocumentDetail);

id 'Код' = DATA STRING[100] (TeamWorkDocumentDetail) IN id INDEXED CHARWIDTH 10;
user = DATA CustomUser  (TeamWorkDocumentDetail);
nameUser 'Пользователель' (TeamWorkDocumentDetail td) = name[Contact](user(td)) CHARWIDTH 10;

teamWorkDocument = DATA TeamWorkDocument(TeamWorkDocumentDetail) NONULL DELETE INDEXED;

@defineDocumentTimePrefix(teamWorkDocument, , ' документа');
@deriveDocumentHeaderTimePrefix(TeamWorkDocument, );


number 'Номер' = DATA INTEGER (TeamWorkDocumentDetail) IN base;

barcode 'Штрихкод' = DATA STRING[30] (TeamWorkDocumentDetail) IN base;
quantity 'Количество' = DATA NUMERIC[14,3] (TeamWorkDocumentDetail) IN base;
quantity = GROUP SUM quantity(TeamWorkDocumentDetail d) BY teamWorkDocument(d), barcode(d) MATERIALIZED;
price 'Цена' = DATA NUMERIC[16,4] (TeamWorkDocumentDetail) IN base;
sum 'Сумма' = DATA NUMERIC[18,4] (TeamWorkDocumentDetail) IN base;
sum(TeamWorkDocumentDetail d) <- round2(quantity(d) * price(d)) WHEN CHANGED(quantity(d)) OR CHANGED(price(d));

comment 'Комментарий' = DATA STRING[100] (TeamWorkDocumentDetail) IN base;
dateTimeScan 'Время сканирования' = DATA DATETIME (TeamWorkDocumentDetail) IN base;

extraDate1 'Дата 1' = DATA DATE (TeamWorkDocumentDetail) IN base;
extraDate2 'Дата 2' = DATA DATE (TeamWorkDocumentDetail) IN base;
extraField1 'Поле 1' = DATA STRING[100] (TeamWorkDocumentDetail) IN base;
extraField2 'Поле 2' = DATA STRING[100] (TeamWorkDocumentDetail) IN base;
extraField3 'Поле 3' = DATA STRING[100] (TeamWorkDocumentDetail) IN base;
extraQuantity 'Доп. количество' = DATA NUMERIC[14,3] (TeamWorkDocumentDetail) IN base;
extraQuantity = GROUP SUM extraQuantity(TeamWorkDocumentDetail d) BY teamWorkDocument(d), barcode(d) MATERIALIZED;
marking 'Маркировка' = DATA STRING (TeamWorkDocumentDetail) IN base;
ana1 'Аналитика 1' = DATA STRING (TeamWorkDocumentDetail) IN base;
ana2 'Аналитика 2' = DATA STRING (TeamWorkDocumentDetail) IN base;
image 'Изображение' = DATA IMAGEFILE (TeamWorkDocumentDetail) IN base;

sku = DATA Sku (TeamWorkDocumentDetail) INDEXED;
nameSku 'Наименование товара' (TeamWorkDocumentDetail d) = name(sku(d));
idSku 'Код товара' (TeamWorkDocumentDetail d) = id(sku(d));
nameUOMSku 'Ед. изм.' (TeamWorkDocumentDetail d) = nameUOM(sku(d));
dataName 'Наименование' = DATA STRING[200] (TeamWorkDocumentDetail);
name 'Наименование' (TeamWorkDocumentDetail d) = OVERRIDE dataName(d), nameSku(d) IN base;


WHEN LOCAL SETCHANGED(barcode(TeamWorkDocumentDetail d)) DO {
    sku(d) <- OVERRIDE skuBarcode(barcode(d)), sku(barcode(d));
}

@defineDocumentHeaderClosed(TeamWorkDocument);
INDEX isOpened(TeamWorkDocument o), o;

@defineDocumentHeaderCount(teamWorkDocument);
@defineDocumentHeaderQuantity(teamWorkDocument);
sumTeamWorkDocumentDetail '{document.sum.of}' (teamWorkDocument) = GROUP SUM sum(TeamWorkDocumentDetail idetail) BY teamWorkDocument(idetail) CHARWIDTH 10 MATERIALIZED IN documentSum;

// ----------------------------------------------- Формы документов ------------------------------------------ //

FORM teamWorkDocument 'Документ совместной приемки'
    OBJECTS td=TeamWorkDocument PANEL
    PROPERTIES(td)  id, nameStock, date, time, number, numberOrders, nameTerminalDocumentType, comment, quantity, 
        sumTeamWorkDocumentDetail, used, createdNameUser READONLY

    OBJECTS tdd = TeamWorkDocumentDetail
    PROPERTIES(tdd) id, number, nameUser, barcode, name, quantity, price, sum, comment, dateTimeScan, extraQuantity,
        extraDate1, extraDate2, extraField1, extraField2, extraField3, ana1, ana2, image,
        NEW, deletetdd = DELETE GRID

    FILTERS teamWorkDocument(tdd) == td

    EDIT TeamWorkDocument OBJECT td;
;

DESIGN teamWorkDocument {
    OBJECTS {
        BOX(td){
            type = CONTAINERV;

            NEW row1 {
                type = CONTAINERH;
                MOVE PROPERTY(id(td));
                MOVE PROPERTY(number(td));
                MOVE PROPERTY(numberOrders(td));
                MOVE PROPERTY(comment(td));
                MOVE PROPERTY(createdNameUser(td));
            }
            NEW row2 {
                type = CONTAINERH;
                MOVE PROPERTY(quantity(td));
                MOVE PROPERTY(sumTeamWorkDocumentDetail(td));
                MOVE PROPERTY(used(td));
            }
        }
        MOVE BOX(tdd);
    }
}

backgroundTeamWorkDocumentDetail = ABSTRACT CASE COLOR (TeamWorkDocumentDetail);

FORM teamWorkDocuments 'Документы совместной приемки' AUTOREFRESH 60
    OBJECTS td=TeamWorkDocument
    PROPERTIES(td) READONLY id, date, time, number, numberOrders, nameTerminalDocumentType, comment, quantity, 
        countTeamWorkDocumentDetail, quantityTeamWorkDocumentDetail, sumTeamWorkDocumentDetail, createdNameUser PANEL, createdTime PANEL
    PROPERTIES(td)  NEWSESSION NEW, EDIT, DELETE
    PROPERTIES (td) close SHOWIF isOpened(td), open SHOWIF isClosed(td)

    OBJECTS tdd=TeamWorkDocumentDetail
    PROPERTIES(tdd) READONLY BACKGROUND backgroundTeamWorkDocumentDetail(tdd) id, number, nameUser, barcode, name, quantity, price, sum,
        comment, dateTimeScan, extraQuantity, extraDate1, extraDate2, extraField1, extraField2, extraField3, ana1, ana2, image

    FILTERS teamWorkDocument(tdd) == td
    FILTERGROUP filterUse
        FILTER 'Неиспользованные' notUsed(td) 'F10' DEFAULT

    FILTERGROUP open FILTER 'Открыт' isOpened(td) 'F6' DEFAULT
;

@extendFormFilterAccessStock(TeamWorkDocument, td, teamWorkDocuments, stock, company);

NAVIGATOR {
    terminalNavigator {
        NEW teamWorkDocuments;
    }
    
}

error = DATA LOCAL NESTED STRING();

id = GROUP MAX id(TeamWorkDocumentDetail d) BY user(d), teamWorkDocument(d), barcode(d);
quantity = GROUP SUM quantity(TeamWorkDocumentDetail d) BY user(d), teamWorkDocument(d), barcode(d);
extraQuantity = GROUP SUM extraQuantity(TeamWorkDocumentDetail d) BY user(d), teamWorkDocument(d), barcode(d);
detail = GROUP MAX TeamWorkDocumentDetail d BY teamWorkDocument(d), barcode(d);

GROUP document;

FORM exportTeamWork
    PROPERTIES error()

    OBJECTS user = CustomUser PANEL
    
    OBJECTS document = TeamWorkDocument 
    PROPERTIES (document) IN document id, dateTime EXTID 'date', number, terminalDocumentType EXTID 'vop', comment, numberOrders
    
    OBJECTS  barcode = STRING EXTID 'detail'
    PROPERTIES  id = id(user, document, barcode) , 
                barcode = VALUE(barcode), 
                field1 = extraField1(detail(document, barcode)), 
                field2 = extraField2(detail(document, barcode)), 
                field3 = extraField3(detail(document, barcode)), 
                ana1 = ana1(detail(document, barcode)), 
                ana2 = ana2(detail(document, barcode)), 
                comment = comment(detail(document, barcode)), 
                quantity = quantity(document, barcode), 
                extraQuantity = extraQuantity(document, barcode), 
                quantitySelf = quantity(user, document, barcode), 
                extraQuantitySelf = extraQuantity(user, document, barcode), 
                price = price(detail(document, barcode)), 
                date1 = extraDate1(detail(document, barcode)), 
                date2 = extraDate2(detail(document, barcode))
    FILTERS quantity(document, barcode)
;


process(INTEGER command, FILE file, CustomUser user, STRING[100] idStock) {

    fileToString(file);
    logToFile('terminal', 'file: ' + resultString());
    
    CASE
    WHEN command == 1 THEN { //создание документа
        
        LOCAL id, number, vop, comment, numberOrders = STRING ();
        LOCAL date = DATETIME ();
        IMPORT JSON FROM file TO () id, date, number, vop, comment, numberOrders

        IF teamWorkDocument(id()) THEN {
            EXPORT JSON FROM error = 'Документ уже присутствует в системе';
        } ELSE {
            NEW t = TeamWorkDocument {
                id(t) <- id();
                date(t) <- DATE(date());
                time(t) <- TIME(date());
                number(t) <- number();
                terminalDocumentType(t) <- terminalDocumentType(vop());
                comment(t) <- comment();
                numberOrders(t) <- numberOrders();
                stock(t) <- OVERRIDE stock(idStock), stock(user);
                createdUser(t) <- user;
            }
            APPLY;
        }
    }
    WHEN command == 2 THEN { //список доступных документов
        EXPORT JSON FROM id(TeamWorkDocument d), date = dateTime(d), number(d), vop = idTerminalDocumentType(d), comment(d), numberOrders(d)
            WHERE stock(d) == (OVERRIDE stock(idStock), stock(user)) AND notUsed(d);
    }
    WHEN command == 3 THEN { //закрытие документа
        LOCAL id = STRING ();
        IMPORT JSON FROM file TO () id;
        
        used(TerminalDocument d) <- TRUE WHERE id(d) == id();
        APPLY;
    }
    WHEN command == 4 THEN { //добавление строки
        LOCAL idDocument, id, barcode, field1, field2, field3, ana1, ana2, comment = STRING ();
        LOCAL quantity, extraQuantity, price, quantityMax = NUMERIC ();
        LOCAL date1, date2 = DATE ();
        IMPORT JSON FROM file TO () idDocument, id, barcode, field1, field2, field3, ana1, ana2, comment, quantity, extraQuantity, price, quantityMax, date1, date2
        
        error() <- NULL;
        APPLY NESTED LOCAL {
            IF (quantity(teamWorkDocument(idDocument()), barcode()) (+) quantity()) > quantityMax() THEN {
               error() <- 'Количество превышает максимальное, уже принято: ' + (OVERRIDE quantity(teamWorkDocument(idDocument()), barcode()), 0) 
                   + ', максимальное: ' + quantityMax();
            } ELSE {
                NEW d = TeamWorkDocumentDetail {
                    teamWorkDocument(d) <- teamWorkDocument(idDocument());
                    user(d) <- user;
                    id(d) <- id();
                    barcode(d) <- barcode();
                    extraField1(d) <- field1();
                    extraField2(d) <- field2();
                    extraField3(d) <- field3();
                    ana1(d) <- ana1();
                    ana2(d) <- ana2();
                    comment(d) <- comment();
                    quantity(d) <- quantity();
                    extraQuantity(d) <- extraQuantity();
                    price(d) <- price();
                    extraDate1(d) <- date1();
                    extraDate2(d) <- date2();
                }
            }
        }
        IF canceled() THEN {
            error() <- applyMessage();
        }
        
        EXPORT exportTeamWork OBJECTS document = teamWorkDocument(idDocument()), user = user JSON;
    }
    WHEN command == 5 THEN { //выгрузка документа по запросу
        LOCAL id = STRING ();
        IMPORT JSON FROM file TO () id;

        EXPORT exportTeamWork OBJECTS document = teamWorkDocument(id()), user = user JSON;
    }
    ELSE {
        EXPORT JSON FROM error = 'Неизвестная команда';
    }

}

