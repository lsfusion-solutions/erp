MODULE Digi;

REQUIRE ScalesSelfService, Image;

writeFileToSocketResult = DATA LOCAL BOOLEAN ();
//Для Digi необходимо прогрузить 2 файла: 0x34 = 52, 0x38 = 56
writeFileToSocket (file, type, ip)  INTERNAL  'lsfusion.erp.machinery.scales.WriteFileToSocketAction' (FILE, INTEGER, STRING[30]);


//DigiSM5300
loadImages() + {
    NEWSESSION NESTED (select[Sku,Stock]) {
        IF (GROUP SUM 1 IF select(Sku sku, Stock stock)) THEN {
            FOR [ GROUP SUM 1 IF select(sku(Barcode barcode), Stock stock) AND length(id(barcode)) < 6 AND hasImage(sku(barcode)) BY stock](Stock stock) DO {
                FOR stock(Scales scales) == stock AND active(groupScales(scales)) AND active(scales) AND sidModel(groupScales(scales)) == 'DigiSM5300' DO {
                    TRY {
                        mkdir('ftp://root:teraoka@' + port(scales) + '/../opt/pcscale/files/img/plu/');
                    }
                    FOR select(sku(Barcode barcode), stock) AND pluNumber(groupScales(scales), barcode) AND length(id(barcode)) < 6 AND hasImage(sku(barcode)) DO {
                        TRY {
                            convertImage(image(barcode), 'bmp');
                            WRITE convertedImage() TO 'ftp://root:teraoka@' + port(scales) + '/../opt/pcscale/files/img/plu/plu' +pluNumber(groupScales(scales), barcode) + '?binarytransfermode=false';
                        } CATCH {
                            MESSAGE 'Ошибка загрузки изображений в весы' NOWAIT;
                            BREAK;
                        }
                    }
                }
            }
        }
    }
} 
showLoadImage(Stock ss) += (GROUP SUM 1 IF sidModel(GroupScales grsk) == 'DigiSM5300' AND stock(grsk) == ss AND active(grsk)) > 0;

deleteImages() + {
    NEWSESSION NESTED (select[Sku,Stock]) {
        IF (GROUP SUM 1 IF select(Sku sku, Stock stock)) THEN {
            FOR [ GROUP SUM 1 IF select(sku(Barcode barcode), Stock stock) AND length(id(barcode)) < 6 AND hasImage(sku(barcode)) BY stock](Stock stock) DO {
                FOR stock(Scales scales) == stock AND active(groupScales(scales)) AND active(scales) AND sidModel(groupScales(scales)) == 'DigiSM5300' DO {
                    FOR select(sku(Barcode barcode), stock) AND pluNumber(groupScales(scales), barcode) AND length(id(barcode)) < 6 AND hasImage(sku(barcode)) DO {
                        TRY {
                            delete('ftp://root:teraoka@' + port(scales) + '//opt/pcscale/files/img/plu/Plu' + pluNumber(groupScales(scales), barcode));
                        }
                    }
                }
            }
            IF NOT notResetMachinerySelectSku() THEN {
                select(Sku sku, Stock stock) <- NULL;
            }
        }
    }
}
showDeleteImage(Stock ss) += (GROUP SUM 1 IF sidModel(GroupScales grsk) == 'DigiSM5300' AND stock(grsk) == ss AND active(grsk)) > 0;

isSelfService(GroupScales s) += sidModel(s) == 'DigiSM5300';

overId = ABSTRACT STRING[100] (CustomGroup);
idDigi(CustomGroup cg) = OVERRIDE overId(cg), id(cg);

createAttribute(MachineryPriceTransaction mpt) + {
    IF sidModel(groupScales(mpt)) == 'DigiSM5300' THEN {
        LOCAL custGroup = CustomGroup (Barcode);
        custGroup(Barcode b) <- customGroup(customGroupType(groupMachinery(mpt)), sku(b)) WHERE in(mpt, b);
        LOCAL newPluNumber = INTEGER (Barcode);
        newPluNumber(Barcode b) <- PARTITION SUM 1 IF id(b) AND active(b) ORDER b BY custGroup(b) WHERE in(mpt, b);
        
        info(mpt, Barcode b) <- ('\{"digism5300":\{'+
                (CONCAT ',',
                    (' "numberGroup": "' + (OVERRIDE idDigi(custGroup(b)), '1') +
                    '", nameGroup: "' + (OVERRIDE name(custGroup(b)),'Все')+ 
                    '", overPluNumber: "' + newPluNumber(b) + '"'),
                    '"tareWeight":' + tareWeight(b))
                +'\}\}') WHERE in(mpt, b);
    }
}

loadImagesGroup 'Загрузить картинки в весы' (GroupScales gm) {
    NEWSESSION {
        FOR gm == groupScales(Scales scales) AND active(scales) DO {
            TRY {
                mkdir('ftp://root:teraoka@' + port(scales) + '/../opt/pcscale/files/img/common/');
            }
            FOR idDigi(CustomGroup cg) AND customGroupType(cg) == customGroupType(gm) DO {
                TRY {
                    convertImage(image(cg), 'bmp');
                    WRITE convertedImage() TO 'ftp://root:teraoka@' + port(scales) + '/../opt/pcscale/files/img/common/' + idDigi(cg) + '?binarytransfermode=false';
                } CATCH {
                    MESSAGE 'Ошибка загрузки изображений в весы' NOWAIT;
                    BREAK;
                }
            }
        }
    }
} TOOLBAR;
    
EXTEND FORM groupScales 
    PROPERTIES loadImagesGroup(grs) SHOWIF sidModel(grs) == 'DigiSM5300';
    

//
dataCustomGroupType = DATA CustomGroupType(GroupScales);
skipSkuWioutGroup 'Не выгружать товары без классификатора' = DATA BOOLEAN (GroupScales);
migrateDigi = DATA BOOLEAN ();
onStarted() +{ 
    IF NOT migrateDigi() THEN {
        NEWSESSION {
            migrateDigi() <- TRUE;
            Scales.dataCustomGroupType(GroupScales s) <- dataCustomGroupType(s);
            Scales.skipSkuWioutGroup(GroupScales s) <- skipSkuWioutGroup(s);
            APPLY;   
        }
    }
}