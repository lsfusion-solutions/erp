MODULE Set10Piclist;

REQUIRE Set10PriceTransaction;

NAMESPACE Set10;

customGroupPicList = DATA CustomGroupType();
nameCustomGroupPicList 'Классификатор пиклиста' = name(customGroupPicList());

in(CustomGroup g, Item s) = group(groupType(g), s);
isNotParrent(CustomGroup g) = TRUE IF NOT parent(g) AND g IS CustomGroup;

index =  PARTITION SUM 1 ORDER name(Item i) BY in(i), customGroup(customGroupPicList(),i);
maxIndex(CustomGroup g) = GROUP MAX index(Item i) BY customGroup(customGroupPicList(),i);

indexNULL (CustomGroup g) = PARTITION SUM 1 ORDER name(g) BY in(g), isNotParrent(g);
maxIndexNULL() = GROUP MAX indexNULL(CustomGroup gg) IF in(gg) AND isNotParrent(gg);
indexNoNULL (CustomGroup g) = PARTITION SUM 1 ORDER name(g) BY in(g), parent(g);

indexGroup(CustomGroup g) = IF parent(g) THEN indexNoNULL(g) ELSE indexNULL(g);
maxIndexGroup(CustomGroup g) = GROUP MAX indexGroup(CustomGroup gg) IF in(gg) BY parent(gg);

indexItem(Item i) = maxIndexGroup(customGroup(customGroupPicList(),i)) (+) index(i);
maxIndexItem(CustomGroup g) = maxIndexGroup(g) (+) maxIndex(g);

inPage(Item i, INTEGER index) = indexItem(i) AND indexItem(i) - 1 >= index * 16 AND indexItem(i) - 1 < (index + 1) * 16;
inPage(CustomGroup g, INTEGER index) =  indexGroup(g) AND indexGroup(g) - 1 >= index * 16 AND indexGroup(g) - 1 < (index + 1) * 16;

usePrefixCSIAPI 'Использовать префикс при выгрузке ШК для пиклистов (API CSI-K)' = DATA BOOLEAN ();
prefixCSIAPI 'Префикс ШК' = DATA STRING () CHARWIDTH 10;
prefixPieceCSIAPI 'Префикс ШК (шт)' = DATA STRING () CHARWIDTH 10;
overPrefixCSIAPI (Item i) = IF istartsWith(shortNameUOM(barcode(i)), 'шт') THEN prefixPieceCSIAPI() ELSE prefixCSIAPI();

contentBarcode (Item i) = CONCAT '', overPrefixCSIAPI(i) IF usePrefixCSIAPI() AND passScales(i), idBarcode(i);
replaceNameAPI (Item i) = replace(replace(replace(Stock.name(i), '\\', '/'), '"', '\''), '\n', '');
content (Item i, DepartmentStore ds) = IF idBarcode(i) AND in(i) THEN '\{' + (CONCAT ',' ,
    '"index": ' + (indexItem(i) - 1),
    '"name": "' + replaceNameAPI(i) + '"',
    '"barcode": "' + contentBarcode(i) + '"',
    '"sku": "' + overSet10Id(i, ds) + '"'
    ) + '\}';

tilesGroup4(CustomGroup g, INTEGER index, DepartmentStore ds) = '\{ "tiles": [' +
    (CONCAT ',' , (GROUP CONCAT content(Item i, ds) IF in(g, i) == g AND inPage(i, index), ', ' ORDER i))
    + ']\}';

contentPage4 (CustomGroup g, DepartmentStore ds) = IF in(g) THEN '\{' + (CONCAT ',' ,
    '"index": ' + (indexGroup(g) - 1),
    '"name": "' + Stock.name(g) + '"',
    '"sortType": "alphabetic"',
    '"pages": [' + (GROUP CONCAT tilesGroup4(g, INTEGER i, ds) IF iterate(i, 0, maxIndexItem(g) / 16), ', ' ORDER i) + ']'
    ) + '\}';

tilesGroup3(CustomGroup g, INTEGER index, DepartmentStore ds) = '\{ "tiles": [' +
    (CONCAT ',',
        (CONCAT ',' , (GROUP CONCAT contentPage4(CustomGroup cg, ds) IF parent(cg) = g AND level(g) == 3 AND inPage(cg, index), ', ' ORDER index, cg)),
        (CONCAT ',' , (GROUP CONCAT content(Item i, ds) IF in(g, i) == g AND inPage(i, index), ', ' ORDER i))
        )
    + ']\}';

contentPage3 (CustomGroup g, DepartmentStore ds) = IF in(g) THEN '\{' + (CONCAT ',' ,
    '"index": ' + (indexGroup(g) - 1),
    '"name": "' + Stock.name(g) + '"',
    '"sortType": "alphabetic"',
    '"pages": [' + (GROUP CONCAT tilesGroup3(g, INTEGER i, ds) IF iterate(i, 0, maxIndexItem(g) / 16), ', ' ORDER i) + ']'
    ) + '\}';

tilesGroup2(CustomGroup g, INTEGER index, DepartmentStore ds) = '\{ "tiles": [' +
    (CONCAT ',',
        (CONCAT ',' , (GROUP CONCAT contentPage3(CustomGroup cg, ds) IF parent(cg) = g AND level(g) == 2 AND inPage(cg, index), ', ' ORDER index, cg)),
        (CONCAT ',' , (GROUP CONCAT content(Item i, ds) IF in(g, i) == g AND inPage(i, index), ', ' ORDER i))
        )
    + ']\}';

contentPage2 (CustomGroup g, DepartmentStore ds) = IF in(g) THEN '\{' + (CONCAT ',' ,
    '"index": ' + (indexGroup(g) - 1),
    '"name": "' + Stock.name(g) + '"',
    '"sortType": "alphabetic"',
    '"pages": [' + (GROUP CONCAT tilesGroup2(g, INTEGER i, ds) IF iterate(i, 0, maxIndexItem(g) / 16), ', ' ORDER i) + ']'
    ) + '\}';

tilesGroup1(CustomGroup g, INTEGER index, DepartmentStore ds) = '\{ "tiles": [' +
    (CONCAT ',',
        (CONCAT ',' , (GROUP CONCAT contentPage2(CustomGroup cg, ds) IF parent(cg) = g AND level(g) == 1 AND inPage(cg, index), ', ' ORDER index, cg)),
        (CONCAT ',' , (GROUP CONCAT content(Item i, ds) IF in(g, i) == g AND inPage(i, index), ', ' ORDER i))
        )
    + ']\}';

contentPage1 (CustomGroup g, DepartmentStore ds) = IF in(g) THEN '\{' + (CONCAT ',' ,
    '"index": ' + (indexGroup(g) - 1),
    '"maxIndex": ' + maxIndexItem(g),
    '"name": "' + Stock.name(g) + '"',
    '"sortType": "alphabetic"',
    '"pages": [' + (GROUP CONCAT tilesGroup1(g, INTEGER i, ds) IF iterate(i, 0, maxIndexItem(g) / 16), ', ' ORDER i) + ']'
    ) + '\}';

tilesGroup(CustomGroupType gt, INTEGER index, DepartmentStore ds) = '\{ "tiles": [' +
    (CONCAT ',' , (GROUP CONCAT contentPage1(CustomGroup cg, ds) IF groupType(cg) = gt AND NOT parent(cg) AND inPage(cg, index), ', ' ORDER indexGroup(cg)))
    + ']\}';

content (CustomGroupType gt, DepartmentStore ds) = '\{' + (CONCAT ',' ,
    '"sortType": "alphabetic"',
    '"pages": [' + (GROUP CONCAT tilesGroup(gt, INTEGER i, ds) IF iterate(i, 0, maxIndexNULL() / 16), ', ' ORDER i) + ']'
    ) + '\}';


contentTouchAll = DATA BOOLEAN ();

contentTouch (Item i, DepartmentStore ds) = IF idBarcode(i) AND in(i) THEN '\{' + (CONCAT ',' ,
    '"index": ' + (indexItem(i) - 1),
    '"name": "' + replaceNameAPI(i) + '"',
    '"tiles": []',
    '"img": "' + contentBarcode(i) + '"',
    '"itemId": "' + overSet10Id(i, ds) + '"',
    '"barcode": "' + contentBarcode(i) + '"'
    ) + '\}';

contentCustomGroupTouch3 (CustomGroup g, DepartmentStore ds) = IF in(g) THEN '\{' +
    (CONCAT ',' ,
        '"index": "' + (indexGroup(g) - 1) + '"',
        '"name": "' + Stock.name(g) + '"',
        '"tiles": [' + (CONCAT ',',
            (CONCAT ',' , (GROUP CONCAT contentTouch(Item i, ds) IF in(g, i) == g, ', ' ORDER indexItem(i)))
            ) + ']',
        '"img": ""',
        '"iconId": "DIR"'
        ) + '\}';

contentCustomGroupTouch2 (CustomGroup g, DepartmentStore ds) = IF in(g) THEN '\{' +
    (CONCAT ',' ,
        '"index": "' + (indexGroup(g) - 1) + '"',
        '"name": "' + Stock.name(g) + '"',
        '"tiles": [' + (CONCAT ',',
            (CONCAT ',' , (GROUP CONCAT contentCustomGroupTouch3(CustomGroup cg, ds) IF parent(cg) = g, ', ' ORDER indexGroup(cg))),
            (CONCAT ',' , (GROUP CONCAT contentTouch(Item i, ds) IF in(g, i) == g, ', ' ORDER indexItem(i)))
            ) + ']',
        '"img": ""',
        '"iconId": "DIR"'
        ) + '\}';

contentCustomGroupTouch (CustomGroup g, DepartmentStore ds) = IF in(g) THEN '\{' +
    (CONCAT ',' ,
        '"index": "' + (indexGroup(g) - 1) + '"',
        '"name": "' + Stock.name(g) + '"',
        '"tiles": [' + (CONCAT ',',
            (CONCAT ',' , (GROUP CONCAT contentCustomGroupTouch2(CustomGroup cg, ds) IF parent(cg) = g, ', ' ORDER indexGroup(cg))),
            (CONCAT ',' , (GROUP CONCAT contentTouch(Item i, ds) IF in(g, i) == g, ', ' ORDER indexItem(i)))
            ) + ']',
        '"img": ""',
        '"iconId": "DIR"'
        ) + '\}';

tilesTab(CustomGroup g, DepartmentStore ds) = (CONCAT ',',
    (CONCAT ',' , (GROUP CONCAT contentCustomGroupTouch(CustomGroup cg, ds) IF parent(cg) = g, ', ' ORDER indexGroup(cg))),
    (CONCAT ',' , (GROUP CONCAT contentTouch(Item i, ds) IF in(g, i) == g, ', ' ORDER i)));

contentTab (CustomGroup g, DepartmentStore ds) = IF in(g) THEN
    '\{ "name": "' + Stock.name(g) + '", "columns": 6, "type": "GT", "tiles": [' + tilesTab(g, ds) + '] \}';

contentTouch (CustomGroupType gt, DepartmentStore ds) =
    '[' + (GROUP CONCAT contentTab(CustomGroup g, ds) IF customGroupType(g) == gt AND level(g) == 1, ', ' ORDER indexGroup(g)) + ']';

contentTouchAll (CustomGroupType gt, DepartmentStore ds) =
    '[\{ "name": "Все", "columns": 6, "type": "GT", "tiles": [' + (GROUP CONCAT contentCustomGroupTouch(CustomGroup g, ds) IF customGroupType(g) == gt AND level(g) == 1, ', ' ORDER indexGroup(g)) + '] \}]';

templateGuid 'GUID шаблона пиклиста' = DATA STRING ();
cashTemplates 'Код шаблона касс' = DATA STRING ();

exportCSIAPIurl 'Адрес для API запросов CSI-K (Touch)' = DATA STRING ();
//exportImagesCSIAPIurl 'Адрес каталога изображений для API запросов CSI-K' = DATA STRING () CHARWIDTH 50;

useExportCSIAPI 'Использовать API для выгрузки в CSI' = DATA BOOLEAN ();
isUseShopNumber 'Выгружать номер магазина' = DATA BOOLEAN ();

EXTEND FORM integrationData
    PROPERTIES () templateGuid, cashTemplates, exportCSIAPIurl, usePrefixCSIAPI, prefixCSIAPI, prefixPieceCSIAPI,
        useExportCSIAPI, isUseShopNumber, nameCustomGroupPicList
;

DESIGN integrationData {
    set10{
        NEW piclistSet10{
            caption = 'Пиклист';
            MOVE PROPERTY (templateGuid());
            MOVE PROPERTY (cashTemplates());
            MOVE PROPERTY (exportCSIAPIurl());
            MOVE PROPERTY (usePrefixCSIAPI());
            MOVE PROPERTY (prefixCSIAPI());
            MOVE PROPERTY (prefixPieceCSIAPI());
            MOVE PROPERTY (useExportCSIAPI());
            MOVE PROPERTY (isUseShopNumber());
            MOVE PROPERTY (nameCustomGroupPicList());
        }
    }
}


cashType = DATA LOCAL NESTED STRING ();
content = DATA LOCAL NESTED STRING ();
shopNumber 'Номер магазина' = DATA LOCAL NESTED INTEGER ();
FORM exportCSIformAPI
    PROPERTIES templateType = 'PERMANENT',
        templateGuid = templateGuid(),
        cashTemplates = '[' + cashTemplates() + ']'
    OBJECTS i = INTEGER EXTID 'menuTemplates'
    PROPERTIES cashType = cashType() IF i IS INTEGER,
        menuName = ('' + shopNumber()) IF i IS INTEGER AND isUseShopNumber(),
        shopNumbers = ('[' + shopNumber() + ']') IF i IS INTEGER AND isUseShopNumber(),
        content = content() IF i IS INTEGER EXTID 'content:escapeInnerJSON'
    FILTERS i == 1
;


exportCSIAPI 'Экспорт пиклиста CSI' (GroupMachinery g) {
    IF exportCSIAPIurl() THEN {
        in(Item i) <- IF currentBalance(i, stock(g)) THEN TRUE;
        in(CustomGroup cg) <- TRUE IF groupType(cg) == customGroupPicList() AND GROUP SUM 1 IF isParent(cg, Item sku) AND in(sku);
        
        content() <- content(customGroupPicList(), stock(g));
        shopNumber() <- INTEGER(idStoreSet(g));
        cashType() <- 'CSI_K';
        IF GROUP SUM 1 IF in(Item sku) AND in(customGroup(customGroupPicList(), sku)) THEN {
            EXPORT exportCSIformAPI JSON;

            timeoutHttp() <- 60000;
            LOCAL result = FILE ();
            LOCAL errorCode = STRING[10] ();
            LOCAL description = STRING[255] ();
            EXTERNAL HTTP POST exportCSIAPIurl() PARAMS exportFile() TO result;
            IMPORT JSON FROM result() TO() errorCode, description;
            IF NOT errorCode() THEN {
               MESSAGE CONCAT '\n', 'Пиклист успешно выгружен', name(g)  NOWAIT ;
            }
            ELSE {
                MESSAGE (CONCAT '\n', 'Ошибка при выполнении запроса API CSI-K (' + errorCode() + ')', description(), name(g)) NOWAIT;
            }
        }
        ELSE {
           MESSAGE CONCAT '\n', (CONCAT  '', 'Нет данных для выгрузки: ', name(g)) NOWAIT ;
        }
    }
    ELSE
        MESSAGE ('Не указан адресc для API запросов CSI-K (Touch) ' + name(g)) NOWAIT;
}
EXTEND FORM groupCashRegister
    PROPERTIES (grc) exportCSIAPI SHOWIF isSet10(grc)
;


DESIGN groupCashRegister{
    topContainer{
        MOVE PROPERTY (exportCSIAPI(grc));
    }
}