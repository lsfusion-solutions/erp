MODULE FitDiscountCard;

REQUIRE FitCashRegister, DiscountCard;

NAMESPACE Fit;

sendDiscountCardFit (CashRegister cr) {
    IF isFit(cr) AND NOT inactive(cr) THEN {
        NEWSESSION {
            exportFile() <- NULL;
            EXPORT CSV '' NOHEADER NOESCAPE CHARSET 'CP866' FROM 
                 codeClient = numeric(INTEGER(OVERRIDE id(DiscountCard dc), number(dc)), 12),                   // 1. Код клиента
                 numberAccount = numeric(0, 12),                                                                // 2. Номер счета
                 nameClient = alpha((OVERRIDE left((CONCAT ' ', lastNameContact(dc), firstNameContact(dc)), 20), ''), 20), // 3. Имя клиента 
                 store = alpha('', 20),                                                                     // 4. Магазин
                 addressClient = char((OVERRIDE left(addressLegalEntity(dc), 25), ''), 25),                                    // 5. Адрес клиента
                 city = alpha('', 20),                                                                      // 6. Город
                 postIndex = alpha('', 6),                                                                  // 7. Почтовый индекс
                 phone = alpha((OVERRIDE phoneLegalEntity(dc), ''), 14),                                                   // 8. Телефон
                 fax = alpha('', 14),                                                                       // 9. Факс
                 date = alpha('', 6),                                                                       // 10. Дата
                 codeMovement =  'A',                                                                           // 11. Код движения
                 discount = numeric(INTEGER(percent(dc)*100), 4),                                               // 12. Скидка
                 dateNew = alpha('', 8),                                                                    // 13. Новое представление даты
                 codePrice = numeric(0, 2),                                                                     // 14. Код прайса
                 group = numeric(0, 3),                                                                         // 15. Код товарной группы
                 dateTime = currentTimeText(),                                                                  // 16. Дата время формирования
                 beginDateTime = alpha('', 12),                                                             // 17. Дата/Время начала работы с клиентом
                 finishDateTime = alpha('', 12),                                                            // 18. Дата/Время окончания работы с клиентом
                 maxSum = numeric(0, 9),                                                                        // 19. Суммовой порог
                 expiryDays = numeric(0, 3),                                                                    // 20. Срок действия (в днях)
                 numberProgram = numeric(0, 4),                                                                 // 21. Номер календарной программы
                 groupClientNumber = alpha('', 4),                                                          // 22. Номер группы клиентов
                 discountFixSum = numeric(0, 10),                                                               // 23. Скидка абсолютная
                 discountCumulativeSum = numeric(0, 10),                                                        // 24. Сумма накоплений
                 startEndDates = alpha('', 12),                                                             // 25. Дата начала и окончания накоплений
                 placeholder4 = alpha('', 34),                                                                  // 26. Заполнитель                        
                 append0D = '\r' IF append0D()
            WHERE isActive(dc) ORDER dc; 
                 
            put(cr, 'client', exportFile());
            APPLY;
        }
    } 
//    ELSE {
//        MESSAGE 'Отсутствуют данные для выгрузки' NOWAIT;          
//    }
}

sendDiscountCardFit 'Выгрузить ДК в ФИТ' (GroupCashRegister g) {
    IF GROUP SUM 1 IF isActive(DiscountCard d) THEN {
        FOR groupCashRegister(CashRegister cr)=g DO {
            sendDiscountCardFit(cr);
        }
    } ELSE {
        MESSAGE 'Отсутствуют дисконтные карты для выгрузки' NOWAIT;
    }
}

EXTEND FORM groupsCashRegister
    PROPERTIES (grc) sendDiscountCardFit TOOLBAR SHOWIF isFit(grc)
;

sendDiscountCardFit (LegalEntity l) {
    IF GROUP SUM 1 IF isActive(DiscountCard d) THEN {
        FOR legalEntity(CashRegister cr) DO {
            sendDiscountCardFit(cr);
        }
    } ELSE {
        MESSAGE 'Отсутствуют дисконтные карты для выгрузки' NOWAIT;
    }
}

sendDiscountCards 'Выгрузить ДК в ФИТ' () {
    DIALOG dialogLegalEntities OBJECTS l INPUT DO {
        sendDiscountCardFit(l);
        MESSAGE 'Выгрузка выполнена';
    }
}

sendDiscountCardsDefaultCompany 'Выгрузить ДК в ФИТ (по умолчанию)' () {
    sendDiscountCardFit(defaultCompany());
    MESSAGE 'Выгрузка выполнена';
}

EXTEND FORM discountCards
    PROPERTIES () sendDiscountCards, sendDiscountCardsDefaultCompany
;

DESIGN discountCards {
    tabbed {
        NEW action {
            fill = 1;
            caption = 'Действия';
            MOVE PROPERTY(sendDiscountCards());
            MOVE PROPERTY(sendDiscountCardsDefaultCompany());
        }
    }
}
