MODULE AstronSSC;

REQUIRE AstronCashRegisterPriceTransaction, ItemSSC;

NAMESPACE Astron;


////товар
//imageAstron(Item i) = image(i);
 //=DATA LOCAL IMAGEFILE (Item);
//
//WHEN CHANGED (image(Item i)) DO { 
//    imageAstron(i) <- NULL;
//}
//
//overName = ABSTRACT ISTRING[255](Item);
//
//orderAstron 'Порядок отображения для Astron' = DATA LOCAL INTEGER (Item);
//idParent = DATA LOCAL STRING (Item);
//
////группа
//imageAstron 'Изображение для Astron' = DATA IMAGEFILE (CustomGroup);
//orderAstron 'Порядок отображения для Astron' = DATA INTEGER (CustomGroup);
//export = DATA LOCAL BOOLEAN (CustomGroup);
//
//EXTEND FORM customGroups
//    PROPERTIES (g) READONLY imageAstron, orderAstron;
//    
//EXTEND FORM customGroup
//    PROPERTIES (g) imageAstron, orderAstron;

//группа
dataCustomGroupTypeAstron = DATA CustomGroupType(GroupCashRegister);
nameCustomGroupTypeAstron 'Тип классификатора КСО'(GroupCashRegister gs) = name(dataCustomGroupTypeAstron(gs));

skipFilterBalance = ABSTRACT BOOLEAN (GroupCashRegister, Sku);
beforeExport ABSTRACT LIST (GroupCashRegister);

//выгрузка
encodeBase64 = FORMULA STRING 'regexp_replace(encode(($1),\'base64\'), E\'[\\n\\r]+\', \' \', \'g\' )';

//+@difineSSCAttribute(INTEGER, age, 'Возраст');
//+@difineSSCAttribute(BOOLEAN, ageVerify, 'Необходимо подтверждение возраста');
//@difineSSCAttribute(BOOLEAN, visualVerify, 'Необходима визуальная проверка товара');
//+@difineSSCAttribute(BOOLEAN, lowWeight, 'Легкий товар');
//+@difineSSCAttribute(BOOLEAN, weightControlBypass, 'Пропускать товар при контроле веса');
//+@difineSSCAttribute(BOOLEAN, requireQuantityManual, 'Обязательный ввод количества');
//@difineSSCAttribute(BOOLEAN, requireQuantityScales, 'Обязательное взвешивание товара');
overAstronInfo1(MachineryPriceTransaction mpt, Barcode b) += 
    '"propertyGrpId":'+value(b) + ',' +
    '"propertyGrp":[\{"propertyGrpId":'+value(b)+',"propertyGrpName":"Свойства для '+value(b)+'"\}],' +
    (CONCAT ', ',
    '"numProperty":[' + (CONCAT ', ',
            '\{"numPropertyKey":14,"propertyGrpId":'+value(b)+',"numberId":'+(100 + age(sku(b)))+'\}' IF ageVerify(sku(b)),
            '\{"numPropertyKey":22,"propertyGrpId":'+value(b)+',"numberId":101\}' IF requireQuantityManual(sku(b)),
            '\{"numPropertyKey":24,"propertyGrpId":'+value(b)+',"numberId":101\}' IF lowWeight(sku(b)),
            '\{"numPropertyKey":25,"propertyGrpId":'+value(b)+',"numberId":101\}' IF weightControlBypass(sku(b))
        ) +']',
    '"numbers":[' + (CONCAT ', ',
            '\{"numberId":101,"numberValue":1,"numberName":"Да"\}' IF requireQuantityManual(sku(b)) OR lowWeight(sku(b)) OR weightControlBypass(sku(b)),
            '\{"numberId":'+(100 + age(sku(b)))+',"numberValue":'+age(sku(b))+',"numberName":"'+age(sku(b))+' лет"\}' IF ageVerify(sku(b))
        ) +']',
    '"binProperty":[' + (CONCAT ', ',
            '\{"binPropertyKey":1,"propertyGrpId":'+value(b)+',"binaryDataId":'+value(b)+'\}' IF imageAstron(sku(b))
        ) +']',
    '"binaryData":[' + (CONCAT ', ',
            '\{"binaryDataId":'+value(b)+',"binaryDataValue":"'+encodeBase64(imageAstron(sku(b)))+'"\}' IF imageAstron(sku(b))
        ) +']'
    );

EXTEND FORM groupCashRegister 
    PROPERTIES (grc) SHOWIF sidModel(grc) == 'Astron' nameCustomGroupTypeAstron;
    
DESIGN groupCashRegister{
    topContainer{
        MOVE PROPERTY (nameCustomGroupTypeAstron(grc));
    }
}
