MODULE AstronSSC;

REQUIRE AstronCashRegisterPriceTransaction, ItemSSC;

NAMESPACE Astron;


//товар
imageAstron(Item i) = DATA IMAGEFILE (Item) TABLE itemImage;

WHEN CHANGED (image(Item i)) DO { 
    imageAstron(i) <- NULL;
}
//группа
imageAstron 'Изображение для PowerPOS' = DATA IMAGEFILE (CustomGroup);

//группа касс
dataCustomGroupTypeAstron = DATA CustomGroupType(GroupCashRegister) INDEXED;
nameCustomGroupTypeAstron 'Тип дополнительного классификатора'(GroupCashRegister gs) = name(dataCustomGroupTypeAstron(gs));

testModeAstron 'Выгружать дополнительную информацию' = DATA BOOLEAN (GroupCashRegister);

TABLE customGroupGroupCashRegister(CustomGroup, GroupCashRegister);
id 'Код в PowerPOS' = DATA INTEGER (CustomGroup, GroupCashRegister);

TABLE maxId() NODEFAULT;
maxGroupId = (GROUP MAX id(CustomGroup g, GroupCashRegister gc)) MATERIALIZED TABLE maxId;

WHEN SET(customGroupType(CustomGroup g) == dataCustomGroupTypeAstron(GroupCashRegister gc)) AND NOT id(g, gc) DO {
    id(g, gc) <- maxGroupId() (+) 1 ;
}

del = DATA BOOLEAN (INTEGER, Sku, GroupCashRegister);

prevCustomGroup(CustomGroupType t, Sku s) = PREV(customGroup(t, s));

WHEN CHANGED(customGroup(CustomGroupType t, Sku s)) AND t == dataCustomGroupTypeAstron(GroupCashRegister g) DO {
    del(INTEGER r, s, g) <- TRUE WHERE r == id(prevCustomGroup(t, s), g);
    del(INTEGER r, s, g) <- NULL WHERE r == id(customGroup(t, s), g);
}

CONSTRAINT [GROUP SUM 1 IF INTEGER r == id(CustomGroup g, GroupCashRegister gc) BY r](INTEGER r) > 1 
    MESSAGE 'Данный код группы в PowerPOS уже используется';


EXTEND FORM customGroups
    OBJECTS gc= GroupCashRegister PANEL BEFORE g
    PROPERTIES name(gc) SELECTOR SHOWIF (GROUP SUM 1 IF dataCustomGroupTypeAstron(GroupCashRegister gcr) == t)
    FILTERS dataCustomGroupTypeAstron(gc) == t
    PROPERTIES READONLY id(g, gc), imageAstron(g)
;

DESIGN customGroups {
    OBJECTS {
        NEW filters{
            horizontal = TRUE;
            MOVE BOX (t);
            MOVE BOX (gc);
        }
        MOVE BOX (TREE treeGroups);
    }
}

EXTEND FORM customGroup
    PROPERTIES (g) imageAstron;

//выгрузка
encodeBase64 = FORMULA STRING 'regexp_replace(encode(($1),\'base64\'), E\'[\\n\\r]+\', \' \', \'g\' )';
toLoadImages = DATA LOCAL BOOLEAN ();

overAstronInfo1(MachineryPriceTransaction mpt, Barcode b) += 
    (CONCAT ', ',
        //свойства
        '"propertyGrpId":'+value(b) + ',' +
        '"propertyGrp":[\{"propertyGrpId":'+value(b)+',"propertyGrpName":"Свойства для '+value(b)+'"\}],' +
        (CONCAT ', ',
        '"numProperty":[' + (CONCAT ', ',
                '\{"numPropertyKey":13,"propertyGrpId":'+value(b)+',"numberId":101\}' IF antiTheftDevice(sku(b)),
                '\{"numPropertyKey":14,"propertyGrpId":'+value(b)+',"numberId":'+(100 + age(sku(b)))+'\}' IF ageVerify(sku(b)),
                '\{"numPropertyKey":22,"propertyGrpId":'+value(b)+',"numberId":101\}' IF requireQuantityManual(sku(b)),
                '\{"numPropertyKey":24,"propertyGrpId":'+value(b)+',"numberId":101\}' IF lowWeight(sku(b)),
                '\{"numPropertyKey":25,"propertyGrpId":'+value(b)+',"numberId":101\}' IF weightControlBypass(sku(b)),
                '\{"numPropertyKey":26,"propertyGrpId":'+value(b)+',"numberId":101\}' IF inaccurateReferenceWeight(sku(b)),
                '\{"numPropertyKey":27,"propertyGrpId":'+value(b)+',"numberId":101\}' IF hasPromotionPrice(sku(b), stock(mpt)),
                '\{"numPropertyKey":28,"propertyGrpId":'+value(b)+',"numberId":101\}' IF requireProductSelection(sku(b))
            ) +']',
        '"numbers":[' + (CONCAT ', ',
                '\{"numberId":101,"numberValue":1,"numberName":"Да"\}' IF requireQuantityManual(sku(b)) OR lowWeight(sku(b)) OR weightControlBypass(sku(b)),
                '\{"numberId":'+(100 + age(sku(b)))+',"numberValue":'+age(sku(b))+',"numberName":"'+age(sku(b))+' лет"\}' IF ageVerify(sku(b))
            ) +']',
        '"binProperty":[' + (CONCAT ', ',
                '\{"binPropertyKey":1,"propertyGrpId":'+value(b)+',"binaryDataId":'+value(b)+'\}' IF imageAstron(sku(b)) AND toLoadImages()
            ) +']',
        '"binaryData":[' + (CONCAT ', ',
                '\{"binaryDataId":'+value(b)+',"binaryDataValue":"'+encodeBase64(imageAstron(sku(b)))+'","binaryDataName":"'+escapeJSONValue(STRING[50](id(b) +' '+nameSku(b)))+'"\}' IF imageAstron(sku(b)) AND toLoadImages()
            ) +']'
        ),
        //группы
        ('"extGrp":['+(GROUP CONCAT ('\{'+ (CONCAT ',','"extGrpId":'+id(CustomGroup g, groupMachinery(mpt)),
                '"sareaId":'+nppGroupMachinery(mpt),
                '"parentExtGrpId":'+id(parent(g), groupMachinery(mpt)),
                '"extGrpName":"'+escapeJSONValue(name(g))+'"',
                '"extGrpPicture":"'+(encodeBase64(imageAstron(g)) IF toLoadImages())+'"') + '\}') 
                    IF (isParent(g, sku(b)) OR del(id(g, groupMachinery(mpt)), sku(b), groupMachinery(mpt))) AND customGroupType(g) == dataCustomGroupTypeAstron(groupMachinery(mpt)), ', ' ORDER g) + '],'+
        '"artExtGrp":['+(CONCAT ',', ('\{"extGrpId":'+id(customGroup(dataCustomGroupTypeAstron(groupMachinery(mpt)),sku(b)), groupMachinery(mpt)) + '\}'), 
                                     (GROUP CONCAT ('\{"extGrpId":'+ INTEGER  r+ ',"delFlag":1\}') IF del(r, sku(b), groupMachinery(mpt)), ',' ORDER r) 
                        )+']'
        ) IF customGroup(dataCustomGroupTypeAstron(groupMachinery(mpt)),sku(b))
    ) IF testModeAstron(groupMachinery(mpt))
    ;


beforeCreateAstronPriceTransaction(MachineryPriceTransaction mpt) + {
    IF toLoadImages() THEN {
        
        LOCAL needResize = BOOLEAN(Item);
        needResize(Item i) <- TRUE IF GROUP SUM 1 IF in(mpt, Barcode b) AND i == sku(b) AND NOT imageAstron(i);
    
        IF (GROUP SUM 1 IF needResize(Item i)) THEN NEWSESSION NESTED LOCAL {
            FOR needResize(Item s) DO {
                TRY {
                    resizeImage(image(s),128,128);              
                    convertImage(resizedImage(), 'png');
                    imageAstron(s) <- convertedImage();
                }
            }
            APPLY NESTED LOCAL;
        }
    }
}

loadImages 'Загрузить классификатор с картинками в Кассы'  (GroupCashRegister gtc) {
    NEWSESSION {
        createMachineryPriceTransactionSnapshot() <- TRUE;
        createMachineryPriceTransactionComment() <- 'Загрузка изображений';
        toLoadImages() <- TRUE;
        
        createMachineryPriceTransaction(Sku sku) <- TRUE IF customGroup(dataCustomGroupTypeAstron(gtc),sku) AND hasImage(sku);
        exclude(GroupMachinery group) <- stock(group) == stock(gtc) AND group!=gtc;
        createMachineryPriceTransaction(stock(gtc));
            
        APPLY NESTED LOCAL;
        IF canceled() THEN {
            cancel();
        }
    }
}


EXTEND FORM groupCashRegister 
    PROPERTIES (grc) testModeAstron SHOWIF sidModel(grc) == 'Astron'
    PROPERTIES (grc) SHOWIF (sidModel(grc) == 'Astron' AND testModeAstron(grc)) nameCustomGroupTypeAstron, loadImages;
    
DESIGN groupCashRegister{
    topContainer{
        MOVE PROPERTY (testModeAstron(grc));
        MOVE PROPERTY (nameCustomGroupTypeAstron(grc));
        MOVE PROPERTY (loadImages(grc));
    }
}
