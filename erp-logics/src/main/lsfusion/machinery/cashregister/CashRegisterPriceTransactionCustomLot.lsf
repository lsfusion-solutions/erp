MODULE CashRegisterPriceTransactionCustomLot;

REQUIRE CashRegisterPriceTransaction, SkuLedgerLot, TaxItem, LotPrice;

NAMESPACE CashRegister;

CLASS CashRegisterPriceTransactionLot 'Загрузка марок в кассы' : MachineryPriceTransaction;
groupCashRegister 'Группа касс' = DATA GroupCashRegister (CashRegisterPriceTransactionLot);
groupMachinery (CashRegisterPriceTransactionLot transaction) += groupCashRegister(transaction);

in 'Вкл.' = DATA BOOLEAN (CashRegisterPriceTransactionLot, Lot);
valueVAT 'НДС %'= DATA NUMERIC[10,5] (CashRegisterPriceTransactionLot, Lot);

overValueVAT = ABSTRACT NUMERIC[10,5] (CashRegisterPriceTransactionLot, Lot);

createMachineryPriceTransactionLot = DATA LOCAL BOOLEAN (Lot);
createMachineryPriceTransactionLotDocument = DATA LOCAL PriceTransactionDocument();
createMachineryPriceTransactionLotComment = DATA LOCAL STRING[100] ();
createMachineryPriceTransactionLotMessage = DATA LOCAL TEXT ();

createMachineryPriceTransactionLot 'Создать транзакцию' (Stock stock) { 
    LOCAL sentSomething = BOOLEAN();
    LOCAL messageAdd = BOOLEAN();
    IF NOT createMachineryPriceTransactionLotMessage() THEN {
        createMachineryPriceTransactionLotMessage() <- TEXT('Принято к загрузке в оборудование : \n');
        messageAdd() <- TRUE;
    }        
    LOCAL countLots = INTEGER();
    countLots() <- (GROUP SUM 1 IF createMachineryPriceTransactionLot(Lot l));
    
    IF countLots() THEN {        
        FOR stock(GroupCashRegister g) = stock AND active(g) NEW t = CashRegisterPriceTransactionLot DO {
            groupCashRegister(t) <- g;
            priceTransactionDocument(t) <- createMachineryPriceTransactionLotDocument();
            comment(t) <- createMachineryPriceTransactionLotComment();
            in(t, Lot l) <- TRUE WHERE createMachineryPriceTransactionLot(l);
            in(t, CashRegister c) <- TRUE WHERE groupMachinery(c) = g AND active(c);
            valueVAT(t, Lot l) <- (OVERRIDE overValueVAT(t, l), valueVAT(sku(l)), 0.0 IF l IS Lot) WHERE in(t, l);
            
            IF messageAdd() THEN
                createMachineryPriceTransactionLotMessage() <- createMachineryPriceTransactionLotMessage() + (OVERRIDE name(g), 'Без наименования') + ' - ' + (OVERRIDE  countLots() + ' марок.\n', ' ');
            sentSomething() <- TRUE;
            APPLY NESTED LOCAL;
        }
        IF sentSomething() THEN
            MESSAGE createMachineryPriceTransactionLotMessage() NOWAIT;
        ELSE
            IF NOT supressNoNeedMessage() THEN
                MESSAGE 'Ошибка, транзакция не создана: ' + name(stock) + '.\n' NOWAIT;
    }
    ELSE
        MESSAGE 'Загрузка марок в оборудование не требуется: ' + name(stock) + '.\n' NOWAIT;
}

createBalanceMachineryPriceTransactionLot 'Остатки (марк.товары)' (Stock stock)  { 
    createMachineryPriceTransactionLot(Lot l) <- NULL;
    createMachineryPriceTransactionLot(Lot l) <- TRUE WHERE currentBalance(l, stock) > 0 AND price(l);
    createMachineryPriceTransactionLotComment() <- 'Загрузка остатков';
    
    createMachineryPriceTransactionLot(stock);
    APPLY;
} CONFIRM IN incrementMachineryPrice;

countLots (MachineryPriceTransaction t) = IF t IS CashRegisterPriceTransactionLot THEN GROUP SUM 1 IF in(t, Lot l);
countItems 'Кол-во строк' (MachineryPriceTransaction t) = OVERRIDE countBarcodes(t),  countLots(t);

EXTEND FORM machineryPriceTransactions
    PROPERTIES (s) createBalanceMachineryPriceTransactionLot
    
    PROPERTIES (t) countItems AFTER countBarcodes(t)
    
    OBJECTS l = Lot
    PROPERTIES READONLY SHOWIF (t IS CashRegisterPriceTransactionLot) id(l), idSku(l), 
        nameSku(l), price(l), 'Ед. изм.' = shortNameUOM(sku(l)), valueVAT(t, l)     
    FILTERS in(t, l)
    
    OBJECTS lt = Lot
    PROPERTIES READONLY SHOWIF (tt IS CashRegisterPriceTransactionLot) id(lt), idSku(lt), 
        nameSku(lt), price(lt), 'Ед. изм.' = shortNameUOM(sku(l)), valueVAT(tt, lt)
    FILTERS in(tt, lt)
;

DESIGN machineryPriceTransactions{
    pane{
        BOX (t){
            PROPERTY (countBarcodes(t)) {hide = TRUE;}
        }
    }
    specContainer{
        NEW lots {
            caption = 'Марки';
            MOVE BOX (l);  
        }
    }
    specContainer2{
        NEW lots2{
            caption = 'Марки';
            MOVE BOX (lt);
        }
    }
}