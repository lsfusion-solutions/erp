MODULE CostCardOrder;

REQUIRE PricingProductionOutput, BOMNutrition, PurchaseShipment;

NAMESPACE Production;

// ----------------  Калькуляционная карта ------------------- //

calcMultiplier(Sku sku, Order order)= OVERRIDE multiplier(sku, order), (1.000 IF sku IS Sku AND order IS Order);

quantity (BOM BOM, Sku sku, Order order) = (GROUP
    SUM recBruttoNodeQuantity (BOM, sku, date(order)) * calcMultiplier(sku, order)) IF bruttoQuantity(sku, order);
quantity 'Норма' (ProductDetail productDetail, Sku sku) = quantity(BOM(productDetail), sku, order(productDetail));

quantityInBOM 'Кол-во изделий в спец.'(ProductDetail productDetail)= quantity(product(productDetail));
productsSumInBOM 'Сумма изделий в спец.' = round((quantityInBOM(ProductDetail productDetail) * price(productDetail)), currency(productDetail));

//--
descriptionBOM 'Спецификация'(ProductDetail productDetail) = description(BOM(productDetail));
shortNameUOMProduct 'Ед. изм. в спец.'(ProductDetail productDetail)= shortNameUOM(product(productDetail));
recipes 'Номер по сборнику рецептов' (ProductDetail productDetail)= recipes(product(productDetail));
//--
componentsSumInBOM 'Сумма компонента для изделий в спец.' (ProductDetail productDetail)= componentsPrice(productDetail)*quantityInBOM(productDetail);
//--
VATMarkupSumInBOM 'НДС и надбавка в спец' (ProductDetail productDetail) =  productsSumInBOM(productDetail) (-) componentsSumInBOM(productDetail);
retailVATSumInBOM 'Сумма НДС в спец' (ProductDetail productDetail) = [ X*Y/(100+Y)](VATMarkupSumInBOM(productDetail), valueVAT(productDetail));
retailMarkupSumInBOM 'Сумма надбавки' (ProductDetail productDetail) =  VATMarkupSumInBOM(productDetail) (-) retailVATSumInBOM(productDetail);

VATMarkupSumInBOMIsVAT 'Сумма НДС' (ProductDetail productDetail) = (round([ X*Y/(100+Y)](productsSumInBOM(productDetail), valueVAT(productDetail)), currency(productDetail)));
retMarkupSumIsVAT 'Сумма надбавки' (ProductDetail productDetail) = (round(productsSumInBOM(productDetail) (-) VATMarkupSumInBOMIsVAT(productDetail) (-) componentsSumInBOM(productDetail), currency(productDetail)));

overRetailVATSumInBOM 'Сумма НДС' (ProductDetail d) = IF VATProduct(d) THEN VATMarkupSumInBOMIsVAT(d) ELSE retailVATSumInBOM(d);
overRetailMarkupSumInBOM 'Сумма надбавки' (ProductDetail d) = IF VATProduct(d) THEN retMarkupSumIsVAT(d) ELSE retailMarkupSumInBOM(d);

EXTEND FORM orders
    PROPERTIES (pd) VATProduct, productsSumInBOM, VATMarkupSumInBOMIsVAT, retMarkupSumIsVAT, componentsSumInBOM
;


retailMarkupPrice 'Цена надбавки (ед.)' (ProductDetail productDetail)= overRetailMarkupSumInBOM(productDetail)/
    quantityInBOM(productDetail);
retailVATPrice 'Цена НДС (ед.)' (ProductDetail productDetail)= overRetailVATSumInBOM(productDetail)/
    quantityInBOM(productDetail);

//--


//--  Нетто

nettoQuantity (BOM BOM, Sku sku, Order order) = (GROUP
    SUM recNettoNodeQuantity (BOM, sku) * calcMultiplier(sku, order)) IF bruttoQuantity(sku, order);

nettoQuantity 'Нетто' (ProductDetail productDetail, Sku sku) = nettoQuantity(BOM(productDetail), sku, order(productDetail));
fats 'Жиры'(ProductDetail productDetail, Item sku) = nettoQuantity (productDetail, sku)*netWeight(sku)*10*fats(sku);
carbohydrates 'Углеводы' (ProductDetail productDetail, Item sku) = nettoQuantity (productDetail, sku)*netWeight(sku)*10*carbohydrates(sku);
proteins 'Белки' (ProductDetail productDetail, Item sku) = nettoQuantity (productDetail, sku)*netWeight(sku)*10*proteins(sku);
energy 'Энерг.ценность'(ProductDetail productDetail, Item sku) = nettoQuantity (productDetail, sku)*netWeight(sku)*10*energy(sku);

fatsInBOM 'Жиры'(ProductDetail productDetail) = GROUP SUM fats(productDetail, Item sku);
carbohydratesInBOM 'Углеводы'(ProductDetail productDetail) = GROUP SUM carbohydrates(productDetail, Item sku);
proteinsInBOM 'Белки'(ProductDetail productDetail) = GROUP SUM proteins(productDetail, Item sku);
energyInBOM 'Энерг.ценность'(ProductDetail productDetail) = GROUP SUM energy(productDetail, Item sku);

fats 'Жиры (ед.)'(ProductDetail productDetail) = fatsInBOM(productDetail) / (quantityInBOM(productDetail)*10*netWeight[Item](sku(productDetail)));
carbohydrates 'Углеводы (ед.)'(ProductDetail productDetail) = carbohydratesInBOM(productDetail) / (quantityInBOM(productDetail)*10*netWeight[Item](sku(productDetail)));
proteins 'Белки (ед.)'(ProductDetail productDetail) = proteinsInBOM(productDetail) / (quantityInBOM(productDetail)*10*netWeight[Item](sku(productDetail)));
energy 'Энерг.ценность (ед.)'(ProductDetail productDetail) = energyInBOM(productDetail) / (quantityInBOM(productDetail)*10*netWeight[Item](sku(productDetail)));

netWeight 'Вес нетто, кг' (Product product)= netWeight[Item](sku(product));
descriptionBOM 'Спецификация'(Product product) = description(BOM(product));
///////////////////////////////////////////////////////////////////////////////////////////////////////
idBarcode 'Штрихкод' = idBarcode(sku(ComponentDetail d));
//quantityProductDetailComponentDetail 'Кол-во с учетом процента цены' (pd, cd)= quantityComponentDetail(cd) * pricePercentProduct(productProductDetail(pd)) / 
//    (100*quantityProductsBOMOrder(BOMComponentDetail(cd),orderComponentDetail(cd)) IF quantityProductsBOMOrder(BOMComponentDetail(cd),orderComponentDetail(cd))!=0) /
//    quantityProduct(productProductDetail(pd) IF quantityProduct(productProductDetail(pd))!= 0);
//quantityInBOMProductDetailComponentDetail 'Кол-во с учетом процента цены по всей спецификации' (pd, cd)= quantityComponentDetail(cd) * pricePercentProduct(productProductDetail(pd)) / 
//    (100*quantityProductsBOMOrder(BOMComponentDetail(cd),orderComponentDetail(cd)) IF quantityProductsBOMOrder(BOMComponentDetail(cd),orderComponentDetail(cd))!=0);    
quantity 'Кол-во с учетом процента цены' (ProductDetail pd, ComponentDetail cd)= (quantity(cd) * pricePercent(pd) /
    (100*quantityProducts(BOM(cd),order(cd)) IF quantityProducts(BOM(cd),order(cd))!=0) /
    quantity(product(pd) IF quantity(product(pd))!= 0) ) IF order(pd)==order(cd) AND BOM(cd) == BOM(pd);
quantityInBOM 'Кол-во с учетом процента цены по всей спецификации' (ProductDetail pd, ComponentDetail cd)= (quantity(cd) * pricePercent(pd) /
    (100*quantityProducts(BOM(cd),order(cd)) ) IF quantityProducts(BOM(cd),order(cd))!=0) IF order(pd)==order(cd) AND BOM(cd) == BOM(pd);

componentsSum 'Сумма компонента (с/с)' (ProductDetail pd,ComponentDetail cd)=  quantityInBOM(pd, cd) *price(cd);

VATSum 'Сумма НДС' (ProductDetail pd,ComponentDetail cd)= IF VAT(cd)
    THEN componentsSum(pd,cd) *valueVAT(cd)/100
    ELSE componentsSum(pd,cd) *(valueVAT(cd)/(100+valueVAT(cd)));

totalVATSum 'Сумма НДС компонентов' (ProductDetail pd) = GROUP SUM VATSum (pd,ComponentDetail cd) MATERIALIZED;
skip = DATA LOCAL BOOLEAN (ProductDetail);
costCardOrderReportsFileOver() = ABSTRACT STRING ();
costCardOrderReportsFile() = OVERRIDE costCardOrderReportsFileOver(), 'Production_costCardOrder_o.jrxml';

FORM costCardOrder 'Калькуляционная карта' // с заменами

    OBJECTS o = Order PANEL SUBREPORT
    PROPERTIES(o) nameProductsLegalEntityStock,  addressProductsLegalEntityStock,
        nameComponentsStock, nameProductsStock, nameNumerator, number, series, seriesNumber,
        date, time, fromDate, toDate, note, quantityProductDetail, quantityComponentDetail

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) index, idBarcodeSku, descriptionBOM, quantityInBOM, shortNameUOMProduct, nameSku,  nameProduct, shortNameUOM, quantity,
        componentsPrice, componentsSumInBOM, //premiumComponentsSumInBOMProductDetail, 
        totalVATSum, overRetailMarkupSumInBOM
    PROPERTIES(pd) markup, price, productsSumInBOM, valueVAT,
        retailMarkupPrice, retailVATPrice, overRetailVATSumInBOM, recipes

    FILTERS order(pd)==o,
        NOT skip(pd)

    OBJECTS cd = ComponentDetail
    PROPERTIES(pd,cd)quantityInBOM, componentsSum, VATSum
    PROPERTIES(cd) nameSku, idBarcode, shortNameUOMSku, price, valueVAT

    FILTERS order(cd)==o
    FILTERS BOM(cd)== BOM(pd)
    REPORTFILES o costCardOrderReportsFile()    
;

printCostCard 'Калькуляционная карта' (Order order)  {
    skip(ProductDetail d) <- NULL;
    PRINT costCardOrder OBJECTS o = order;
} IMAGE 'print.png' IN print;

printCostCard 'Калькуляционная карта' (ProductDetail pd)  {
    skip(ProductDetail d) <- order(pd)==order(d) AND d!=pd;
    PRINT costCardOrder OBJECTS o = order(pd);
} IMAGE 'print.png' IN print;
printCostCardXls 'Калькуляционная карта (xls)' (Order order)  {
    skip(ProductDetail d) <- NULL;
    PRINT costCardOrder OBJECTS o = order XLSX;
} IMAGE 'print.png' IN print;

printCostCardXls 'Калькуляционная карта (xls)' (ProductDetail pd)  {
    skip(ProductDetail d) <- order(pd)==order(d) AND d!=pd;
    PRINT costCardOrder OBJECTS o = order(pd) XLSX;
} IMAGE 'print.png' IN print;

coeffSubstitute (ComponentDetail cd) = substituteQuantity(cd) /  bruttoQuantity(cd) IF sku(cd) != bruttoSku(cd);
priceCard (ComponentDetail cd)  = price(cd)*coeffSubstitute(cd);

bruttoQuantityInBOM 'Кол-во с учетом процента цены по всей спецификации' (ProductDetail pd, ComponentDetail cd)= (bruttoQuantity(cd) * pricePercent(pd) /
    (100*quantityProducts(BOM(cd),order(cd)) ) IF quantityProducts(BOM(cd),order(cd))!=0) IF order(pd)==order(cd) AND BOM(cd) == BOM(pd);

FORM costCardOrderNotSubstitute 'Калькуляционная карта' // без замен

    OBJECTS o = Order PANEL SUBREPORT
    PROPERTIES(o) nameProductsLegalEntityStock, addressProductsLegalEntityStock,
        nameComponentsStock, nameProductsStock, nameNumerator, number, series, seriesNumber,
        date, time, fromDate, toDate, note, quantityProductDetail, quantityComponentDetail

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) index, idBarcodeSku, descriptionBOM, quantityInBOM, shortNameUOMProduct, nameSku,  nameProduct, shortNameUOM, quantity,
        componentsPrice, componentsSumInBOM, //premiumComponentsSumInBOMProductDetail, 
        totalVATSum, overRetailMarkupSumInBOM
    PROPERTIES(pd) markup, price, productsSumInBOM, valueVAT,
        retailMarkupPrice, retailVATPrice, overRetailVATSumInBOM, recipes

    FILTERS order(pd)==o

    OBJECTS cd = ComponentDetail
    PROPERTIES(pd,cd)quantityInBOM, bruttoQuantityInBOM, componentsSum, VATSum
    PROPERTIES(cd) nameSku, idBarcode, shortNameUOMSku, price, valueVAT
    PROPERTIES (cd) bruttoNameSku, bruttoIdBarcodeSku, bruttoIdSku, bruttoShortNameUOMSku, coeffSubstitute, priceCard

    FILTERS order(cd)==o
    FILTERS BOM(cd)== BOM(pd)
;
printCostCardNotSubstitute 'Калькуляционная карта (без замен)' (Order order)  { PRINT costCardOrderNotSubstitute OBJECTS o = order; }   IMAGE 'print.png' IN print;

seriesNumberBatch 'Серия/номер накладной' (ComponentDetail b) = seriesNumber(batch(b));
dateBatch 'Дата накладной' (ComponentDetail b) = date(batch(b));
fullNameSupplierBatch 'Поставщик' (ComponentDetail b) = fullNameSupplier(batch(b));

supplierPrice 'Цена поставщика' (ComponentDetail cd) = cost(batch(cd));

quantityProductDetails 'Кол-во' (ComponentDetail cd) = GROUP
    SUM quantity(ProductDetail pd) IF
        BOM(cd)== BOM(pd) AND order(cd) == order(pd);
percOrder 'Норма выхода, %' (ProductDetail pd,ComponentDetail cd)=  quantity(pd) *100 /  (quantity(cd) IF (quantity(cd)!=0));
percProductDetail'Норма выхода, %' (ComponentDetail cd) = GROUP
    SUM percOrder(ProductDetail pd,cd) IF
        BOM(cd)== BOM(pd) AND order(cd) == order(pd);
//percOrderProductDetail 'Норма выхода, %' (d)= quantityProductDetail(d) *100 /  (quantityProductDetailOrder(orderProductDetail(d)) IF quantityProductDetailOrder(orderProductDetail(d))!=0);               


sumProductDetails 'Сумма' (ComponentDetail cd) = GROUP
    SUM sum(ProductDetail pd) IF
        BOM(cd)== BOM(pd) AND order(cd) == order(pd);

diffSum (ComponentDetail cd) = sum(cd)- sumProductDetails(cd);

calcRetailMarkup 'Надбавка' (ComponentDetail cd)  = [ round2(((X/Z*100/(100+Y))-1)*100)](
        price(cd),
        supplierPrice(cd) IF supplierPrice(cd) != 0.0,
        valueVAT(cd));


FORM cutting 'Разруб'

    OBJECTS o = Order PANEL SUBREPORT
    PROPERTIES(o) nameProductsLegalEntityStock, fullNameProductsLegalEntityStock, addressProductsLegalEntityStock,
        nameComponentsStock, nameProductsStock, nameNumerator, number, series, seriesNumber,
        date, time, fromDate, toDate, note, quantityProductDetail, quantityComponentDetail,
        sumProductDetail, addressProductsStock, addressComponentsStock

    OBJECTS cd = ComponentDetail

    PROPERTIES(cd) nameSku, idBarcode, shortNameUOMSku, price, valueVAT,
        supplierPrice, seriesNumberBatch, fullNameSupplierBatch, dateBatch,
        nameBatch, sum, diffSum, calcRetailMarkup, quantity,
        percProductDetail, quantityProductDetails, sumProductDetails
    FILTERS order(cd)==o

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) index, idProduct, idBarcodeSku, descriptionBOM, quantityInBOM,
        shortNameUOMProduct, nameSku,  nameProduct, shortNameUOM, quantity,
        componentsPrice, componentsSumInBOM, //premiumComponentsSumInBOMProductDetail, 
        totalVATSum, overRetailMarkupSumInBOM, sum, calcPriceCoeff

    PROPERTIES(pd,cd)quantityInBOM, componentsSum, VATSum,
        percOrder
    PROPERTIES(pd) markup, price, productsSumInBOM, valueVAT,
        retailMarkupPrice, retailVATPrice, overRetailVATSumInBOM, recipes

    FILTERS order(pd)==o

    FILTERS BOM(cd)== BOM(pd)
;
printCutting 'Разруб' (Order order)  { PRINT cutting OBJECTS o = order; }   IMAGE 'print.png' IN print;


FORM actOfCutting 'Акт о разделке сырья'

    OBJECTS o = Order PANEL SUBREPORT
    PROPERTIES(o) nameProductsLegalEntityStock, fullNameProductsLegalEntityStock, addressProductsLegalEntityStock,
        nameComponentsStock, addressComponentsLegalEntityStock, nameProductsStock, nameNumerator, number, series, seriesNumber,
        date, time, fromDate, toDate, note, quantityProductDetail, quantityComponentDetail,
        sumProductDetail, addressProductsStock, addressComponentsStock, outputQuantityProductDetail, outputProductsSumProductDetail

    OBJECTS cd = ComponentDetail

    PROPERTIES(cd) nameSku, idBarcode, idComponent, shortNameUOMSku, price, valueVAT,
        supplierPrice, seriesNumberBatch, fullNameSupplierBatch, dateBatch,
        nameBatch, sum, diffSum, calcRetailMarkup, quantity,
        percProductDetail, quantityProductDetails, sumProductDetails
    FILTERS order(cd)==o

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) index, idProduct, idBarcodeSku, descriptionBOM, quantityInBOM,
        shortNameUOMProduct, nameSku,  nameProduct, shortNameUOM, quantity,
        componentsPrice, componentsSumInBOM, //premiumComponentsSumInBOMProductDetail, 
        totalVATSum, overRetailMarkupSumInBOM, sum, calcPriceCoeff, outputQuantity, outputProductsSum

    PROPERTIES(pd,cd)quantityInBOM, componentsSum, VATSum,
        percOrder
    PROPERTIES(pd) markup, price, productsSumInBOM, valueVAT,
        retailMarkupPrice, retailVATPrice, overRetailVATSumInBOM, recipes

    FILTERS order(pd)==o

    FILTERS BOM(cd)== BOM(pd)
;
printActOfCutting 'Акт о разделке сырья' (Order order)  { PRINT actOfCutting OBJECTS o = order; }   IMAGE 'print.png' IN print;
intakeSheetOrderCustom = DATA LOCAL STRING();
reportFilePrintIntakeSheetOrder () = OVERRIDE intakeSheetOrderCustom(), 'Production_intakeSheetOrder_o.jrxml';
fillIntakeSheetOrder ABSTRACT LIST (Order);
FORM intakeSheetOrder 'Заборный лист'

    OBJECTS o = Order PANEL SUBREPORT reportFilePrintIntakeSheetOrder()
    PROPERTIES(o) fullNameProductsLegalEntityStock, nameProductsLegalEntityStock, nameComponentsStock, nameProductsStock, addressProductsStock,
        number, series, seriesNumber,
        date, time, fromDate, toDate, addressProductsLegalEntityStock

    OBJECTS pd=ProductDetail
    PROPERTIES(pd) index, idBarcodeSku, descriptionBOM, nameSku, shortNameUOM,
        componentsPrice, price
    ORDERS nameSku(pd)

    FILTERS order(pd)==o

;
printIntakeSheet 'Заборный лист' (Order order)  {
    fillIntakeSheetOrder(order);
    PRINT intakeSheetOrder OBJECTS o = order;
} IMAGE 'print.png' IN print;
EXTEND FORM orders
    PROPERTIES(o)  printCostCard, printCostCardNotSubstitute, printIntakeSheet, printCutting, printActOfCutting
;

select = DATA LOCAL BOOLEAN (DATE, Product);

FORM technologicalCardsProduct 'Технологическая карта'
    OBJECTS dt=DATE PANEL SUBREPORT
    PROPERTIES (dt) date = VALUE

    OBJECTS p = Product
    PROPERTIES(p) index, nameSku, idBarcodeSku, shortNameUOM, quantity, fats,
        carbohydrates, proteins, energy, recipes
    FILTERS       select(dt,p)

    OBJECTS c = Component
    PROPERTIES(c) index, nameMaterial, idBarcodeSku, shortNameUOM, nettoQuantity
    PROPERTIES(c,dt) bruttoQuantity
    PROPERTIES(c) fats, carbohydrates, proteins, energy
    FILTERS       BOM(p) == BOM(c)

;

printTechnologicalCard 'Технологическая карта'(BOM BOM)   {
    DIALOG dialogDate OBJECTS d INPUT DO {
        select(d, Product product) <- BOM(product) == BOM;
        PRINT technologicalCardsProduct OBJECTS dt = d;
    }
} IMAGE 'print.png' IN print;

EXTEND FORM BOMs
    PROPERTIES(b)  printTechnologicalCard
;
DESIGN BOMs {
    printTab {
        MOVE GROUP(print,b);
    }
}

printTechnologicalCard 'Технологическая карта'(Order order)   {
    NEWSESSION {

        FOR quantity(Product product,order) DO {
            select(DATE date,product) <- product IS Product WHERE date == date(order);
        }
        PRINT technologicalCardsProduct  OBJECTS dt = date(order) ;

        apply();
    }
} IMAGE 'print.png' IN print;

EXTEND FORM orders
    PROPERTIES(o)  printTechnologicalCard
;
FORM actStudyOfCulinaryBOM 'Акт контрольной проработки'

    OBJECTS dt=DATE PANEL SUBREPORT
    PROPERTIES (dt) date = VALUE

    OBJECTS b=BOM PANEL
    PROPERTIES(b) name, description, note
    PROPERTIES(b) READONLY quantityProduct, nettoQuantityComponent, pricePercent,
        nameActStudyOfCulinaryCommittee, nameCompany, nameEmployeeCommittee READONLY, actStudyOfCulinaryCommittee
    OBJECTS p = Product
    PROPERTIES(p) index, idBarcodeSku, nameSku, shortNameUOM, quantity, pricePercent, netWeight, descriptionBOM

    FILTERS       BOM(p) == b

    OBJECTS c = Component
    PROPERTIES(c) index, idBarcodeSku, nameMaterial, shortNameUOM, nettoQuantity
    PROPERTIES(c,dt) wastage, bruttoQuantity

    FILTERS       BOM(c) == BOM(p)

    OBJECTS e=Employee
    PROPERTIES(e) READONLY name[Contact], namePosition
    FILTERS       inCommittee(b,e)

;
printActStudyOfCulinary 'Акт контрольной проработки'(BOM BOM)   {
    DIALOG dialogDate OBJECTS d INPUT DO
        PRINT actStudyOfCulinaryBOM  OBJECTS dt = d, b = BOM ;
} IMAGE 'print.png' IN print;

EXTEND FORM BOMs
    PROPERTIES(b)  printActStudyOfCulinary
;

