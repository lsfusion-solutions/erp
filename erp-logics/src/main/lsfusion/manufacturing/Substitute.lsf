MODULE  Substitute;

REQUIRE BOM;

// ---------------- Замена ------------------- //

CLASS Substitute 'Замена';
TABLE substitute(Substitute);

fromSku = DATA Sku(Substitute);
idFromSku 'Код товара с' (Substitute substitute)= id(fromSku(substitute)) CHARWIDTH 10;
nameFromSku 'Товар с' (Substitute substitute)= name(fromSku(substitute)) IN id;

toSku = DATA Sku(Substitute);
idToSku 'Код товара на' (Substitute substitute)= id(toSku(substitute)) CHARWIDTH 10;
nameToSku 'Товар на' (Substitute substitute)= name(toSku(substitute)) IN id;

uniqueSubstituteFromTo = GROUP AGGR Substitute substitute WHERE substitute IS Substitute BY fromSku(substitute), toSku(substitute);
countSubstituteFromTo = GROUP SUM 1 BY fromSku(Substitute substitute), toSku(substitute);
countSubstitutes = GROUP SUM 1 BY fromSku(Substitute substitute);

lastSubstituteFrom = GROUP LAST Substitute substitute
                                     ORDER substitute
                                     BY   fromSku(substitute);

lastSubstituteTo = GROUP LAST Substitute substitute
                                     ORDER substitute
                                     BY   toSku(substitute);

multiplier 'Коэффициент' = DATA NUMERIC[10,5] (Substitute) IN id;

allBOMs 'Во всех спецификациях'= DATA BOOLEAN (Substitute);
allBOMs(Substitute substitute) <- TRUE WHEN SET(substitute IS Substitute);

//TABLE substituteComponent(Substitute, Component);
//includeSubstituteComponent 'Вкл.'= DATA BOOLEAN (Substitute, Component);
//excludeSubstituteComponent 'Искл.'= DATA BOOLEAN (Substitute, Component);
//toShowIncludeSubstitute (substitute) = substitute IS Substitute AND NOT allBOMsSubstitute(substitute);
//
//useSubstituteComponent 'Можно использовать' (substitute, component) = 
//    (allBOMsSubstitute(substitute) AND component IS Component AND NOT excludeSubstituteComponent(substitute, component)) OR 
//    (includeSubstituteComponent(substitute, component) AND NOT allBOMsSubstitute(substitute));
//
//nameBOMComponent 'Спецификация' (component) = nameBOM(BOMComponent(component));
//seriesNumberBOMComponent 'Серия/номер спецификации' (component)= seriesNumberBOM(BOMComponent(component));
//
//countComponentMaterial (material) = GROUP SUM 1 BY materialComponent(component);

TABLE substituteBOM(Substitute, BOM);
include 'Вкл.'= DATA BOOLEAN (Substitute, BOM);
exclude 'Искл.'= DATA BOOLEAN (Substitute, BOM);
toShowInclude (Substitute substitute) = substitute IS Substitute AND NOT allBOMs(substitute);

use 'Можно использовать' (Substitute substitute, BOM BOM) = 
    (allBOMs(substitute) AND BOM IS BOM AND NOT exclude(substitute, BOM)) OR 
    (include(substitute, BOM) AND NOT allBOMs(substitute)) COMPLEX;

countComponent (material) = GROUP SUM 1 BY material(Component component);

relation (material, BOM)  = GROUP SUM 1 BY material(Component c), BOM(c); 

useDefaultComponentFilter 'Не использовать фильтр по спецификациям по умолчанию в заменах' = DATA BOOLEAN ();

EXTEND FORM options
    PROPERTIES () useDefaultComponentFilter
;

DESIGN options {
    manufacturing {
        MOVE PROPERTY(useDefaultComponentFilter());
    }
}   

defaultFilterSubstitute (Sku sku) = IF useDefaultComponentFilter() THEN sku IS Sku ELSE TRUE IF countComponent(sku);

FORM substitute 'Замена'

    OBJECTS sk = Sku
    PROPERTIES(sk) READONLY name, idBarcode, id SHOWIF showIDs(), shortNameUOM
    ORDERS name(sk)
    FILTERGROUP filters
        FILTER 'Есть в спецификациях' defaultFilterSubstitute(sk) 'F11' DEFAULT
        
    FILTERGROUP count
        FILTER 'Есть замена' countSubstitutes(sk) 'F9'        

    OBJECTS s=Substitute
    PROPERTIES(s) idFromSku SHOWIF showIDs(), nameFromSku, idToSku SHOWIF showIDs(), nameToSku, multiplier, allBOMs
    PROPERTIES(s) NEW, DELETE GRID

    FILTERS fromSku(s) == sk

    OBJECTS b = BOM
    PROPERTIES(b) READONLY seriesNumber, products
    PROPERTIES(s,b) SHOWIF toShowInclude(s) include
    PROPERTIES(s,b) SHOWIF allBOMs(s) exclude
    ORDERS seriesNumber(b)

    FILTERS relation(sk,b)
;

DESIGN substitute {
    BOX {
        size = (1024, 768);

        NEW documentContainer BEFORE TOOLBARBOX {
            fill = 1;
            type = CONTAINERV;
            MOVE BOX(sk);
            NEW row {
                fill = 1;
                horizontal = TRUE;
                MOVE BOX(s) {fill = 1.5;}
                MOVE BOX(b);
            }
        }
    }
}
NAVIGATOR {
    manufacturingMasterData {
        NEW substitute;
    }
}
