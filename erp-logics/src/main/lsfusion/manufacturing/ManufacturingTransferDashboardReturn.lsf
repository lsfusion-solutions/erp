MODULE ManufacturingTransferDashboardReturn;

REQUIRE PurchaseSaleReturnInvoice, ManufacturingTransferDashboard;

NAMESPACE SaleReturn;

FORM manufacturingTransferReturn 'Возврат с цеха производства'
    OBJECTS d = DATE PANEL
    PROPERTIES(d) VALUE
    
    OBJECTS pri = PurchaseReturn.Invoice
    PROPERTIES (pri) READONLY isClosed  
    PROPERTIES (pri) READONLY BACKGROUND background(pri) isPosted,
                                        number, series, date, time                                
    PROPERTIES (pri) READONLY nameSupplierStock, nameCustomerStock, statusInvoice
    PROPERTIES (pri) NEWSESSION NEW[PurchaseReturn.UserInvoice], EDIT SHOWIF isOpened(pri), DELETE SHOWIF isOpened(pri) 

    FILTERS operation(pri) == cateringPurchaseOperation()
    
    FILTERGROUP saleDate
        FILTER 'На дату' date(pri) == d DEFAULT 

    FILTERGROUP invoiced
        FILTER 'Не создан возврат' NOT invoiced(pri) DEFAULT 
    
    OBJECTS sri = SaleReturn.UserInvoice 
    PROPERTIES (sri) READONLY isClosed
    PROPERTIES (sri) READONLY BACKGROUND background(sri) isPosted,
                                        number, series, date, time                                
    PROPERTIES (sri) READONLY nameSupplierStock, nameCustomerStock
    PROPERTIES (sri) NEWSESSION EDIT SHOWIF isOpened(sri), DELETE SHOWIF isOpened(sri) 
    FILTERS operation(sri) == cateringSaleOperation()
    FILTERGROUP purchaseDate
        FILTER 'На дату' date(sri) == d DEFAULT 
;

@extendFormFilterAccessStock(Invoice, sri, manufacturingTransferReturn, supplierStock, company);

@extendFormFilterAccessStock(UserInvoice, pri, manufacturingTransferReturn, customerStock, company);

DESIGN manufacturingTransferReturn {
    MOVE BOX(d);
    NEW pane {
        fill = 1;
        MOVE BOX(pri) {
            caption = 'Отгрузка-возврат с цеха';
        }
        NEW tab {
            fill = 1;
            tabbed = TRUE;        
            MOVE BOX(sri) {
                caption = 'Поступление-возврат с цеха';
            }
            NEW printTab {
                fill = 1;
                caption = 'Печатные формы';
            }
        }
    }
    
    MOVE TOOLBARBOX;
}


NAVIGATOR {
    manufacturingDashboardNavigator {
        NEW manufacturingTransferReturn AFTER manufacturingTransfer;
    }
}

createManufacturingPurchaseSaleReturn  ABSTRACT LIST (PurchaseReturn.InvoiceDetail, SaleReturn.UserInvoiceDetail);
createManufacturingPurchaseSaleReturn  ABSTRACT LIST (PurchaseReturn.Invoice, SaleReturn.UserInvoice);

skipInvoiceDetailBatch = ABSTRACT VALUE BOOLEAN (PurchaseReturn.InvoiceDetail);

createManufacturingPurchaseSaleReturn 'Создать возврат с цеха'(PurchaseReturn.Invoice pri)  { 
	NEWSESSION {	
	        NEW sri = SaleReturn.UserInvoice {
	            supplier(sri) <- supplier(pri);
	            customer(sri) <- customer(pri);
	            supplierStock(sri) <- supplierStock(pri);
	            customerStock(sri) <- customerStock(pri);
	            number(sri) <- number(pri);
	            series(sri) <- series(pri);
	            note(sri) <- note(pri);
	            currency(sri) <- currency(pri);
	            operation(sri) <- cateringSaleOperation();
                createManufacturingPurchaseSaleReturn(pri,sri);
	            FOR invoice(PurchaseReturn.InvoiceDetail prid) == pri NEW srid = SaleReturn.UserInvoiceDetail DO {
	    
	                userInvoice(srid) <- sri;
	                PurchaseSaleReturnInvoice.invoiceDetail(srid) <- prid;
	                SaleReturn.invoiceDetail(srid) <- SalePurchaseInvoice.invoiceDetail(invoiceDetail(batch(prid)));
	                
	                sku(srid) <- OVERRIDE sku(SalePurchaseInvoice.invoiceDetail(invoiceDetail(batch(prid)))), toSku(lastSubstituteFrom(sku(prid)));
	                quantity (srid) <- quantity(prid) * coeffSku(batch(prid));
	                VAT (srid) <- VAT(SalePurchaseInvoice.invoiceDetail(invoiceDetail(batch(prid)))) WHERE NOT skipInvoiceDetailBatch(prid);
	                valueVAT (srid) <- valueVAT(SalePurchaseInvoice.invoiceDetail(invoiceDetail(batch(prid)))) WHERE NOT skipInvoiceDetailBatch(prid);
	                price (srid) <- price(SalePurchaseInvoice.invoiceDetail(invoiceDetail(batch(prid)))) WHERE NOT skipInvoiceDetailBatch(prid);
	                invoicePrice (srid) <- invoicePrice(SalePurchaseInvoice.invoiceDetail(invoiceDetail(batch(prid)))) WHERE NOT skipInvoiceDetailBatch(prid);	                
                    createManufacturingPurchaseSaleReturn(prid,srid);
	                shipmentPrice (srid) <- shipmentPrice(SalePurchaseInvoice.invoiceDetail(invoiceDetail(batch(prid)))) WHERE NOT skipInvoiceDetailBatch(prid);
	            }
	            SHOW SaleReturn.userInvoice OBJECTS i = sri DOCKED NOCANCEL; 
	        }
	}
} TOOLBAR;

EXTEND FORM manufacturingTransferReturn
    PROPERTIES (pri) createManufacturingPurchaseSaleReturn
;