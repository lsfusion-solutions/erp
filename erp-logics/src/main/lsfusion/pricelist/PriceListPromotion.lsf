MODULE PriceListPromotion;

REQUIRE PriceListOperation, PriceListBefore;

NAMESPACE PriceList;

isPromotion 'Является акцией' = DATA BOOLEAN (Operation);
promotionPriceListOperation =GROUP MIN Operation o IF isPromotion(o);
color 'Цвет' = DATA COLOR (Operation);

EXTEND FORM operation PROPERTIES isPromotion(o), color(o);
DESIGN operation { 
    paramsContainer { 
        MOVE PROPERTY(isPromotion(o)); 
        MOVE PROPERTY(color(o)); 
    } 
}

promotionPriceListType = DATA DataPriceListType();
namePromotionPriceListType 'Вид цены акции' = name(promotionPriceListType());

promotionStartDateTime 'Дата/время определения акций' = DATA DATETIME () PREREAD;

TABLE promotionPriceListDetailStock (PriceListDetail, Stock);
isPromotion (PriceListDetail d) = (in(d, promotionPriceListType()) OR NOT promotionPriceListType()) AND isPromotion(operation(d)) AND isPosted(d) AND NOT toDateTime(d) < promotionStartDateTime() AND NOT exclude(d); 
isPromotion (PriceListDetail d, Stock st) = isPromotion(d) AND in(priceList(d), st) MATERIALIZED TABLE promotionPriceListDetailStock;

sku (PriceListDetail d, Stock st) = sku(d) IF isPromotion(d, st) MATERIALIZED TABLE promotionPriceListDetailStock;

fromDateTime (PriceListDetail d, Stock st) = fromDateTime(d) IF isPromotion(d, st) MATERIALIZED TABLE promotionPriceListDetailStock;
fromDate(PriceListDetail d, Stock st) = DATE(fromDateTime(d, st));

toDateTime (PriceListDetail d, Stock st) = toDateTime(d) IF isPromotion(d, st) MATERIALIZED TABLE promotionPriceListDetailStock;
toDate(PriceListDetail d, Stock st) = DATE(toDateTime(d, st));

INDEX sku(PriceListDetail d, Stock st), st, fromDateTime(d, st), d;
INDEX sku(PriceListDetail d, Stock st), fromDateTime(d, st), d;
INDEX Stock st, fromDateTime(PriceListDetail d, st), sku(d, st);

EXTEND FORM options
    PROPERTIES() namePromotionPriceListType, promotionStartDateTime 
;
DESIGN options {
    price {
        MOVE PROPERTY(namePromotionPriceListType());
        MOVE PROPERTY(promotionStartDateTime());
    }
}   
// просто последняя, может и не действующая
lastPromotionPriceListDetailB (Sku sk, DATETIME dt) = 
    GROUP LAST PriceListDetail d
          ORDER fromDateTime(d, Stock st), d
          WHERE fromDateTime(d, st) < dt
          BY sku(d, st) COMPLEX;

promotionPriceListDetailA (Sku sk, Stock st, DATETIME dt) = 
    GROUP LAST PriceListDetail d
          ORDER fromDateTime(d, st), d
          WHERE fromDateTime(d, st) <= dt AND NOT toDateTime(d, st) < dt
          BY sku(d, st) COMPLEX;
prevPromotionPriceListDetailA (Sku sku, Stock stock, DATETIME dt) = PREV(promotionPriceListDetailA(sku, stock, dt));
          
promotionPriceListDetailA (Sku sk, Stock st, DATE dt) = 
  GROUP LAST PriceListDetail d
        ORDER fromDateTime(d, st), d
        WHERE fromDateTime(d, st) < DATETIME(sum(dt, 1)) AND NOT toDateTime(d, st) < DATETIME(dt)
        BY sku(d, st) COMPLEX;

// просто последняя, может и не действующая
lastPromotionPriceListDetail (Sku sk, Stock st) = GROUP LAST PriceListDetail d
                                                                           ORDER fromDateTime(d, st), d 
                                                                           BY sku(d, st) COMPLEX;

promotionPriceListDetailA (Sku sku, Stock stock) = 
    promotionPriceListDetailA(sku, stock, currentDateTime());
prevPromotionPriceListDetailA (Sku sku, Stock stock) = PREV(promotionPriceListDetailA(sku, stock));

inPromotionPriceListDetailA 'В акции' (Sku sku, Stock stock) =
    TRUE IF promotionPriceListDetailA(sku, stock);

promotionPriceBeforeA 'Цена до акции' (Sku sku, Stock stock, DATETIME dateTime) =
    priceBefore(promotionPriceListDetailA(sku, stock, dateTime));
    
fromDateTimePromotionA (Sku sk, Stock st, DATETIME dt) = fromDateTime(promotionPriceListDetailA(sk, st, dt));
toDateTimePromotionA (Sku sk, Stock st, DATETIME dt) = toDateTime(promotionPriceListDetailA(sk, st, dt));

colorPromotionA (Sku sk, Stock st, DATETIME dt) = color(operation(promotionPriceListDetailA(sk, st, dt)));
colorPromotionA (Sku sk, Stock st) = colorPromotionA(sk, st, currentDateTime());

fromDatePromotionA (Sku sk, Stock st, DATETIME dt) = fromDate(promotionPriceListDetailA(sk, st, dt));
toDatePromotionA (Sku sk, Stock st, DATETIME dt) = toDate(promotionPriceListDetailA(sk, st, dt));

// Добавляем фильтр и подсветку на форму текущих остатков
skipFilterPromotion = ABSTRACT BOOLEAN (Sku, Stock);
EXTEND FORM currentBalanceSkuStock
    FILTERGROUP promotion
        FILTER 'В акции' promotionPriceListDetailA(s, st) AND NOT skipFilterPromotion(s, st)
;
skipPromotionColor = ABSTRACT BOOLEAN ();
backgroundBalance(s,st) += WHEN promotionPriceListDetailA(s, st) AND NOT skipPromotionColor() THEN RGB(216,224,255);

prevPromotionDetail (PriceListDetail d, Stock st) =  
    PARTITION PREV d 
              ORDER fromDateTime(d, st), d 
              BY sku(d, st), st;

prevToDateTimePromotion 'Дата/время окончания предыдущей акции' (PriceListDetail d, Stock st) = toDateTime(prevPromotionDetail(d, st));
prevToDatePromotion 'Дата окончания предыдущей акции' (PriceListDetail d, Stock st) = DATE(prevToDateTimePromotion(d, st));

regularPeriodBeforePromotion 'Кол-во дней между акциями' (PriceListDetail d, Stock st) = daysBetweenDates(fromDate(d, st), prevToDatePromotion(d, st)) - 1;

lastRegularPromotionDetail = GROUP LAST PriceListDetail d
                                                      ORDER fromDateTime(d, Stock s), d
                                                      WHERE NOT regularPeriodBeforePromotion(d, s) < 2 AND fromDateTime(d, s) < currentDateTime()
                                                      BY sku(d, s), s;                                                      
                                                           