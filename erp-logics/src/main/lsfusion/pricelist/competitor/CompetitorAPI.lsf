MODULE CompetitorAPI;

REQUIRE Competitor, API;

NAMESPACE Competitor;

EXTEND CLASS Category {
    competitors 'Конкуренты'
}

getCompetitors () {
    IF limitAccess() AND NOT access(currentUser(), Category.competitors) THEN {
        EXPORT FROM 'Нет доступа к API';
        RETURN;
    }
    EXPORT JSON FROM id = Competitor c, name(c);
} @@api;

date = DATA LOCAL DATE ();
idCompetitor = DATA LOCAL LONG (INTEGER);
note = DATA LOCAL ISTRING[100]();

idSku = DATA LOCAL LONG (INTEGER);
price = DATA LOCAL NUMERIC[16,5](INTEGER);
competitorDetail = DATA LOCAL INTEGER (INTEGER);

FORM importPriceList
    PROPERTIES date = date(), note = note()
    
    OBJECTS competitors = INTEGER 
    PROPERTIES competitor = idCompetitor(competitors)
    
    OBJECTS details = INTEGER 
    PROPERTIES sku = idSku(details), price = price(details)
    FILTERS competitorDetail(details) = competitors
;

addPriceList (FILE f) {
    IF limitAccess() AND NOT access(currentUser(), Category.competitors) THEN {
        EXPORT FROM 'Нет доступа к API';
        RETURN;
    }
    
    IMPORT importPriceList JSON FROM f AS FILE;
    
    LOCAL sku = Sku (INTEGER);
    LOCAL competitor = Competitor(INTEGER);
    
    sku(INTEGER i) <- GROUP MAX Sku s IF LONG (s AS Sku) == idSku(i);
    competitor(INTEGER i) <- GROUP MAX Competitor s IF LONG (s AS Competitor) == idCompetitor(i);
    
    IF (GROUP SUM 1 IF price(INTEGER i) AND competitor(i) AND sku(i)) THEN NEW p = PriceList {

        date(p) <- date();
        note(p) <- note();

        FOR [GROUP SUM 1 IF price(INTEGER i) BY competitor(i)](Competitor c) DO {

            in(p, c) <- TRUE;
        }
        FOR [GROUP SUM 1 IF price(INTEGER i) BY sku(i)](Sku s) DO NEW d = PriceListDetail {

            priceList(d) <- p;
            sku(d) <- s;
            price(d, Competitor c) <- GROUP MIN price(INTEGER i) IF sku(i) == s AND c == competitor(competitorDetail(i));
        }
    }
    APPLY;
    IF canceled() THEN {
        EXPORT JSON FROM message = applyMessage();
        RETURN;
    }
}