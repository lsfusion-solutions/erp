MODULE Competitor;

REQUIRE MasterData, Authentication, Sku, PriceListType;

NAMESPACE Competitor;

CLASS Competitor 'Конкурент';
TABLE competitor (Competitor);

name 'Наименование' = DATA ISTRING[100] (Competitor) CHARWIDTH 15;
competitor = GROUP MAX Competitor c BY name(c);

order 'Порядок' = DATA INTEGER (Competitor);

FORM competitor 'Конкурент'
    OBJECTS c = Competitor PANEL
    PROPERTIES(c) name, order
    
    EDIT Competitor OBJECT c
;

FORM competitors 'Конкуренты'
    OBJECTS c = Competitor
    PROPERTIES(c) READONLY name, order
    PROPERTIES(c) NEWSESSION NEW, EDIT, DELETE
    ORDERS order(c), name(c)
;

FORM dialogCompetitors 'Конкуренты'
    OBJECTS c = Competitor
    PROPERTIES(c) READONLY name, order
    ORDERS order(c), name(c)
    
    LIST Competitor OBJECT c
;

CLASS PriceList 'Прайс';
TABLE priceList (PriceList);

id 'Код' = DATA ISTRING[100](PriceList);
priceList = GROUP AGGR PriceList p BY id(p);

note 'Примечание' = DATA ISTRING[100] (PriceList) CHARWIDTH 20;
date 'Дата' = DATA DATE (PriceList);
dateTimeCreated 'Дата/время создания' = DATA DATETIME (PriceList);

in 'Вкл.' = DATA BOOLEAN (PriceList, Competitor);
competitors 'Конкуренты' (PriceList p) = GROUP CONCAT name(Competitor c) IF in(p, c), ', ' ORDER order(c), name(c), c CHARWIDTH 20;

createdUser = DATA User(PriceList);
nameCreatedUser 'Создан пользователем' (PriceList p) = name(createdUser(p));

@defineDocumentHeaderNumber(PriceList, BPSTRING[2]);

@defineNumeratedDefault(PriceList, 'Прайсы конкурентов', 'ПК');

CLASS PriceListDetail 'Строка прайса';
TABLE priceListDetail (PriceListDetail);

priceList = DATA PriceList(PriceListDetail) NONULL DELETE;

id 'Код' = DATA ISTRING[100](PriceListDetail);
priceListDetail = GROUP AGGR PriceListDetail d BY id(d);

date 'Дата' (PriceListDetail d) = date(priceList(d));

in 'Вкл.' (PriceListDetail d, Competitor c) = in(priceList(d), c);
competitors (PriceListDetail d) = competitors(priceList(d));

sku = DATA Sku(PriceListDetail);
nameSku 'Товар' (PriceListDetail d) = name(sku(d));
idBarcodeSku 'Штрихкод' (PriceListDetail d) = idBarcode(sku(d));
idSku 'Код товара' (PriceListDetail d) = id(sku(d));

price 'Цена' = DATA NUMERIC[16,5](PriceListDetail, Competitor);
promotionPrice 'Цена (акция)' = DATA NUMERIC[16,5](PriceListDetail, Competitor);

price 'Цена конкурента' (Competitor c, Sku s, DATE d) = 
    GROUP LAST price(PriceListDetail dd, c) ORDER date(dd), dd WHERE date(dd) <= d AND in(dd, c) BY sku(dd);

promotionPrice 'Цена конкурента (акция)' (Competitor c, Sku s, DATE d) = 
    GROUP LAST promotionPrice(PriceListDetail dd, c) ORDER date(dd), dd WHERE date(dd) <= d AND in(dd, c) BY sku(dd);

createdUser(PriceList p) <- currentUser() WHEN SET (p IS PriceList);
dateTimeCreated(PriceList p) <- currentDateTime() WHEN SET (p IS PriceList);
date(PriceList p) <- currentDate() WHEN SET (p IS PriceList);

CLASS PriceListType 'Тип прайса';
TABLE priceListType (PriceListType);

name 'Наименование' = DATA ISTRING[100] (PriceListType) CHARWIDTH 30;
columnSku 'Колонка штрихкода в xls' = DATA INTEGER (PriceListType);

in 'Вкл.' = DATA BOOLEAN (PriceListType, Competitor);
column 'Колонка цены в xls' =  DATA INTEGER (PriceListType, Competitor);
competitors 'Конкуренты' (PriceListType t) = GROUP CONCAT name(Competitor c) IF in(t, c), ', ' ORDER order(c), name(c), c CHARWIDTH 20;

WHEN LOCAL SETCHANGED (column(PriceListType t, Competitor c)) AND NOT in(t, c) DO {
    in(t, c) <- TRUE;
}

FORM priceListType 'Тип прайса'
    OBJECTS o = PriceListType PANEL
    PROPERTIES(o) name, columnSku

    OBJECTS c = Competitor
    PROPERTIES in(o, c), order(c) READONLY, name(c) READONLY, column(o, c) 
    ORDERS order(c), name(c)

    EDIT PriceListType OBJECT o
;

FORM priceListTypes 'Типы прайса'
    OBJECTS o = PriceListType
    PROPERTIES(o) READONLY name, competitors
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
;

FORM dialogPriceListTypes 'Типы прайса'
    OBJECTS o = PriceListType
    PROPERTIES(o) READONLY name,competitors

    LIST PriceListType OBJECT o
;

type = DATA PriceListType(PriceList);
nameType 'Тип' (PriceList p) = name(type(p));

WHEN LOCAL CHANGED (type(PriceList p)) DO {
    in(p, Competitor c) <- in(type(p), c);
}

backgroundSku 'Цвет'  (d)= ABSTRACT CASE COLOR (PriceListDetail);

FORM priceList 'Прайс конкурентов'
    OBJECTS p = PriceList PANEL
    PROPERTIES(p) number, series, date, nameType, note, dateTimeCreated READONLY, nameCreatedUser READONLY 
    ORDERS date(p)

    OBJECTS c = Competitor
    PROPERTIES in(p, c), name(c) READONLY, order(c) READONLY 
    FILTERGROUP in FILTER 'Отмеченные' in(p, c)
    ORDERS order(c), name(c)

    OBJECTS cc = Competitor
    PROPERTIES (cc) READONLY SHOWIF NULL name, order 
    FILTERS in(p, cc)
    ORDERS order(cc), name(cc)

    OBJECTS d = PriceListDetail
    PROPERTIES (d)  idSku SHOWIF showIDs(), idBarcodeSku BACKGROUND backgroundSku(d), nameSku
    PROPERTIES (d) NEW, DELETE 
    PROPERTIES promotionPrice(d, cc) COLUMNS (cc) HEADER (name(cc) + ' (акция)') AFTER nameSku(d)
    PROPERTIES price(d, cc) COLUMNS (cc) HEADER name(cc) AFTER nameSku(d)
    FILTERS priceList(d) == p

    EDIT PriceList OBJECT p
;

DESIGN priceList {
    OBJECTS {
        NEW header FIRST {
            type = CONTAINERV;
            NEW number {
                caption = 'Основные параметры';
                horizontal = TRUE;
                MOVE PROPERTY (number(p)){flex = 0;};
                MOVE PROPERTY (series(p));
                MOVE PROPERTY (date(p));
                MOVE PROPERTY (nameType(p));    
            } 
            MOVE PROPERTY (note(p)) { charWidth = 50; }
        }
        NEW created AFTER header {
            caption = 'Создан';
            horizontal = TRUE;
            MOVE PROPERTY (dateTimeCreated(p));
            MOVE PROPERTY (nameCreatedUser(p)) { charWidth = 50; }
        }
        NEW bottom {
            horizontal = TRUE;
            fill = 1;
            MOVE BOX (c) { fill = 1; }
            MOVE BOX (d) { fill = 4; }
        }
    }
}

FORM priceLists 'Прайсы конкурентов'
    OBJECTS p = PriceList
    PROPERTIES(p) READONLY number, series, date, competitors, nameType, note, dateTimeCreated, nameCreatedUser
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE
    ORDERS date(p)

    OBJECTS cc = Competitor
    PROPERTIES (cc) READONLY SHOWIF NULL name, order 
    FILTERS in(p, cc)
    ORDERS order(cc), name(cc)

    OBJECTS d = PriceListDetail
    PROPERTIES (d) READONLY idSku SHOWIF showIDs(), idBarcodeSku BACKGROUND backgroundSku(d), nameSku//, NEW, DELETE 
    PROPERTIES READONLY promotionPrice(d, cc) COLUMNS (cc) HEADER (name(cc) + ' (акция)') AFTER nameSku(d)
    PROPERTIES READONLY price(d, cc) COLUMNS (cc) HEADER name(cc) AFTER nameSku(d)
    FILTERS priceList(d) == p
;

FORM dialogPriceLists 'Прайсы конкурентов'
    OBJECTS p = PriceList
    PROPERTIES(p) READONLY date, competitors, nameType, note, dateTimeCreated, nameCreatedUser
    ORDERS date(p)

    LIST PriceList OBJECT p
;

NAVIGATOR {
    priceListNavigator {
        NEW FOLDER competitorPrices 'Цены конкурентов' { 
            NEW competitors;
            NEW priceListTypes;
            NEW priceLists;
        }
    }
}

importPriceLists 'Импорт xls' (PriceList p) {

    LOCAL value1 = ISTRING[15](INTEGER);
    LOCAL value2 = ISTRING[15](INTEGER);
    LOCAL value3 = ISTRING[15](INTEGER);
    LOCAL value4 = ISTRING[15](INTEGER);
    LOCAL value5 = ISTRING[15](INTEGER);
    LOCAL value6 = ISTRING[15](INTEGER);
    LOCAL value7 = ISTRING[15](INTEGER);
    LOCAL value8 = ISTRING[15](INTEGER);
    LOCAL value9 = ISTRING[15](INTEGER);
    LOCAL value10 = ISTRING[15](INTEGER);

    LOCAL sku = Sku(INTEGER);

    INPUT f = FILE DO {
        IMPORT XLS FROM f TO value1, value2, value3, value4, value5, value6, value7, value8, value9, value10;

        sku(INTEGER i) <- CASE WHEN columnSku(type(p)) == 1 THEN skuBarcode(value1(i))
                               WHEN columnSku(type(p)) == 2 THEN skuBarcode(value2(i))
                               WHEN columnSku(type(p)) == 3 THEN skuBarcode(value3(i))
                               WHEN columnSku(type(p)) == 4 THEN skuBarcode(value4(i))
                               WHEN columnSku(type(p)) == 5 THEN skuBarcode(value5(i))
                               WHEN columnSku(type(p)) == 6 THEN skuBarcode(value6(i))
                               WHEN columnSku(type(p)) == 7 THEN skuBarcode(value7(i))
                               WHEN columnSku(type(p)) == 8 THEN skuBarcode(value8(i))
                               WHEN columnSku(type(p)) == 9 THEN skuBarcode(value9(i))
                               WHEN columnSku(type(p)) == 10 THEN skuBarcode(value10(i));

        LOCAL value = NUMERIC[16,5](INTEGER, INTEGER);

        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value1(i)) WHERE j == 1;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value2(i)) WHERE j == 2;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value3(i)) WHERE j == 3;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value4(i)) WHERE j == 4;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value5(i)) WHERE j == 5;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value6(i)) WHERE j == 6;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value7(i)) WHERE j == 7;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value8(i)) WHERE j == 8;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value9(i)) WHERE j == 9;
        value(INTEGER i, INTEGER j) <- NUMERIC[16,5](value10(i)) WHERE j == 10;

        FOR sku(INTEGER i) DO NEW d = PriceListDetail {

            priceList(d) <- p;
            sku(d) <- sku(i);
            price(d, Competitor c) <- value(i, column(type(p), c)) WHERE in(p, c);
        }
    }
}

EXTEND FORM priceList PROPERTIES DRAW d TOOLBAR importPriceLists(p);

DESIGN priceList {
    TOOLBAR (d) {
        MOVE PROPERTY (importPriceLists(p)) FIRST;
    }
}

overCopy ABSTRACT LIST (PriceList, PriceList);
overCopy ABSTRACT LIST (PriceListDetail, PriceListDetail);
copy 'Копировать' (PriceList l) {
    NEWSESSION NEW n = PriceList {
        date(n) <- date(l);
        note(n) <- note(l);

        in(n, Competitor c)<- in(l,c);
        type(n)<- type(l);
        FOR priceList(PriceListDetail d) == l DO NEW nd = PriceListDetail {
            priceList(nd) <- n;
            sku(nd) <- sku(d);
            price(nd,Competitor c)<- price(d,c);
            promotionPrice(nd,Competitor c)<- promotionPrice(d,c);
            overCopy(d,nd);
        }
        overCopy(l, n);
        SHOW priceList OBJECTS p = n DOCKED;
    }
}
EXTEND FORM priceLists PROPERTIES copy(p) TOOLBAR;


DESIGN integrationData {
    pane {
        NEW competitor {
            caption = 'Цены конкурентов';
            tabbed = TRUE;
        }
    }
}