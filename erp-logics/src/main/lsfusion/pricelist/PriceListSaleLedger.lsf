MODULE PriceListSaleLedger;

REQUIRE PriceList, SaleLedgerWeek;

interval 'Интервал' (PriceList p)= daysBetweenDates(toDate(p), fromDate(p));
interval 'Интервал' (PriceListDetail d)= daysBetweenDates(toDate(d), fromDate(d));

currentBalance 'Текущий остаток (к-во)' (PriceListDetail d, Stock stock) = currentBalance(sku(d), stock);

//-- Перед акцией
quantitySoldBeforePromotion 'Продано перед акцией (кол-во)' (PriceListDetail d, Stock stock) = quantitySold(sku(d), stock, (subtract(fromDate(d),interval(d)+1)), subtract(fromDate(d),1));
sumSoldBeforePromotion 'Продано перед акцией (сумма)' (PriceListDetail d, Stock stock) = sumSold(sku(d), stock, (subtract(fromDate(d),interval(d)+1)), subtract(fromDate(d),1));
markupSumSoldBeforePromotion 'Надбавка перед акцией (сумма)' (PriceListDetail d, Stock stock) = markupSumSold(sku(d), stock, (subtract(fromDate(d),interval(d)+1)), subtract(fromDate(d),1));
costSumSoldBeforePromotion 'Себестоимость перед акцией (сумма)' (PriceListDetail d, Stock stock) = costSumSold(sku(d), stock, (subtract(fromDate(d),interval(d)+1)), subtract(fromDate(d),1));
markupPercSoldBeforePromotion 'Надбавка, %' (PriceListDetail d, Stock stock) = markupSumSoldBeforePromotion(d, stock) * 100.00 / costSumSoldBeforePromotion(d, stock);
//-- За время акции
quantitySoldPromotion 'Продано акция (кол-во)' (PriceListDetail d, Stock stock) = quantitySold(sku(d), stock, fromDate(d), toDate(d));
sumSoldPromotion 'Продано акция (сумма)' (PriceListDetail d, Stock stock) = sumSold(sku(d), stock, fromDate(d), toDate(d));
markupSumSoldPromotion 'Надбавка акция (сумма)' (PriceListDetail d, Stock stock) = markupSumSold(sku(d), stock, fromDate(d), toDate(d));
costSumSoldPromotion 'Себестоимость акция (сумма)' (PriceListDetail d, Stock stock) = costSumSold(sku(d), stock, fromDate(d), toDate(d));
markupPercSoldPromotion 'Надбавка, %' (PriceListDetail d, Stock stock) = markupSumSoldPromotion(d, stock) * 100.00 / costSumSoldPromotion(d, stock);

//-- После акции
quantitySoldAfterPromotion 'Продано после акции (кол-во)' (PriceListDetail d, Stock stock) = quantitySold(sku(d), stock, sum(toDate(d),1), (sum(toDate(d),interval(d)+1)));
sumSoldAfterPromotion 'Продано после акции (сумма)' (PriceListDetail d, Stock stock) = sumSold(sku(d), stock, sum(toDate(d),1), (sum(toDate(d),interval(d)+1)));
markupSumSoldAfterPromotion 'Надбавка после акции (сумма)' (PriceListDetail d, Stock stock) = markupSumSold(sku(d), stock, sum(toDate(d),1), (sum(toDate(d),interval(d)+1)));
costSumSoldAfterPromotion 'Себестоимость после акции (сумма)' (PriceListDetail d, Stock stock) = costSumSold(sku(d), stock, sum(toDate(d),1), (sum(toDate(d),interval(d)+1)));
markupPercSoldAfterPromotion 'Надбавка, %' (PriceListDetail d, Stock stock) = markupSumSoldAfterPromotion(d, stock) * 100.00 / costSumSoldAfterPromotion(d, stock);


hintBeforePromotionBackground 'Зеленого чая'  = RGB(204,255,204) IF TRUE;  
hintPromotionBackground 'Небесный'  = RGB(127,199,255) IF TRUE;                                                                                     
hintAfterPromotionBackground 'Лимонный' = RGB(255, 250, 205) IF TRUE;    
                                                                               
//---------------- По всем складам ------------------//
currentBalance 'Текущий остаток (к-во)' (PriceListDetail d) = GROUP SUM currentBalance(d, Stock stock) IF in(priceList(d), stock);
//-- Перед акцией
quantitySoldBeforePromotion 'Продано перед акцией (кол-во)' (PriceListDetail d) = GROUP SUM quantitySoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
sumSoldBeforePromotion 'Продано перед акцией (сумма)' (PriceListDetail d) = GROUP SUM sumSoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
markupSumSoldBeforePromotion 'Надбавка перед акцией (сумма)' (PriceListDetail d) = GROUP SUM markupSumSoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
costSumSoldBeforePromotion 'Себестоимость перед акцией (сумма)' (PriceListDetail d) = GROUP SUM costSumSoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
markupPercSoldBeforePromotion 'Надбавка, %' (PriceListDetail d) = markupSumSoldBeforePromotion(d) * 100.00 / costSumSoldBeforePromotion(d);
//-- За время акции
quantitySoldPromotion 'Продано акция (кол-во)' (PriceListDetail d) = GROUP SUM quantitySoldPromotion(d, Stock stock) IF in(priceList(d), stock);
sumSoldPromotion 'Продано акция (сумма)' (PriceListDetail d) = GROUP SUM sumSoldPromotion(d, Stock stock) IF in(priceList(d), stock);
markupSumSoldPromotion 'Надбавка акция (сумма)' (PriceListDetail d) = GROUP SUM markupSumSoldPromotion(d, Stock stock) IF in(priceList(d), stock);
costSumSoldPromotion 'Себестоимость акция (сумма)' (PriceListDetail d) = GROUP SUM costSumSoldPromotion(d, Stock stock) IF in(priceList(d), stock);
markupPercSoldPromotion 'Надбавка, %' (PriceListDetail d) = markupSumSoldPromotion(d) * 100.00 / costSumSoldPromotion(d);

//-- После акции
quantitySoldAfterPromotion 'Продано после акции (кол-во)' (PriceListDetail d) = GROUP SUM quantitySoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
sumSoldAfterPromotion 'Продано после акции (сумма)' (PriceListDetail d) = GROUP SUM sumSoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
markupSumSoldAfterPromotion 'Надбавка после акции (сумма)' (PriceListDetail d) = GROUP SUM markupSumSoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
costSumSoldAfterPromotion 'Себестоимость после акции (сумма)' (PriceListDetail d) = GROUP SUM costSumSoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
markupPercSoldAfterPromotion 'Надбавка, %' (PriceListDetail d) = markupSumSoldAfterPromotion(d) * 100.00 / costSumSoldAfterPromotion(d);                                                                               

//------------------- Таблица ------------//
TABLE priceListDetailStock (PriceListDetail, Stock);
dcurrentBalance 'Текущий остаток (к-во)' (d, stock) = DATA NUMERIC[16,3] (PriceListDetail,Stock) TABLE priceListDetailStock;

//-- Перед акцией
dquantitySoldBeforePromotion 'Продано перед акцией (кол-во)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dsumSoldBeforePromotion 'Продано перед акцией (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dmarkupSumSoldBeforePromotion 'Надбавка перед акцией (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dcostSumSoldBeforePromotion 'Себестоимость перед акцией (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dmarkupPercSoldBeforePromotion 'Надбавка, %' (PriceListDetail d, Stock stock) = dmarkupSumSoldBeforePromotion(d, stock) * 100.00 / dcostSumSoldBeforePromotion(d, stock);
//-- За время акции
dquantitySoldPromotion 'Продано акция (кол-во)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dsumSoldPromotion 'Продано акция (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dmarkupSumSoldPromotion 'Надбавка акция (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dcostSumSoldPromotion 'Себестоимость акция (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dmarkupPercSoldPromotion 'Надбавка, %' (PriceListDetail d, Stock stock) = dmarkupSumSoldPromotion(d, stock) * 100.00 / dcostSumSoldPromotion(d, stock);

//-- После акции
dquantitySoldAfterPromotion 'Продано после акции (кол-во)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dsumSoldAfterPromotion 'Продано после акции (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dmarkupSumSoldAfterPromotion 'Надбавка после акции (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dcostSumSoldAfterPromotion 'Себестоимость после акции (сумма)' (d, stock) = DATA NUMERIC[18,4] (PriceListDetail,Stock) TABLE priceListDetailStock;
dmarkupPercSoldAfterPromotion 'Надбавка, %' (PriceListDetail d, Stock stock) = dmarkupSumSoldAfterPromotion(d,stock) * 100.00 / dcostSumSoldAfterPromotion(d,stock);                                                                                

//---------------- По всем складам ------------------//
dcurrentBalance 'Текущий остаток (к-во)' (PriceListDetail d) = GROUP SUM dcurrentBalance(d, Stock stock) IF in(priceList(d), stock);
//-- Перед акцией
dquantitySoldBeforePromotion 'Продано перед акцией (кол-во)' (PriceListDetail d) = GROUP SUM dquantitySoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
dsumSoldBeforePromotion 'Продано перед акцией (сумма)' (PriceListDetail d) = GROUP SUM dsumSoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
dmarkupSumSoldBeforePromotion 'Надбавка перед акцией (сумма)' (PriceListDetail d) = GROUP SUM dmarkupSumSoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
dcostSumSoldBeforePromotion 'Себестоимость перед акцией (сумма)' (PriceListDetail d) = GROUP SUM dcostSumSoldBeforePromotion(d, Stock stock) IF in(priceList(d), stock);
dmarkupPercSoldBeforePromotion 'Надбавка, %' (PriceListDetail d) = dmarkupSumSoldBeforePromotion(d) * 100.00 / dcostSumSoldBeforePromotion(d);
//-- За время акции
dquantitySoldPromotion 'Продано акция (кол-во)' (PriceListDetail d) = GROUP SUM dquantitySoldPromotion(d, Stock stock) IF in(priceList(d), stock);
dsumSoldPromotion 'Продано акция (сумма)' (PriceListDetail d) = GROUP SUM dsumSoldPromotion(d, Stock stock) IF in(priceList(d), stock);
dmarkupSumSoldPromotion 'Надбавка акция (сумма)' (PriceListDetail d) = GROUP SUM dmarkupSumSoldPromotion(d, Stock stock) IF in(priceList(d), stock);
dcostSumSoldPromotion 'Себестоимость акция (сумма)' (PriceListDetail d) = GROUP SUM dcostSumSoldPromotion(d, Stock stock) IF in(priceList(d), stock);
dmarkupPercSoldPromotion 'Надбавка, %' (PriceListDetail d) = dmarkupSumSoldPromotion(d) * 100.00 / dcostSumSoldPromotion(d);

//-- После акции
dquantitySoldAfterPromotion 'Продано после акции (кол-во)' (PriceListDetail d) = GROUP SUM dquantitySoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
dsumSoldAfterPromotion 'Продано после акции (сумма)' (PriceListDetail d) = GROUP SUM dsumSoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
dmarkupSumSoldAfterPromotion 'Надбавка после акции (сумма)' (PriceListDetail d) = GROUP SUM dmarkupSumSoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
dcostSumSoldAfterPromotion 'Себестоимость после акции (сумма)' (PriceListDetail d) = GROUP SUM dcostSumSoldAfterPromotion(d, Stock stock) IF in(priceList(d), stock);
dmarkupPercSoldAfterPromotion 'Надбавка, %' (PriceListDetail d) = dmarkupSumSoldAfterPromotion(d) * 100.00 / dcostSumSoldAfterPromotion(d);                                                                        

fillData ABSTRACT LIST ( PriceListDetail);
overFillData ABSTRACT LIST ( PriceList);

fillData 'Заполнить данные' (PriceList p)  { 

    dcurrentBalance (PriceListDetail d, Stock stock) <- NUMERIC[16,3] (currentBalance(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    
    //-- Перед акцией
    dquantitySoldBeforePromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (quantitySoldBeforePromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dsumSoldBeforePromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (sumSoldBeforePromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dmarkupSumSoldBeforePromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (markupSumSoldBeforePromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dcostSumSoldBeforePromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (costSumSoldBeforePromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    
    //-- За время акции
    dquantitySoldPromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (quantitySoldPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dsumSoldPromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (sumSoldPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dmarkupSumSoldPromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (markupSumSoldPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dcostSumSoldPromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (costSumSoldPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    
    //-- После акции
    dquantitySoldAfterPromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (quantitySoldAfterPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dsumSoldAfterPromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (sumSoldAfterPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dmarkupSumSoldAfterPromotion(PriceListDetail d, Stock stock) <- NUMERIC[18,4] (markupSumSoldAfterPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    dcostSumSoldAfterPromotion (PriceListDetail d, Stock stock) <- NUMERIC[18,4] (costSumSoldAfterPromotion(d,stock)) WHERE priceList(d) == p AND in(p, stock);
    
    FOR priceList(PriceListDetail d) == p DO {
        fillData(d);
    }
    overFillData(p);
    apply();
}

EXTEND FORM priceLists

    OBJECTS st = Stock PANEL
    PROPERTIES SELECTOR name(st)
    FILTERS in(p,st)

    OBJECTS dd = PriceListDetail
    PROPERTIES(dd) READONLY index, idBarcodeSku, nameSku, shortNameUOMSku
    PROPERTIES READONLY dcurrentBalance(dd,st)
    PROPERTIES(dd,st) READONLY BACKGROUND hintBeforePromotionBackground() dquantitySoldBeforePromotion, 
                      dcostSumSoldBeforePromotion, dmarkupSumSoldBeforePromotion,
                      dmarkupPercSoldBeforePromotion, dsumSoldBeforePromotion 
    PROPERTIES(dd,st) READONLY BACKGROUND hintPromotionBackground() dquantitySoldPromotion, 
                      dcostSumSoldPromotion, dmarkupSumSoldPromotion,
                      dmarkupPercSoldPromotion, dsumSoldPromotion 
    PROPERTIES(dd,st) READONLY BACKGROUND hintAfterPromotionBackground() dquantitySoldAfterPromotion, 
                      dcostSumSoldAfterPromotion, dmarkupSumSoldAfterPromotion,
                      dmarkupPercSoldAfterPromotion, dsumSoldAfterPromotion           
    FILTERS priceList(dd) == p     
        
    PROPERTIES fillData(p) TOOLBAR DRAW dd
             
    OBJECTS ddd = PriceListDetail
    PROPERTIES(ddd) READONLY index, idBarcodeSku, nameSku, shortNameUOMSku
    PROPERTIES READONLY dcurrentBalance(ddd)
    PROPERTIES(ddd) READONLY BACKGROUND hintBeforePromotionBackground() dquantitySoldBeforePromotion, 
                      dcostSumSoldBeforePromotion, dmarkupSumSoldBeforePromotion,
                      dmarkupPercSoldBeforePromotion, dsumSoldBeforePromotion 
    PROPERTIES(ddd) READONLY BACKGROUND hintPromotionBackground() dquantitySoldPromotion, 
                      dcostSumSoldPromotion, dmarkupSumSoldPromotion,
                      dmarkupPercSoldPromotion, dsumSoldPromotion 
    PROPERTIES(ddd) READONLY BACKGROUND hintAfterPromotionBackground() dquantitySoldAfterPromotion, 
                      dcostSumSoldAfterPromotion, dmarkupSumSoldAfterPromotion,
                      dmarkupPercSoldAfterPromotion, dsumSoldAfterPromotion           
    FILTERS priceList(ddd) == p               
             
;
DESIGN priceLists{
    detailContainer{
        NEW promotion{
            caption = 'Акция';
            tabbed = TRUE;
            NEW promotion1 {
                caption = 'По складу';
                fill = 1;
                MOVE BOX(st) {
                    PROPERTY(name(st)){
                        charWidth = 45;
                    } 
                }
                MOVE BOX(dd);                
            }
            MOVE BOX(ddd) {
                caption = 'По всем складам, которые в прайсе';
            }
        }
    }
}
