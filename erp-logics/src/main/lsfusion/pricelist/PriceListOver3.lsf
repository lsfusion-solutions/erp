MODULE PriceListOver3;

REQUIRE PriceListLedger;

NAMESPACE PriceList;

CLASS  OverPriceListType 'Перегруженный вид цены' : PriceList.PriceListType;
TABLE overPriceListType(OverPriceListType);

@defineExternalizable(overPriceListType, STRING[100]);

name 'Наименование' = DATA ISTRING[100](OverPriceListType) IN id;

baseAPriceListLedger = DATA LedgerPriceListType (OverPriceListType);
nameBaseAPriceListLedger 'Вид цены 1'(OverPriceListType t) = name(baseAPriceListLedger(t));

baseBPriceListLedger = DATA LedgerPriceListType (OverPriceListType);
nameBaseBPriceListLedger 'Вид цены 2' (OverPriceListType t)= name(baseBPriceListLedger(t));

baseCPriceListLedger = DATA LedgerPriceListType (OverPriceListType);
nameBaseCPriceListLedger 'Вид цены 3' (OverPriceListType t)= name(baseCPriceListLedger(t));

ledgerPriceListType(OverPriceListType type) += OVERRIDE baseCPriceListLedger(type), baseBPriceListLedger(type); 
in (OverPriceListType ot, LedgerPriceListType lt) += baseAPriceListLedger(ot) == lt; 
in (OverPriceListType ot, LedgerPriceListType lt) += baseBPriceListLedger(ot) == lt; 

priceB = OVERRIDE priceB(baseAPriceListLedger(OverPriceListType type), Sku sku, Stock stock, DATETIME dateTime), 
    priceB(baseBPriceListLedger(type), sku, stock, dateTime), priceB(baseCPriceListLedger(type), sku, stock, dateTime);
priceA = OVERRIDE priceA(baseAPriceListLedger(OverPriceListType type), Sku sku, Stock stock, DATETIME dateTime), 
    priceA(baseBPriceListLedger(type), sku, stock, dateTime), priceA(baseCPriceListLedger(type), sku, stock, dateTime);

prevPriceB(OverPriceListType type, Sku sku, Stock stock, DATETIME dateTime) = PREV(priceB(type, sku, stock, dateTime));
prevPriceA(OverPriceListType type, Sku sku, Stock stock, DATETIME dateTime) = PREV(priceA(type, sku, stock, dateTime));

// пока в свойствах с поставщиками не добавляем 3го вида цен, так как по факту он не используется
priceB = OVERRIDE priceB(baseAPriceListLedger(OverPriceListType type), Sku sku, Stock stock, LegalEntity company, DATETIME dateTime),
    priceB(baseBPriceListLedger(type), sku, stock, company, dateTime);
priceA = OVERRIDE priceA(baseAPriceListLedger(OverPriceListType type), Sku sku, Stock stock, LegalEntity company, DATETIME dateTime),
    priceA(baseBPriceListLedger(type), sku, stock, company, dateTime);

priceB = OVERRIDE priceB(baseAPriceListLedger(OverPriceListType type), Sku sku, Stock stock, Stock companyStock, DATETIME dateTime),
    priceB(baseBPriceListLedger(type), sku, stock, companyStock, dateTime);
priceA = OVERRIDE priceA(baseAPriceListLedger(OverPriceListType type), Sku sku, Stock stock, Stock companyStock, DATETIME dateTime),
    priceA(baseBPriceListLedger(type), sku, stock, companyStock, dateTime);

priceB = OVERRIDE priceB(baseAPriceListLedger(OverPriceListType type), Batch batch, Stock stock, DATETIME dateTime), 
    priceB(baseBPriceListLedger(type), batch, stock, dateTime), priceB(baseCPriceListLedger(type), batch, stock, dateTime);
priceA = OVERRIDE priceA(baseAPriceListLedger(OverPriceListType type), Batch batch, Stock stock, DATETIME dateTime), 
    priceA(baseBPriceListLedger(type), batch, stock, dateTime), priceA(baseCPriceListLedger(type), batch, stock, dateTime);
 
priceBatchB = OVERRIDE priceBatchB(baseAPriceListLedger(OverPriceListType type), Batch batch, Stock stock, DATETIME dateTime), 
    priceBatchB(baseBPriceListLedger(type), batch, stock, dateTime), priceBatchB(baseCPriceListLedger(type), batch, stock, dateTime);
prevPriceBatchB 'Цена (пред.)' (OverPriceListType type, Batch batch, Stock stock, DATETIME dateTime) = PREV(priceBatchB(type, batch, stock, dateTime)) CHARWIDTH 7 COMPLEX;

countTypes(OverPriceListType type) = (1 IF baseAPriceListLedger(type)) (+) 
                                                 (1 IF baseBPriceListLedger(type)) (+)
                                                 (1 IF baseCPriceListLedger(type)); 
    
countIncludeVATTypes(OverPriceListType type) = (1 IF includeVAT(baseAPriceListLedger(type))) (+) 
                                                         (1 IF includeVAT(baseBPriceListLedger(type))) (+)
                                                         (1 IF includeVAT(baseCPriceListLedger(type)));    

CONSTRAINT countTypes(OverPriceListType type) != countIncludeVATTypes(type)
   MESSAGE 'Виды цен 1, 2, 3 должны быть одновременно или с НДС или без НДС' ;

countDifferentOrganizationsTypes(OverPriceListType type) = (1 IF differentOrganizations(baseAPriceListLedger(type))) (+)
    (1 IF differentOrganizations(baseBPriceListLedger(type))) (+) (1 IF differentOrganizations(baseCPriceListLedger(type)));
CONSTRAINT countDifferentOrganizationsTypes(OverPriceListType type) != countTypes(type)
    MESSAGE 'Виды цен 1,2,3 должны быть одновременно или для разных организаций или нет' ;

id(OverPriceListType type) += id(type);
name(OverPriceListType type) += name(type);
includeVAT (OverPriceListType type) += countIncludeVATTypes(type) == countTypes(type);
differentOrganizations (OverPriceListType type) += countDifferentOrganizationsTypes(type) == countTypes(type);

priceB(OverPriceListType type, Sku sku, Stock stock, DATETIME dateTime) += priceB(type, sku, stock, dateTime);
priceA(OverPriceListType type, Sku sku, Stock stock, DATETIME dateTime) += priceA(type, sku, stock, dateTime);

priceB(OverPriceListType type, Sku sku, Stock stock, LegalEntity company, DATETIME dateTime) += priceB(type, sku, stock, company, dateTime);
priceA(OverPriceListType type, Sku sku, Stock stock, LegalEntity company, DATETIME dateTime) += priceA(type, sku, stock, company, dateTime);

priceB(OverPriceListType type, Sku sku, Stock stock, Stock companyStock, DATETIME dateTime) += priceB(type, sku, stock, companyStock, dateTime);
priceA(OverPriceListType type, Sku sku, Stock stock, Stock companyStock, DATETIME dateTime) += priceA(type, sku, stock, companyStock, dateTime);

priceB(OverPriceListType type, Batch batch, Stock stock, DATETIME dateTime) += priceB(type, batch, stock, dateTime); 
priceA(OverPriceListType type, Batch batch, Stock stock, DATETIME dateTime) += priceA(type, batch, stock, dateTime);
    
FORM overPriceListType 'Перегруженный вид цены'
    OBJECTS p = OverPriceListType PANEL
    PROPERTIES(p) id, name, nameBaseAPriceListLedger, nameBaseBPriceListLedger, nameBaseCPriceListLedger 

    EDIT OverPriceListType OBJECT p
;
    
FORM overPriceListTypeDialog 'Перегруженный вид цены'
    OBJECTS p = OverPriceListType
    PROPERTIES(p) READONLY name, nameBaseAPriceListLedger, nameBaseBPriceListLedger, nameBaseCPriceListLedger 

    LIST OverPriceListType OBJECT p
;

EXTEND FORM priceListTypes
    PROPERTIES(pt) NEWSESSION addOverPriceListType = NEW[OverPriceListType]       
;

DESIGN priceListTypes {
    PROPERTY (addOverPriceListType) {
        caption = 'Добавить перегруженную цену';
    }
}

overCopy (OverPriceListType priceListType) + { 
	NEWSESSION {
	    IF priceListType IS OverPriceListType THEN {
	        NEW p = OverPriceListType {
	            baseAPriceListLedger(p) <- baseAPriceListLedger(priceListType);
	            baseBPriceListLedger(p) <- baseBPriceListLedger(priceListType);
	            baseCPriceListLedger(p) <- baseCPriceListLedger(priceListType);	                                    
	            SHOW overPriceListType OBJECTS p=p DOCKED; 
	        }
	    }
	}
}


