MODULE PriceListArticleDetailFilter;

REQUIRE PriceListArticleDetail, PriceListOperation;

NAMESPACE PriceList;

showArticleDetail 'Артикулы' = ABSTRACT BOOLEAN (PriceList);
showArticleDetail 'Артикулы' = DATA BOOLEAN (UserPriceList) IN documentPrm;
showArticleDetail(UserPriceList d) += showArticleDetail(d);

EXTEND FORM userPriceList
    PROPERTIES (p) showArticleDetail
;

DESIGN userPriceList {
    firstContainer {
        showIf = NOT showArticleDetail(p);
    }
    fourthContainer {
        showIf = NOT showArticleDetail(p);
    }
    BOX(ad) {
        showIf = showArticleDetail(p);
    }
    param {
        MOVE PROPERTY (showArticleDetail(p));
    }
}

showArticleDetail 'Артикулы' = DATA BOOLEAN (Operation);
showArticleDetail(UserPriceList priceList) <- showArticleDetail(operation(priceList))
    WHEN CHANGED(operation(priceList));

EXTEND FORM operation
    PROPERTIES (o) showArticleDetail
;

DESIGN operation {
    showContainer {
        MOVE PROPERTY(showArticleDetail(o));
    }    
}

//contraintEqualArticles(UserAPriceListDetail d1, UserAPriceListDetail d2) = (CHANGED(article(d1)) OR SET(isPosted(d1))) AND isPosted(d1) AND article(d1) == article(d2) AND
//                                                                                       userPriceList(d1) == userPriceList(d2) AND NOT d1 == d2 AND NOT allowRepeatSku(operation(userPriceList(d1)));
//WHEN (GROUP SUM 1 IF contraintEqualArticles(UserAPriceListDetail d1, UserAPriceListDetail d2)) DO {
//    FOR ISTRING[255] message == (GROUP CONCAT ('Строка номер ' + index(UserAPriceListDetail d) + ' : ' + idArticle(d) + ' ' + captionArticle(d)) IF contraintEqualArticles(d, UserAPriceListDetail d2), '\n' ORDER d) DO {
//        cancel();
//        MESSAGE 'Внимание, в прайсе есть одинаковые атрикулы!. \n' + message NOWAIT;
//    }
//}

CONSTRAINT Article a = article(UserAPriceListDetail detail) AND countPriceListDetails(a, userPriceList(detail)) >1 AND NOT allowRepeatSku(operation(userPriceList(detail)))
    MESSAGE 'В прайсе задублированы артикулы в строках '+ (GROUP CONCAT '№' + index(UserAPriceListDetail detail), ', ' IF SET(countPriceListDetails(article(detail), userPriceList(detail)) > 1) ORDER detail);
;

CONSTRAINT showArticleDetail(UserPriceList priceList) AND countUserPriceListDetail(priceList)
    MESSAGE 'В прайсе есть строки с товарами, а не артикулами';
    
CONSTRAINT countUserAPriceListDetail(UserPriceList priceList) AND NOT showArticleDetail(priceList)
    MESSAGE 'В прайсе есть строки с артикулами';    

    
deleteUserPriceListDetails (UserPriceList priceList) {
    IF showArticleDetail(priceList) AND countUserPriceListDetail(priceList)
        THEN ASK 'Удалить строки с товарами из прайса?' DO {
            DELETE UserPriceListDetail detail WHERE userPriceList(detail)=priceList;
        } ELSE {
            showArticleDetail(priceList) <- NULL;
        }
}

WHEN LOCAL FORMS userPriceList SET(showArticleDetail(UserPriceList priceList)) DO {
    deleteUserPriceListDetails(priceList);
}

deleteUserAPriceListDetails (UserPriceList priceList) {
    IF countUserAPriceListDetail(priceList) AND NOT showArticleDetail(priceList) 
        THEN ASK 'Удалить строки с артикулами из прайса?' DO {
            DELETE UserAPriceListDetail detail WHERE userPriceList(detail)=priceList;
        } ELSE {
            showArticleDetail(priceList) <- TRUE;
        }
}

WHEN LOCAL FORMS userPriceList DROPPED(showArticleDetail(UserPriceList priceList)) DO {
    deleteUserAPriceListDetails(priceList);
}